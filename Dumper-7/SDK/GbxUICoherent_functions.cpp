#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GbxUICoherent

#include "Basic.hpp"

#include "GbxUICoherent_classes.hpp"
#include "GbxUICoherent_parameters.hpp"


namespace SDK
{

// Function GbxUICoherent.GbxUIBlueprintHelperLibrary.PlayUIGbxFeedback2D
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContext                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const FGameDataHandleProperty_          FeedbackData                                           (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TScriptInterface<class IGbxFeedbackObserver>Observer                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIgnoreObserver                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   PlayFlags                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bLoop                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   scale                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          SourceContext                                          (Parm, ZeroConstructor, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGbxUIBlueprintHelperLibrary::PlayUIGbxFeedback2D(class UObject* WorldContext, const FGameDataHandleProperty_ FeedbackData, TScriptInterface<class IGbxFeedbackObserver> Observer, bool bIgnoreObserver, int32 PlayFlags, bool bLoop, float scale, class UObject* SourceContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxUIBlueprintHelperLibrary", "PlayUIGbxFeedback2D");

	Params::GbxUIBlueprintHelperLibrary_PlayUIGbxFeedback2D Parms{};

	Parms.WorldContext = WorldContext;
	Parms.FeedbackData = FeedbackData;
	Parms.Observer = Observer;
	Parms.bIgnoreObserver = bIgnoreObserver;
	Parms.PlayFlags = PlayFlags;
	Parms.bLoop = bLoop;
	Parms.scale = scale;
	Parms.SourceContext = SourceContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GbxUICoherent.GbxUIBlueprintHelperLibrary.PostUIEvent
// (Final, Native, Static, Private, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              EventTag                                               (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    DebugName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGbxAudioPlaybackInstance        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGbxAudioPlaybackInstance UGbxUIBlueprintHelperLibrary::PostUIEvent(class UObject* WorldContextObject, const struct FGameplayTag& EventTag, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position, const class FString& DebugName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxUIBlueprintHelperLibrary", "PostUIEvent");

	Params::GbxUIBlueprintHelperLibrary_PostUIEvent Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.EventTag = std::move(EventTag);
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);
	Parms.DebugName = std::move(DebugName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GbxUICoherent.GbxUIBlueprintHelperLibrary.StopGbxFeedback
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContext                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const FGameDataHandleProperty_          FeedbackData                                           (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TScriptInterface<class IGbxFeedbackObserver>Observer                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIgnoreObserver                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGbxUIBlueprintHelperLibrary::StopGbxFeedback(class UObject* WorldContext, const FGameDataHandleProperty_ FeedbackData, TScriptInterface<class IGbxFeedbackObserver> Observer, bool bIgnoreObserver)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxUIBlueprintHelperLibrary", "StopGbxFeedback");

	Params::GbxUIBlueprintHelperLibrary_StopGbxFeedback Parms{};

	Parms.WorldContext = WorldContext;
	Parms.FeedbackData = FeedbackData;
	Parms.Observer = Observer;
	Parms.bIgnoreObserver = bIgnoreObserver;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GbxUICoherent.GbxUIScript.Activate
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGbxUIScript::Activate(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GbxUIScript", "Activate");

	Params::GbxUIScript_Activate Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GbxUICoherent.GbxUIScript.deactivate
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGbxUIScript::deactivate(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GbxUIScript", "deactivate");

	Params::GbxUIScript_deactivate Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GbxUICoherent.GbxUISkillWidgetBehaviors.GetAvailableDataBehaviors
// (Final, Native, Static, Public)
// Parameters:
// TArray<class FName>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FName> UGbxUISkillWidgetBehaviors::GetAvailableDataBehaviors()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxUISkillWidgetBehaviors", "GetAvailableDataBehaviors");

	Params::GbxUISkillWidgetBehaviors_GetAvailableDataBehaviors Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GbxUICoherent.GbxUISkillWidgetBehaviors.GetAvailableStateBehaviors
// (Final, Native, Static, Public)
// Parameters:
// TArray<class FName>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FName> UGbxUISkillWidgetBehaviors::GetAvailableStateBehaviors()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxUISkillWidgetBehaviors", "GetAvailableStateBehaviors");

	Params::GbxUISkillWidgetBehaviors_GetAvailableStateBehaviors Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GbxUICoherent.GbxUIView.OnEnhancedInputControlMappingsRebuilt
// (Final, Native, Public)

void UGbxUIView::OnEnhancedInputControlMappingsRebuilt()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GbxUIView", "OnEnhancedInputControlMappingsRebuilt");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GbxUICoherent.NexusConfigStoreUIWidgetDefs.GetActionNames
// (Final, Native, Static, Public, HasOutParams)
// Parameters:
// class UObject*                          EditObject                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FName>*                    OutNames                                               (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UNexusConfigStoreUIWidgetDefs::GetActionNames(class UObject* EditObject, TArray<class FName>* OutNames)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("NexusConfigStoreUIWidgetDefs", "GetActionNames");

	Params::NexusConfigStoreUIWidgetDefs_GetActionNames Parms{};

	Parms.EditObject = EditObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutNames != nullptr)
		*OutNames = std::move(Parms.OutNames);
}

}

