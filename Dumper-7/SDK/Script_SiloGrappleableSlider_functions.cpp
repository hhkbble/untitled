#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Script_SiloGrappleableSlider

#include "Basic.hpp"

#include "Script_SiloGrappleableSlider_classes.hpp"
#include "Script_SiloGrappleableSlider_parameters.hpp"


namespace SDK
{

// Function Script_SiloGrappleableSlider.Script_SiloGrappleableSlider_C.ExecuteUbergraph_Script_SiloGrappleableSlider
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   entrypoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UScript_SiloGrappleableSlider_C::ExecuteUbergraph_Script_SiloGrappleableSlider(int32 entrypoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_SiloGrappleableSlider_C", "ExecuteUbergraph_Script_SiloGrappleableSlider");

	Params::Script_SiloGrappleableSlider_C_ExecuteUbergraph_Script_SiloGrappleableSlider Parms{};

	Parms.entrypoint = entrypoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Script_SiloGrappleableSlider.Script_SiloGrappleableSlider_C.GbxActorScriptEvt__OnGrapplerDetached
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Grappler_0                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FGrappleableTarget&        GrappleTarget                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference)

void UScript_SiloGrappleableSlider_C::GbxActorScriptEvt__OnGrapplerDetached(class AActor* Grappler_0, const struct FGrappleableTarget& GrappleTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_SiloGrappleableSlider_C", "GbxActorScriptEvt__OnGrapplerDetached");

	Params::Script_SiloGrappleableSlider_C_GbxActorScriptEvt__OnGrapplerDetached Parms{};

	Parms.Grappler_0 = Grappler_0;
	Parms.GrappleTarget = std::move(GrappleTarget);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Script_SiloGrappleableSlider.Script_SiloGrappleableSlider_C.Moving__OnStateEnabled
// (BlueprintCallable, BlueprintEvent)

void UScript_SiloGrappleableSlider_C::Moving__OnStateEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_SiloGrappleableSlider_C", "Moving__OnStateEnabled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Script_SiloGrappleableSlider.Script_SiloGrappleableSlider_C.On Grappled (Authority)
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UScript_SiloGrappleableSlider_C::On_Grappled__Authority_()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_SiloGrappleableSlider_C", "On Grappled (Authority)");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Script_SiloGrappleableSlider.Script_SiloGrappleableSlider_C.On Grappled (Local)
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UScript_SiloGrappleableSlider_C::On_Grappled__Local_()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_SiloGrappleableSlider_C", "On Grappled (Local)");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Script_SiloGrappleableSlider.Script_SiloGrappleableSlider_C.On Move Complete
// (BlueprintCallable, BlueprintEvent)

void UScript_SiloGrappleableSlider_C::On_Move_Complete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_SiloGrappleableSlider_C", "On Move Complete");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Script_SiloGrappleableSlider.Script_SiloGrappleableSlider_C.On Slider Move Ended (Local)
// (Public, BlueprintCallable, BlueprintEvent)

void UScript_SiloGrappleableSlider_C::On_Slider_Move_Ended__Local_()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_SiloGrappleableSlider_C", "On Slider Move Ended (Local)");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Script_SiloGrappleableSlider.Script_SiloGrappleableSlider_C.OnBeginPlay
// (Event, Public, BlueprintEvent)

void UScript_SiloGrappleableSlider_C::OnBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_SiloGrappleableSlider_C", "OnBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Script_SiloGrappleableSlider.Script_SiloGrappleableSlider_C.PlayGrappleConnect
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           ActorInstigator                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FGrappleableTarget&        target                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference)

void UScript_SiloGrappleableSlider_C::PlayGrappleConnect(class AActor* ActorInstigator, const struct FGrappleableTarget& target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_SiloGrappleableSlider_C", "PlayGrappleConnect");

	Params::Script_SiloGrappleableSlider_C_PlayGrappleConnect Parms{};

	Parms.ActorInstigator = ActorInstigator;
	Parms.target = std::move(target);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Script_SiloGrappleableSlider.Script_SiloGrappleableSlider_C.SetTimingProperties
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  InSliderDuration                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  InReturnDelay                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UScript_SiloGrappleableSlider_C::SetTimingProperties(double InSliderDuration, double InReturnDelay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_SiloGrappleableSlider_C", "SetTimingProperties");

	Params::Script_SiloGrappleableSlider_C_SetTimingProperties Parms{};

	Parms.InSliderDuration = InSliderDuration;
	Parms.InReturnDelay = InReturnDelay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Script_SiloGrappleableSlider.Script_SiloGrappleableSlider_C.SetWorldEndpoints
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   SliderStart                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   SliderEnd                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UScript_SiloGrappleableSlider_C::SetWorldEndpoints(const struct FVector& SliderStart, const struct FVector& SliderEnd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_SiloGrappleableSlider_C", "SetWorldEndpoints");

	Params::Script_SiloGrappleableSlider_C_SetWorldEndpoints Parms{};

	Parms.SliderStart = std::move(SliderStart);
	Parms.SliderEnd = std::move(SliderEnd);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Script_SiloGrappleableSlider.Script_SiloGrappleableSlider_C.Stationary__OnStateEnabled
// (BlueprintCallable, BlueprintEvent)

void UScript_SiloGrappleableSlider_C::Stationary__OnStateEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_SiloGrappleableSlider_C", "Stationary__OnStateEnabled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Script_SiloGrappleableSlider.Script_SiloGrappleableSlider_C.Toggle Third Person FX (Authority)
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnabled                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           InGrapplerActor                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UScript_SiloGrappleableSlider_C::Toggle_Third_Person_FX__Authority_(bool bEnabled, class AActor* InGrapplerActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_SiloGrappleableSlider_C", "Toggle Third Person FX (Authority)");

	Params::Script_SiloGrappleableSlider_C_Toggle_Third_Person_FX__Authority_ Parms{};

	Parms.bEnabled = bEnabled;
	Parms.InGrapplerActor = InGrapplerActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Script_SiloGrappleableSlider.Script_SiloGrappleableSlider_C.TryMoveTo
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UScript_SiloGrappleableSlider_C::TryMoveTo(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_SiloGrappleableSlider_C", "TryMoveTo");

	Params::Script_SiloGrappleableSlider_C_TryMoveTo Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);
}

}

