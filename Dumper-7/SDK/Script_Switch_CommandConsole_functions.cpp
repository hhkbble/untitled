#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Script_Switch_CommandConsole

#include "Basic.hpp"

#include "Script_Switch_CommandConsole_classes.hpp"
#include "Script_Switch_CommandConsole_parameters.hpp"


namespace SDK
{

// Function Script_Switch_CommandConsole.Script_Switch_CommandConsole_C.CheckForPlayingTrick
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsActivating                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UScript_Switch_CommandConsole_C::CheckForPlayingTrick(bool IsActivating)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_Switch_CommandConsole_C", "CheckForPlayingTrick");

	Params::Script_Switch_CommandConsole_C_CheckForPlayingTrick Parms{};

	Parms.IsActivating = IsActivating;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Script_Switch_CommandConsole.Script_Switch_CommandConsole_C.CompleteInteraction
// (BlueprintCallable, BlueprintEvent)

void UScript_Switch_CommandConsole_C::CompleteInteraction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_Switch_CommandConsole_C", "CompleteInteraction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Script_Switch_CommandConsole.Script_Switch_CommandConsole_C.Dormant__OnStateEnabled
// (BlueprintCallable, BlueprintEvent)

void UScript_Switch_CommandConsole_C::Dormant__OnStateEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_Switch_CommandConsole_C", "Dormant__OnStateEnabled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Script_Switch_CommandConsole.Script_Switch_CommandConsole_C.Echo4_Arrived
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AOakDrone*                        Echo4                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UScript_Switch_CommandConsole_C::Echo4_Arrived(class AOakDrone* Echo4)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_Switch_CommandConsole_C", "Echo4_Arrived");

	Params::Script_Switch_CommandConsole_C_Echo4_Arrived Parms{};

	Parms.Echo4 = Echo4;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Script_Switch_CommandConsole.Script_Switch_CommandConsole_C.Echo4_MoveTo
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           MoveTarget                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UScript_Switch_CommandConsole_C::Echo4_MoveTo(class AActor* MoveTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_Switch_CommandConsole_C", "Echo4_MoveTo");

	Params::Script_Switch_CommandConsole_C_Echo4_MoveTo Parms{};

	Parms.MoveTarget = MoveTarget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Script_Switch_CommandConsole.Script_Switch_CommandConsole_C.Echo4_SetOrientationMode
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    On_                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UScript_Switch_CommandConsole_C::Echo4_SetOrientationMode(bool On_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_Switch_CommandConsole_C", "Echo4_SetOrientationMode");

	Params::Script_Switch_CommandConsole_C_Echo4_SetOrientationMode Parms{};

	Parms.On_ = On_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Script_Switch_CommandConsole.Script_Switch_CommandConsole_C.Echo4_SkipRetrieve
// (Public, BlueprintCallable, BlueprintEvent)

void UScript_Switch_CommandConsole_C::Echo4_SkipRetrieve()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_Switch_CommandConsole_C", "Echo4_SkipRetrieve");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Script_Switch_CommandConsole.Script_Switch_CommandConsole_C.Echo4_Spawn
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Context                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// EGbxRelativeLocationType                Relative_Location_Type                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             Location_Option_Socket                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FGbxRelativeRotation&      Location_Options_Offset_Direction                      (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// double                                  Location_Options_Offset_Distance                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UScript_Switch_CommandConsole_C::Echo4_Spawn(class AActor* Context, EGbxRelativeLocationType Relative_Location_Type, class FName Location_Option_Socket, const struct FGbxRelativeRotation& Location_Options_Offset_Direction, double Location_Options_Offset_Distance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_Switch_CommandConsole_C", "Echo4_Spawn");

	Params::Script_Switch_CommandConsole_C_Echo4_Spawn Parms{};

	Parms.Context = Context;
	Parms.Relative_Location_Type = Relative_Location_Type;
	Parms.Location_Option_Socket = Location_Option_Socket;
	Parms.Location_Options_Offset_Direction = std::move(Location_Options_Offset_Direction);
	Parms.Location_Options_Offset_Distance = Location_Options_Offset_Distance;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Script_Switch_CommandConsole.Script_Switch_CommandConsole_C.ECHO_Interaction
// (Public, BlueprintCallable, BlueprintEvent)

void UScript_Switch_CommandConsole_C::ECHO_Interaction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_Switch_CommandConsole_C", "ECHO_Interaction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Script_Switch_CommandConsole.Script_Switch_CommandConsole_C.Echo_Spawned
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AOakDrone*                        Echo4                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UScript_Switch_CommandConsole_C::Echo_Spawned(class AOakDrone* Echo4)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_Switch_CommandConsole_C", "Echo_Spawned");

	Params::Script_Switch_CommandConsole_C_Echo_Spawned Parms{};

	Parms.Echo4 = Echo4;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Script_Switch_CommandConsole.Script_Switch_CommandConsole_C.ExecuteUbergraph_Script_Switch_CommandConsole
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   entrypoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UScript_Switch_CommandConsole_C::ExecuteUbergraph_Script_Switch_CommandConsole(int32 entrypoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_Switch_CommandConsole_C", "ExecuteUbergraph_Script_Switch_CommandConsole");

	Params::Script_Switch_CommandConsole_C_ExecuteUbergraph_Script_Switch_CommandConsole Parms{};

	Parms.entrypoint = entrypoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Script_Switch_CommandConsole.Script_Switch_CommandConsole_C.GbxActorScriptEvt__ActorState_ChangedEventBP
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGbxActorStateMachineKey&  StateMachine                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// const struct FGbxActorStateMachineStateKey&NewState                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// const struct FGbxActorStateMachineStateKey&PreviousState                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)

void UScript_Switch_CommandConsole_C::GbxActorScriptEvt__ActorState_ChangedEventBP(const struct FGbxActorStateMachineKey& StateMachine, const struct FGbxActorStateMachineStateKey& NewState, const struct FGbxActorStateMachineStateKey& PreviousState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_Switch_CommandConsole_C", "GbxActorScriptEvt__ActorState_ChangedEventBP");

	Params::Script_Switch_CommandConsole_C_GbxActorScriptEvt__ActorState_ChangedEventBP Parms{};

	Parms.StateMachine = std::move(StateMachine);
	Parms.NewState = std::move(NewState);
	Parms.PreviousState = std::move(PreviousState);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Script_Switch_CommandConsole.Script_Switch_CommandConsole_C.GbxActorScriptEvt__OnActorBeginOverlap
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           OverlappedActor                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UScript_Switch_CommandConsole_C::GbxActorScriptEvt__OnActorBeginOverlap(class AActor* OverlappedActor, class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_Switch_CommandConsole_C", "GbxActorScriptEvt__OnActorBeginOverlap");

	Params::Script_Switch_CommandConsole_C_GbxActorScriptEvt__OnActorBeginOverlap Parms{};

	Parms.OverlappedActor = OverlappedActor;
	Parms.OtherActor = OtherActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Script_Switch_CommandConsole.Script_Switch_CommandConsole_C.GbxActorScriptEvt__UsableActorState_K2_OnUsed
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           User                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// EUsabilityType                          UseType                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bWasHeld                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UScript_Switch_CommandConsole_C::GbxActorScriptEvt__UsableActorState_K2_OnUsed(class AActor* User, EUsabilityType UseType, bool bWasHeld)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_Switch_CommandConsole_C", "GbxActorScriptEvt__UsableActorState_K2_OnUsed");

	Params::Script_Switch_CommandConsole_C_GbxActorScriptEvt__UsableActorState_K2_OnUsed Parms{};

	Parms.User = User;
	Parms.UseType = UseType;
	Parms.bWasHeld = bWasHeld;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Script_Switch_CommandConsole.Script_Switch_CommandConsole_C.Locked__OnStateEnabled
// (BlueprintCallable, BlueprintEvent)

void UScript_Switch_CommandConsole_C::Locked__OnStateEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_Switch_CommandConsole_C", "Locked__OnStateEnabled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Script_Switch_CommandConsole.Script_Switch_CommandConsole_C.Off__OnStateEnabled
// (BlueprintCallable, BlueprintEvent)

void UScript_Switch_CommandConsole_C::Off__OnStateEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_Switch_CommandConsole_C", "Off__OnStateEnabled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Script_Switch_CommandConsole.Script_Switch_CommandConsole_C.On__OnStateEnabled
// (BlueprintCallable, BlueprintEvent)

void UScript_Switch_CommandConsole_C::On__OnStateEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_Switch_CommandConsole_C", "On__OnStateEnabled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Script_Switch_CommandConsole.Script_Switch_CommandConsole_C.OnBeginPlay
// (Event, Public, BlueprintEvent)

void UScript_Switch_CommandConsole_C::OnBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_Switch_CommandConsole_C", "OnBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Script_Switch_CommandConsole.Script_Switch_CommandConsole_C.OnEndPlay
// (Event, Public, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UScript_Switch_CommandConsole_C::OnEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_Switch_CommandConsole_C", "OnEndPlay");

	Params::Script_Switch_CommandConsole_C_OnEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Script_Switch_CommandConsole.Script_Switch_CommandConsole_C.OpenConsole
// (BlueprintCallable, BlueprintEvent)

void UScript_Switch_CommandConsole_C::OpenConsole()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_Switch_CommandConsole_C", "OpenConsole");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Script_Switch_CommandConsole.Script_Switch_CommandConsole_C.Opened__OnStateEnabled
// (BlueprintCallable, BlueprintEvent)

void UScript_Switch_CommandConsole_C::Opened__OnStateEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_Switch_CommandConsole_C", "Opened__OnStateEnabled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Script_Switch_CommandConsole.Script_Switch_CommandConsole_C.PerchFinished
// (BlueprintCallable, BlueprintEvent)

void UScript_Switch_CommandConsole_C::PerchFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_Switch_CommandConsole_C", "PerchFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Script_Switch_CommandConsole.Script_Switch_CommandConsole_C.RetrieveE4
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  DelayBeforeDigistructingOut                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UScript_Switch_CommandConsole_C::RetrieveE4(double DelayBeforeDigistructingOut)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_Switch_CommandConsole_C", "RetrieveE4");

	Params::Script_Switch_CommandConsole_C_RetrieveE4 Parms{};

	Parms.DelayBeforeDigistructingOut = DelayBeforeDigistructingOut;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Script_Switch_CommandConsole.Script_Switch_CommandConsole_C.Usable__OnStateDisabled
// (BlueprintCallable, BlueprintEvent)

void UScript_Switch_CommandConsole_C::Usable__OnStateDisabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_Switch_CommandConsole_C", "Usable__OnStateDisabled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Script_Switch_CommandConsole.Script_Switch_CommandConsole_C.Usable__OnStateEnabled
// (BlueprintCallable, BlueprintEvent)

void UScript_Switch_CommandConsole_C::Usable__OnStateEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_Switch_CommandConsole_C", "Usable__OnStateEnabled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Script_Switch_CommandConsole.Script_Switch_CommandConsole_C.Used__OnStateEnabled
// (BlueprintCallable, BlueprintEvent)

void UScript_Switch_CommandConsole_C::Used__OnStateEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_Switch_CommandConsole_C", "Used__OnStateEnabled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Script_Switch_CommandConsole.Script_Switch_CommandConsole_C.Using__OnStateEnabled
// (BlueprintCallable, BlueprintEvent)

void UScript_Switch_CommandConsole_C::Using__OnStateEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_Switch_CommandConsole_C", "Using__OnStateEnabled");

	UObject::ProcessEvent(Func, nullptr);
}

}

