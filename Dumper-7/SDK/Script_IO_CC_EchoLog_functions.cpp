#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Script_IO_CC_EchoLog

#include "Basic.hpp"

#include "Script_IO_CC_EchoLog_classes.hpp"
#include "Script_IO_CC_EchoLog_parameters.hpp"


namespace SDK
{

// Function Script_IO_CC_EchoLog.Script_IO_CC_EchoLog_C.Echo4_Arrived
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AOakDrone*                        Echo4                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UScript_IO_CC_EchoLog_C::Echo4_Arrived(class AOakDrone* Echo4)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_IO_CC_EchoLog_C", "Echo4_Arrived");

	Params::Script_IO_CC_EchoLog_C_Echo4_Arrived Parms{};

	Parms.Echo4 = Echo4;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Script_IO_CC_EchoLog.Script_IO_CC_EchoLog_C.Echo4_MoveTo
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           MoveTarget                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UScript_IO_CC_EchoLog_C::Echo4_MoveTo(class AActor* MoveTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_IO_CC_EchoLog_C", "Echo4_MoveTo");

	Params::Script_IO_CC_EchoLog_C_Echo4_MoveTo Parms{};

	Parms.MoveTarget = MoveTarget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Script_IO_CC_EchoLog.Script_IO_CC_EchoLog_C.Echo4_SetOrientationMode
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    On_                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UScript_IO_CC_EchoLog_C::Echo4_SetOrientationMode(bool On_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_IO_CC_EchoLog_C", "Echo4_SetOrientationMode");

	Params::Script_IO_CC_EchoLog_C_Echo4_SetOrientationMode Parms{};

	Parms.On_ = On_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Script_IO_CC_EchoLog.Script_IO_CC_EchoLog_C.Echo4_SkipRetrieve
// (Public, BlueprintCallable, BlueprintEvent)

void UScript_IO_CC_EchoLog_C::Echo4_SkipRetrieve()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_IO_CC_EchoLog_C", "Echo4_SkipRetrieve");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Script_IO_CC_EchoLog.Script_IO_CC_EchoLog_C.Echo4_Spawn
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Context                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// EGbxRelativeLocationType                Relative_Location_Type                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             Location_Option_Socket                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FGbxRelativeRotation&      Location_Options_Offset_Direction                      (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// double                                  Location_Options_Offset_Distance                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UScript_IO_CC_EchoLog_C::Echo4_Spawn(class AActor* Context, EGbxRelativeLocationType Relative_Location_Type, class FName Location_Option_Socket, const struct FGbxRelativeRotation& Location_Options_Offset_Direction, double Location_Options_Offset_Distance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_IO_CC_EchoLog_C", "Echo4_Spawn");

	Params::Script_IO_CC_EchoLog_C_Echo4_Spawn Parms{};

	Parms.Context = Context;
	Parms.Relative_Location_Type = Relative_Location_Type;
	Parms.Location_Option_Socket = Location_Option_Socket;
	Parms.Location_Options_Offset_Direction = std::move(Location_Options_Offset_Direction);
	Parms.Location_Options_Offset_Distance = Location_Options_Offset_Distance;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Script_IO_CC_EchoLog.Script_IO_CC_EchoLog_C.Echo4EndUse
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Echo4                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UScript_IO_CC_EchoLog_C::Echo4EndUse(class AActor* Echo4)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_IO_CC_EchoLog_C", "Echo4EndUse");

	Params::Script_IO_CC_EchoLog_C_Echo4EndUse Parms{};

	Parms.Echo4 = Echo4;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Script_IO_CC_EchoLog.Script_IO_CC_EchoLog_C.ECHO4FailedToSpawn
// (BlueprintCallable, BlueprintEvent)

void UScript_IO_CC_EchoLog_C::ECHO4FailedToSpawn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_IO_CC_EchoLog_C", "ECHO4FailedToSpawn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Script_IO_CC_EchoLog.Script_IO_CC_EchoLog_C.Echo4StartUse
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Echo4                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UScript_IO_CC_EchoLog_C::Echo4StartUse(class AActor* Echo4)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_IO_CC_EchoLog_C", "Echo4StartUse");

	Params::Script_IO_CC_EchoLog_C_Echo4StartUse Parms{};

	Parms.Echo4 = Echo4;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Script_IO_CC_EchoLog.Script_IO_CC_EchoLog_C.Echo_Spawned
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AOakDrone*                        Echo4                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UScript_IO_CC_EchoLog_C::Echo_Spawned(class AOakDrone* Echo4)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_IO_CC_EchoLog_C", "Echo_Spawned");

	Params::Script_IO_CC_EchoLog_C_Echo_Spawned Parms{};

	Parms.Echo4 = Echo4;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Script_IO_CC_EchoLog.Script_IO_CC_EchoLog_C.ExecuteUbergraph_Script_IO_CC_EchoLog
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   entrypoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UScript_IO_CC_EchoLog_C::ExecuteUbergraph_Script_IO_CC_EchoLog(int32 entrypoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_IO_CC_EchoLog_C", "ExecuteUbergraph_Script_IO_CC_EchoLog");

	Params::Script_IO_CC_EchoLog_C_ExecuteUbergraph_Script_IO_CC_EchoLog Parms{};

	Parms.entrypoint = entrypoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Script_IO_CC_EchoLog.Script_IO_CC_EchoLog_C.FlyTo__OnStateEnabled
// (BlueprintCallable, BlueprintEvent)

void UScript_IO_CC_EchoLog_C::FlyTo__OnStateEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_IO_CC_EchoLog_C", "FlyTo__OnStateEnabled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Script_IO_CC_EchoLog.Script_IO_CC_EchoLog_C.GbxActorScriptEvt__UsableActorState_K2_OnUsed
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           User                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// EUsabilityType                          UseType                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bWasHeld                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UScript_IO_CC_EchoLog_C::GbxActorScriptEvt__UsableActorState_K2_OnUsed(class AActor* User, EUsabilityType UseType, bool bWasHeld)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_IO_CC_EchoLog_C", "GbxActorScriptEvt__UsableActorState_K2_OnUsed");

	Params::Script_IO_CC_EchoLog_C_GbxActorScriptEvt__UsableActorState_K2_OnUsed Parms{};

	Parms.User = User;
	Parms.UseType = UseType;
	Parms.bWasHeld = bWasHeld;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Script_IO_CC_EchoLog.Script_IO_CC_EchoLog_C.Idle__OnStateDisabled
// (BlueprintCallable, BlueprintEvent)

void UScript_IO_CC_EchoLog_C::Idle__OnStateDisabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_IO_CC_EchoLog_C", "Idle__OnStateDisabled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Script_IO_CC_EchoLog.Script_IO_CC_EchoLog_C.Idle__OnStateEnabled
// (BlueprintCallable, BlueprintEvent)

void UScript_IO_CC_EchoLog_C::Idle__OnStateEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_IO_CC_EchoLog_C", "Idle__OnStateEnabled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Script_IO_CC_EchoLog.Script_IO_CC_EchoLog_C.OnBeginPlay
// (Event, Public, BlueprintEvent)

void UScript_IO_CC_EchoLog_C::OnBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_IO_CC_EchoLog_C", "OnBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Script_IO_CC_EchoLog.Script_IO_CC_EchoLog_C.OnPerchFinished
// (BlueprintCallable, BlueprintEvent)

void UScript_IO_CC_EchoLog_C::OnPerchFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_IO_CC_EchoLog_C", "OnPerchFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Script_IO_CC_EchoLog.Script_IO_CC_EchoLog_C.OnTutorialVolumeEnter
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FHitResult&                SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void UScript_IO_CC_EchoLog_C::OnTutorialVolumeEnter(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_IO_CC_EchoLog_C", "OnTutorialVolumeEnter");

	Params::Script_IO_CC_EchoLog_C_OnTutorialVolumeEnter Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Script_IO_CC_EchoLog.Script_IO_CC_EchoLog_C.RetrieveE4
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  DelayBeforeDigistructingOut                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UScript_IO_CC_EchoLog_C::RetrieveE4(double DelayBeforeDigistructingOut)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_IO_CC_EchoLog_C", "RetrieveE4");

	Params::Script_IO_CC_EchoLog_C_RetrieveE4 Parms{};

	Parms.DelayBeforeDigistructingOut = DelayBeforeDigistructingOut;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Script_IO_CC_EchoLog.Script_IO_CC_EchoLog_C.Used__OnStateEnabled
// (BlueprintCallable, BlueprintEvent)

void UScript_IO_CC_EchoLog_C::Used__OnStateEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_IO_CC_EchoLog_C", "Used__OnStateEnabled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Script_IO_CC_EchoLog.Script_IO_CC_EchoLog_C.Using__OnStateEnabled
// (BlueprintCallable, BlueprintEvent)

void UScript_IO_CC_EchoLog_C::Using__OnStateEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_IO_CC_EchoLog_C", "Using__OnStateEnabled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Script_IO_CC_EchoLog.Script_IO_CC_EchoLog_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UScript_IO_CC_EchoLog_C::UserConstructionScript(class AActor* Actor) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_IO_CC_EchoLog_C", "UserConstructionScript");

	Params::Script_IO_CC_EchoLog_C_UserConstructionScript Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}

}

