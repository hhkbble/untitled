#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CohtmlPlugin

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "UMG_classes.hpp"
#include "CohtmlPlugin_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// Class CohtmlPlugin.CohtmlAssetReferencer
// 0x0000 (0x0028 - 0x0028)
class UCohtmlAssetReferencer final : public UObject
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CohtmlAssetReferencer")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CohtmlAssetReferencer")
	}
	static class UCohtmlAssetReferencer* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCohtmlAssetReferencer>();
	}
};
DUMPER7_ASSERTS_UCohtmlAssetReferencer;

// Class CohtmlPlugin.CohtmlAtlasContainedTextures
// 0x0050 (0x0078 - 0x0028)
class UCohtmlAtlasContainedTextures final : public UObject
{
public:
	TSet<class UTexture2D*>                       Textures;                                          // 0x0028(0x0050)(Edit, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CohtmlAtlasContainedTextures")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CohtmlAtlasContainedTextures")
	}
	static class UCohtmlAtlasContainedTextures* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCohtmlAtlasContainedTextures>();
	}
};
DUMPER7_ASSERTS_UCohtmlAtlasContainedTextures;

// Class CohtmlPlugin.CohtmlTextureAtlasDetails
// 0x0060 (0x0088 - 0x0028)
class UCohtmlTextureAtlasDetails final : public UObject
{
public:
	class FString                                 AtlasPath;                                         // 0x0028(0x0010)(Edit, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                             AtlasTexture;                                      // 0x0038(0x0008)(Edit, ZeroConstructor, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Width;                                             // 0x0040(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Height;                                            // 0x0044(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 PixelFormat;                                       // 0x0048(0x0010)(Edit, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETextureCompressionSettings                   CompressionSettings;                               // 0x0058(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 AtlasLocation;                                     // 0x0060(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxAtlasWidth;                                     // 0x0070(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxAtlasHeight;                                    // 0x0074(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxTextureWidth;                                   // 0x0078(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxTextureHeight;                                  // 0x007C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECohtmlAtlasPackingHeuristic                  Heuristic;                                         // 0x0080(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int8                                          Padding;                                           // 0x0081(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          AlignTo4;                                          // 0x0082(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_83[0x5];                                       // 0x0083(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CohtmlTextureAtlasDetails")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CohtmlTextureAtlasDetails")
	}
	static class UCohtmlTextureAtlasDetails* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCohtmlTextureAtlasDetails>();
	}
};
DUMPER7_ASSERTS_UCohtmlTextureAtlasDetails;

// Class CohtmlPlugin.CohtmlAudioWrapper
// 0x0430 (0x0458 - 0x0028)
class UCohtmlAudioWrapper final : public UObject
{
public:
	class UObject*                                owner;                                             // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<int32, struct FCohtmlSound>              Sounds;                                            // 0x0030(0x0050)(ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                         Pad_80[0x3D8];                                     // 0x0080(0x03D8)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CohtmlAudioWrapper")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CohtmlAudioWrapper")
	}
	static class UCohtmlAudioWrapper* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCohtmlAudioWrapper>();
	}
};
DUMPER7_ASSERTS_UCohtmlAudioWrapper;

// Class CohtmlPlugin.CohtmlBaseComponent
// 0x0148 (0x0258 - 0x0110)
class UCohtmlBaseComponent : public UActorComponent
{
public:
	TMulticastInlineDelegate<void()>              ReadyForBindings;                                  // 0x0110(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              BindingsReleased;                                  // 0x0120(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              ScriptingReady;                                    // 0x0130(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              ScriptContextCreated;                              // 0x0140(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              DOMBuilt;                                          // 0x0150(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const class FString& URL)> FinishLoad;                             // 0x0160(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const class FString& URL, const class FString& ErrorMsg)> LoadFailed; // 0x0170(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& URL)>     OnNavigateTo;                                      // 0x0180(0x0010)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UTexture2D*>                     PreloadedTextures;                                 // 0x0190(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bEnableComplexCSSSupport;                          // 0x01A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A1[0x7];                                      // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureRenderTarget2D*                 Texture;                                           // 0x01A8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETextureFilter                                filter;                                            // 0x01B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bReceiveInput;                                     // 0x01B1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDelayedUpdate;                                    // 0x01B2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bExecuteCommandProcessingWithLayout;               // 0x01B3(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseSurfacePartitioning;                           // 0x01B4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRunAdvanceConcurrently;                           // 0x01B5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECohtmlTickGroup                              TickGroup;                                         // 0x01B6(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B7[0x31];                                     // 0x01B7(0x0031)(Fixing Size After Last Property [ Dumper-7 ])
	class UMultithreadAwareCompositorWrapper*     CohCompositorWrapper;                              // 0x01E8(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCohtmlAudioWrapper*                    AudioWrapper;                                      // 0x01F0(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCohCustomMaterialDrawer*               CohCustomMaterialDrawer;                           // 0x01F8(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_200[0x58];                                     // 0x0200(0x0058)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void AddPreloadedTexture(class UTexture2D* Texture_0);
	void BeginDebugFrameSave();
	void CreateDataModelFromObject(const class FString& Name_0, class UObject* Model);
	void CreateDataModelFromStruct(const class FString& Name_0, const TFieldPath<class FStructProperty> Struct);
	class UCohtmlJSEvent* CreateJSEvent();
	void DebugSaveNextFrame();
	void EnableDelayedUpdate(bool bEnabled);
	void EnableRendering(bool bEnabled);
	void EndDebugFrameSave();
	bool EnsureMeshData(ECohtmlComponentMeshInit MeshInitialization);
	void Load(const class FString& path);
	void PreloadTextureAsync(const class FString& assetpath);
	void PreloadTextureSync(const class FString& assetpath);
	void RegisterForEvent(const class FString& JSEventName, TDelegate<void()> Delegate);
	void Reload();
	void RemoveAllPreloadedTextures();
	void RemoveDataModelFromObject(class UObject* Model);
	bool RemovePreloadedTexture(class UTexture2D* Texture_0);
	bool RemovePreloadedTextureFromPath(const class FString& assetpath);
	void Resize(int32 Width, int32 Height);
	void ResizeRenderTarget(int32 Width, int32 Height);
	void SetSoundAttenuation(const struct FSoundAttenuationSettings& settings);
	void ShowPaintRects(bool Show);

	bool HasRequestedView() const;
	bool IsReadyForBindings() const;
	bool IsReadyToCreateView() const;
	void RemoveDataModelFromStruct(const TFieldPath<class FStructProperty> Struct) const;
	void SynchronizeModels() const;
	void TriggerJSEvent(const class FString& Name_0, class UCohtmlJSEvent* EventData) const;
	void UpdateWholeDataModelFromObject(class UObject* Model) const;
	void UpdateWholeDataModelFromStruct(const TFieldPath<class FStructProperty> Struct) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CohtmlBaseComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CohtmlBaseComponent")
	}
	static class UCohtmlBaseComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCohtmlBaseComponent>();
	}
};
DUMPER7_ASSERTS_UCohtmlBaseComponent;

// Class CohtmlPlugin.CohtmlBlueprintFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UCohtmlBlueprintFunctionLibrary final : public UBlueprintFunctionLibrary
{
public:
	static void AddArray(class UCohtmlJSEvent* JSEvent, const TArray<int32>& Arg, int32 ArrayType);
	static void AddArrayOfStructs(class UCohtmlJSEvent* JSEvent, const TArray<int32>& Arg);
	static void AddBool(class UCohtmlJSEvent* JSEvent, bool Arg);
	static void AddByte(class UCohtmlJSEvent* JSEvent, uint8 Arg);
	static void AddFloat(class UCohtmlJSEvent* JSEvent, float Arg);
	static void AddInt32(class UCohtmlJSEvent* JSEvent, int32 Arg);
	static void AddObject(class UCohtmlJSEvent* JSEvent, class UObject* Arg);
	static void AddString(class UCohtmlJSEvent* JSEvent, const class FString& Arg);
	static void AddStructArg(class UCohtmlJSEvent* JSEvent, const TFieldPath<class FStructProperty> Arg);
	static class UCohtmlJSEvent* CreateJSEvent(class UObject* WorldContextObject);
	static void TriggerJSEvent(class UCohtmlBaseComponent* Component, const class FString& EventName, class UCohtmlJSEvent* JSEvent);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CohtmlBlueprintFunctionLibrary")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CohtmlBlueprintFunctionLibrary")
	}
	static class UCohtmlBlueprintFunctionLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCohtmlBlueprintFunctionLibrary>();
	}
};
DUMPER7_ASSERTS_UCohtmlBlueprintFunctionLibrary;

// Class CohtmlPlugin.CohtmlComponent
// 0x0038 (0x0290 - 0x0258)
class UCohtmlComponent final : public UCohtmlBaseComponent
{
public:
	class FString                                 URL;                                               // 0x0258(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Width;                                             // 0x0268(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Height;                                            // 0x026C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ManualTexture;                                     // 0x0270(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_271[0x3];                                      // 0x0271(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   PrimitiveName;                                     // 0x0274(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_27C[0x14];                                     // 0x027C(0x0014)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CohtmlComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CohtmlComponent")
	}
	static class UCohtmlComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCohtmlComponent>();
	}
};
DUMPER7_ASSERTS_UCohtmlComponent;

// Class CohtmlPlugin.CohtmlEventHelpers
// 0x0000 (0x0028 - 0x0028)
class UCohtmlEventHelpers final : public UObject
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CohtmlEventHelpers")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CohtmlEventHelpers")
	}
	static class UCohtmlEventHelpers* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCohtmlEventHelpers>();
	}
};
DUMPER7_ASSERTS_UCohtmlEventHelpers;

// Class CohtmlPlugin.CohtmlGameHUD
// 0x00B8 (0x0538 - 0x0480)
class ACohtmlGameHUD final : public AHUD
{
public:
	class UCohtmlHUD*                             CohtmlHUD;                                         // 0x0480(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_488[0xB0];                                     // 0x0488(0x00B0)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	struct FCohtmlPadding CalculateCohtmlPadding();
	void SetupView(const class FString& PageUrl, bool bEnableComplexCSSSupport, bool bDelayedUpdate, bool bReceiveInput, bool bExecuteCommandProcessingWithLayout, bool bUseSurfacePartitioning, bool bRunAdvanceConcurrently);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CohtmlGameHUD")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CohtmlGameHUD")
	}
	static class ACohtmlGameHUD* GetDefaultObj()
	{
		return GetDefaultObjImpl<ACohtmlGameHUD>();
	}
};
DUMPER7_ASSERTS_ACohtmlGameHUD;

// Class CohtmlPlugin.HUDSurfacePartitioningCompositor
// 0x01D0 (0x01F8 - 0x0028)
class UHUDSurfacePartitioningCompositor final : public UObject
{
public:
	uint8                                         Pad_28[0x128];                                     // 0x0028(0x0128)(Fixing Size After Last Property [ Dumper-7 ])
	class UCohtmlHUD*                             HUD;                                               // 0x0150(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<class FString, struct FHudCompositorCachedMaterial> CachedHudMaterials;                     // 0x0158(0x0050)(NativeAccessSpecifierPrivate)
	TMap<class FString, bool>                     VisibilityMap;                                     // 0x01A8(0x0050)(NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("HUDSurfacePartitioningCompositor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"HUDSurfacePartitioningCompositor")
	}
	static class UHUDSurfacePartitioningCompositor* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHUDSurfacePartitioningCompositor>();
	}
};
DUMPER7_ASSERTS_UHUDSurfacePartitioningCompositor;

// Class CohtmlPlugin.CohtmlHUD
// 0x0038 (0x0290 - 0x0258)
class UCohtmlHUD final : public UCohtmlBaseComponent
{
public:
	struct FSoftObjectPath                        HUDMaterialName;                                   // 0x0258(0x0020)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterial*                              HUDMaterial;                                       // 0x0278(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*               HUDMaterialInstance;                               // 0x0280(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_288[0x8];                                      // 0x0288(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CohtmlHUD")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CohtmlHUD")
	}
	static class UCohtmlHUD* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCohtmlHUD>();
	}
};
DUMPER7_ASSERTS_UCohtmlHUD;

// Class CohtmlPlugin.CohtmlInputActor
// 0x0078 (0x0408 - 0x0390)
class ACohtmlInputActor final : public AActor
{
public:
	TMulticastInlineDelegate<void(ECohtmlKeys Button)> OnCohtmlInputActorMouseButtonDown;            // 0x0390(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(ECohtmlKeys Button)> OnCohtmlInputActorMouseButtonUp;              // 0x03A0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(ECohtmlKeys Key)> OnCohtmlInputActorKeyDown;                       // 0x03B0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(ECohtmlKeys Key)> OnCohtmlInputActorKeyUp;                         // 0x03C0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FPointerEvent& Event)> OnCohtmlInputActorMouseWheel;  // 0x03D0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(ECohtmlFocusChange FocusChangeType)> OnCohtmlInputActorFocusChanged; // 0x03E0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_3F0[0x18];                                     // 0x03F0(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void AlwaysAcceptMouseInput(bool bAccept);
	void Initialize(ECollisionChannel CollisionChannel, ETextureAddress AddressMode, ECohtmlInputWidgetRaycastQuality RaycastQuality, int32 UVChannel);
	void SetCohtmlInputFocus(bool FocusUI);
	void SetCohtmlViewFocus(class UCohtmlBaseComponent* NewFocusedView);
	void SetInputPropagationBehaviour(ECohtmlInputPropagationBehaviour Propagation);
	void SetLineTraceMode(ECohtmlInputWidgetLineTraceMode Mode);
	void SetupInput(class UCohtmlBaseComponent* CohtmlHUD, ECollisionChannel CollisionChannel, ETextureAddress AddressMode, ECohtmlInputWidgetRaycastQuality RaycastQuality, int32 UVChannel, bool bFocusUI, bool bAlwaysAcceptMouseInput);
	void ToggleCohtmlInputFocus();

	ECohtmlInputPropagationBehaviour GetInputPropagationBehaviour() const;
	bool IsCohtmlFocused() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CohtmlInputActor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CohtmlInputActor")
	}
	static class ACohtmlInputActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<ACohtmlInputActor>();
	}
};
DUMPER7_ASSERTS_ACohtmlInputActor;

// Class CohtmlPlugin.CohtmlJSEvent
// 0x0090 (0x00B8 - 0x0028)
class UCohtmlJSEvent final : public UObject
{
public:
	uint8                                         Pad_28[0x80];                                      // 0x0028(0x0080)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UStruct*>                        StructTypes;                                       // 0x00A8(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)

public:
	void AddArray(const TArray<int32>& Array);
	void AddBool(bool B);
	void AddByte(uint8 byte_0);
	void AddFloat(float fl);
	void AddInt32(int32 Integer);
	void AddName(const class FName& Name_0);
	void AddObject(class UObject* Object);
	void AddString(const class FString& str);
	void AddStructArg(const TFieldPath<class FStructProperty> Arg);
	void AddText(const class FText& Text);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CohtmlJSEvent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CohtmlJSEvent")
	}
	static class UCohtmlJSEvent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCohtmlJSEvent>();
	}
};
DUMPER7_ASSERTS_UCohtmlJSEvent;

// Class CohtmlPlugin.CohtmlSettings
// 0x0100 (0x0128 - 0x0028)
class UCohtmlSettings final : public UObject
{
public:
	bool                                          EnableLiveReload;                                  // 0x0028(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FDirectoryPath>                 LiveReloadWatchedDirectories;                      // 0x0030(0x0010)(Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)
	int32                                         DevToolsPort;                                      // 0x0040(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          EnableLocalization;                                // 0x0044(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          EnableBreakIterator;                               // 0x0045(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          HandleInputOnHTMLBody;                             // 0x0046(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_47[0x1];                                       // 0x0047(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         InputTransparentCssClasses;                        // 0x0048(0x0010)(Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)
	TArray<class FString>                         InputTransparentCssClassesWithChildren;            // 0x0058(0x0010)(Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)
	bool                                          AlwaysHandleMouseWheelEvents;                      // 0x0068(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          SetDefaultVKTextLayoutToAlphaNumeric;              // 0x0069(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_6A[0x2];                                       // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ScrollDelta;                                       // 0x006C(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ShowWarningsOnScreen;                              // 0x0070(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECohtmlSettingsSeverity                       LogSeverity;                                       // 0x0071(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          EnablePerformanceWarnings;                         // 0x0072(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnableThreadUsageLogging;                         // 0x0073(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLoadStreamingTexturesImmediately;                 // 0x0074(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bTryLoadUTexturesFromRawImages;                    // 0x0075(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECohtmlLinearSpaceRenderingPipeline           LinearSpaceRenderingPipeline;                      // 0x0076(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_77[0x1];                                       // 0x0077(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         ImageExtensions;                                   // 0x0078(0x0010)(Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)
	ETextureCompressionSettings                   CompressionSettings;                               // 0x0088(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETextureGroup                                 TextureGroup;                                      // 0x0089(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAutoSaveImportedTextures;                         // 0x008A(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          TickWhileGameIsPaused;                             // 0x008B(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseLowerCaseNamesForAutoExposedProperties;        // 0x008C(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECohtmlMSAA                                   MSAA;                                              // 0x008D(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8E[0x2];                                       // 0x008E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSingleFormatFallbacks>         FallbacksForAllFormats;                            // 0x0090(0x0010)(Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)
	class FString                                 DefaultStyleFontFamily;                            // 0x00A0(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          AsynchronousResourceRequestCalls;                  // 0x00B0(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAutomaticallyPackageNewAtlases;                   // 0x00B1(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseInputPreprocessor;                             // 0x00B2(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B3[0x5];                                       // 0x00B3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FResourceHostPair>              ResourceHostMapping;                               // 0x00B8(0x0010)(Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)
	bool                                          bConfigureForCustomEffectsAndCompositorAPI;        // 0x00C8(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bTryLoadRawImages;                                 // 0x00C9(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bWarnIfRawImageLoaded;                             // 0x00CA(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETextureGroup                                 AtlasTextureGroup;                                 // 0x00CB(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 UITextureRootFolder;                               // 0x00D0(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         AtlasWatcherWhitelist;                             // 0x00E0(0x0010)(Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)
	TArray<struct FProtocolPathDef>               ProtocolPathDefs;                                  // 0x00F0(0x0010)(Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)
	uint8                                         Pad_100[0x8];                                      // 0x0100(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	uint32                                        ShadowCacheCount;                                  // 0x0108(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        PathsCacheCount;                                   // 0x010C(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        TexturesCacheCount;                                // 0x0110(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        TexturesByteCacheSize;                             // 0x0114(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        ScratchLayersByteCacheSize;                        // 0x0118(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        ScratchTexturesByteCacheSize;                      // 0x011C(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        DepthStencilTexturesByteCacheSize;                 // 0x0120(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CohtmlSettings")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CohtmlSettings")
	}
	static class UCohtmlSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCohtmlSettings>();
	}
};
DUMPER7_ASSERTS_UCohtmlSettings;

// Class CohtmlPlugin.CohtmlSystem
// 0x0048 (0x03D8 - 0x0390)
class ACohtmlSystem final : public AActor
{
public:
	uint8                                         Pad_390[0x48];                                     // 0x0390(0x0048)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CohtmlSystem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CohtmlSystem")
	}
	static class ACohtmlSystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<ACohtmlSystem>();
	}
};
DUMPER7_ASSERTS_ACohtmlSystem;

// Class CohtmlPlugin.CohtmlSystemEngineSubsystem
// 0x0038 (0x0068 - 0x0030)
class UCohtmlSystemEngineSubsystem final : public UEngineSubsystem
{
public:
	uint8                                         Pad_30[0x38];                                      // 0x0030(0x0038)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CohtmlSystemEngineSubsystem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CohtmlSystemEngineSubsystem")
	}
	static class UCohtmlSystemEngineSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCohtmlSystemEngineSubsystem>();
	}
};
DUMPER7_ASSERTS_UCohtmlSystemEngineSubsystem;

// Class CohtmlPlugin.WidgetSurfacePartitioningCompositor
// 0x01D0 (0x01F8 - 0x0028)
class UWidgetSurfacePartitioningCompositor final : public UObject
{
public:
	uint8                                         Pad_28[0x130];                                     // 0x0028(0x0130)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FString, struct FWidgetDrawData>   CachedWidgetMaterials;                             // 0x0158(0x0050)(Protected, NativeAccessSpecifierProtected)
	TMap<class FString, bool>                     VisibilityMap;                                     // 0x01A8(0x0050)(Protected, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("WidgetSurfacePartitioningCompositor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"WidgetSurfacePartitioningCompositor")
	}
	static class UWidgetSurfacePartitioningCompositor* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWidgetSurfacePartitioningCompositor>();
	}
};
DUMPER7_ASSERTS_UWidgetSurfacePartitioningCompositor;

// Class CohtmlPlugin.CohtmlWidget
// 0x01B8 (0x0320 - 0x0168)
class UCohtmlWidget final : public UWidget
{
public:
	uint8                                         Pad_168[0x20];                                     // 0x0168(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 owner;                                             // 0x0188(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCohtmlWidgetTickFunction              WidgetTick;                                        // 0x0190(0x0030)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              ReadyForBindings;                                  // 0x01C0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              BindingsReleased;                                  // 0x01D0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              ScriptingReady;                                    // 0x01E0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              ScriptContextCreated;                              // 0x01F0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              DOMBuilt;                                          // 0x0200(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const class FString& URL)> FinishLoad;                             // 0x0210(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const class FString& URL, const class FString& ErrorMsg)> LoadFailed; // 0x0220(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& URL)>     OnNavigateTo;                                      // 0x0230(0x0010)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnableComplexCSSSupport;                          // 0x0240(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETextureFilter                                filter;                                            // 0x0241(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bReceiveInput;                                     // 0x0242(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECohtmlInputPropagationBehaviour              InputPropagationBehaviour;                         // 0x0243(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseSurfacePartitioning;                           // 0x0244(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRunAdvanceConcurrently;                           // 0x0245(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECohtmlTickGroup                              TickGroup;                                         // 0x0246(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_247[0x1];                                      // 0x0247(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UTexture2D*>                     PreloadedTextures;                                 // 0x0248(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class UCohtmlAudioWrapper*                    AudioWrapper;                                      // 0x0258(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWidgetSurfacePartitioningCompositor*   WidgetCompositor;                                  // 0x0260(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_268[0x88];                                     // 0x0268(0x0088)(Fixing Size After Last Property [ Dumper-7 ])
	class UMultithreadAwareCompositorWrapper*     CohCompositorWrapper;                              // 0x02F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2F8[0x18];                                     // 0x02F8(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 URL;                                               // 0x0310(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void AddPreloadedTexture(class UTexture2D* Texture);
	void CreateDataModelFromObject(const class FString& Name_0, class UObject* Model);
	void CreateDataModelFromStruct(const class FString& Name_0, const TFieldPath<class FStructProperty> Struct);
	class UCohtmlJSEvent* CreateJSEvent();
	void Load(const class FString& path);
	void PreloadTextureAsync(const class FString& assetpath);
	void PreloadTextureSync(const class FString& assetpath);
	void Reload();
	void RemoveAllPreloadedTextures();
	void RemoveDataModelFromObject(class UObject* Model);
	bool RemovePreloadedTexture(class UTexture2D* Texture);
	bool RemovePreloadedTextureFromPath(const class FString& assetpath);
	void SetInputPropagationBehaviour(ECohtmlInputPropagationBehaviour Propagation);
	void SetSoundAttenuation(const struct FSoundAttenuationSettings& settings);
	void ShowPaintRects(bool Show);

	ECohtmlInputPropagationBehaviour GetInputPropagationBehaviour() const;
	class UTextureRenderTarget2D* GetRenderTexture() const;
	bool HasRequestedView() const;
	bool IsReadyForBindings() const;
	bool IsReadyToCreateView() const;
	void RemoveDataModelFromStruct(const TFieldPath<class FStructProperty> Struct) const;
	void SynchronizeModels() const;
	void TriggerJSEvent(const class FString& Name_0, class UCohtmlJSEvent* EventData) const;
	void UpdateWholeDataModelFromObject(class UObject* Model) const;
	void UpdateWholeDataModelFromStruct(const TFieldPath<class FStructProperty> Struct) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CohtmlWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CohtmlWidget")
	}
	static class UCohtmlWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCohtmlWidget>();
	}
};
DUMPER7_ASSERTS_UCohtmlWidget;

// Class CohtmlPlugin.GbxUIPreloader
// 0x00F8 (0x0120 - 0x0028)
class UGbxUIPreloader final : public UObject
{
public:
	bool                                          bEnabled;                                          // 0x0028(0x0001)(ZeroConstructor, Config, GlobalConfig, NoClear, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FPreloadPathDef>                FoldersToPreload;                                  // 0x0030(0x0010)(ZeroConstructor, Config, GlobalConfig, NoClear, NativeAccessSpecifierPublic)
	TArray<class FString>                         OtherFileTypesToPreload;                           // 0x0040(0x0010)(ZeroConstructor, Config, GlobalConfig, NoClear, NativeAccessSpecifierPublic)
	uint8                                         Pad_50[0xD0];                                      // 0x0050(0x00D0)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxUIPreloader")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxUIPreloader")
	}
	static class UGbxUIPreloader* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxUIPreloader>();
	}
};
DUMPER7_ASSERTS_UGbxUIPreloader;

// Class CohtmlPlugin.CohCustomMaterialDrawer
// 0x0270 (0x0380 - 0x0110)
class alignas(0x10) UCohCustomMaterialDrawer final : public UActorComponent
{
public:
	uint8                                         Pad_110[0x148];                                    // 0x0110(0x0148)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<uint32, struct FArrayWrapper_CustomMaterialRenderData> RenderDataInfosMap;                  // 0x0258(0x0050)(NativeAccessSpecifierPrivate)
	struct FArrayWrapper_CustomMaterialRenderData AddRemoveMaterialTasks;                            // 0x02A8(0x0010)(NativeAccessSpecifierPrivate)
	TMap<uint32, struct FCustomEffectDrawData>    ElementIdToDrawDataMap_GameThread;                 // 0x02B8(0x0050)(NativeAccessSpecifierPrivate)
	TMap<uint32, struct FCustomEffectDrawData>    ElementIdToDrawDataMap_RenderThread;               // 0x0308(0x0050)(NativeAccessSpecifierPrivate)
	uint8                                         Pad_358[0x28];                                     // 0x0358(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CohCustomMaterialDrawer")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CohCustomMaterialDrawer")
	}
	static class UCohCustomMaterialDrawer* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCohCustomMaterialDrawer>();
	}
};
DUMPER7_ASSERTS_UCohCustomMaterialDrawer;

// Class CohtmlPlugin.MultithreadAwareCompositorWrapper
// 0x0148 (0x0170 - 0x0028)
class alignas(0x10) UMultithreadAwareCompositorWrapper final : public UObject
{
public:
	uint8                                         Pad_28[0x140];                                     // 0x0028(0x0140)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CompositorObject;                                  // 0x0168(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MultithreadAwareCompositorWrapper")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MultithreadAwareCompositorWrapper")
	}
	static class UMultithreadAwareCompositorWrapper* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMultithreadAwareCompositorWrapper>();
	}
};
DUMPER7_ASSERTS_UMultithreadAwareCompositorWrapper;

// Class CohtmlPlugin.CohCompositor
// 0x0190 (0x02A0 - 0x0110)
class UCohCompositor final : public UActorComponent
{
public:
	uint8                                         Pad_110[0x178];                                    // 0x0110(0x0178)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterial*                              DefaultMaterialClass;                              // 0x0288(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_290[0x10];                                     // 0x0290(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CohCompositor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CohCompositor")
	}
	static class UCohCompositor* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCohCompositor>();
	}
};
DUMPER7_ASSERTS_UCohCompositor;

}

