#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GbxDecorator

#include "Basic.hpp"

#include "GbxDecorator_classes.hpp"
#include "GbxDecorator_parameters.hpp"


namespace SDK
{

// Function GbxDecorator.GbxDecoratorActor.MonitorPropertyForActorChangedDelegate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Name_0                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AGbxDecoratorActor::MonitorPropertyForActorChangedDelegate(const class FString& Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GbxDecoratorActor", "MonitorPropertyForActorChangedDelegate");

	Params::GbxDecoratorActor_MonitorPropertyForActorChangedDelegate Parms{};

	Parms.Name_0 = std::move(Name_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GbxDecorator.GbxDecoratorBlueprintLibrary.ToRotationAxis
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FRotator&                  Rotator                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FVector*                         Axis                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  Angle                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGbxDecoratorBlueprintLibrary::ToRotationAxis(const struct FRotator& Rotator, struct FVector* Axis, float* Angle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxDecoratorBlueprintLibrary", "ToRotationAxis");

	Params::GbxDecoratorBlueprintLibrary_ToRotationAxis Parms{};

	Parms.Rotator = std::move(Rotator);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Axis != nullptr)
		*Axis = std::move(Parms.Axis);

	if (Angle != nullptr)
		*Angle = Parms.Angle;
}


// Function GbxDecorator.GbxDecoratorConstructorInterface.EditorConstructionScript
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void IGbxDecoratorConstructorInterface::EditorConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("GbxDecoratorConstructorInterface", "EditorConstructionScript");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GbxDecorator.GbxDecoratorConstructorInterface.IsOnlyUpdatingWithMoveOrPropertiesChange
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IGbxDecoratorConstructorInterface::IsOnlyUpdatingWithMoveOrPropertiesChange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("GbxDecoratorConstructorInterface", "IsOnlyUpdatingWithMoveOrPropertiesChange");

	Params::GbxDecoratorConstructorInterface_IsOnlyUpdatingWithMoveOrPropertiesChange Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

