#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GbxAI

#include "Basic.hpp"

#include "GbxNav_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "AIModule_structs.hpp"
#include "GbxPhysics_structs.hpp"
#include "GbxEngine_structs.hpp"
#include "GbxNexus_structs.hpp"
#include "GbxCore_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// Enum GbxAI.ECoverViewFailReason
// NumValues: 0x0006
enum class ECoverViewFailReason : uint8
{
	None                                     = 0,
	NoRoom                                   = 1,
	NoView                                   = 2,
	NoFireViews                              = 3,
	Invalid                                  = 4,
	ECoverViewFailReason_MAX                 = 5,
};

// Enum GbxAI.ECoverSlotHeight
// NumValues: 0x0003
enum class ECoverSlotHeight : uint8
{
	Low                                      = 0,
	High                                     = 1,
	ECoverSlotHeight_MAX                     = 2,
};

// Enum GbxAI.ECoverStyleAnimType
// NumValues: 0x0004
enum class ECoverStyleAnimType : uint8
{
	TimedMoveOut                             = 0,
	TimedStayIn                              = 1,
	SingleAnim                               = 2,
	ECoverStyleAnimType_MAX                  = 3,
};

// Enum GbxAI.EGbxAggroType
// NumValues: 0x0005
enum class EGbxAggroType : uint8
{
	Attack                                   = 0,
	Territory                                = 1,
	Group                                    = 2,
	NUM_AGGRO_TYPES                          = 3,
	EGbxAggroType_MAX                        = 4,
};

// Enum GbxAI.EGbxAggroValue
// NumValues: 0x0005
enum class EGbxAggroValue : uint8
{
	Has                                      = 0,
	Started                                  = 1,
	Ended                                    = 2,
	First                                    = 3,
	EGbxAggroValue_MAX                       = 4,
};

// Enum GbxAI.EGbxAITicketHoldType
// NumValues: 0x0004
enum class EGbxAITicketHoldType : uint8
{
	Hold                                     = 0,
	Force                                    = 1,
	Reserve                                  = 2,
	EGbxAITicketHoldType_MAX                 = 3,
};

// Enum GbxAI.EGbxAITicketInterruptCondition
// NumValues: 0x0003
enum class EGbxAITicketInterruptCondition : uint8
{
	None                                     = 0,
	Distance                                 = 1,
	EGbxAITicketInterruptCondition_MAX       = 2,
};

// Enum GbxAI.ECanSeeAspectTestMode
// NumValues: 0x0003
enum class ECanSeeAspectTestMode : uint8
{
	MustSeeToRun                             = 0,
	MustNotSeeToRun                          = 1,
	ECanSeeAspectTestMode_MAX                = 2,
};

// Enum GbxAI.EGbxCompareType
// NumValues: 0x0003
enum class EGbxCompareType : uint8
{
	Int                                      = 0,
	Float                                    = 1,
	EGbxCompareType_MAX                      = 2,
};

// Enum GbxAI.EGbxBrainAspectSettingsConditionContext
// NumValues: 0x0003
enum class EGbxBrainAspectSettingsConditionContext : uint32
{
	Self                                     = 0,
	Custom                                   = 1,
	EGbxBrainAspectSettingsConditionContext_MAX = 2,
};

// Enum GbxAI.EGbxBrainAspectSettingsGameplayTagQueryContext
// NumValues: 0x0003
enum class EGbxBrainAspectSettingsGameplayTagQueryContext : uint32
{
	Self                                     = 0,
	Custom                                   = 1,
	EGbxBrainAspectSettingsGameplayTagQueryContext_MAX = 2,
};

// Enum GbxAI.EGpsBrainStyle
// NumValues: 0x0005
enum class EGpsBrainStyle : uint8
{
	OncePerRun                               = 0,
	PeriodicallyWhileRunning                 = 1,
	PeriodicallyAlways                       = 2,
	PeriodicallyWhileNotRunning              = 3,
	EGpsBrainStyle_MAX                       = 4,
};

// Enum GbxAI.EIsInRangeAspectDistanceTest
// NumValues: 0x0006
enum class EIsInRangeAspectDistanceTest : uint8
{
	Direct                                   = 0,
	Horizontal                               = 1,
	Vertical                                 = 2,
	VerticalOffset                           = 3,
	Count                                    = 4,
	EIsInRangeAspectDistanceTest_MAX         = 5,
};

// Enum GbxAI.EIsInRangeAspectCheckType
// NumValues: 0x0004
enum class EIsInRangeAspectCheckType : uint8
{
	Single                                   = 0,
	AllTargets                               = 1,
	Count                                    = 2,
	EIsInRangeAspectCheckType_MAX            = 3,
};

// Enum GbxAI.EGbxBrainTerritoryRestriction
// NumValues: 0x0004
enum class EGbxBrainTerritoryRestriction : uint8
{
	Default                                  = 0,
	Disabled                                 = 1,
	Enabled                                  = 2,
	EGbxBrainTerritoryRestriction_MAX        = 3,
};

// Enum GbxAI.EGbxBrainAspectIsOnTerrainContext
// NumValues: 0x0003
enum class EGbxBrainAspectIsOnTerrainContext : uint32
{
	Self                                     = 0,
	Custom                                   = 1,
	EGbxBrainAspectIsOnTerrainContext_MAX    = 2,
};

// Enum GbxAI.EAINavAspectType
// NumValues: 0x0005
enum class EAINavAspectType : uint32
{
	MoveToGoal                               = 0,
	Sequence                                 = 1,
	IsAtGoal                                 = 2,
	StayAtGoal                               = 3,
	EAINavAspectType_MAX                     = 4,
};

// Enum GbxAI.EGbxNavGoalCustomRotationContext
// NumValues: 0x0003
enum class EGbxNavGoalCustomRotationContext : uint8
{
	GoalActor                                = 0,
	Self                                     = 1,
	EGbxNavGoalCustomRotationContext_MAX     = 2,
};

// Enum GbxAI.EOrbitDirection
// NumValues: 0x0006
enum class EOrbitDirection : uint8
{
	Left                                     = 0,
	Right                                    = 1,
	Random                                   = 2,
	Goal                                     = 3,
	Movement                                 = 4,
	EOrbitDirection_MAX                      = 5,
};

// Enum GbxAI.EGbxBrainAspectSetParamContext
// NumValues: 0x0003
enum class EGbxBrainAspectSetParamContext : uint32
{
	Self                                     = 0,
	Custom                                   = 1,
	EGbxBrainAspectSetParamContext_MAX       = 2,
};

// Enum GbxAI.EGbxBrainAspectSetParamValueContext
// NumValues: 0x0004
enum class EGbxBrainAspectSetParamValueContext : uint32
{
	ParameterContext                         = 0,
	Self                                     = 1,
	Custom                                   = 2,
	EGbxBrainAspectSetParamValueContext_MAX  = 3,
};

// Enum GbxAI.EGbxBrainAspectSetParamOnStartBehavior
// NumValues: 0x0003
enum class EGbxBrainAspectSetParamOnStartBehavior : uint32
{
	DoNothing                                = 0,
	SetValue                                 = 1,
	EGbxBrainAspectSetParamOnStartBehavior_MAX = 2,
};

// Enum GbxAI.EGbxBrainAspectSetParamOnStopBehavior
// NumValues: 0x0004
enum class EGbxBrainAspectSetParamOnStopBehavior : uint32
{
	DoNothing                                = 0,
	RestoreValue                             = 1,
	SetValue                                 = 2,
	EGbxBrainAspectSetParamOnStopBehavior_MAX = 3,
};

// Enum GbxAI.EGbxBrainExec
// NumValues: 0x0004
enum class EGbxBrainExec : uint8
{
	Start                                    = 0,
	Succeeded                                = 1,
	Failed                                   = 2,
	EGbxBrainExec_MAX                        = 3,
};

// Enum GbxAI.EGbxBrainTaskDebugShapeMode
// NumValues: 0x0006
enum class EGbxBrainTaskDebugShapeMode : uint8
{
	Never                                    = 0,
	Selected                                 = 1,
	CannotStart                              = 2,
	Running                                  = 3,
	Always                                   = 4,
	MAX                                      = 5,
};

// Enum GbxAI.EGbxBrainTaskState
// NumValues: 0x0006
enum class EGbxBrainTaskState : uint8
{
	Idle                                     = 0,
	Starting                                 = 1,
	Running                                  = 2,
	Stopped                                  = 3,
	Count                                    = 4,
	EGbxBrainTaskState_MAX                   = 5,
};

// Enum GbxAI.EGbxBrainTaskExecutionStage
// NumValues: 0x0008
enum class EGbxBrainTaskExecutionStage : uint8
{
	Created                                  = 0,
	Starting                                 = 1,
	Running                                  = 2,
	Stopping                                 = 3,
	Stopped                                  = 4,
	CleaningUp                               = 5,
	Destroyed                                = 6,
	EGbxBrainTaskExecutionStage_MAX          = 7,
};

// Enum GbxAI.EGbxBrainTaskCanStartResult
// NumValues: 0x0005
enum class EGbxBrainTaskCanStartResult : uint8
{
	No                                       = 0,
	Unknown                                  = 1,
	Yes                                      = 2,
	Count                                    = 3,
	EGbxBrainTaskCanStartResult_MAX          = 4,
};

// Enum GbxAI.EGbxBrainTaskResult
// NumValues: 0x0007
enum class EGbxBrainTaskResult : uint8
{
	None                                     = 0,
	Succeeded                                = 1,
	Failed                                   = 2,
	Interrupted                              = 3,
	Aborted                                  = 4,
	Count                                    = 5,
	EGbxBrainTaskResult_MAX                  = 6,
};

// Enum GbxAI.EGbxBrainTaskResultDirective
// NumValues: 0x0004
enum class EGbxBrainTaskResultDirective : uint8
{
	Continue                                 = 0,
	Succeed                                  = 1,
	Fail                                     = 2,
	EGbxBrainTaskResultDirective_MAX         = 3,
};

// Enum GbxAI.EGbxBrainTaskResultTransition
// NumValues: 0x0005
enum class EGbxBrainTaskResultTransition : uint8
{
	Stop                                     = 0,
	Continue                                 = 1,
	Restart                                  = 2,
	Count                                    = 3,
	EGbxBrainTaskResultTransition_MAX        = 4,
};

// Enum GbxAI.EGbxBrainTaskCreationMethod
// NumValues: 0x0005
enum class EGbxBrainTaskCreationMethod : uint8
{
	Unknown                                  = 0,
	Composition                              = 1,
	PropertyPanel                            = 2,
	Graph                                    = 3,
	EGbxBrainTaskCreationMethod_MAX          = 4,
};

// Enum GbxAI.EGbxBrainTaskParallelMode
// NumValues: 0x0003
enum class EGbxBrainTaskParallelMode : uint32
{
	Simple                                   = 0,
	Custom                                   = 1,
	EGbxBrainTaskParallelMode_MAX            = 2,
};

// Enum GbxAI.EGbxBrainTaskSequenceCanStartCheck
// NumValues: 0x0003
enum class EGbxBrainTaskSequenceCanStartCheck : uint8
{
	FirstTask                                = 0,
	EachTask                                 = 1,
	EGbxBrainTaskSequenceCanStartCheck_MAX   = 2,
};

// Enum GbxAI.EChildActorState
// NumValues: 0x0006
enum class EChildActorState : uint8
{
	None                                     = 0,
	Spawned                                  = 1,
	SpawnedReplicated                        = 2,
	Dropped                                  = 3,
	Destroyed                                = 4,
	EChildActorState_MAX                     = 5,
};

// Enum GbxAI.EGbxAIHeldFilterType
// NumValues: 0x0004
enum class EGbxAIHeldFilterType : uint8
{
	Identifier                               = 0,
	Socket                                   = 1,
	Tag                                      = 2,
	EGbxAIHeldFilterType_MAX                 = 3,
};

// Enum GbxAI.EGbxSense
// NumValues: 0x0009
enum class EGbxSense : uint8
{
	Sight                                    = 0,
	Prox                                     = 1,
	Damage                                   = 2,
	Bullet                                   = 3,
	Territory                                = 4,
	Team                                     = 5,
	Prediction                               = 6,
	NUM_STIM_TYPES                           = 7,
	EGbxSense_MAX                            = 8,
};

// Enum GbxAI.EGbxTargetScoringBoost
// NumValues: 0x0008
enum class EGbxTargetScoringBoost : uint8
{
	ReduceExtreme                            = 0,
	ReduceModerate                           = 1,
	ReduceLight                              = 2,
	NoBoost                                  = 3,
	AmplifyLight                             = 4,
	AmplifyModerate                          = 5,
	AmplifyExtreme                           = 6,
	EGbxTargetScoringBoost_MAX               = 7,
};

// Enum GbxAI.EAimAssistSnapTargetType
// NumValues: 0x0005
enum class EAimAssistSnapTargetType : uint8
{
	Default                                  = 0,
	Disabled                                 = 1,
	Horizontal                               = 2,
	Center                                   = 3,
	EAimAssistSnapTargetType_MAX             = 4,
};

// Enum GbxAI.ETargetLocationOptionType
// NumValues: 0x0006
enum class ETargetLocationOptionType : uint8
{
	Actor                                    = 0,
	Target                                   = 1,
	Eye                                      = 2,
	Socket                                   = 3,
	MeleeSocket                              = 4,
	ETargetLocationOptionType_MAX            = 5,
};

// Enum GbxAI.EGbxTerritoryArea
// NumValues: 0x0004
enum class EGbxTerritoryArea : uint8
{
	Patrol                                   = 0,
	Combat                                   = 1,
	Threat                                   = 2,
	EGbxTerritoryArea_MAX                    = 3,
};

// Enum GbxAI.EGbxTerritoryDrawStyle
// NumValues: 0x0005
enum class EGbxTerritoryDrawStyle : uint8
{
	None                                     = 0,
	Wire                                     = 1,
	Solid                                    = 2,
	SolidAndWire                             = 3,
	EGbxTerritoryDrawStyle_MAX               = 4,
};

// Enum GbxAI.EGpsContextTerritoryValue
// NumValues: 0x0005
enum class EGpsContextTerritoryValue : uint8
{
	Origin                                   = 0,
	Radius                                   = 1,
	HalfHeight                               = 2,
	Territory                                = 3,
	MAX                                      = 4,
};

// Enum GbxAI.EGpsExec
// NumValues: 0x0003
enum class EGpsExec : uint8
{
	Succeeded                                = 0,
	Failed                                   = 1,
	EGpsExec_MAX                             = 2,
};

// Enum GbxAI.EGpsTimerMode
// NumValues: 0x0004
enum class EGpsTimerMode : uint32
{
	TimeSinceCreated                         = 0,
	TimeSinceNewResult                       = 1,
	TimeSinceArrivedAtResult                 = 2,
	EGpsTimerMode_MAX                        = 3,
};

// Enum GbxAI.EGpsDirectionType
// NumValues: 0x0003
enum class EGpsDirectionType : uint32
{
	Rotation                                 = 0,
	Towards                                  = 1,
	EGpsDirectionType_MAX                    = 2,
};

// Enum GbxAI.EGpsActiveGeneratorAllowedNavType
// NumValues: 0x0004
enum class EGpsActiveGeneratorAllowedNavType : uint8
{
	None                                     = 0,
	Walking                                  = 1,
	Flying                                   = 2,
	EGpsActiveGeneratorAllowedNavType_MAX    = 3,
};

// Enum GbxAI.EGbxTerritoryMovementType
// NumValues: 0x0004
enum class EGbxTerritoryMovementType : uint8
{
	Ground                                   = 0,
	Flight                                   = 1,
	Dynamic                                  = 2,
	EGbxTerritoryMovementType_MAX            = 3,
};

// Enum GbxAI.EGpsTraceGeneratedResult
// NumValues: 0x0005
enum class EGpsTraceGeneratedResult : uint32
{
	FurthestLocation                         = 0,
	HitLocation                              = 1,
	HitActor                                 = 2,
	EndLocation                              = 3,
	MAX                                      = 4,
};

// Enum GbxAI.EGpsTraceDirectionType
// NumValues: 0x0003
enum class EGpsTraceDirectionType : uint32
{
	Direction                                = 0,
	EndPoint                                 = 1,
	MAX                                      = 2,
};

// Enum GbxAI.EGpsModifierType
// NumValues: 0x0005
enum class EGpsModifierType : uint8
{
	Modify                                   = 0,
	Score                                    = 1,
	ModifyAndScore                           = 2,
	FilterAndScore                           = 3,
	MAX                                      = 4,
};

// Enum GbxAI.EGpsModifierNoiseOffsetMode
// NumValues: 0x0004
enum class EGpsModifierNoiseOffsetMode : uint32
{
	Noise2D                                  = 0,
	Noise3D                                  = 1,
	NoiseZ                                   = 2,
	EGpsModifierNoiseOffsetMode_MAX          = 3,
};

// Enum GbxAI.EGpsProjectType
// NumValues: 0x0005
enum class EGpsProjectType : uint8
{
	None                                     = 0,
	Geometry                                 = 1,
	NavMesh                                  = 2,
	FlightNav                                = 3,
	EGpsProjectType_MAX                      = 4,
};

// Enum GbxAI.EGpsExecuteResult
// NumValues: 0x0003
enum class EGpsExecuteResult : uint8
{
	Suspended                                = 0,
	Finished                                 = 1,
	EGpsExecuteResult_MAX                    = 2,
};

// Enum GbxAI.EGpsResultsNodeState
// NumValues: 0x0005
enum class EGpsResultsNodeState : uint8
{
	Idle                                     = 0,
	GeneratingResults                        = 1,
	ScoringResults                           = 2,
	Finished                                 = 3,
	EGpsResultsNodeState_MAX                 = 4,
};

// Enum GbxAI.EGpsExecType
// NumValues: 0x0003
enum class EGpsExecType : uint8
{
	Once                                     = 0,
	Periodic                                 = 1,
	EGpsExecType_MAX                         = 2,
};

// Enum GbxAI.EGpsChoice
// NumValues: 0x0005
enum class EGpsChoice : uint8
{
	Index                                    = 0,
	IndexWrap                                = 1,
	RandomFixed                              = 2,
	RandomPercent                            = 3,
	EGpsChoice_MAX                           = 4,
};

// Enum GbxAI.EGpsQueryExecutionState
// NumValues: 0x0004
enum class EGpsQueryExecutionState : uint8
{
	Idle                                     = 0,
	Running                                  = 1,
	Finished                                 = 2,
	EGpsQueryExecutionState_MAX              = 3,
};

// Enum GbxAI.EGpsFilterType
// NumValues: 0x0005
enum class EGpsFilterType : uint8
{
	Score                                    = 0,
	Filter                                   = 1,
	ScoreAndFilter                           = 2,
	BinaryScore                              = 3,
	EGpsFilterType_MAX                       = 4,
};

// Enum GbxAI.EGpsAngleMode
// NumValues: 0x0004
enum class EGpsAngleMode : uint32
{
	Angle2D                                  = 0,
	Angle3D                                  = 1,
	Pitch                                    = 2,
	EGpsAngleMode_MAX                        = 3,
};

// Enum GbxAI.EGpsAttackersScore
// NumValues: 0x0003
enum class EGpsAttackersScore : uint32
{
	PreferMin                                = 0,
	PreferMax                                = 1,
	EGpsAttackersScore_MAX                   = 2,
};

// Enum GbxAI.EGpsDistanceScore
// NumValues: 0x0005
enum class EGpsDistanceScore : uint32
{
	PreferNear                               = 0,
	PreferFar                                = 1,
	PreferMid                                = 2,
	PreferCustom                             = 3,
	EGpsDistanceScore_MAX                    = 4,
};

// Enum GbxAI.EGpsDistanceMode
// NumValues: 0x0005
enum class EGpsDistanceMode : uint32
{
	Distance2D                               = 0,
	Distance3D                               = 1,
	DistanceZ                                = 2,
	DistanceZAbs                             = 3,
	EGpsDistanceMode_MAX                     = 4,
};

// Enum GbxAI.EGpsDistanceListScore
// NumValues: 0x0003
enum class EGpsDistanceListScore : uint32
{
	PreferFar                                = 0,
	PreferNear                               = 1,
	EGpsDistanceListScore_MAX                = 2,
};

// Enum GbxAI.EGbxEffectAreaAffectType
// NumValues: 0x0004
enum class EGbxEffectAreaAffectType : uint8
{
	AffectsAllies                            = 0,
	AffectsEnemies                           = 1,
	AffectsAlliesAndEnemies                  = 2,
	EGbxEffectAreaAffectType_MAX             = 3,
};

// Enum GbxAI.EGpsEffectAreaScoringMode
// NumValues: 0x0004
enum class EGpsEffectAreaScoringMode : uint8
{
	IncreaseScoreInAllyAreas                 = 0,
	DecreaseScoreInHostileAreas              = 1,
	ModifyScoreInAllyAndHostileAreas         = 2,
	EGpsEffectAreaScoringMode_MAX            = 3,
};

// Enum GbxAI.EGpsTest_MatchingTarget
// NumValues: 0x0003
enum class EGpsTest_MatchingTarget : uint32
{
	PreferMatching                           = 0,
	PreferNotMatching                        = 1,
	EGpsTest_MAX                             = 2,
};

// Enum GbxAI.EGpsNavDistancePreference
// NumValues: 0x0004
enum class EGpsNavDistancePreference : uint32
{
	PreferNear                               = 0,
	PreferFar                                = 1,
	PreferMid                                = 2,
	EGpsNavDistancePreference_MAX            = 3,
};

// Enum GbxAI.EGpsSensedDistanceScore
// NumValues: 0x0005
enum class EGpsSensedDistanceScore : uint32
{
	PreferNear                               = 0,
	PreferFar                                = 1,
	PreferMid                                = 2,
	PreferCustom                             = 3,
	EGpsSensedDistanceScore_MAX              = 4,
};

// Enum GbxAI.EGpsTraceListFilter
// NumValues: 0x0005
enum class EGpsTraceListFilter : uint8
{
	None                                     = 0,
	AtLeastOne                               = 1,
	All                                      = 2,
	CustomPercent                            = 3,
	EGpsTraceListFilter_MAX                  = 4,
};

// Enum GbxAI.EGpsTraceListScore
// NumValues: 0x0003
enum class EGpsTraceListScore : uint8
{
	Trace                                    = 0,
	NumPassed                                = 1,
	EGpsTraceListScore_MAX                   = 2,
};

// Enum GbxAI.EGpsTraceTestType
// NumValues: 0x0003
enum class EGpsTraceTestType : uint8
{
	PreferMiss                               = 0,
	PreferHit                                = 1,
	EGpsTraceTestType_MAX                    = 2,
};

// Enum GbxAI.EGpsShape
// NumValues: 0x0005
enum class EGpsShape : uint8
{
	Line                                     = 0,
	Box                                      = 1,
	Sphere                                   = 2,
	Capsule                                  = 3,
	EGpsShape_MAX                            = 4,
};

// ScriptStruct GbxAI.GbxBrainTaskBaseSettings
// 0x0040 (0x0078 - 0x0038)
struct FGbxBrainTaskBaseSettings : public FGbxGraphNodeSettings
{
public:
	struct FGbxParam                              IsEnabledParam;                                    // 0x0038(0x0038)(Edit, NativeAccessSpecifierPublic)
	bool                                          bInvertIsEnabledParam;                             // 0x0070(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGbxBrainTaskResultTransition                 SuccessTransition;                                 // 0x0071(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGbxBrainTaskResultTransition                 FailureTransition;                                 // 0x0072(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAlwaysReportSuccess;                              // 0x0073(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CanStartPeriod;                                    // 0x0074(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxBrainTaskBaseSettings;

// ScriptStruct GbxAI.GbxBrainAspectSettings
// 0x0008 (0x0080 - 0x0078)
struct FGbxBrainAspectSettings : public FGbxBrainTaskBaseSettings
{
public:
	bool                                          bCanPreventTaskFromStarting;                       // 0x0078(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCanCauseTaskToSucceed;                            // 0x0079(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCanForceTaskToSucceed;                            // 0x007A(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCanCauseTaskToFail;                               // 0x007B(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bMustFinish;                                       // 0x007C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainAspectSettings;

// ScriptStruct GbxAI.GbxBrainAspectSettings_MaxRuns
// 0x0040 (0x00C0 - 0x0080)
struct FGbxBrainAspectSettings_MaxRuns final : public FGbxBrainAspectSettings
{
public:
	struct FGbxParam                              MaxRuns;                                           // 0x0080(0x0038)(Edit, NativeAccessSpecifierPublic)
	bool                                          bOnlyCountCertainResults;                          // 0x00B8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCountSuccess;                                     // 0x00B9(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCountFailure;                                     // 0x00BA(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCountInterruption;                                // 0x00BB(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCountAborted;                                     // 0x00BC(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_BD[0x3];                                       // 0x00BD(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainAspectSettings_MaxRuns;

// ScriptStruct GbxAI.GbxTargetableState
// 0x01C8 (0x01C8 - 0x0000)
struct alignas(0x08) FGbxTargetableState final
{
public:
	uint8                                         Pad_0[0x1C8];                                      // 0x0000(0x01C8)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxTargetableState;

// ScriptStruct GbxAI.GpsNodeState
// 0x0000 (0x0050 - 0x0050)
struct FGpsNodeState : public FGbxGraphNodeState
{
};
DUMPER7_ASSERTS_FGpsNodeState;

// ScriptStruct GbxAI.GpsResultsNode
// 0x03C8 (0x0418 - 0x0050)
struct FGpsResultsNode : public FGpsNodeState
{
public:
	uint8                                         Pad_50[0x3C8];                                     // 0x0050(0x03C8)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsResultsNode;

// ScriptStruct GbxAI.GbxBrainTaskBase
// 0x0088 (0x00D8 - 0x0050)
struct FGbxBrainTaskBase : public FGbxGraphNodeState
{
public:
	uint8                                         Pad_50[0x88];                                      // 0x0050(0x0088)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainTaskBase;

// ScriptStruct GbxAI.GbxBrainAspect
// 0x0000 (0x00D8 - 0x00D8)
struct FGbxBrainAspect : public FGbxBrainTaskBase
{
};
DUMPER7_ASSERTS_FGbxBrainAspect;

// ScriptStruct GbxAI.GbxBrainAspect_CountAllies
// 0x0000 (0x00D8 - 0x00D8)
struct FGbxBrainAspect_CountAllies final : public FGbxBrainAspect
{
};
DUMPER7_ASSERTS_FGbxBrainAspect_CountAllies;

// ScriptStruct GbxAI.GpsNodeSettings
// 0x0000 (0x0038 - 0x0038)
struct FGpsNodeSettings : public FGbxGraphNodeSettings
{
};
DUMPER7_ASSERTS_FGpsNodeSettings;

// ScriptStruct GbxAI.GpsScoringNodeSettings
// 0x0020 (0x0058 - 0x0038)
struct FGpsScoringNodeSettings : public FGpsNodeSettings
{
public:
	struct FGbxBinding_Bool                       bEnabled;                                          // 0x0038(0x0020)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGpsScoringNodeSettings;

// ScriptStruct GbxAI.GpsTestSettings
// 0x0028 (0x0080 - 0x0058)
struct FGpsTestSettings : public FGpsScoringNodeSettings
{
public:
	struct FGbxBinding_Float                      Weight;                                            // 0x0058(0x0020)(Edit, NativeAccessSpecifierPublic)
	EGpsFilterType                                FilterType;                                        // 0x0078(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsTestSettings;

// ScriptStruct GbxAI.GpsTestSettings_Targeters
// 0x0060 (0x00E0 - 0x0080)
struct FGpsTestSettings_Targeters final : public FGpsTestSettings
{
public:
	struct FGbxBinding_Float                      MinTargeters;                                      // 0x0080(0x0020)(Edit, NativeAccessSpecifierPublic)
	struct FGbxBinding_Float                      MaxTargeters;                                      // 0x00A0(0x0020)(Edit, NativeAccessSpecifierPublic)
	struct FGbxBinding_Bool                       bPreferMoreTargeters;                              // 0x00C0(0x0020)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGpsTestSettings_Targeters;

// ScriptStruct GbxAI.GbxTeamIdHandle
// 0x0018 (0x0018 - 0x0000)
struct alignas(0x08) FGbxTeamIdHandle final
{
public:
	uint8                                         Pad_0[0x18];                                       // 0x0000(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxTeamIdHandle;

// ScriptStruct GbxAI.GpsDirectionSettings
// 0x0160 (0x0160 - 0x0000)
struct FGpsDirectionSettings final
{
public:
	EGpsDirectionType                             DirectionType;                                     // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxBinding_Rotator                    Rotation;                                          // 0x0008(0x0060)(Edit, NativeAccessSpecifierPrivate)
	struct FGbxBinding_Vector                     Towards;                                           // 0x0068(0x0098)(Edit, NativeAccessSpecifierPrivate)
	struct FGbxBinding_Rotator                    TowardsRotationOffset;                             // 0x0100(0x0060)(Edit, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGpsDirectionSettings;

// ScriptStruct GbxAI.GpsTestSettings_Angle
// 0x0240 (0x02C0 - 0x0080)
struct FGpsTestSettings_Angle final : public FGpsTestSettings
{
public:
	struct FGbxBinding_Float                      MinAngle;                                          // 0x0080(0x0020)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FGbxBinding_Float                      MaxAngle;                                          // 0x00A0(0x0020)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FGbxBinding_Vector                     Origin;                                            // 0x00C0(0x0098)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FGpsDirectionSettings                  Direction;                                         // 0x0158(0x0160)(Edit, Protected, NativeAccessSpecifierProtected)
	EGpsAngleMode                                 Mode;                                              // 0x02B8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2BC[0x4];                                      // 0x02BC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsTestSettings_Angle;

// ScriptStruct GbxAI.GbxBrainTask
// 0x0058 (0x0130 - 0x00D8)
struct FGbxBrainTask : public FGbxBrainTaskBase
{
public:
	uint8                                         Pad_D8[0x58];                                      // 0x00D8(0x0058)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainTask;

// ScriptStruct GbxAI.GbxBrainTask_FlowControl
// 0x0090 (0x01C0 - 0x0130)
struct FGbxBrainTask_FlowControl : public FGbxBrainTask
{
public:
	uint8                                         Pad_130[0x90];                                     // 0x0130(0x0090)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainTask_FlowControl;

// ScriptStruct GbxAI.GbxBrainTask_Selector
// 0x0008 (0x01C8 - 0x01C0)
struct FGbxBrainTask_Selector : public FGbxBrainTask_FlowControl
{
public:
	uint8                                         Pad_1C0[0x8];                                      // 0x01C0(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainTask_Selector;

// ScriptStruct GbxAI.TargetLocationSettings
// 0x0050 (0x0050 - 0x0000)
struct FTargetLocationSettings final
{
public:
	struct FGbxParam                              Enabled;                                           // 0x0000(0x0038)(Edit, NativeAccessSpecifierPublic)
	class FName                                   socket;                                            // 0x0038(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BoundsRadius;                                      // 0x0040(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BoundsHalfHeight;                                  // 0x0044(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseBoundsHalfHeight;                              // 0x0048(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseAsDefaultLocation;                             // 0x0049(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseAsDefaultBounds;                               // 0x004A(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4B[0x5];                                       // 0x004B(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FTargetLocationSettings;

// ScriptStruct GbxAI.GbxBrainDef
// 0x0080 (0x0088 - 0x0008)
struct FGbxBrainDef : public FGbxHasStructType
{
public:
	bool                                          bRestrictedToCombatTerritory;                      // 0x0008(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UGbxBrainTaskData>       MainTask;                                          // 0x0010(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<struct FGameplayTag, TSoftObjectPtr<class UGbxBrainTaskData>> TaggedTasks;                  // 0x0038(0x0050)(Edit, UObjectWrapper, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxBrainDef;

// ScriptStruct GbxAI.GpsQueryRunData
// 0x01E0 (0x01E0 - 0x0000)
struct FGpsQueryRunData final
{
public:
	class UGpsQueryAsset*                         Query;                                             // 0x0000(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxBindingList                        Bindings;                                          // 0x0008(0x01D0)(Edit, NativeAccessSpecifierPublic)
	class FName                                   Name;                                              // 0x01D8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGpsQueryRunData;

// ScriptStruct GbxAI.GbxTargeterState
// 0x0318 (0x0318 - 0x0000)
struct FGbxTargeterState final
{
public:
	uint8                                         Pad_0[0xC8];                                       // 0x0000(0x00C8)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGpsQueryRunData                       Gps;                                               // 0x00C8(0x01E0)(Edit, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2A8[0x70];                                     // 0x02A8(0x0070)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxTargeterState;

// ScriptStruct GbxAI.GpsCondition
// 0x0008 (0x0058 - 0x0050)
struct FGpsCondition : public FGpsNodeState
{
public:
	uint8                                         Pad_50[0x8];                                       // 0x0050(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsCondition;

// ScriptStruct GbxAI.GpsCondition_IsFirstRun
// 0x0000 (0x0058 - 0x0058)
struct FGpsCondition_IsFirstRun final : public FGpsCondition
{
};
DUMPER7_ASSERTS_FGpsCondition_IsFirstRun;

// ScriptStruct GbxAI.GbxBrainAspectSettings_ClaimCover
// 0x0038 (0x00B8 - 0x0080)
struct FGbxBrainAspectSettings_ClaimCover final : public FGbxBrainAspectSettings
{
public:
	struct FGbxParam                              Cover;                                             // 0x0080(0x0038)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxBrainAspectSettings_ClaimCover;

// ScriptStruct GbxAI.GbxTeamState
// 0x0060 (0x0060 - 0x0000)
struct FGbxTeamState final
{
public:
	uint8                                         Pad_0[0x18];                                       // 0x0000(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                owner;                                             // 0x0018(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_20[0x40];                                      // 0x0020(0x0040)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxTeamState;

// ScriptStruct GbxAI.CoverUseParams
// 0x0110 (0x0110 - 0x0000)
struct FCoverUseParams final
{
public:
	bool                                          bMustHaveViewToTarget;                             // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bMustBeHiddenFromThreats;                          // 0x0001(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              bOverrideIdleTime;                                 // 0x0008(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              IdleTimeOverride;                                  // 0x0040(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              bOverrideFireTime;                                 // 0x0078(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              FireTimeOverride;                                  // 0x00B0(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  DisallowedStyleActionTags;                         // 0x00E8(0x0020)(Edit, NativeAccessSpecifierPublic)
	bool                                          bWantsCombat;                                      // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FCoverUseParams;

// ScriptStruct GbxAI.CoverAction
// 0x0128 (0x0128 - 0x0000)
struct FCoverAction final
{
public:
	class UCoverSlotComponent*                    slot;                                              // 0x0000(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCoverStyleData*                        Style;                                             // 0x0008(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 target;                                            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCoverUseParams                        params;                                            // 0x0018(0x0110)(NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FCoverAction;

// ScriptStruct GbxAI.CoverReplicatedData
// 0x0138 (0x0138 - 0x0000)
struct FCoverReplicatedData final
{
public:
	int32                                         RandomSeed;                                        // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCoverAction                           Action;                                            // 0x0008(0x0128)(ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                         position;                                          // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FCoverReplicatedData;

// ScriptStruct GbxAI.CoverUserState
// 0x04D8 (0x04D8 - 0x0000)
struct FCoverUserState final
{
public:
	uint8                                         Pad_0[0x110];                                      // 0x0000(0x0110)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ICoverUser>            User;                                              // 0x0110(0x0010)(ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AGbxAICharacter*                        GbxAICharacter;                                    // 0x0120(0x0008)(ZeroConstructor, Transient, RepSkip, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCoverUserData*                         CoverUserData;                                     // 0x0128(0x0008)(ZeroConstructor, Transient, RepSkip, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimInstance*                          AnimInstance;                                      // 0x0130(0x0008)(ZeroConstructor, Transient, RepSkip, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxNavCharacterMovementComponent*      MovementComponent;                                 // 0x0138(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, RepSkip, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FCoverAction                           DesiredAction;                                     // 0x0140(0x0128)(Transient, RepSkip, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FCoverAction                           CurrentAction;                                     // 0x0268(0x0128)(Transient, RepSkip, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	class UAnimSequence*                          CurrentAnim;                                       // 0x0390(0x0008)(ZeroConstructor, Transient, RepSkip, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FCoverReplicatedData                   ReplicatedData;                                    // 0x0398(0x0138)(Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FRandomStream                          RandomStream;                                      // 0x04D0(0x0008)(ZeroConstructor, Transient, RepSkip, NoDestructor, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FCoverUserState;

// ScriptStruct GbxAI.GbxTerritoryAreaData
// 0x0120 (0x0120 - 0x0000)
struct FGbxTerritoryAreaData final
{
public:
	float                                         Radius;                                            // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Height;                                            // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AVolume*>                        Volumes;                                           // 0x0008(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class UObject*>                        ShapeObjects;                                      // 0x0018(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class AVolume*>                        ExclusionVolumes;                                  // 0x0028(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	uint8                                         Pad_38[0xE0];                                      // 0x0038(0x00E0)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bEverywhere;                                       // 0x0118(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseHeight;                                        // 0x0119(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11A[0x6];                                      // 0x011A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxTerritoryAreaData;

// ScriptStruct GbxAI.GpsCondition_Timer
// 0x0050 (0x00A8 - 0x0058)
struct FGpsCondition_Timer final : public FGpsCondition
{
public:
	uint8                                         Pad_58[0x50];                                      // 0x0058(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsCondition_Timer;

// ScriptStruct GbxAI.GbxBrainAspect_StopMoving
// 0x0000 (0x00D8 - 0x00D8)
struct FGbxBrainAspect_StopMoving final : public FGbxBrainAspect
{
};
DUMPER7_ASSERTS_FGbxBrainAspect_StopMoving;

// ScriptStruct GbxAI.GbxTeamDef
// 0x0078 (0x0090 - 0x0018)
struct FGbxTeamDef final : public FGbxDef
{
public:
	struct FGbxInlineStruct                       AttitudeResolver;                                  // 0x0018(0x0018)(Edit, Protected, NativeAccessSpecifierProtected)
	ETeamAttitude                                 SelfAttitude;                                      // 0x0030(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ETeamAttitude                                 DefaultAttitude;                                   // 0x0031(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ETeamAttitude                                 DefaultAttitudeFromOthers;                         // 0x0032(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bUseDefaultAttitudeFromOthers;                     // 0x0033(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<FGameDataHandleProperty_, ETeamAttitude> Attitudes;                                         // 0x0038(0x0050)(Edit, NativeAccessSpecifierPrivate)
	bool                                          bTeamCollisionChannelSet;                          // 0x0088(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EExtraCollisionFilterChannel                  TeamCollisionChannel;                              // 0x0089(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_8A[0x6];                                       // 0x008A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxTeamDef;

// ScriptStruct GbxAI.GbxAITicketUseData
// 0x00B8 (0x00B8 - 0x0000)
struct FGbxAITicketUseData final
{
public:
	class UGbxAITicketData*                       Ticket;                                            // 0x0000(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxParam                              Value;                                             // 0x0008(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              HoldDuration;                                      // 0x0040(0x0038)(Edit, NativeAccessSpecifierPublic)
	EGbxAITicketHoldType                          HoldType;                                          // 0x0078(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGbxAITicketInterruptCondition                ReserveInterruptCondition;                         // 0x0079(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOverrideTicketTarget;                             // 0x007A(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_7B[0x5];                                       // 0x007B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              TicketTargetOverride;                              // 0x0080(0x0038)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxAITicketUseData;

// ScriptStruct GbxAI.GbxBrainAspectSettings_Ticket
// 0x00F8 (0x0178 - 0x0080)
struct FGbxBrainAspectSettings_Ticket final : public FGbxBrainAspectSettings
{
public:
	struct FGbxAITicketUseData                    UserData;                                          // 0x0080(0x00B8)(Edit, NativeAccessSpecifierPublic)
	bool                                          bInvalidateUnavailableOverrideTaget;               // 0x0138(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              UnavailableTargetsToInvalidate;                    // 0x0140(0x0038)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxBrainAspectSettings_Ticket;

// ScriptStruct GbxAI.GbxAttitudeResolver
// 0x0000 (0x0008 - 0x0008)
struct FGbxAttitudeResolver final : public FGbxHasStructType
{
};
DUMPER7_ASSERTS_FGbxAttitudeResolver;

// ScriptStruct GbxAI.GpsCondition_Ticket
// 0x00C0 (0x0118 - 0x0058)
struct FGpsCondition_Ticket final : public FGpsCondition
{
public:
	uint8                                         Pad_58[0xC0];                                      // 0x0058(0x00C0)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsCondition_Ticket;

// ScriptStruct GbxAI.GbxBrainAspectSettings_CanSee
// 0x0078 (0x00F8 - 0x0080)
struct FGbxBrainAspectSettings_CanSee final : public FGbxBrainAspectSettings
{
public:
	struct FGbxParam                              target;                                            // 0x0080(0x0038)(Edit, NativeAccessSpecifierPublic)
	ECanSeeAspectTestMode                         Mode;                                              // 0x00B8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              Threshold;                                         // 0x00C0(0x0038)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxBrainAspectSettings_CanSee;

// ScriptStruct GbxAI.GpsTestSettings_PlayerDamaging
// 0x0020 (0x00A0 - 0x0080)
struct FGpsTestSettings_PlayerDamaging final : public FGpsTestSettings
{
public:
	struct FGbxBinding_Float                      TimeSinceDamagedMax;                               // 0x0080(0x0020)(Edit, Protected, NativeAccessSpecifierProtected)
};
DUMPER7_ASSERTS_FGpsTestSettings_PlayerDamaging;

// ScriptStruct GbxAI.GbxAggroState
// 0x0108 (0x0108 - 0x0000)
struct alignas(0x08) FGbxAggroState final
{
public:
	uint8                                         Pad_0[0x108];                                      // 0x0000(0x0108)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxAggroState;

// ScriptStruct GbxAI.GbxPerceiverState
// 0x0128 (0x0128 - 0x0000)
struct alignas(0x08) FGbxPerceiverState final
{
public:
	uint8                                         Pad_0[0x128];                                      // 0x0000(0x0128)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxPerceiverState;

// ScriptStruct GbxAI.GbxAggroValueResolver
// 0x0008 (0x0010 - 0x0008)
struct FGbxAggroValueResolver final : public FAttributeValueResolver
{
public:
	EGbxAggroValue                                Value;                                             // 0x0008(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxAggroValueResolver;

// ScriptStruct GbxAI.GbxBrainAspectSettings_HasNavLoS
// 0x00B8 (0x0138 - 0x0080)
struct FGbxBrainAspectSettings_HasNavLoS final : public FGbxBrainAspectSettings
{
public:
	struct FGbxParam                              target;                                            // 0x0080(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              Distance;                                          // 0x00B8(0x0038)(Edit, NativeAccessSpecifierPublic)
	bool                                          bIncludeTargetRadius;                              // 0x00F0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              Height;                                            // 0x00F8(0x0038)(Edit, NativeAccessSpecifierPublic)
	bool                                          bIncludeTargetHalfHeight;                          // 0x0130(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFailIfNavLineOfSightLost;                         // 0x0131(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInvert;                                           // 0x0132(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_133[0x5];                                      // 0x0133(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainAspectSettings_HasNavLoS;

// ScriptStruct GbxAI.GpsGenerator
// 0x0000 (0x0418 - 0x0418)
struct FGpsGenerator : public FGpsResultsNode
{
};
DUMPER7_ASSERTS_FGpsGenerator;

// ScriptStruct GbxAI.GpsGenerator_Cover
// 0x0010 (0x0428 - 0x0418)
struct FGpsGenerator_Cover final : public FGpsGenerator
{
public:
	uint8                                         Pad_418[0x10];                                     // 0x0418(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsGenerator_Cover;

// ScriptStruct GbxAI.GbxBrainAspect_InLineOfFire
// 0x0010 (0x00E8 - 0x00D8)
struct FGbxBrainAspect_InLineOfFire final : public FGbxBrainAspect
{
public:
	uint8                                         Pad_D8[0x10];                                      // 0x00D8(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainAspect_InLineOfFire;

// ScriptStruct GbxAI.CoverTransitionData
// 0x0020 (0x0020 - 0x0000)
struct FCoverTransitionData final
{
public:
	class UAnimSequence*                          Animation;                                         // 0x0000(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FNumericRange                          Angle;                                             // 0x0008(0x0008)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FNumericRange                          HorizontalDistance;                                // 0x0010(0x0008)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	float                                         VerticalDistance;                                  // 0x0018(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECoverSlotHeight                              SlotHeight;                                        // 0x001C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCornerTransition;                                 // 0x001D(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FCoverTransitionData;

// ScriptStruct GbxAI.GbxBrainAspectSetParamValueData
// 0x0078 (0x0078 - 0x0000)
struct FGbxBrainAspectSetParamValueData final
{
public:
	struct FGbxParam                              Value;                                             // 0x0000(0x0038)(Edit, NativeAccessSpecifierPublic)
	EGbxBrainAspectSetParamValueContext           ContextType;                                       // 0x0038(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              CustomContext;                                     // 0x0040(0x0038)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxBrainAspectSetParamValueData;

// ScriptStruct GbxAI.GbxBrainAspectSettings_SetParam
// 0x0178 (0x01F8 - 0x0080)
struct FGbxBrainAspectSettings_SetParam final : public FGbxBrainAspectSettings
{
public:
	struct FGbxParam                              Parameter;                                         // 0x0080(0x0038)(Edit, NativeAccessSpecifierPublic)
	EGbxBrainAspectSetParamContext                ContextType;                                       // 0x00B8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              CustomContext;                                     // 0x00C0(0x0038)(Edit, NativeAccessSpecifierPublic)
	EGbxBrainAspectSetParamOnStartBehavior        OnStartBehavior;                                   // 0x00F8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxBrainAspectSetParamValueData       OnStartData;                                       // 0x0100(0x0078)(Edit, NativeAccessSpecifierPublic)
	bool                                          bApplyOnStartDataOnUpdate;                         // 0x0178(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_179[0x3];                                      // 0x0179(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	EGbxBrainAspectSetParamOnStopBehavior         OnStopBehavior;                                    // 0x017C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxBrainAspectSetParamValueData       OnStopData;                                        // 0x0180(0x0078)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxBrainAspectSettings_SetParam;

// ScriptStruct GbxAI.GpsResultsNodeSettings
// 0x0008 (0x0040 - 0x0038)
struct FGpsResultsNodeSettings : public FGpsNodeSettings
{
public:
	uint8                                         Pad_38[0x8];                                       // 0x0038(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsResultsNodeSettings;

// ScriptStruct GbxAI.GpsFlowSettings
// 0x0000 (0x0040 - 0x0040)
struct FGpsFlowSettings : public FGpsResultsNodeSettings
{
};
DUMPER7_ASSERTS_FGpsFlowSettings;

// ScriptStruct GbxAI.GpsFlowSettings_Combine
// 0x0000 (0x0040 - 0x0040)
struct FGpsFlowSettings_Combine : public FGpsFlowSettings
{
};
DUMPER7_ASSERTS_FGpsFlowSettings_Combine;

// ScriptStruct GbxAI.GpsFlowSettings_Root
// 0x0000 (0x0040 - 0x0040)
struct FGpsFlowSettings_Root final : public FGpsFlowSettings_Combine
{
};
DUMPER7_ASSERTS_FGpsFlowSettings_Root;

// ScriptStruct GbxAI.GbxBrainAspect_Condition
// 0x0008 (0x00E0 - 0x00D8)
struct FGbxBrainAspect_Condition final : public FGbxBrainAspect
{
public:
	uint8                                         Pad_D8[0x8];                                       // 0x00D8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainAspect_Condition;

// ScriptStruct GbxAI.GpsTraceCollisionChannel
// 0x0002 (0x0002 - 0x0000)
struct FGpsTraceCollisionChannel final
{
public:
	ECollisionChannel                             channel;                                           // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECollisionResponse                            response;                                          // 0x0001(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGpsTraceCollisionChannel;

// ScriptStruct GbxAI.GpsTrace
// 0x0040 (0x0040 - 0x0000)
struct FGpsTrace final
{
public:
	EGpsShape                                     Shape;                                             // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                BoxExtent;                                         // 0x0008(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         SphereRadius;                                      // 0x0020(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         CapsuleRadius;                                     // 0x0024(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         CapsuleHalfHeight;                                 // 0x0028(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bTraceUp;                                          // 0x002C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ECollisionChannel                             channel;                                           // 0x002D(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ECollisionResponse                            defaultresponse;                                   // 0x002E(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2F[0x1];                                       // 0x002F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGpsTraceCollisionChannel>      ChannelResponses;                                  // 0x0030(0x0010)(Edit, ZeroConstructor, AdvancedDisplay, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGpsTrace;

// ScriptStruct GbxAI.GpsGeneratorSettings
// 0x0000 (0x0040 - 0x0040)
struct FGpsGeneratorSettings : public FGpsResultsNodeSettings
{
};
DUMPER7_ASSERTS_FGpsGeneratorSettings;

// ScriptStruct GbxAI.GpsGeneratorSettings_Trace
// 0x0338 (0x0378 - 0x0040)
struct FGpsGeneratorSettings_Trace final : public FGpsGeneratorSettings
{
public:
	EGpsTraceGeneratedResult                      Result;                                            // 0x0040(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EGpsTraceDirectionType                        DirectionType;                                     // 0x0044(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGbxBinding_Vector                     Origin;                                            // 0x0048(0x0098)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FGbxBinding_Vector                     Endpoint;                                          // 0x00E0(0x0098)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FGpsDirectionSettings                  Direction;                                         // 0x0178(0x0160)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FGbxBinding_Float                      Distance;                                          // 0x02D8(0x0020)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FGpsTrace                              TraceParameters;                                   // 0x02F8(0x0040)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FGbxBinding_Float                      OriginHeightOffset;                                // 0x0338(0x0020)(Edit, AdvancedDisplay, Protected, NativeAccessSpecifierProtected)
	struct FGbxBinding_Float                      EndPointHeightOffset;                              // 0x0358(0x0020)(Edit, AdvancedDisplay, Protected, NativeAccessSpecifierProtected)
};
DUMPER7_ASSERTS_FGpsGeneratorSettings_Trace;

// ScriptStruct GbxAI.CoverAdjustParams
// 0x0040 (0x0040 - 0x0000)
struct FCoverAdjustParams final
{
public:
	float                                         AdjustDistanceDown;                                // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDoDownAdjustment;                                 // 0x0004(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AdjustDistanceUp;                                  // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDoUpAdjustment;                                   // 0x000C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AdjustDistanceForward;                             // 0x0010(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDoForwardAdjustment;                              // 0x0014(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEdgeTestLeft;                                     // 0x0015(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEdgeTestRight;                                    // 0x0016(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_17[0x1];                                       // 0x0017(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         EdgeTestSections;                                  // 0x0018(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         EdgeTestHeightPct;                                 // 0x001C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         EdgeTestDistancePct;                               // 0x0020(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         EdgeTestWalkBackDistance;                          // 0x0024(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         EdgeTestAngleThreshold;                            // 0x0028(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BlockTestHitPct;                                   // 0x002C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BlockTestDistancePct;                              // 0x0030(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         BlockTestHorizontalSections;                       // 0x0034(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         BlockTestVerticalSections;                         // 0x0038(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         BlockTestAngleThreshold;                           // 0x003C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FCoverAdjustParams;

// ScriptStruct GbxAI.CoverLineOfSightParams
// 0x0010 (0x0010 - 0x0000)
struct FCoverLineOfSightParams final
{
public:
	float                                         Up;                                                // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Down;                                              // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Left;                                              // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Right;                                             // 0x000C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FCoverLineOfSightParams;

// ScriptStruct GbxAI.CoverSlotViewData
// 0x0070 (0x0070 - 0x0000)
struct FCoverSlotViewData final
{
public:
	class UCoverViewData*                         View;                                              // 0x0000(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Transform;                                         // 0x0010(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FCoverSlotViewData;

// ScriptStruct GbxAI.CoverSlotViewFailData
// 0x0020 (0x0020 - 0x0000)
struct FCoverSlotViewFailData final
{
public:
	class UCoverViewData*                         View;                                              // 0x0000(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECoverViewFailReason                          FailReason;                                        // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 FailDescription;                                   // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FCoverSlotViewFailData;

// ScriptStruct GbxAI.GpsModifierSettings
// 0x0008 (0x0060 - 0x0058)
struct FGpsModifierSettings : public FGpsScoringNodeSettings
{
public:
	EGpsModifierType                              type;                                              // 0x0058(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Weight;                                            // 0x005C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGpsModifierSettings;

// ScriptStruct GbxAI.CoverActionData
// 0x00F8 (0x00F8 - 0x0000)
struct FCoverActionData final
{
public:
	class UCoverStyleData*                        Style;                                             // 0x0000(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxParam                              Weight;                                            // 0x0008(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              IdleTimeOverride;                                  // 0x0040(0x0038)(Edit, NativeAccessSpecifierPublic)
	bool                                          bOverrideIdleTime;                                 // 0x0078(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              FireTimeOverride;                                  // 0x0080(0x0038)(Edit, NativeAccessSpecifierPublic)
	bool                                          bOverrideFireTime;                                 // 0x00B8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          FireEnter;                                         // 0x00C0(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                          FireExit;                                          // 0x00C8(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                          FireIdle;                                          // 0x00D0(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                          FireExitCover;                                     // 0x00D8(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bForceAllowFireExitCover;                          // 0x00E0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAnimSequence*>                  RandomAnims;                                       // 0x00E8(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FCoverActionData;

// ScriptStruct GbxAI.GpsGeneratorSettings_Territory
// 0x00B0 (0x00F0 - 0x0040)
struct FGpsGeneratorSettings_Territory final : public FGpsGeneratorSettings
{
public:
	struct FGbxBinding_Actor                      TerritoryProvider;                                 // 0x0040(0x0020)(Edit, NativeAccessSpecifierPublic)
	EGbxTerritoryArea                             TerritoryArea;                                     // 0x0060(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxBinding_Int                        NumPointsPerBatch;                                 // 0x0068(0x0020)(Edit, NativeAccessSpecifierPublic)
	struct FGbxBinding_Float                      SpaceBetween;                                      // 0x0088(0x0020)(Edit, NativeAccessSpecifierPublic)
	struct FGbxBinding_Float                      EverywhereRadius;                                  // 0x00A8(0x0020)(Edit, NativeAccessSpecifierPublic)
	struct FGbxBinding_Float                      EverywhereHalfHeight;                              // 0x00C8(0x0020)(Edit, NativeAccessSpecifierPublic)
	EGbxTerritoryMovementType                     MovementType;                                      // 0x00E8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsGeneratorSettings_Territory;

// ScriptStruct GbxAI.GbxAggroInfo
// 0x0024 (0x0024 - 0x0000)
struct alignas(0x04) FGbxAggroInfo final
{
public:
	uint8                                         Pad_0[0x24];                                       // 0x0000(0x0024)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxAggroInfo;

// ScriptStruct GbxAI.GpsConditionSettings
// 0x0008 (0x0040 - 0x0038)
struct FGpsConditionSettings : public FGpsNodeSettings
{
public:
	bool                                          bInvertCondition;                                  // 0x0038(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsConditionSettings;

// ScriptStruct GbxAI.GbxAIPerfStats
// 0x0038 (0x0038 - 0x0000)
struct FGbxAIPerfStats final
{
public:
	bool                                          bIsValid;                                          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CurrAliveAICount;                                  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SpawnCostMs;                                       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SpawnBudgetMs;                                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TotalTickTime;                                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         NavMemStats;                                       // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_18[0x20];                                      // 0x0018(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxAIPerfStats;

// ScriptStruct GbxAI.GpsCondition_Attribute
// 0x0028 (0x0080 - 0x0058)
struct FGpsCondition_Attribute final : public FGpsCondition
{
public:
	uint8                                         Pad_58[0x28];                                      // 0x0058(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsCondition_Attribute;

// ScriptStruct GbxAI.GbxTerritorySettings
// 0x0378 (0x0378 - 0x0000)
struct FGbxTerritorySettings final
{
public:
	class FString                                 Description;                                       // 0x0000(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxTerritoryAreaData                  PatrolTerritory;                                   // 0x0010(0x0120)(Edit, NativeAccessSpecifierPublic)
	struct FGbxTerritoryAreaData                  ThreatTerritory;                                   // 0x0130(0x0120)(Edit, NativeAccessSpecifierPublic)
	struct FGbxTerritoryAreaData                  CombatTerritory;                                   // 0x0250(0x0120)(Edit, NativeAccessSpecifierPublic)
	EGbxTerritoryArea                             CombatProxy;                                       // 0x0370(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseCombatProxy;                                   // 0x0371(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAlwaysAwareInThreatArea;                          // 0x0372(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_373[0x5];                                      // 0x0373(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxTerritorySettings;

// ScriptStruct GbxAI.GbxBrainAspectSettings_AttachTerritory
// 0x0738 (0x07B8 - 0x0080)
struct FGbxBrainAspectSettings_AttachTerritory final : public FGbxBrainAspectSettings
{
public:
	struct FGbxParam                              target;                                            // 0x0080(0x0038)(Edit, NativeAccessSpecifierPublic)
	bool                                          bUpdateTarget;                                     // 0x00B8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAttachToSelfIfNoTarget;                           // 0x00B9(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_BA[0x6];                                       // 0x00BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxTerritorySettings                  TerritorySettings;                                 // 0x00C0(0x0378)(Edit, NativeAccessSpecifierPublic)
	bool                                          bAlwaysAwareInThreatArea;                          // 0x0438(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_439[0x7];                                      // 0x0439(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Description;                                       // 0x0440(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxTerritoryAreaData                  PatrolTerritory;                                   // 0x0450(0x0120)(NativeAccessSpecifierPublic)
	struct FGbxTerritoryAreaData                  ThreatTerritory;                                   // 0x0570(0x0120)(NativeAccessSpecifierPublic)
	struct FGbxTerritoryAreaData                  CombatTerritory;                                   // 0x0690(0x0120)(NativeAccessSpecifierPublic)
	EGbxTerritoryArea                             CombatProxy;                                       // 0x07B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseCombatProxy;                                   // 0x07B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_7B2[0x6];                                      // 0x07B2(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainAspectSettings_AttachTerritory;

// ScriptStruct GbxAI.GbxTerritoryValueResolver
// 0x0008 (0x0010 - 0x0008)
struct FGbxTerritoryValueResolver final : public FAttributeValueResolver
{
public:
	EGbxTerritoryArea                             Area;                                              // 0x0008(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EGpsContextTerritoryValue                     Value;                                             // 0x0009(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxTerritoryValueResolver;

// ScriptStruct GbxAI.GbxBrainAspect_AttachTerritory
// 0x0008 (0x00E0 - 0x00D8)
struct FGbxBrainAspect_AttachTerritory final : public FGbxBrainAspect
{
public:
	uint8                                         Pad_D8[0x8];                                       // 0x00D8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainAspect_AttachTerritory;

// ScriptStruct GbxAI.GbxBrainAspect_CanSee
// 0x0000 (0x00D8 - 0x00D8)
struct FGbxBrainAspect_CanSee final : public FGbxBrainAspect
{
};
DUMPER7_ASSERTS_FGbxBrainAspect_CanSee;

// ScriptStruct GbxAI.GpsFlowSettings_Priority
// 0x0000 (0x0040 - 0x0040)
struct FGpsFlowSettings_Priority final : public FGpsFlowSettings
{
};
DUMPER7_ASSERTS_FGpsFlowSettings_Priority;

// ScriptStruct GbxAI.GbxBrainAspectSettings_CanSense
// 0x0090 (0x0110 - 0x0080)
struct FGbxBrainAspectSettings_CanSense final : public FGbxBrainAspectSettings
{
public:
	bool                                          bRequireTarget;                                    // 0x0080(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              target;                                            // 0x0088(0x0038)(Edit, NativeAccessSpecifierPublic)
	bool                                          bInvert;                                           // 0x00C0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EGbxSense>                             Senses;                                            // 0x00C8(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FGbxParam                              Threshold;                                         // 0x00D8(0x0038)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxBrainAspectSettings_CanSense;

// ScriptStruct GbxAI.GbxBrainAspect_CanSense
// 0x0000 (0x00D8 - 0x00D8)
struct FGbxBrainAspect_CanSense final : public FGbxBrainAspect
{
};
DUMPER7_ASSERTS_FGbxBrainAspect_CanSense;

// ScriptStruct GbxAI.GbxBrainAspectSettings_ChanceToStart
// 0x0078 (0x00F8 - 0x0080)
struct FGbxBrainAspectSettings_ChanceToStart final : public FGbxBrainAspectSettings
{
public:
	struct FGbxParam                              Chance;                                            // 0x0080(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              RerollTimer;                                       // 0x00B8(0x0038)(Edit, NativeAccessSpecifierPublic)
	bool                                          bUseRerollTimer;                                   // 0x00F0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainAspectSettings_ChanceToStart;

// ScriptStruct GbxAI.GbxBrainAspect_ChanceToStart
// 0x0010 (0x00E8 - 0x00D8)
struct FGbxBrainAspect_ChanceToStart final : public FGbxBrainAspect
{
public:
	uint8                                         Pad_D8[0x10];                                      // 0x00D8(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainAspect_ChanceToStart;

// ScriptStruct GbxAI.GbxBrainAspect_ClaimCover
// 0x0008 (0x00E0 - 0x00D8)
struct FGbxBrainAspect_ClaimCover final : public FGbxBrainAspect
{
public:
	uint8                                         Pad_D8[0x8];                                       // 0x00D8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainAspect_ClaimCover;

// ScriptStruct GbxAI.GbxBrainAspectSettings_CompareValue
// 0x0078 (0x00F8 - 0x0080)
struct FGbxBrainAspectSettings_CompareValue final : public FGbxBrainAspectSettings
{
public:
	struct FGbxParam                              CompareValue;                                      // 0x0080(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              CompareTo;                                         // 0x00B8(0x0038)(Edit, NativeAccessSpecifierPublic)
	EGbxComparator                                Comparator;                                        // 0x00F0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGbxCompareType                               CompareType;                                       // 0x00F1(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F2[0x6];                                       // 0x00F2(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainAspectSettings_CompareValue;

// ScriptStruct GbxAI.GbxBrainAspect_CompareValue
// 0x0000 (0x00D8 - 0x00D8)
struct FGbxBrainAspect_CompareValue final : public FGbxBrainAspect
{
};
DUMPER7_ASSERTS_FGbxBrainAspect_CompareValue;

// ScriptStruct GbxAI.GpsGeneratorSettings_Actors_DistanceFilter
// 0x00C0 (0x00C0 - 0x0000)
struct FGpsGeneratorSettings_Actors_DistanceFilter final
{
public:
	struct FGbxBinding_Vector                     Origin;                                            // 0x0000(0x0098)(Edit, NativeAccessSpecifierPublic)
	struct FGbxBinding_Float                      Distance;                                          // 0x0098(0x0020)(Edit, NativeAccessSpecifierPublic)
	bool                                          bInvert;                                           // 0x00B8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsGeneratorSettings_Actors_DistanceFilter;

// ScriptStruct GbxAI.GbxBrainAspectSettings_ConditionData
// 0x0080 (0x0080 - 0x0000)
struct FGbxBrainAspectSettings_ConditionData final
{
public:
	struct FGbxParam                              Condition;                                         // 0x0000(0x0038)(Edit, NativeAccessSpecifierPublic)
	EGbxBrainAspectSettingsConditionContext       ContextType;                                       // 0x0038(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              CustomContext;                                     // 0x0040(0x0038)(Edit, NativeAccessSpecifierPublic)
	bool                                          bInvert;                                           // 0x0078(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainAspectSettings_ConditionData;

// ScriptStruct GbxAI.GbxBrainAspectSettings_Condition
// 0x0220 (0x02A0 - 0x0080)
struct FGbxBrainAspectSettings_Condition final : public FGbxBrainAspectSettings
{
public:
	struct FGbxBrainAspectSettings_ConditionData  CanStartCondition;                                 // 0x0080(0x0080)(Edit, NativeAccessSpecifierPublic)
	bool                                          bUseCanStartCondition;                             // 0x0100(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxBrainAspectSettings_ConditionData  CanInterruptCondition;                             // 0x0108(0x0080)(Edit, NativeAccessSpecifierPublic)
	bool                                          bUseCanInterruptCondition;                         // 0x0188(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_189[0x7];                                      // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxBrainAspectSettings_ConditionData  SucceedCondition;                                  // 0x0190(0x0080)(Edit, NativeAccessSpecifierPublic)
	bool                                          bUseSucceedCondition;                              // 0x0210(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_211[0x7];                                      // 0x0211(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxBrainAspectSettings_ConditionData  FailCondition;                                     // 0x0218(0x0080)(Edit, NativeAccessSpecifierPublic)
	bool                                          bUseFailCondition;                                 // 0x0298(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_299[0x7];                                      // 0x0299(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainAspectSettings_Condition;

// ScriptStruct GbxAI.GbxBrainAspectSettings_CountAllies
// 0x0040 (0x00C0 - 0x0080)
struct FGbxBrainAspectSettings_CountAllies final : public FGbxBrainAspectSettings
{
public:
	EGbxComparator                                Comparator;                                        // 0x0080(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              ComparisonValue;                                   // 0x0088(0x0038)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxBrainAspectSettings_CountAllies;

// ScriptStruct GbxAI.GbxBrainAspectSettings_GameplayTags
// 0x0088 (0x0108 - 0x0080)
struct FGbxBrainAspectSettings_GameplayTags final : public FGbxBrainAspectSettings
{
public:
	struct FGameplayTagQuery                      CanStartTagQuery;                                  // 0x0080(0x0048)(Edit, NativeAccessSpecifierPublic)
	EGbxBrainAspectSettingsGameplayTagQueryContext ContextType;                                      // 0x00C8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              CustomContext;                                     // 0x00D0(0x0038)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxBrainAspectSettings_GameplayTags;

// ScriptStruct GbxAI.GbxBrainAspect_GameplayTags
// 0x0000 (0x00D8 - 0x00D8)
struct FGbxBrainAspect_GameplayTags final : public FGbxBrainAspect
{
};
DUMPER7_ASSERTS_FGbxBrainAspect_GameplayTags;

// ScriptStruct GbxAI.GbxBrainAspectSettings_Gps
// 0x0220 (0x02A0 - 0x0080)
struct FGbxBrainAspectSettings_Gps : public FGbxBrainAspectSettings
{
public:
	struct FGpsQueryRunData                       QuerySettings;                                     // 0x0080(0x01E0)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              Result;                                            // 0x0260(0x0038)(Edit, NativeAccessSpecifierPublic)
	bool                                          bClearResultOnStop;                                // 0x0298(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGpsBrainStyle                                QueryStyle;                                        // 0x0299(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29A[0x6];                                      // 0x029A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainAspectSettings_Gps;

// ScriptStruct GbxAI.GpsGeneratorSettings_Grid
// 0x0180 (0x01C0 - 0x0040)
struct FGpsGeneratorSettings_Grid final : public FGpsGeneratorSettings
{
public:
	struct FGbxBinding_Vector                     Center;                                            // 0x0040(0x0098)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FGbxBinding_Rotator                    Rotation;                                          // 0x00D8(0x0060)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FGbxBinding_Float                      Width;                                             // 0x0138(0x0020)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FGbxBinding_Float                      Depth;                                             // 0x0158(0x0020)(Edit, Protected, NativeAccessSpecifierProtected)
	bool                                          b3DGrid;                                           // 0x0178(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_179[0x7];                                      // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxBinding_Float                      Height;                                            // 0x0180(0x0020)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FGbxBinding_Float                      MinDistance;                                       // 0x01A0(0x0020)(Edit, Protected, NativeAccessSpecifierProtected)
};
DUMPER7_ASSERTS_FGpsGeneratorSettings_Grid;

// ScriptStruct GbxAI.GbxBrainAspect_Gps
// 0x0138 (0x0210 - 0x00D8)
struct FGbxBrainAspect_Gps : public FGbxBrainAspect
{
public:
	uint8                                         Pad_D8[0x138];                                     // 0x00D8(0x0138)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainAspect_Gps;

// ScriptStruct GbxAI.GbxBrainAspect_HasNavLoS
// 0x0000 (0x00D8 - 0x00D8)
struct FGbxBrainAspect_HasNavLoS final : public FGbxBrainAspect
{
};
DUMPER7_ASSERTS_FGbxBrainAspect_HasNavLoS;

// ScriptStruct GbxAI.GbxBrainAspectSettings_InLineOfFire
// 0x0078 (0x00F8 - 0x0080)
struct FGbxBrainAspectSettings_InLineOfFire final : public FGbxBrainAspectSettings
{
public:
	struct FGbxParam                              Origin;                                            // 0x0080(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              Radius;                                            // 0x00B8(0x0038)(Edit, NativeAccessSpecifierPublic)
	bool                                          bFailWhenBlocking;                                 // 0x00F0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainAspectSettings_InLineOfFire;

// ScriptStruct GbxAI.GbxBrainAspectSettings_IsInRangeData
// 0x0040 (0x0040 - 0x0000)
struct FGbxBrainAspectSettings_IsInRangeData final
{
public:
	struct FGbxParam                              Range;                                             // 0x0000(0x0038)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	bool                                          bInvertRange;                                      // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainAspectSettings_IsInRangeData;

// ScriptStruct GbxAI.GpsGeneratorSettings_Cover
// 0x0118 (0x0158 - 0x0040)
struct FGpsGeneratorSettings_Cover final : public FGpsGeneratorSettings
{
public:
	struct FGbxBinding_Float                      Radius;                                            // 0x0040(0x0020)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FGbxBinding_Vector                     Origin;                                            // 0x0060(0x0098)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FGbxBinding_Actor                      target;                                            // 0x00F8(0x0020)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FGbxBinding_Bool                       MustHaveViewToTarget;                              // 0x0118(0x0020)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FGbxBinding_Bool                       MustBeHiddenFromThreats;                           // 0x0138(0x0020)(Edit, Protected, NativeAccessSpecifierProtected)
};
DUMPER7_ASSERTS_FGpsGeneratorSettings_Cover;

// ScriptStruct GbxAI.GbxBrainAspectIsInRangeAdvancedData
// 0x00C8 (0x00C8 - 0x0000)
struct FGbxBrainAspectIsInRangeAdvancedData final
{
public:
	struct FGbxBrainAspectSettings_IsInRangeData  CanStartRange;                                     // 0x0000(0x0040)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FGbxBrainAspectSettings_IsInRangeData  SucceedRange;                                      // 0x0040(0x0040)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FGbxBrainAspectSettings_IsInRangeData  FailRange;                                         // 0x0080(0x0040)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	bool                                          bUseCanStartRange;                                 // 0x00C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseSucceedRange;                                  // 0x00C1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseFailRange;                                     // 0x00C2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C3[0x5];                                       // 0x00C3(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainAspectIsInRangeAdvancedData;

// ScriptStruct GbxAI.GbxBrainAspectSettings_IsInRange
// 0x0190 (0x0210 - 0x0080)
struct FGbxBrainAspectSettings_IsInRange final : public FGbxBrainAspectSettings
{
public:
	EIsInRangeAspectCheckType                     CheckType;                                         // 0x0080(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              MinTargetsCount;                                   // 0x0088(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              target;                                            // 0x00C0(0x0038)(Edit, NativeAccessSpecifierPublic)
	EIsInRangeAspectDistanceTest                  DistanceTest;                                      // 0x00F8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxBrainAspectSettings_IsInRangeData  CanRunRange;                                       // 0x0100(0x0040)(Edit, NativeAccessSpecifierPublic)
	struct FGbxBrainAspectIsInRangeAdvancedData   AdvancedRanges;                                    // 0x0140(0x00C8)(Edit, NativeAccessSpecifierPublic)
	bool                                          bUseAdvancedRanges;                                // 0x0208(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_209[0x7];                                      // 0x0209(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainAspectSettings_IsInRange;

// ScriptStruct GbxAI.GpsGenerator_Project
// 0x0050 (0x0468 - 0x0418)
struct FGpsGenerator_Project : public FGpsGenerator
{
public:
	uint8                                         Pad_418[0x50];                                     // 0x0418(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsGenerator_Project;

// ScriptStruct GbxAI.GbxBrainAspect_IsInRange
// 0x0008 (0x00E0 - 0x00D8)
struct FGbxBrainAspect_IsInRange final : public FGbxBrainAspect
{
public:
	uint8                                         Pad_D8[0x8];                                       // 0x00D8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainAspect_IsInRange;

// ScriptStruct GbxAI.GbxBrainAspectSettings_IsInTerritory
// 0x00C8 (0x0148 - 0x0080)
struct FGbxBrainAspectSettings_IsInTerritory final : public FGbxBrainAspectSettings
{
public:
	EGbxTerritoryArea                             TerritoryArea;                                     // 0x0080(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              Goal;                                              // 0x0088(0x0038)(Edit, NativeAccessSpecifierPublic)
	bool                                          bUseGoal;                                          // 0x00C0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              TimeThreshold;                                     // 0x00C8(0x0038)(Edit, NativeAccessSpecifierPublic)
	bool                                          bUseTimeThreshold;                                 // 0x0100(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              DistanceThreshold;                                 // 0x0108(0x0038)(Edit, NativeAccessSpecifierPublic)
	bool                                          bUseDistanceThreshold;                             // 0x0140(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInvert;                                           // 0x0141(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInvertSucceeding;                                 // 0x0142(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bTrackLastLocationInTerritory;                     // 0x0143(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIgnoreThresoldWhenTerritoryChanges;               // 0x0144(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIgnoreExclusionVolumes;                           // 0x0145(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseGlobalTerritoryRestrictionCondition;           // 0x0146(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_147[0x1];                                      // 0x0147(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainAspectSettings_IsInTerritory;

// ScriptStruct GbxAI.GpsGeneratorSettings_History
// 0x0028 (0x0068 - 0x0040)
struct FGpsGeneratorSettings_History final : public FGpsGeneratorSettings
{
public:
	struct FGbxBinding_Int                        HistoryIndex;                                      // 0x0040(0x0020)(Edit, Protected, NativeAccessSpecifierProtected)
	bool                                          bWrap;                                             // 0x0060(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsGeneratorSettings_History;

// ScriptStruct GbxAI.GbxBrainAspect_IsInTerritory
// 0x0040 (0x0118 - 0x00D8)
struct FGbxBrainAspect_IsInTerritory final : public FGbxBrainAspect
{
public:
	uint8                                         Pad_D8[0x40];                                      // 0x00D8(0x0040)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainAspect_IsInTerritory;

// ScriptStruct GbxAI.GbxBrainAspectSettings_IsNavReachable
// 0x0078 (0x00F8 - 0x0080)
struct FGbxBrainAspectSettings_IsNavReachable final : public FGbxBrainAspectSettings
{
public:
	struct FGbxParam                              Goal;                                              // 0x0080(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              MaxDistance;                                       // 0x00B8(0x0038)(Edit, NativeAccessSpecifierPublic)
	bool                                          bFailIfNoLongerReachable;                          // 0x00F0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInvert;                                           // 0x00F1(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F2[0x6];                                       // 0x00F2(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainAspectSettings_IsNavReachable;

// ScriptStruct GbxAI.GpsGeneratorSettings_Circle
// 0x00D8 (0x0118 - 0x0040)
struct FGpsGeneratorSettings_Circle final : public FGpsGeneratorSettings
{
public:
	struct FGbxBinding_Float                      Radius;                                            // 0x0040(0x0020)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FGbxBinding_Vector                     Center;                                            // 0x0060(0x0098)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FGbxBinding_Int                        NumPoints;                                         // 0x00F8(0x0020)(Edit, Protected, NativeAccessSpecifierProtected)
};
DUMPER7_ASSERTS_FGpsGeneratorSettings_Circle;

// ScriptStruct GbxAI.GbxBrainAspect_IsNavReachable
// 0x0010 (0x00E8 - 0x00D8)
struct FGbxBrainAspect_IsNavReachable final : public FGbxBrainAspect
{
public:
	uint8                                         Pad_D8[0x10];                                      // 0x00D8(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainAspect_IsNavReachable;

// ScriptStruct GbxAI.GbxBrainAspectSettings_IsOnTerrain
// 0x0048 (0x00C8 - 0x0080)
struct FGbxBrainAspectSettings_IsOnTerrain final : public FGbxBrainAspectSettings
{
public:
	EGbxBrainAspectIsOnTerrainContext             ContextType;                                       // 0x0080(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              CustomContext;                                     // 0x0088(0x0038)(Edit, NativeAccessSpecifierPublic)
	bool                                          bInvert;                                           // 0x00C0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFailWhenNoLongerOnTerrain;                        // 0x00C1(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C2[0x6];                                       // 0x00C2(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainAspectSettings_IsOnTerrain;

// ScriptStruct GbxAI.GbxBrainAspect_IsOnTerrain
// 0x0000 (0x00D8 - 0x00D8)
struct FGbxBrainAspect_IsOnTerrain final : public FGbxBrainAspect
{
};
DUMPER7_ASSERTS_FGbxBrainAspect_IsOnTerrain;

// ScriptStruct GbxAI.GbxBrainAspectSettings_LockTarget
// 0x0010 (0x0090 - 0x0080)
struct FGbxBrainAspectSettings_LockTarget final : public FGbxBrainAspectSettings
{
public:
	class FName                                   reason;                                            // 0x0080(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseCustomReason;                                  // 0x0088(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainAspectSettings_LockTarget;

// ScriptStruct GbxAI.GpsGeneratorSettings_Actors_ConditionFilter
// 0x0040 (0x0040 - 0x0000)
struct FGpsGeneratorSettings_Actors_ConditionFilter final
{
public:
	struct FGbxParam                              Condition;                                         // 0x0000(0x0038)(Edit, NativeAccessSpecifierPublic)
	bool                                          bInvert;                                           // 0x0038(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsGeneratorSettings_Actors_ConditionFilter;

// ScriptStruct GbxAI.GpsGeneratorSettings_Actors
// 0x0188 (0x01C8 - 0x0040)
struct FGpsGeneratorSettings_Actors : public FGpsGeneratorSettings
{
public:
	struct FGpsGeneratorSettings_Actors_DistanceFilter DistanceFilter;                               // 0x0040(0x00C0)(Edit, Protected, NativeAccessSpecifierProtected)
	bool                                          bUseDistanceFilter;                                // 0x0100(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGpsGeneratorSettings_Actors_ConditionFilter ConditionFilter;                             // 0x0108(0x0040)(Edit, Protected, NativeAccessSpecifierProtected)
	bool                                          bUseConditionFilter;                               // 0x0148(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftClassPtr<class UClass>>           AllowedTypes;                                      // 0x0150(0x0010)(Edit, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	bool                                          bUseAllowedTypes;                                  // 0x0160(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftClassPtr<class UClass>>           DisallowedTypes;                                   // 0x0168(0x0010)(Edit, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	bool                                          bUseDisallowedTypes;                               // 0x0178(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bIgnoreQueryOwner;                                 // 0x0179(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_17A[0x6];                                      // 0x017A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxBinding_Actor                      IgnoreActor;                                       // 0x0180(0x0020)(Edit, Protected, NativeAccessSpecifierProtected)
	TArray<TSubclassOf<class UObject>>            AllowedTypesCache;                                 // 0x01A0(0x0010)(ZeroConstructor, Transient, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<TSubclassOf<class UObject>>            DisallowedTypesCache;                              // 0x01B0(0x0010)(ZeroConstructor, Transient, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	uint8                                         Pad_1C0[0x8];                                      // 0x01C0(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsGeneratorSettings_Actors;

// ScriptStruct GbxAI.GpsGeneratorSettings_Targetables
// 0x0008 (0x01D0 - 0x01C8)
struct FGpsGeneratorSettings_Targetables final : public FGpsGeneratorSettings_Actors
{
public:
	bool                                          bMustBeTargetableByPlayers;                        // 0x01C8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bMustBeTargetableByAI;                             // 0x01C9(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bMustBePerceivableByAI;                            // 0x01CA(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1CB[0x5];                                      // 0x01CB(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsGeneratorSettings_Targetables;

// ScriptStruct GbxAI.GbxBrainAspect_LockTarget
// 0x0008 (0x00E0 - 0x00D8)
struct FGbxBrainAspect_LockTarget final : public FGbxBrainAspect
{
public:
	uint8                                         Pad_D8[0x8];                                       // 0x00D8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainAspect_LockTarget;

// ScriptStruct GbxAI.GbxBrainAspectSettings_Loop
// 0x0108 (0x0188 - 0x0080)
struct FGbxBrainAspectSettings_Loop final : public FGbxBrainAspectSettings
{
public:
	struct FGbxBrainAspectSettings_ConditionData  LoopCondition;                                     // 0x0080(0x0080)(Edit, NativeAccessSpecifierPublic)
	bool                                          bUseLoopCondition;                                 // 0x0100(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              LoopCount;                                         // 0x0108(0x0038)(Edit, NativeAccessSpecifierPublic)
	bool                                          bUseLoopCount;                                     // 0x0140(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              LoopDuration;                                      // 0x0148(0x0038)(Edit, NativeAccessSpecifierPublic)
	bool                                          bUseLoopDuration;                                  // 0x0180(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bStopImmediately;                                  // 0x0181(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIgnoreFailure;                                    // 0x0182(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_183[0x5];                                      // 0x0183(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainAspectSettings_Loop;

// ScriptStruct GbxAI.GpsGeneratorSettings_Point
// 0x0098 (0x00D8 - 0x0040)
struct FGpsGeneratorSettings_Point final : public FGpsGeneratorSettings
{
public:
	struct FGbxBinding_Vector                     Point;                                             // 0x0040(0x0098)(Edit, Protected, NativeAccessSpecifierProtected)
};
DUMPER7_ASSERTS_FGpsGeneratorSettings_Point;

// ScriptStruct GbxAI.GbxBrainAspect_Loop
// 0x0010 (0x00E8 - 0x00D8)
struct FGbxBrainAspect_Loop final : public FGbxBrainAspect
{
public:
	uint8                                         Pad_D8[0x10];                                      // 0x00D8(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainAspect_Loop;

// ScriptStruct GbxAI.GpsGeneratorSettings_Project
// 0x0040 (0x0080 - 0x0040)
struct FGpsGeneratorSettings_Project : public FGpsGeneratorSettings
{
public:
	struct FGpsTrace                              GeometryData;                                      // 0x0040(0x0040)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGpsGeneratorSettings_Project;

// ScriptStruct GbxAI.GbxBrainAspect_MaxRuns
// 0x0008 (0x00E0 - 0x00D8)
struct FGbxBrainAspect_MaxRuns final : public FGbxBrainAspect
{
public:
	uint8                                         Pad_D8[0x8];                                       // 0x00D8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainAspect_MaxRuns;

// ScriptStruct GbxAI.GbxBrainAspectSettings_Navigation
// 0x0168 (0x01E8 - 0x0080)
struct FGbxBrainAspectSettings_Navigation : public FGbxBrainAspectSettings
{
public:
	uint8                                         Pad_80[0x18];                                      // 0x0080(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxNavGoalModifiers                   Modifiers;                                         // 0x0098(0x0080)(Edit, NativeAccessSpecifierPublic)
	EGbxNavGoalCustomRotationContext              CustomGoalRotationContext;                         // 0x0118(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              DynamicRadius;                                     // 0x0120(0x0038)(Edit, NativeAccessSpecifierPublic)
	bool                                          bUseDynamicRadius;                                 // 0x0158(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              DynamicHalfHeight;                                 // 0x0160(0x0038)(Edit, NativeAccessSpecifierPublic)
	bool                                          bUseDynamicHalfHeight;                             // 0x0198(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_199[0x3];                                      // 0x0199(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	EAINavAspectType                              RunType;                                           // 0x019C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUpdateGoalWhileRunning;                           // 0x01A0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bStopImmediatelyWhenReachedGoal;                   // 0x01A1(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRemainAtReachedGoal;                              // 0x01A2(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInvalidateUnreachableGoals;                       // 0x01A3(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseGoalsNumLimit;                                 // 0x01A4(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A5[0x3];                                      // 0x01A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              GoalsNumLimit;                                     // 0x01A8(0x0038)(Edit, NativeAccessSpecifierPublic)
	bool                                          bUseLeavingAreaCosts;                              // 0x01E0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bWaitForStop;                                      // 0x01E1(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1E2[0x6];                                      // 0x01E2(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainAspectSettings_Navigation;

// ScriptStruct GbxAI.GpsGenerator_Range
// 0x0030 (0x0448 - 0x0418)
struct FGpsGenerator_Range : public FGpsGenerator
{
public:
	uint8                                         Pad_418[0x30];                                     // 0x0418(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsGenerator_Range;

// ScriptStruct GbxAI.GbxBrainAspectSettings_NavAttribute
// 0x0038 (0x0220 - 0x01E8)
struct FGbxBrainAspectSettings_NavAttribute : public FGbxBrainAspectSettings_Navigation
{
public:
	struct FGbxParam                              GoalAttribute;                                     // 0x01E8(0x0038)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxBrainAspectSettings_NavAttribute;

// ScriptStruct GbxAI.GbxBrainAspect_Navigation
// 0x0048 (0x0120 - 0x00D8)
struct FGbxBrainAspect_Navigation : public FGbxBrainAspect
{
public:
	uint8                                         Pad_D8[0x48];                                      // 0x00D8(0x0048)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainAspect_Navigation;

// ScriptStruct GbxAI.GpsGlobals
// 0x0020 (0x0040 - 0x0020)
struct FGpsGlobals final : public FGbxGlobalDef
{
public:
	float                                         MaxSyncExecTime;                                   // 0x0020(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         MaxAsyncExecTime;                                  // 0x0024(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         MinExecTime;                                       // 0x0028(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2C[0x14];                                      // 0x002C(0x0014)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsGlobals;

// ScriptStruct GbxAI.GbxBrainAspect_NavAttribute
// 0x0000 (0x0120 - 0x0120)
struct FGbxBrainAspect_NavAttribute : public FGbxBrainAspect_Navigation
{
};
DUMPER7_ASSERTS_FGbxBrainAspect_NavAttribute;

// ScriptStruct GbxAI.GbxBrainAspectSettings_NavGps
// 0x01E8 (0x03D0 - 0x01E8)
struct FGbxBrainAspectSettings_NavGps final : public FGbxBrainAspectSettings_Navigation
{
public:
	struct FGpsQueryRunData                       GoalQuery;                                         // 0x01E8(0x01E0)(Edit, NativeAccessSpecifierPublic)
	EGpsBrainStyle                                QueryStyle;                                        // 0x03C8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3C9[0x7];                                      // 0x03C9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainAspectSettings_NavGps;

// ScriptStruct GbxAI.GpsGeneratorSettings_TargetInfo
// 0x0000 (0x0040 - 0x0040)
struct FGpsGeneratorSettings_TargetInfo final : public FGpsGeneratorSettings
{
};
DUMPER7_ASSERTS_FGpsGeneratorSettings_TargetInfo;

// ScriptStruct GbxAI.GbxBrainAspect_NavGps
// 0x0138 (0x0258 - 0x0120)
struct FGbxBrainAspect_NavGps final : public FGbxBrainAspect_Navigation
{
public:
	uint8                                         Pad_120[0x138];                                    // 0x0120(0x0138)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainAspect_NavGps;

// ScriptStruct GbxAI.GbxBrainAspectSettings_NavLink
// 0x0040 (0x00C0 - 0x0080)
struct FGbxBrainAspectSettings_NavLink final : public FGbxBrainAspectSettings
{
public:
	struct FGbxParam                              EndLocation;                                       // 0x0080(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGameplayTag                           AnimTag;                                           // 0x00B8(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxBrainAspectSettings_NavLink;

// ScriptStruct GbxAI.GpsGeneratorSettings_Range
// 0x0280 (0x02C0 - 0x0040)
struct FGpsGeneratorSettings_Range : public FGpsGeneratorSettings
{
public:
	struct FGbxBinding_Float                      MinRadius;                                         // 0x0040(0x0020)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FGbxBinding_Float                      MaxRadius;                                         // 0x0060(0x0020)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FGbxBinding_Vector                     Center;                                            // 0x0080(0x0098)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FGbxBinding_Float                      MinSpacing;                                        // 0x0118(0x0020)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FGbxBinding_Float                      ArcAngle;                                          // 0x0138(0x0020)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FGpsDirectionSettings                  ArcDirection;                                      // 0x0158(0x0160)(Edit, Protected, NativeAccessSpecifierProtected)
	bool                                          bLimitAngle;                                       // 0x02B8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2B9[0x7];                                      // 0x02B9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsGeneratorSettings_Range;

// ScriptStruct GbxAI.GbxBrainAspect_NavLink
// 0x0018 (0x00F0 - 0x00D8)
struct FGbxBrainAspect_NavLink final : public FGbxBrainAspect
{
public:
	uint8                                         Pad_D8[0x18];                                      // 0x00D8(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainAspect_NavLink;

// ScriptStruct GbxAI.OrbitSettings
// 0x0250 (0x0250 - 0x0000)
struct FOrbitSettings final
{
public:
	struct FGbxParam                              Center;                                            // 0x0000(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              HeightOffset;                                      // 0x0038(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              Radius;                                            // 0x0070(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              FallBackRadius;                                    // 0x00A8(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              Angle;                                             // 0x00E0(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              AngleInterval;                                     // 0x0118(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              SearchRadius;                                      // 0x0150(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              SearchHalfHeight;                                  // 0x0188(0x0038)(Edit, NativeAccessSpecifierPublic)
	bool                                          bRespectCombatTerritory;                           // 0x01C0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EOrbitDirection                               Direction;                                         // 0x01C1(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C2[0x6];                                      // 0x01C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              DirectionGoal;                                     // 0x01C8(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              RunContinuously;                                   // 0x0200(0x0038)(Edit, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      OrbitStance;                                       // 0x0238(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FOrbitSettings;

// ScriptStruct GbxAI.GpsTestSettings_NavMaterial
// 0x0030 (0x00B0 - 0x0080)
struct FGpsTestSettings_NavMaterial final : public FGpsTestSettings
{
public:
	TArray<TSoftObjectPtr<class UGbxNavArea>>     AllowedAreas;                                      // 0x0080(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	bool                                          bUseAllowedAreas;                                  // 0x0090(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class UGbxNavArea>>     DisallowedAreas;                                   // 0x0098(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	bool                                          bUseDisallowedAreas;                               // 0x00A8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsTestSettings_NavMaterial;

// ScriptStruct GbxAI.GbxBrainAspectSettings_Orbit
// 0x0250 (0x0438 - 0x01E8)
struct FGbxBrainAspectSettings_Orbit final : public FGbxBrainAspectSettings_Navigation
{
public:
	struct FOrbitSettings                         OrbitSettings;                                     // 0x01E8(0x0250)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxBrainAspectSettings_Orbit;

// ScriptStruct GbxAI.GbxBrainAspect_Orbit
// 0x00A0 (0x01C0 - 0x0120)
struct FGbxBrainAspect_Orbit final : public FGbxBrainAspect_Navigation
{
public:
	uint8                                         Pad_120[0xA0];                                     // 0x0120(0x00A0)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainAspect_Orbit;

// ScriptStruct GbxAI.GpsFlightNav
// 0x0038 (0x0038 - 0x0000)
struct FGpsFlightNav final
{
public:
	bool                                          bInherit;                                          // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxBinding_Actor                      Actor;                                             // 0x0008(0x0020)(Edit, NativeAccessSpecifierPublic)
	class UGbxFlightNavLayer*                     layer;                                             // 0x0028(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bTryOtherLayers;                                   // 0x0030(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOriginUseClosestNavZ;                             // 0x0031(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ClosestNavSearchRadius;                            // 0x0034(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGpsFlightNav;

// ScriptStruct GbxAI.GbxBrainAspectSettings_ReserveLineOfFire
// 0x00B0 (0x0130 - 0x0080)
struct FGbxBrainAspectSettings_ReserveLineOfFire final : public FGbxBrainAspectSettings
{
public:
	struct FGbxParam                              target;                                            // 0x0080(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              Origin;                                            // 0x00B8(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              Radius;                                            // 0x00F0(0x0038)(Edit, NativeAccessSpecifierPublic)
	bool                                          bInvalidateUnreachableGoals;                       // 0x0128(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainAspectSettings_ReserveLineOfFire;

// ScriptStruct GbxAI.GbxBrainAspect_ReserveLineOfFire
// 0x0020 (0x00F8 - 0x00D8)
struct FGbxBrainAspect_ReserveLineOfFire final : public FGbxBrainAspect
{
public:
	uint8                                         Pad_D8[0x20];                                      // 0x00D8(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainAspect_ReserveLineOfFire;

// ScriptStruct GbxAI.GpsNavMesh
// 0x0040 (0x0040 - 0x0000)
struct FGpsNavMesh final
{
public:
	bool                                          bInherit;                                          // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxBinding_Actor                      Actor;                                             // 0x0008(0x0020)(Edit, NativeAccessSpecifierPublic)
	class UGbxNavMeshLayer*                       layer;                                             // 0x0028(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxNavAreaUserData*                    Areas;                                             // 0x0030(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRequiresClearance;                                // 0x0038(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAllowFlyingAgents;                                // 0x0039(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bTryOtherLayers;                                   // 0x003A(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3B[0x5];                                       // 0x003B(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsNavMesh;

// ScriptStruct GbxAI.GpsTestSettings_NavNearArc
// 0x01A0 (0x0220 - 0x0080)
struct FGpsTestSettings_NavNearArc final : public FGpsTestSettings
{
public:
	EGpsTraceTestType                             HitOrMiss;                                         // 0x0080(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGpsNavMesh                            NavMeshData;                                       // 0x0088(0x0040)(Edit, NativeAccessSpecifierPublic)
	struct FGbxBinding_Float                      Radius;                                            // 0x00C8(0x0020)(Edit, NativeAccessSpecifierPublic)
	struct FGbxBinding_Float                      HalfHeight;                                        // 0x00E8(0x0020)(Edit, NativeAccessSpecifierPublic)
	struct FGbxBinding_Float                      ZOffset;                                           // 0x0108(0x0020)(Edit, NativeAccessSpecifierPublic)
	struct FGbxBinding_Vector                     Origin;                                            // 0x0128(0x0098)(Edit, NativeAccessSpecifierPublic)
	struct FGbxBinding_TrajectoryOptions          TrajectoryOptions;                                 // 0x01C0(0x0060)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGpsTestSettings_NavNearArc;

// ScriptStruct GbxAI.GpsTestSettings_MatchingActor
// 0x0040 (0x00C0 - 0x0080)
struct FGpsTestSettings_MatchingActor final : public FGpsTestSettings
{
public:
	struct FGbxParam                              Actor;                                             // 0x0080(0x0038)(Edit, NativeAccessSpecifierPublic)
	EGpsTest_MatchingTarget                       PreferMatchingOrNot;                               // 0x00B8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsTestSettings_MatchingActor;

// ScriptStruct GbxAI.GbxBrainAspect_SetParam
// 0x0028 (0x0100 - 0x00D8)
struct FGbxBrainAspect_SetParam final : public FGbxBrainAspect
{
public:
	uint8                                         Pad_D8[0x28];                                      // 0x00D8(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainAspect_SetParam;

// ScriptStruct GbxAI.GbxBrainAspectSettings_Stance
// 0x0018 (0x0098 - 0x0080)
struct FGbxBrainAspectSettings_Stance final : public FGbxBrainAspectSettings
{
public:
	FGameDataHandleProperty_                      stance;                                            // 0x0080(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxBrainAspectSettings_Stance;

// ScriptStruct GbxAI.GpsScoringNode
// 0x0008 (0x0058 - 0x0050)
struct FGpsScoringNode : public FGpsNodeState
{
public:
	uint8                                         Pad_50[0x8];                                       // 0x0050(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsScoringNode;

// ScriptStruct GbxAI.GpsModifier
// 0x0000 (0x0058 - 0x0058)
struct FGpsModifier : public FGpsScoringNode
{
};
DUMPER7_ASSERTS_FGpsModifier;

// ScriptStruct GbxAI.GpsModifier_Noise
// 0x0008 (0x0060 - 0x0058)
struct FGpsModifier_Noise final : public FGpsModifier
{
public:
	uint8                                         Pad_58[0x8];                                       // 0x0058(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsModifier_Noise;

// ScriptStruct GbxAI.GbxBrainAspect_Stance
// 0x0010 (0x00E8 - 0x00D8)
struct FGbxBrainAspect_Stance final : public FGbxBrainAspect
{
public:
	uint8                                         Pad_D8[0x10];                                      // 0x00D8(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainAspect_Stance;

// ScriptStruct GbxAI.GbxBrainAspectSettings_StopMoving
// 0x0038 (0x00B8 - 0x0080)
struct FGbxBrainAspectSettings_StopMoving final : public FGbxBrainAspectSettings
{
public:
	struct FGbxParam                              StopEarlyCondition;                                // 0x0080(0x0038)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxBrainAspectSettings_StopMoving;

// ScriptStruct GbxAI.GpsModifier_Project
// 0x00E8 (0x0140 - 0x0058)
struct FGpsModifier_Project final : public FGpsModifier
{
public:
	uint8                                         Pad_58[0xE8];                                      // 0x0058(0x00E8)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsModifier_Project;

// ScriptStruct GbxAI.GbxBrainAspect_Ticket
// 0x0008 (0x00E0 - 0x00D8)
struct FGbxBrainAspect_Ticket final : public FGbxBrainAspect
{
public:
	uint8                                         Pad_D8[0x8];                                       // 0x00D8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainAspect_Ticket;

// ScriptStruct GbxAI.GbxBrainAspectSettings_Timer
// 0x02C0 (0x0340 - 0x0080)
struct FGbxBrainAspectSettings_Timer final : public FGbxBrainAspectSettings
{
public:
	struct FGbxParam                              CanStartWarmup;                                    // 0x0080(0x0038)(Edit, NativeAccessSpecifierPublic)
	bool                                          bUseCanStartWarmup;                                // 0x00B8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              SpawnedWarmup;                                     // 0x00C0(0x0038)(Edit, NativeAccessSpecifierPublic)
	bool                                          bUseSpawnedWarmup;                                 // 0x00F8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              CombatStartedWarmup;                               // 0x0100(0x0038)(Edit, NativeAccessSpecifierPublic)
	bool                                          bUseCombatStartedWarmup;                           // 0x0138(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              TargetChangedWarmup;                               // 0x0140(0x0038)(Edit, NativeAccessSpecifierPublic)
	bool                                          bUseTargetChangedWarmup;                           // 0x0178(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_179[0x7];                                      // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              StoppedCooldown;                                   // 0x0180(0x0038)(Edit, NativeAccessSpecifierPublic)
	bool                                          bUseStoppedCooldown;                               // 0x01B8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B9[0x7];                                      // 0x01B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              SucceededCooldown;                                 // 0x01C0(0x0038)(Edit, NativeAccessSpecifierPublic)
	bool                                          bUseSucceededCooldown;                             // 0x01F8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1F9[0x7];                                      // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              FailedCooldown;                                    // 0x0200(0x0038)(Edit, NativeAccessSpecifierPublic)
	bool                                          bUseFailedCooldown;                                // 0x0238(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_239[0x7];                                      // 0x0239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              InterruptedCooldown;                               // 0x0240(0x0038)(Edit, NativeAccessSpecifierPublic)
	bool                                          bUseInterruptedCooldown;                           // 0x0278(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_279[0x7];                                      // 0x0279(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              AbortedCooldown;                                   // 0x0280(0x0038)(Edit, NativeAccessSpecifierPublic)
	bool                                          bUseAbortedCooldown;                               // 0x02B8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2B9[0x7];                                      // 0x02B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              SucceedTimeLimit;                                  // 0x02C0(0x0038)(Edit, NativeAccessSpecifierPublic)
	bool                                          bUseSucceedTimeLimit;                              // 0x02F8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2F9[0x7];                                      // 0x02F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              FailTimeLimit;                                     // 0x0300(0x0038)(Edit, NativeAccessSpecifierPublic)
	bool                                          bUseFailTimeLimit;                                 // 0x0338(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_339[0x7];                                      // 0x0339(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainAspectSettings_Timer;

// ScriptStruct GbxAI.GbxBrainAspect_Timer
// 0x0030 (0x0108 - 0x00D8)
struct FGbxBrainAspect_Timer final : public FGbxBrainAspect
{
public:
	uint8                                         Pad_D8[0x30];                                      // 0x00D8(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainAspect_Timer;

// ScriptStruct GbxAI.GbxBrainAspectSettings_UseCover
// 0x01F0 (0x0270 - 0x0080)
struct FGbxBrainAspectSettings_UseCover final : public FGbxBrainAspectSettings
{
public:
	struct FGbxParam                              Cover;                                             // 0x0080(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              target;                                            // 0x00B8(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FCoverUseParams                        UseParams;                                         // 0x00F0(0x0110)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              Fidgeting;                                         // 0x0200(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              Combat;                                            // 0x0238(0x0038)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxBrainAspectSettings_UseCover;

// ScriptStruct GbxAI.GpsChoiceData
// 0x000C (0x000C - 0x0000)
struct FGpsChoiceData final
{
public:
	EGpsChoice                                    type;                                              // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Index;                                             // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Percent;                                           // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGpsChoiceData;

// ScriptStruct GbxAI.GpsQuerySettings
// 0x0250 (0x02F8 - 0x00A8)
struct FGpsQuerySettings final : public FGbxGraphSettings
{
public:
	struct FGpsChoiceData                         Choice;                                            // 0x00A8(0x000C)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	float                                         ExecutionPeriod;                                   // 0x00B4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UGpsContext*>                    contexts;                                          // 0x00B8(0x0010)(Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPrivate)
	struct FGbxBindingList                        Bindings;                                          // 0x00C8(0x01D0)(Transient, NativeAccessSpecifierPrivate)
	uint8                                         Pad_298[0x1];                                      // 0x0298(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bOnlyUpdateWhenInputsChange;                       // 0x0299(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_29A[0x2];                                      // 0x029A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LocationThreshold;                                 // 0x029C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         RotationThreshold;                                 // 0x02A0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bIsThreadSafe;                                     // 0x02A4(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2A5[0x53];                                     // 0x02A5(0x0053)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsQuerySettings;

// ScriptStruct GbxAI.GbxBrainAspect_UseCover
// 0x0028 (0x0100 - 0x00D8)
struct FGbxBrainAspect_UseCover final : public FGbxBrainAspect
{
public:
	uint8                                         Pad_D8[0x28];                                      // 0x00D8(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainAspect_UseCover;

// ScriptStruct GbxAI.GbxBrainGraphShareSettings
// 0x0020 (0x0020 - 0x0000)
struct FGbxBrainGraphShareSettings final
{
public:
	class FString                                 Category;                                          // 0x0000(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ToolTip;                                           // 0x0010(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxBrainGraphShareSettings;

// ScriptStruct GbxAI.GpsTestSettings_AttitudeTowards
// 0x0030 (0x00B0 - 0x0080)
struct FGpsTestSettings_AttitudeTowards final : public FGpsTestSettings
{
public:
	ETeamAttitude                                 AttitudeTowards;                                   // 0x0080(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxBinding_Actor                      SourceActor;                                       // 0x0088(0x0020)(Edit, Protected, NativeAccessSpecifierProtected)
	bool                                          bInvertAttitude;                                   // 0x00A8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bCheckAttitudeTowardSourceActor;                   // 0x00A9(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_AA[0x6];                                       // 0x00AA(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsTestSettings_AttitudeTowards;

// ScriptStruct GbxAI.GbxBrainGraphSettings
// 0x0070 (0x0118 - 0x00A8)
struct FGbxBrainGraphSettings : public FGbxGraphSettings
{
public:
	struct FGbxBrainGraphShareSettings            ShareSettings;                                     // 0x00A8(0x0020)(Edit, NativeAccessSpecifierPublic)
	bool                                          bShareAsset;                                       // 0x00C8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           BrainType;                                         // 0x00CC(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  AdditionalAllowedBrainTypes;                       // 0x00D8(0x0020)(Edit, NativeAccessSpecifierPublic)
	uint8                                         Pad_F8[0x20];                                      // 0x00F8(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainGraphSettings;

// ScriptStruct GbxAI.GbxBrainGraphSettings_AITree
// 0x0000 (0x0118 - 0x0118)
struct FGbxBrainGraphSettings_AITree final : public FGbxBrainGraphSettings
{
};
DUMPER7_ASSERTS_FGbxBrainGraphSettings_AITree;

// ScriptStruct GbxAI.GpsTestSettings_Aggro
// 0x0028 (0x00A8 - 0x0080)
struct FGpsTestSettings_Aggro final : public FGpsTestSettings
{
public:
	struct FGbxBinding_Actor                      AggroProvider;                                     // 0x0080(0x0020)(Edit, NativeAccessSpecifierPublic)
	EGbxAggroType                                 AggroType;                                         // 0x00A0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHasAggro;                                         // 0x00A1(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A2[0x6];                                       // 0x00A2(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsTestSettings_Aggro;

// ScriptStruct GbxAI.GbxBrainGraphState
// 0x0008 (0x0138 - 0x0130)
struct FGbxBrainGraphState final : public FGbxGraphState
{
public:
	uint8                                         Pad_130[0x8];                                      // 0x0130(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainGraphState;

// ScriptStruct GbxAI.GbxBrainService
// 0x0028 (0x0030 - 0x0008)
struct FGbxBrainService : public FGbxHasStructType
{
public:
	uint8                                         Pad_8[0x28];                                       // 0x0008(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainService;

// ScriptStruct GbxAI.GpsModifier_Transform
// 0x0078 (0x00D0 - 0x0058)
struct alignas(0x10) FGpsModifier_Transform final : public FGpsModifier
{
public:
	uint8                                         Pad_58[0x78];                                      // 0x0058(0x0078)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsModifier_Transform;

// ScriptStruct GbxAI.GbxBrainTaskSettings
// 0x0008 (0x0080 - 0x0078)
struct FGbxBrainTaskSettings : public FGbxBrainTaskBaseSettings
{
public:
	bool                                          bWaitForAllAspects;                                // 0x0078(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainTaskSettings;

// ScriptStruct GbxAI.GpsTestSettings_Attackers
// 0x0068 (0x00E8 - 0x0080)
struct FGpsTestSettings_Attackers final : public FGpsTestSettings
{
public:
	struct FGbxBinding_Float                      MinAttackers;                                      // 0x0080(0x0020)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FGbxBinding_Float                      MaxAttackers;                                      // 0x00A0(0x0020)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FGbxBinding_Float                      AttackTimeThreshold;                               // 0x00C0(0x0020)(Edit, Protected, NativeAccessSpecifierProtected)
	EGpsAttackersScore                            Preference;                                        // 0x00E0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsTestSettings_Attackers;

// ScriptStruct GbxAI.GbxBrainTaskSettings_FlowControl
// 0x0050 (0x00D0 - 0x0080)
struct FGbxBrainTaskSettings_FlowControl : public FGbxBrainTaskSettings
{
public:
	uint8                                         Pad_80[0x50];                                      // 0x0080(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainTaskSettings_FlowControl;

// ScriptStruct GbxAI.GbxBrainTaskSettings_Selector
// 0x0000 (0x00D0 - 0x00D0)
struct FGbxBrainTaskSettings_Selector : public FGbxBrainTaskSettings_FlowControl
{
};
DUMPER7_ASSERTS_FGbxBrainTaskSettings_Selector;

// ScriptStruct GbxAI.GpsTestSettings_EffectArea
// 0x0008 (0x0088 - 0x0080)
struct FGpsTestSettings_EffectArea final : public FGpsTestSettings
{
public:
	EGpsEffectAreaScoringMode                     Mode;                                              // 0x0080(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFilterInsideHostileAreas;                         // 0x0081(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFilterOutsideAllyAreas;                           // 0x0082(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_83[0x5];                                       // 0x0083(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsTestSettings_EffectArea;

// ScriptStruct GbxAI.GbxBrainTask_Priority_TaskSettings
// 0x0004 (0x0004 - 0x0000)
struct FGbxBrainTask_Priority_TaskSettings final
{
public:
	bool                                          bCanCauseParentToStop;                             // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCanCauseParentToSucceed;                          // 0x0001(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCanCauseParentToFail;                             // 0x0002(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCheckCanStartIfUnknown;                           // 0x0003(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxBrainTask_Priority_TaskSettings;

// ScriptStruct GbxAI.GbxBrainTaskSettings_Priority
// 0x0018 (0x00E8 - 0x00D0)
struct FGbxBrainTaskSettings_Priority : public FGbxBrainTaskSettings_Selector
{
public:
	float                                         TryInterruptPeriod;                                // 0x00D0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WaitForTaskCanStartDuration;                       // 0x00D4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGbxBrainTask_Priority_TaskSettings> TaskPrioritySettingsList;                     // 0x00D8(0x0010)(Edit, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxBrainTaskSettings_Priority;

// ScriptStruct GbxAI.GpsTestSettings_CoverTrace
// 0x0060 (0x00E0 - 0x0080)
struct FGpsTestSettings_CoverTrace final : public FGpsTestSettings
{
public:
	struct FGbxBinding_Actor                      target;                                            // 0x0080(0x0020)(Edit, NativeAccessSpecifierPublic)
	struct FGbxBinding_Float                      TraceValidDistance;                                // 0x00A0(0x0020)(Edit, NativeAccessSpecifierPublic)
	struct FGbxBinding_Float                      TraceValidTime;                                    // 0x00C0(0x0020)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGpsTestSettings_CoverTrace;

// ScriptStruct GbxAI.GbxBrainTaskSettings_AITree
// 0x0000 (0x00E8 - 0x00E8)
struct FGbxBrainTaskSettings_AITree final : public FGbxBrainTaskSettings_Priority
{
};
DUMPER7_ASSERTS_FGbxBrainTaskSettings_AITree;

// ScriptStruct GbxAI.GbxBrainTask_Priority
// 0x0020 (0x01E8 - 0x01C8)
struct FGbxBrainTask_Priority : public FGbxBrainTask_Selector
{
public:
	uint8                                         Pad_1C8[0x20];                                     // 0x01C8(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainTask_Priority;

// ScriptStruct GbxAI.GpsGeneratorSettings_Active
// 0x0008 (0x0048 - 0x0040)
struct FGpsGeneratorSettings_Active final : public FGpsGeneratorSettings
{
public:
	EGpsActiveGeneratorAllowedNavType             SpecificNavType;                                   // 0x0040(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsGeneratorSettings_Active;

// ScriptStruct GbxAI.GbxBrainTask_AITree
// 0x0000 (0x01E8 - 0x01E8)
struct FGbxBrainTask_AITree final : public FGbxBrainTask_Priority
{
};
DUMPER7_ASSERTS_FGbxBrainTask_AITree;

// ScriptStruct GbxAI.GbxBrainTaskSettings_Composite
// 0x0118 (0x0198 - 0x0080)
struct FGbxBrainTaskSettings_Composite : public FGbxBrainTaskSettings
{
public:
	uint8                                         Pad_80[0x118];                                     // 0x0080(0x0118)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainTaskSettings_Composite;

// ScriptStruct GbxAI.GpsTestSettings_FlightNavNear
// 0x00A0 (0x0120 - 0x0080)
struct FGpsTestSettings_FlightNavNear final : public FGpsTestSettings
{
public:
	EGpsTraceTestType                             HitOrMiss;                                         // 0x0080(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGpsFlightNav                          FlightNavData;                                     // 0x0088(0x0038)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FGbxBinding_Float                      Radius;                                            // 0x00C0(0x0020)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FGbxBinding_Float                      Height;                                            // 0x00E0(0x0020)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FGbxBinding_Float                      HeightOffset;                                      // 0x0100(0x0020)(Edit, Protected, NativeAccessSpecifierProtected)
};
DUMPER7_ASSERTS_FGpsTestSettings_FlightNavNear;

// ScriptStruct GbxAI.GbxBrainTask_Composite
// 0x0138 (0x0268 - 0x0130)
struct FGbxBrainTask_Composite : public FGbxBrainTask
{
public:
	uint8                                         Pad_130[0x138];                                    // 0x0130(0x0138)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainTask_Composite;

// ScriptStruct GbxAI.GbxBrainTaskSettings_CompositeQuery
// 0x0000 (0x0198 - 0x0198)
struct FGbxBrainTaskSettings_CompositeQuery : public FGbxBrainTaskSettings_Composite
{
};
DUMPER7_ASSERTS_FGbxBrainTaskSettings_CompositeQuery;

// ScriptStruct GbxAI.GbxBrainTaskSettings_External
// 0x0018 (0x0098 - 0x0080)
struct FGbxBrainTaskSettings_External final : public FGbxBrainTaskSettings
{
public:
	class UGbxBrainTaskData*                      Task;                                              // 0x0080(0x0008)(Edit, ZeroConstructor, EditConst, NoDestructor, AdvancedDisplay, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGbxGraphParam>                 Parameters;                                        // 0x0088(0x0010)(Edit, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxBrainTaskSettings_External;

// ScriptStruct GbxAI.GbxBrainTask_ExternalBase
// 0x0138 (0x0268 - 0x0130)
struct FGbxBrainTask_ExternalBase : public FGbxBrainTask
{
public:
	uint8                                         Pad_130[0x138];                                    // 0x0130(0x0138)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainTask_ExternalBase;

// ScriptStruct GbxAI.GbxBrainTask_External
// 0x0000 (0x0268 - 0x0268)
struct FGbxBrainTask_External final : public FGbxBrainTask_ExternalBase
{
};
DUMPER7_ASSERTS_FGbxBrainTask_External;

// ScriptStruct GbxAI.GbxBrainTask_Parallel_TaskSettings
// 0x0004 (0x0004 - 0x0000)
struct FGbxBrainTask_Parallel_TaskSettings final
{
public:
	bool                                          bCanPreventTaskFromStarting;                       // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCanCauseTaskToSucceed;                            // 0x0001(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCanCauseTaskToFail;                               // 0x0002(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bMustFinish;                                       // 0x0003(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxBrainTask_Parallel_TaskSettings;

// ScriptStruct GbxAI.GpsTest
// 0x0008 (0x0060 - 0x0058)
struct FGpsTest : public FGpsScoringNode
{
public:
	uint8                                         Pad_58[0x8];                                       // 0x0058(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsTest;

// ScriptStruct GbxAI.GpsTest_GroupDistance
// 0x0018 (0x0078 - 0x0060)
struct FGpsTest_GroupDistance : public FGpsTest
{
public:
	uint8                                         Pad_60[0x18];                                      // 0x0060(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsTest_GroupDistance;

// ScriptStruct GbxAI.GbxBrainTaskSettings_Parallel
// 0x0018 (0x00E8 - 0x00D0)
struct FGbxBrainTaskSettings_Parallel final : public FGbxBrainTaskSettings_FlowControl
{
public:
	EGbxBrainTaskParallelMode                     Mode;                                              // 0x00D0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bWaitForAllTasks;                                  // 0x00D4(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D5[0x3];                                       // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGbxBrainTask_Parallel_TaskSettings> TaskParallelSettingsList;                     // 0x00D8(0x0010)(Edit, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxBrainTaskSettings_Parallel;

// ScriptStruct GbxAI.GbxBrainTask_Parallel
// 0x0000 (0x01C0 - 0x01C0)
struct FGbxBrainTask_Parallel final : public FGbxBrainTask_FlowControl
{
};
DUMPER7_ASSERTS_FGbxBrainTask_Parallel;

// ScriptStruct GbxAI.GpsTestSettings_GroupDistance
// 0x0050 (0x00D0 - 0x0080)
struct FGpsTestSettings_GroupDistance : public FGpsTestSettings
{
public:
	struct FGbxBinding_Float                      MaxDistance;                                       // 0x0080(0x0020)(Edit, NativeAccessSpecifierPublic)
	EGpsDistanceMode                              Mode;                                              // 0x00A0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxBinding_Int                        MinNearbyGroupSize;                                // 0x00A8(0x0020)(Edit, NativeAccessSpecifierPublic)
	bool                                          bUseMinNearbyGroupSize;                            // 0x00C8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsTestSettings_GroupDistance;

// ScriptStruct GbxAI.GpsTestSettings_FriendliesGroup
// 0x0008 (0x00D8 - 0x00D0)
struct FGpsTestSettings_FriendliesGroup final : public FGpsTestSettings_GroupDistance
{
public:
	bool                                          bIncludeOtherSpawnEncounters;                      // 0x00D0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsTestSettings_FriendliesGroup;

// ScriptStruct GbxAI.GbxBrainTask_Random_TaskSettings
// 0x0040 (0x0040 - 0x0000)
struct FGbxBrainTask_Random_TaskSettings final
{
public:
	struct FGbxParam                              Weight;                                            // 0x0000(0x0038)(Edit, NativeAccessSpecifierPublic)
	uint32                                        MaxRunCount;                                       // 0x0038(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseMaxRunCount;                                   // 0x003C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainTask_Random_TaskSettings;

// ScriptStruct GbxAI.GbxBrainTaskSettings_Random
// 0x0018 (0x00E8 - 0x00D0)
struct FGbxBrainTaskSettings_Random final : public FGbxBrainTaskSettings_Selector
{
public:
	bool                                          bUseCumulativeInverseWeight;                       // 0x00D0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ResetRunCountTime;                                 // 0x00D4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGbxBrainTask_Random_TaskSettings> TaskRandomSettingsList;                         // 0x00D8(0x0010)(Edit, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxBrainTaskSettings_Random;

// ScriptStruct GbxAI.GpsTestSettings_FlightNavReachable
// 0x0050 (0x00D0 - 0x0080)
struct FGpsTestSettings_FlightNavReachable final : public FGpsTestSettings
{
public:
	bool                                          bInherit;                                          // 0x0080(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxBinding_Actor                      Actor;                                             // 0x0088(0x0020)(Edit, NativeAccessSpecifierPublic)
	class UGbxFlightNavLayer*                     layer;                                             // 0x00A8(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxBinding_Float                      Radius;                                            // 0x00B0(0x0020)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGpsTestSettings_FlightNavReachable;

// ScriptStruct GbxAI.GbxBrainTask_Random_TaskState
// 0x0004 (0x0004 - 0x0000)
struct FGbxBrainTask_Random_TaskState final
{
public:
	uint32                                        ConsecutiveRunCount;                               // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxBrainTask_Random_TaskState;

// ScriptStruct GbxAI.GbxBrainTask_Random
// 0x0010 (0x01D8 - 0x01C8)
struct FGbxBrainTask_Random final : public FGbxBrainTask_Selector
{
public:
	TArray<struct FGbxBrainTask_Random_TaskState> TaskRandomStateList;                               // 0x01C8(0x0010)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxBrainTask_Random;

// ScriptStruct GbxAI.GbxBrainTaskSettings_Sequence
// 0x0010 (0x00E0 - 0x00D0)
struct FGbxBrainTaskSettings_Sequence final : public FGbxBrainTaskSettings_Selector
{
public:
	EGbxBrainTaskSequenceCanStartCheck            CanStartChecks;                                    // 0x00D0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCanBeInterrupted;                                 // 0x00D1(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D2[0x2];                                       // 0x00D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TOptional<int32>                              CanInterruptThroughTask;                           // 0x00D4(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainTaskSettings_Sequence;

// ScriptStruct GbxAI.GbxBrainTask_Sequence
// 0x0000 (0x01C8 - 0x01C8)
struct FGbxBrainTask_Sequence final : public FGbxBrainTask_Selector
{
};
DUMPER7_ASSERTS_FGbxBrainTask_Sequence;

// ScriptStruct GbxAI.GpsTestSettings_DistanceList
// 0x0050 (0x00D0 - 0x0080)
struct FGpsTestSettings_DistanceList : public FGpsTestSettings
{
public:
	int32                                         MaxItems;                                          // 0x0080(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bLimitItems;                                       // 0x0084(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxBinding_Float                      MinDistance;                                       // 0x0088(0x0020)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FGbxBinding_Float                      MaxDistance;                                       // 0x00A8(0x0020)(Edit, Protected, NativeAccessSpecifierProtected)
	EGpsDistanceListScore                         Preference;                                        // 0x00C8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EGpsDistanceMode                              Mode;                                              // 0x00CC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
};
DUMPER7_ASSERTS_FGpsTestSettings_DistanceList;

// ScriptStruct GbxAI.GpsTestSettings_Friendlies
// 0x0008 (0x00D8 - 0x00D0)
struct FGpsTestSettings_Friendlies final : public FGpsTestSettings_DistanceList
{
public:
	bool                                          bIncludeOtherSpawnEncounters;                      // 0x00D0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsTestSettings_Friendlies;

// ScriptStruct GbxAI.GbxBrainTask_StateMachine_TaskSettings
// 0x0008 (0x0008 - 0x0000)
struct FGbxBrainTask_StateMachine_TaskSettings final
{
public:
	int32                                         OnSuccess;                                         // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OnFailure;                                         // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxBrainTask_StateMachine_TaskSettings;

// ScriptStruct GbxAI.GbxBrainTaskSettings_StateMachine
// 0x0010 (0x00E0 - 0x00D0)
struct FGbxBrainTaskSettings_StateMachine final : public FGbxBrainTaskSettings_Selector
{
public:
	TArray<struct FGbxBrainTask_StateMachine_TaskSettings> TaskStateMachineSettingsList;             // 0x00D0(0x0010)(Edit, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxBrainTaskSettings_StateMachine;

// ScriptStruct GbxAI.GpsTestSettings_IsPlayer
// 0x0008 (0x0088 - 0x0080)
struct FGpsTestSettings_IsPlayer final : public FGpsTestSettings
{
public:
	bool                                          bAllowHumanPlayers;                                // 0x0080(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAllowPlayerBots;                                  // 0x0081(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAllowNonPlayers;                                  // 0x0082(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAllowNonCharacters;                               // 0x0083(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsTestSettings_IsPlayer;

// ScriptStruct GbxAI.GbxBrainTask_StateMachine_TaskState
// 0x0001 (0x0001 - 0x0000)
struct FGbxBrainTask_StateMachine_TaskState final
{
public:
	uint8                                         Pad_0[0x1];                                        // 0x0000(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainTask_StateMachine_TaskState;

// ScriptStruct GbxAI.GbxBrainTask_StateMachine
// 0x0010 (0x01D8 - 0x01C8)
struct FGbxBrainTask_StateMachine final : public FGbxBrainTask_Selector
{
public:
	uint8                                         Pad_1C8[0x10];                                     // 0x01C8(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainTask_StateMachine;

// ScriptStruct GbxAI.GpsTestSettings_GameplayTags
// 0x0048 (0x00C8 - 0x0080)
struct FGpsTestSettings_GameplayTags final : public FGpsTestSettings
{
public:
	struct FGameplayTagQuery                      GameplayTagQuery;                                  // 0x0080(0x0048)(Edit, Protected, NativeAccessSpecifierProtected)
};
DUMPER7_ASSERTS_FGpsTestSettings_GameplayTags;

// ScriptStruct GbxAI.GbxBrainTaskSettings_Tagged
// 0x0008 (0x0088 - 0x0080)
struct FGbxBrainTaskSettings_Tagged final : public FGbxBrainTaskSettings
{
public:
	struct FGameplayTag                           TaskTag;                                           // 0x0080(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxBrainTaskSettings_Tagged;

// ScriptStruct GbxAI.GbxBrainTask_Tagged
// 0x0008 (0x0270 - 0x0268)
struct FGbxBrainTask_Tagged final : public FGbxBrainTask_ExternalBase
{
public:
	uint8                                         Pad_268[0x8];                                      // 0x0268(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainTask_Tagged;

// ScriptStruct GbxAI.GpsTestSettings_FlightNavTrace
// 0x00F8 (0x0178 - 0x0080)
struct FGpsTestSettings_FlightNavTrace final : public FGpsTestSettings
{
public:
	struct FGbxBinding_Vector                     Origin;                                            // 0x0080(0x0098)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FGbxBinding_Float                      VerticalOffset;                                    // 0x0118(0x0020)(Edit, Protected, NativeAccessSpecifierProtected)
	EGpsTraceTestType                             HitOrMiss;                                         // 0x0138(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGpsFlightNav                          FlightNavData;                                     // 0x0140(0x0038)(Edit, Protected, NativeAccessSpecifierProtected)
};
DUMPER7_ASSERTS_FGpsTestSettings_FlightNavTrace;

// ScriptStruct GbxAI.GbxCondition_IsInCover
// 0x0000 (0x0010 - 0x0010)
struct FGbxCondition_IsInCover final : public FGbxConditionValueResolver
{
};
DUMPER7_ASSERTS_FGbxCondition_IsInCover;

// ScriptStruct GbxAI.GbxGlobalsAI
// 0x00F0 (0x0110 - 0x0020)
struct FGbxGlobalsAI : public FGbxGlobalDef
{
public:
	uint8                                         Pad_20[0x10];                                      // 0x0020(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	ECollisionChannel                             BulletSenseTraceChannel;                           // 0x0030(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AttackAggroTime;                                   // 0x0034(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TerritoryAggroTime;                                // 0x0038(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RecentlyAggroedTime;                               // 0x003C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxBrainTickTimeMs;                                // 0x0040(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              RestrictedToTerritoryAreaCondition;                // 0x0048(0x0038)(Edit, NativeAccessSpecifierPublic)
	EGbxTerritoryArea                             RestrictedToTerritoryArea;                         // 0x0080(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RestrictedToTerritoryTimeThreshold;                // 0x0084(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        MaxWeaponUsersPerTick;                             // 0x0088(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TimeToBestAccuracy;                                // 0x008C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DamagePercentToWorstAccuracy;                      // 0x0090(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DamagePercentDecayRate;                            // 0x0094(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AcceptableAngle;                                   // 0x0098(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CoveringFireTime;                                  // 0x009C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxParam                              DefaultLeadTarget;                                 // 0x00A0(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              DefaultFollowTarget;                               // 0x00D8(0x0038)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxGlobalsAI;

// ScriptStruct GbxAI.GpsTestSettings_IsCurrentTarget
// 0x0008 (0x0088 - 0x0080)
struct FGpsTestSettings_IsCurrentTarget final : public FGpsTestSettings
{
public:
	bool                                          bInvert;                                           // 0x0080(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsTestSettings_IsCurrentTarget;

// ScriptStruct GbxAI.GbxAIHeldFilter
// 0x000C (0x000C - 0x0000)
struct FGbxAIHeldFilter final
{
public:
	class FName                                   ID;                                                // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGbxAIHeldFilterType                          FindBy;                                            // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxAIHeldFilter;

// ScriptStruct GbxAI.GbxTargetingTestAgentData
// 0x0070 (0x0070 - 0x0000)
struct FGbxTargetingTestAgentData final
{
public:
	FGameDataHandleProperty_                      GbxActorDef;                                       // 0x0000(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 spawn;                                             // 0x0018(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 Goal;                                              // 0x0020(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 SpawnedActor;                                      // 0x0028(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_30[0x30];                                      // 0x0030(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bOverrideTeam;                                     // 0x0060(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   OverrideTeamName;                                  // 0x0064(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxTargetingTestAgentData;

// ScriptStruct GbxAI.GpsTestSettings_NavNear
// 0x0000 (0x0080 - 0x0080)
struct FGpsTestSettings_NavNear final : public FGpsTestSettings
{
};
DUMPER7_ASSERTS_FGpsTestSettings_NavNear;

// ScriptStruct GbxAI.GbxSenseConfig
// 0x001C (0x001C - 0x0000)
struct FGbxSenseConfig final
{
public:
	float                                         MaxAge;                                            // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SightRadius;                                       // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SightHalfAngle;                                    // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ProximityRadius;                                   // 0x000C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BulletRadius;                                      // 0x0010(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PredictionAge;                                     // 0x0014(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_18[0x1];                                       // 0x0018(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bSenseFriendly;                                    // 0x0019(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSenseNeutral;                                     // 0x001A(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSenseHostile;                                     // 0x001B(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxSenseConfig;

// ScriptStruct GbxAI.GbxSenseConfigDef
// 0x0050 (0x0068 - 0x0018)
struct FGbxSenseConfigDef final : public FGbxDef
{
public:
	struct FGbxSenseConfig                        BaseConfig;                                        // 0x0018(0x001C)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EGbxSense>                             DisabledSenses;                                    // 0x0038(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_48[0x20];                                      // 0x0048(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxSenseConfigDef;

// ScriptStruct GbxAI.GpsTestSettings_LineOfFire
// 0x0028 (0x00A8 - 0x0080)
struct FGpsTestSettings_LineOfFire final : public FGpsTestSettings
{
public:
	bool                                          bIsBlocker;                                        // 0x0080(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxBinding_Float                      BlockingRadius;                                    // 0x0088(0x0020)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGpsTestSettings_LineOfFire;

// ScriptStruct GbxAI.TargetChangeInfo
// 0x0018 (0x0018 - 0x0000)
struct alignas(0x08) FTargetChangeInfo final
{
public:
	uint8                                         Pad_0[0x18];                                       // 0x0000(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FTargetChangeInfo;

// ScriptStruct GbxAI.TargetLocationData
// 0x0038 (0x0038 - 0x0000)
struct FTargetLocationData final
{
public:
	struct FVector                                TargetLocation;                                    // 0x0000(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                TargetBoundsCenter;                                // 0x0018(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TargetBoundsRadius;                                // 0x0030(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TargetBoundsHalfHeight;                            // 0x0034(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FTargetLocationData;

// ScriptStruct GbxAI.GpsTestSettings_History
// 0x0000 (0x00D0 - 0x00D0)
struct FGpsTestSettings_History final : public FGpsTestSettings_DistanceList
{
};
DUMPER7_ASSERTS_FGpsTestSettings_History;

// ScriptStruct GbxAI.GbxTargetValueResolver
// 0x0000 (0x0008 - 0x0008)
struct FGbxTargetValueResolver final : public FAttributeValueResolver
{
};
DUMPER7_ASSERTS_FGbxTargetValueResolver;

// ScriptStruct GbxAI.GpsConditionSettings_Attribute
// 0x0038 (0x0078 - 0x0040)
struct FGpsConditionSettings_Attribute final : public FGpsConditionSettings
{
public:
	struct FGbxParam                              Param;                                             // 0x0040(0x0038)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGpsConditionSettings_Attribute;

// ScriptStruct GbxAI.GpsConditionSettings_IsFirstRun
// 0x0000 (0x0040 - 0x0040)
struct FGpsConditionSettings_IsFirstRun final : public FGpsConditionSettings
{
};
DUMPER7_ASSERTS_FGpsConditionSettings_IsFirstRun;

// ScriptStruct GbxAI.GpsConditionSettings_Ticket
// 0x0080 (0x00C0 - 0x0040)
struct FGpsConditionSettings_Ticket final : public FGpsConditionSettings
{
public:
	struct FGbxParam                              Value;                                             // 0x0040(0x0038)(Edit, NativeAccessSpecifierPrivate)
	class UGbxAITicketData*                       Ticket;                                            // 0x0078(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bOverrideTicketTarget;                             // 0x0080(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              TicketTargetOverride;                              // 0x0088(0x0038)(Edit, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGpsConditionSettings_Ticket;

// ScriptStruct GbxAI.GpsConditionSettings_Timer
// 0x0028 (0x0068 - 0x0040)
struct FGpsConditionSettings_Timer final : public FGpsConditionSettings
{
public:
	EGpsTimerMode                                 Mode;                                              // 0x0040(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxBinding_NumericRange               TimeRange;                                         // 0x0048(0x0020)(Edit, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGpsConditionSettings_Timer;

// ScriptStruct GbxAI.GpsFlow
// 0x0018 (0x0430 - 0x0418)
struct FGpsFlow : public FGpsResultsNode
{
public:
	uint8                                         Pad_418[0x18];                                     // 0x0418(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsFlow;

// ScriptStruct GbxAI.GpsFlow_Combine
// 0x0000 (0x0430 - 0x0430)
struct FGpsFlow_Combine : public FGpsFlow
{
};
DUMPER7_ASSERTS_FGpsFlow_Combine;

// ScriptStruct GbxAI.GpsFlow_Priority
// 0x0000 (0x0430 - 0x0430)
struct FGpsFlow_Priority final : public FGpsFlow
{
};
DUMPER7_ASSERTS_FGpsFlow_Priority;

// ScriptStruct GbxAI.GpsFlow_Root
// 0x0000 (0x0430 - 0x0430)
struct FGpsFlow_Root final : public FGpsFlow_Combine
{
};
DUMPER7_ASSERTS_FGpsFlow_Root;

// ScriptStruct GbxAI.GpsGenerator_Active
// 0x0000 (0x0418 - 0x0418)
struct FGpsGenerator_Active final : public FGpsGenerator
{
};
DUMPER7_ASSERTS_FGpsGenerator_Active;

// ScriptStruct GbxAI.GpsGenerator_Actors
// 0x0030 (0x0448 - 0x0418)
struct FGpsGenerator_Actors : public FGpsGenerator
{
public:
	uint8                                         Pad_418[0x30];                                     // 0x0418(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsGenerator_Actors;

// ScriptStruct GbxAI.GpsGenerator_Circle
// 0x0028 (0x0440 - 0x0418)
struct FGpsGenerator_Circle final : public FGpsGenerator
{
public:
	uint8                                         Pad_418[0x28];                                     // 0x0418(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsGenerator_Circle;

// ScriptStruct GbxAI.GpsGenerator_Grid
// 0x0040 (0x0458 - 0x0418)
struct FGpsGenerator_Grid final : public FGpsGenerator
{
public:
	uint8                                         Pad_418[0x40];                                     // 0x0418(0x0040)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsGenerator_Grid;

// ScriptStruct GbxAI.GpsGenerator_History
// 0x0008 (0x0420 - 0x0418)
struct FGpsGenerator_History final : public FGpsGenerator
{
public:
	uint8                                         Pad_418[0x8];                                      // 0x0418(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsGenerator_History;

// ScriptStruct GbxAI.GpsGeneratorSettings_Line
// 0x0160 (0x01E0 - 0x0080)
struct FGpsGeneratorSettings_Line final : public FGpsGeneratorSettings_Project
{
public:
	struct FGbxBinding_Vector                     Center;                                            // 0x0080(0x0098)(Edit, Protected, NativeAccessSpecifierProtected)
	bool                                          bUseTrace;                                         // 0x0118(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxBinding_Float                      PostTraceOffset;                                   // 0x0120(0x0020)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FGbxBinding_Float                      MaxLength;                                         // 0x0140(0x0020)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FGbxBinding_Rotator                    Rotation;                                          // 0x0160(0x0060)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FGbxBinding_Int                        NumPoints;                                         // 0x01C0(0x0020)(Edit, Protected, NativeAccessSpecifierProtected)
};
DUMPER7_ASSERTS_FGpsGeneratorSettings_Line;

// ScriptStruct GbxAI.GpsGenerator_Line
// 0x0040 (0x04A8 - 0x0468)
struct FGpsGenerator_Line final : public FGpsGenerator_Project
{
public:
	uint8                                         Pad_468[0x40];                                     // 0x0468(0x0040)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsGenerator_Line;

// ScriptStruct GbxAI.GpsGenerator_Point
// 0x0018 (0x0430 - 0x0418)
struct FGpsGenerator_Point final : public FGpsGenerator
{
public:
	uint8                                         Pad_418[0x18];                                     // 0x0418(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsGenerator_Point;

// ScriptStruct GbxAI.GpsGeneratorSettings_Random
// 0x0020 (0x02E0 - 0x02C0)
struct FGpsGeneratorSettings_Random final : public FGpsGeneratorSettings_Range
{
public:
	struct FGbxBinding_NumericRange               NumPoints;                                         // 0x02C0(0x0020)(Edit, Protected, NativeAccessSpecifierProtected)
};
DUMPER7_ASSERTS_FGpsGeneratorSettings_Random;

// ScriptStruct GbxAI.GpsGenerator_Random
// 0x0008 (0x0450 - 0x0448)
struct FGpsGenerator_Random final : public FGpsGenerator_Range
{
public:
	uint8                                         Pad_448[0x8];                                      // 0x0448(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsGenerator_Random;

// ScriptStruct GbxAI.GpsGenerator_Targetables
// 0x0000 (0x0448 - 0x0448)
struct FGpsGenerator_Targetables final : public FGpsGenerator_Actors
{
};
DUMPER7_ASSERTS_FGpsGenerator_Targetables;

// ScriptStruct GbxAI.GpsGenerator_TargetInfo
// 0x0390 (0x07A8 - 0x0418)
struct FGpsGenerator_TargetInfo final : public FGpsGenerator
{
public:
	uint8                                         Pad_418[0x390];                                    // 0x0418(0x0390)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsGenerator_TargetInfo;

// ScriptStruct GbxAI.GpsGenerator_Territory
// 0x0130 (0x0548 - 0x0418)
struct FGpsGenerator_Territory final : public FGpsGenerator
{
public:
	uint8                                         Pad_418[0x130];                                    // 0x0418(0x0130)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsGenerator_Territory;

// ScriptStruct GbxAI.GpsGenerator_Trace
// 0x0088 (0x04A0 - 0x0418)
struct FGpsGenerator_Trace final : public FGpsGenerator
{
public:
	uint8                                         Pad_418[0x88];                                     // 0x0418(0x0088)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsGenerator_Trace;

// ScriptStruct GbxAI.GpsModifierSettings_Noise
// 0x0028 (0x0088 - 0x0060)
struct FGpsModifierSettings_Noise final : public FGpsModifierSettings
{
public:
	EGpsModifierNoiseOffsetMode                   Mode;                                              // 0x0060(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxBinding_Float                      Radius;                                            // 0x0068(0x0020)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGpsModifierSettings_Noise;

// ScriptStruct GbxAI.GpsModifierSettings_Project
// 0x0170 (0x01D0 - 0x0060)
struct FGpsModifierSettings_Project final : public FGpsModifierSettings
{
public:
	EGpsProjectType                               ProjectType;                                       // 0x0060(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGpsTraceTestType                             HitOrMiss;                                         // 0x0061(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGpsTrace                              GeometryData;                                      // 0x0068(0x0040)(Edit, NativeAccessSpecifierPublic)
	struct FGpsNavMesh                            NavMeshData;                                       // 0x00A8(0x0040)(Edit, NativeAccessSpecifierPublic)
	struct FGpsFlightNav                          FlightNavData;                                     // 0x00E8(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxBinding_Float                      UpOffset;                                          // 0x0120(0x0020)(Edit, NativeAccessSpecifierPublic)
	struct FGbxBinding_Float                      DownOffset;                                        // 0x0140(0x0020)(Edit, NativeAccessSpecifierPublic)
	struct FGbxBinding_Float                      PostProjectOffset;                                 // 0x0160(0x0020)(Edit, NativeAccessSpecifierPublic)
	bool                                          bTestSurfaceNormal;                                // 0x0180(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxBinding_Float                      MinSurfaceAngle;                                   // 0x0188(0x0020)(Edit, NativeAccessSpecifierPublic)
	struct FGbxBinding_Float                      MaxSurfaceAngle;                                   // 0x01A8(0x0020)(Edit, NativeAccessSpecifierPublic)
	bool                                          bTempModifier;                                     // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C9[0x7];                                      // 0x01C9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsModifierSettings_Project;

// ScriptStruct GbxAI.GpsModifierSettings_Transform
// 0x0228 (0x0288 - 0x0060)
struct FGpsModifierSettings_Transform final : public FGpsModifierSettings
{
public:
	struct FGbxBinding_Vector                     Origin;                                            // 0x0060(0x0098)(Edit, NativeAccessSpecifierPublic)
	struct FGbxBinding_Vector                     Translate;                                         // 0x00F8(0x0098)(Edit, NativeAccessSpecifierPublic)
	struct FGbxBinding_Rotator                    Rotate;                                            // 0x0190(0x0060)(Edit, NativeAccessSpecifierPublic)
	struct FGbxBinding_Vector                     scale;                                             // 0x01F0(0x0098)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGpsModifierSettings_Transform;

// ScriptStruct GbxAI.GpsQuery
// 0x0AB0 (0x0BE0 - 0x0130)
struct FGpsQuery final : public FGbxGraphState
{
public:
	uint8                                         Pad_130[0xAB0];                                    // 0x0130(0x0AB0)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsQuery;

// ScriptStruct GbxAI.GpsTest_Aggro
// 0x0010 (0x0070 - 0x0060)
struct FGpsTest_Aggro final : public FGpsTest
{
public:
	uint8                                         Pad_60[0x10];                                      // 0x0060(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsTest_Aggro;

// ScriptStruct GbxAI.GpsTest_Angle
// 0x0038 (0x0098 - 0x0060)
struct FGpsTest_Angle final : public FGpsTest
{
public:
	uint8                                         Pad_60[0x38];                                      // 0x0060(0x0038)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsTest_Angle;

// ScriptStruct GbxAI.GpsTest_Attackers
// 0x0010 (0x0070 - 0x0060)
struct FGpsTest_Attackers final : public FGpsTest
{
public:
	uint8                                         Pad_60[0x10];                                      // 0x0060(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsTest_Attackers;

// ScriptStruct GbxAI.GpsTest_AttitudeTowards
// 0x0010 (0x0070 - 0x0060)
struct FGpsTest_AttitudeTowards final : public FGpsTest
{
public:
	uint8                                         Pad_60[0x10];                                      // 0x0060(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsTest_AttitudeTowards;

// ScriptStruct GbxAI.GpsTest_CoverTrace
// 0x00A0 (0x0100 - 0x0060)
struct FGpsTest_CoverTrace final : public FGpsTest
{
public:
	uint8                                         Pad_60[0xA0];                                      // 0x0060(0x00A0)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsTest_CoverTrace;

// ScriptStruct GbxAI.GpsTestSettings_Distance
// 0x0108 (0x0188 - 0x0080)
struct FGpsTestSettings_Distance final : public FGpsTestSettings
{
public:
	struct FGbxBinding_Vector                     Origin;                                            // 0x0080(0x0098)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FGbxBinding_Float                      MinDistance;                                       // 0x0118(0x0020)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FGbxBinding_Float                      MaxDistance;                                       // 0x0138(0x0020)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FGbxBinding_Float                      CustomDistance;                                    // 0x0158(0x0020)(Edit, Protected, NativeAccessSpecifierProtected)
	EGpsDistanceScore                             Preference;                                        // 0x0178(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EGpsDistanceMode                              Mode;                                              // 0x017C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bClampToDistanceRange;                             // 0x0180(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsTestSettings_Distance;

// ScriptStruct GbxAI.GpsTest_Distance
// 0x0028 (0x0088 - 0x0060)
struct FGpsTest_Distance final : public FGpsTest
{
public:
	uint8                                         Pad_60[0x28];                                      // 0x0060(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsTest_Distance;

// ScriptStruct GbxAI.GpsTest_DistanceList
// 0x0018 (0x0078 - 0x0060)
struct FGpsTest_DistanceList : public FGpsTest
{
public:
	uint8                                         Pad_60[0x18];                                      // 0x0060(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsTest_DistanceList;

// ScriptStruct GbxAI.GpsTest_EffectArea
// 0x0010 (0x0070 - 0x0060)
struct FGpsTest_EffectArea final : public FGpsTest
{
public:
	uint8                                         Pad_60[0x10];                                      // 0x0060(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsTest_EffectArea;

// ScriptStruct GbxAI.GpsTestSettings_Enemies
// 0x00A0 (0x0170 - 0x00D0)
struct FGpsTestSettings_Enemies final : public FGpsTestSettings_DistanceList
{
public:
	struct FGbxParam                              SenseAgeMax;                                       // 0x00D0(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxRelativeLocation                   RelativeLocation;                                  // 0x0108(0x0060)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bUseRelativeLocation;                              // 0x0168(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsTestSettings_Enemies;

// ScriptStruct GbxAI.GpsTest_Enemies
// 0x0000 (0x0078 - 0x0078)
struct FGpsTest_Enemies final : public FGpsTest_DistanceList
{
};
DUMPER7_ASSERTS_FGpsTest_Enemies;

// ScriptStruct GbxAI.GpsTestSettings_EnemiesGroup
// 0x00A0 (0x0170 - 0x00D0)
struct FGpsTestSettings_EnemiesGroup final : public FGpsTestSettings_GroupDistance
{
public:
	struct FGbxParam                              SenseAgeMax;                                       // 0x00D0(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxRelativeLocation                   RelativeLocation;                                  // 0x0108(0x0060)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bUseRelativeLocation;                              // 0x0168(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsTestSettings_EnemiesGroup;

// ScriptStruct GbxAI.GpsTest_EnemiesGroup
// 0x0000 (0x0078 - 0x0078)
struct FGpsTest_EnemiesGroup final : public FGpsTest_GroupDistance
{
};
DUMPER7_ASSERTS_FGpsTest_EnemiesGroup;

// ScriptStruct GbxAI.GpsTest_FlightNavNear
// 0x0010 (0x0070 - 0x0060)
struct FGpsTest_FlightNavNear final : public FGpsTest
{
public:
	uint8                                         Pad_60[0x10];                                      // 0x0060(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsTest_FlightNavNear;

// ScriptStruct GbxAI.GpsTest_FlightNavReachable
// 0x0010 (0x0070 - 0x0060)
struct FGpsTest_FlightNavReachable final : public FGpsTest
{
public:
	uint8                                         Pad_60[0x10];                                      // 0x0060(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsTest_FlightNavReachable;

// ScriptStruct GbxAI.GpsTest_FlightNavTrace
// 0x0050 (0x00B0 - 0x0060)
struct FGpsTest_FlightNavTrace final : public FGpsTest
{
public:
	uint8                                         Pad_60[0x50];                                      // 0x0060(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsTest_FlightNavTrace;

// ScriptStruct GbxAI.GpsTest_Friendlies
// 0x0000 (0x0078 - 0x0078)
struct FGpsTest_Friendlies final : public FGpsTest_DistanceList
{
};
DUMPER7_ASSERTS_FGpsTest_Friendlies;

// ScriptStruct GbxAI.GpsTest_FriendliesGroup
// 0x0000 (0x0078 - 0x0078)
struct FGpsTest_FriendliesGroup final : public FGpsTest_GroupDistance
{
};
DUMPER7_ASSERTS_FGpsTest_FriendliesGroup;

// ScriptStruct GbxAI.GpsTest_GameplayTags
// 0x0000 (0x0060 - 0x0060)
struct FGpsTest_GameplayTags final : public FGpsTest
{
};
DUMPER7_ASSERTS_FGpsTest_GameplayTags;

// ScriptStruct GbxAI.GpsTest_History
// 0x0000 (0x0078 - 0x0078)
struct FGpsTest_History final : public FGpsTest_DistanceList
{
};
DUMPER7_ASSERTS_FGpsTest_History;

// ScriptStruct GbxAI.GpsTest_IsCurrentTarget
// 0x0010 (0x0070 - 0x0060)
struct FGpsTest_IsCurrentTarget final : public FGpsTest
{
public:
	uint8                                         Pad_60[0x10];                                      // 0x0060(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsTest_IsCurrentTarget;

// ScriptStruct GbxAI.GpsTest_IsPlayer
// 0x0000 (0x0060 - 0x0060)
struct FGpsTest_IsPlayer final : public FGpsTest
{
};
DUMPER7_ASSERTS_FGpsTest_IsPlayer;

// ScriptStruct GbxAI.GpsTest_LineOfFire
// 0x0018 (0x0078 - 0x0060)
struct FGpsTest_LineOfFire final : public FGpsTest
{
public:
	uint8                                         Pad_60[0x18];                                      // 0x0060(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsTest_LineOfFire;

// ScriptStruct GbxAI.GpsTest_MatchingActor
// 0x0008 (0x0068 - 0x0060)
struct FGpsTest_MatchingActor final : public FGpsTest
{
public:
	uint8                                         Pad_60[0x8];                                       // 0x0060(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsTest_MatchingActor;

// ScriptStruct GbxAI.GpsTest_NavMaterial
// 0x0008 (0x0068 - 0x0060)
struct FGpsTest_NavMaterial final : public FGpsTest
{
public:
	uint8                                         Pad_60[0x8];                                       // 0x0060(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsTest_NavMaterial;

// ScriptStruct GbxAI.GpsTest_NavNear
// 0x0000 (0x0060 - 0x0060)
struct FGpsTest_NavNear final : public FGpsTest
{
};
DUMPER7_ASSERTS_FGpsTest_NavNear;

// ScriptStruct GbxAI.GpsTest_NavNearArc
// 0x0098 (0x00F8 - 0x0060)
struct FGpsTest_NavNearArc final : public FGpsTest
{
public:
	uint8                                         Pad_60[0x98];                                      // 0x0060(0x0098)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsTest_NavNearArc;

// ScriptStruct GbxAI.GpsTestSettings_NavReachable
// 0x0088 (0x0108 - 0x0080)
struct FGpsTestSettings_NavReachable final : public FGpsTestSettings
{
public:
	struct FGpsNavMesh                            NavMeshData;                                       // 0x0080(0x0040)(Edit, NativeAccessSpecifierPrivate)
	EGpsNavDistancePreference                     Preference;                                        // 0x00C0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bCheckPathDistance;                                // 0x00C4(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_C5[0x3];                                       // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxBinding_Float                      MinDistance;                                       // 0x00C8(0x0020)(Edit, NativeAccessSpecifierPrivate)
	struct FGbxBinding_Float                      MaxDistance;                                       // 0x00E8(0x0020)(Edit, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGpsTestSettings_NavReachable;

// ScriptStruct GbxAI.GpsTest_NavReachable
// 0x0018 (0x0078 - 0x0060)
struct FGpsTest_NavReachable final : public FGpsTest
{
public:
	uint8                                         Pad_60[0x18];                                      // 0x0060(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsTest_NavReachable;

// ScriptStruct GbxAI.GpsTestSettings_NavTrace
// 0x0120 (0x01A0 - 0x0080)
struct FGpsTestSettings_NavTrace final : public FGpsTestSettings
{
public:
	struct FGbxBinding_Vector                     Origin;                                            // 0x0080(0x0098)(Edit, Protected, NativeAccessSpecifierProtected)
	EGpsTraceTestType                             HitOrMiss;                                         // 0x0118(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGpsNavMesh                            NavMeshData;                                       // 0x0120(0x0040)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FGbxBinding_Float                      ProjectUpOffset;                                   // 0x0160(0x0020)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FGbxBinding_Float                      ProjectDownOffset;                                 // 0x0180(0x0020)(Edit, Protected, NativeAccessSpecifierProtected)
};
DUMPER7_ASSERTS_FGpsTestSettings_NavTrace;

// ScriptStruct GbxAI.GpsTest_NavTrace
// 0x0048 (0x00A8 - 0x0060)
struct FGpsTest_NavTrace final : public FGpsTest
{
public:
	uint8                                         Pad_60[0x48];                                      // 0x0060(0x0048)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsTest_NavTrace;

// ScriptStruct GbxAI.GpsTestSettings_NodeChain
// 0x0040 (0x00C0 - 0x0080)
struct FGpsTestSettings_NodeChain final : public FGpsTestSettings
{
public:
	struct FGbxBinding_Actor                      StartNode;                                         // 0x0080(0x0020)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FGbxBinding_Actor                      GoalNode;                                          // 0x00A0(0x0020)(Edit, Protected, NativeAccessSpecifierProtected)
};
DUMPER7_ASSERTS_FGpsTestSettings_NodeChain;

// ScriptStruct GbxAI.GpsTest_NodeChain
// 0x0010 (0x0070 - 0x0060)
struct FGpsTest_NodeChain final : public FGpsTest
{
public:
	uint8                                         Pad_60[0x10];                                      // 0x0060(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsTest_NodeChain;

// ScriptStruct GbxAI.GpsTestSettings_Nodes
// 0x0040 (0x00C0 - 0x0080)
struct FGpsTestSettings_Nodes final : public FGpsTestSettings
{
public:
	struct FGbxBinding_Actor                      StartNode;                                         // 0x0080(0x0020)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FGbxBinding_Actor                      GoalNode;                                          // 0x00A0(0x0020)(Edit, Protected, NativeAccessSpecifierProtected)
};
DUMPER7_ASSERTS_FGpsTestSettings_Nodes;

// ScriptStruct GbxAI.GpsTest_Nodes
// 0x00A0 (0x0100 - 0x0060)
struct FGpsTest_Nodes final : public FGpsTest
{
public:
	uint8                                         Pad_60[0xA0];                                      // 0x0060(0x00A0)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsTest_Nodes;

// ScriptStruct GbxAI.GpsTestSettings_OtherNavGoals
// 0x0000 (0x00D0 - 0x00D0)
struct FGpsTestSettings_OtherNavGoals final : public FGpsTestSettings_DistanceList
{
};
DUMPER7_ASSERTS_FGpsTestSettings_OtherNavGoals;

// ScriptStruct GbxAI.GpsTest_OtherNavGoals
// 0x0000 (0x0078 - 0x0078)
struct FGpsTest_OtherNavGoals final : public FGpsTest_DistanceList
{
};
DUMPER7_ASSERTS_FGpsTest_OtherNavGoals;

// ScriptStruct GbxAI.GpsTest_PlayerDamaging
// 0x0008 (0x0068 - 0x0060)
struct FGpsTest_PlayerDamaging final : public FGpsTest
{
public:
	uint8                                         Pad_60[0x8];                                       // 0x0060(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsTest_PlayerDamaging;

// ScriptStruct GbxAI.GpsTestSettings_Sensed
// 0x0030 (0x00B0 - 0x0080)
struct FGpsTestSettings_Sensed final : public FGpsTestSettings
{
public:
	TArray<EGbxSense>                             Senses;                                            // 0x0080(0x0010)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	struct FGbxBinding_Float                      TimeSinceSensedMax;                                // 0x0090(0x0020)(Edit, Protected, NativeAccessSpecifierProtected)
};
DUMPER7_ASSERTS_FGpsTestSettings_Sensed;

// ScriptStruct GbxAI.GpsTest_Sensed
// 0x0008 (0x0068 - 0x0060)
struct FGpsTest_Sensed final : public FGpsTest
{
public:
	uint8                                         Pad_60[0x8];                                       // 0x0060(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsTest_Sensed;

// ScriptStruct GbxAI.GpsTestSettings_SensedDistanceOverTime
// 0x0070 (0x00F0 - 0x0080)
struct FGpsTestSettings_SensedDistanceOverTime final : public FGpsTestSettings
{
public:
	bool                                          bUseTerritory;                                     // 0x0080(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxBinding_Float                      MinDistance;                                       // 0x0088(0x0020)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FGbxBinding_Float                      MaxDistance;                                       // 0x00A8(0x0020)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FGbxBinding_Float                      CustomDistance;                                    // 0x00C8(0x0020)(Edit, Protected, NativeAccessSpecifierProtected)
	EGpsSensedDistanceScore                       Preference;                                        // 0x00E8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsTestSettings_SensedDistanceOverTime;

// ScriptStruct GbxAI.GpsTest_SensedDistanceOverTime
// 0x0010 (0x0070 - 0x0060)
struct FGpsTest_SensedDistanceOverTime final : public FGpsTest
{
public:
	uint8                                         Pad_60[0x10];                                      // 0x0060(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsTest_SensedDistanceOverTime;

// ScriptStruct GbxAI.GpsTest_Targeters
// 0x0010 (0x0070 - 0x0060)
struct FGpsTest_Targeters final : public FGpsTest
{
public:
	uint8                                         Pad_60[0x10];                                      // 0x0060(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsTest_Targeters;

// ScriptStruct GbxAI.GpsTestSettings_TargetScoringBoost
// 0x0020 (0x00A0 - 0x0080)
struct FGpsTestSettings_TargetScoringBoost final : public FGpsTestSettings
{
public:
	float                                         ReduceExtreme;                                     // 0x0080(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReduceModerate;                                    // 0x0084(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReduceLight;                                       // 0x0088(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         NoBoost;                                           // 0x008C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AmplifyLight;                                      // 0x0090(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AmplifyModerate;                                   // 0x0094(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AmplifyExtreme;                                    // 0x0098(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsTestSettings_TargetScoringBoost;

// ScriptStruct GbxAI.GpsTest_TargetScoringBoost
// 0x0000 (0x0060 - 0x0060)
struct FGpsTest_TargetScoringBoost final : public FGpsTest
{
};
DUMPER7_ASSERTS_FGpsTest_TargetScoringBoost;

// ScriptStruct GbxAI.GpsTestSettings_Territory
// 0x0028 (0x00A8 - 0x0080)
struct FGpsTestSettings_Territory final : public FGpsTestSettings
{
public:
	struct FGbxBinding_Actor                      TerritoryProvider;                                 // 0x0080(0x0020)(Edit, NativeAccessSpecifierPublic)
	EGbxTerritoryArea                             TerritoryArea;                                     // 0x00A0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bWithinTerritory;                                  // 0x00A1(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A2[0x6];                                       // 0x00A2(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsTestSettings_Territory;

// ScriptStruct GbxAI.GpsTest_Territory
// 0x00D0 (0x0130 - 0x0060)
struct FGpsTest_Territory final : public FGpsTest
{
public:
	uint8                                         Pad_60[0xD0];                                      // 0x0060(0x00D0)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsTest_Territory;

// ScriptStruct GbxAI.GpsTestSettings_Ticket
// 0x0030 (0x00B0 - 0x0080)
struct FGpsTestSettings_Ticket final : public FGpsTestSettings
{
public:
	class UGbxAITicketData*                       Ticket;                                            // 0x0080(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGbxBinding_Float                      TicketValue;                                       // 0x0088(0x0020)(Edit, Protected, NativeAccessSpecifierProtected)
	EGbxAITicketHoldType                          HoldType;                                          // 0x00A8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bPassTestIfHoldingAlready;                         // 0x00A9(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EGbxAITicketInterruptCondition                ReserveInterruptCondition;                         // 0x00AA(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_AB[0x5];                                       // 0x00AB(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsTestSettings_Ticket;

// ScriptStruct GbxAI.GpsTest_Ticket
// 0x0008 (0x0068 - 0x0060)
struct FGpsTest_Ticket final : public FGpsTest
{
public:
	uint8                                         Pad_60[0x8];                                       // 0x0060(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsTest_Ticket;

// ScriptStruct GbxAI.GpsTestSettings_Trace
// 0x0120 (0x01A0 - 0x0080)
struct FGpsTestSettings_Trace : public FGpsTestSettings
{
public:
	struct FGbxBinding_Vector                     Origin;                                            // 0x0080(0x0098)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FGbxBinding_Float                      OriginHeightOffset;                                // 0x0118(0x0020)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FGbxBinding_Float                      PointHeightOffset;                                 // 0x0138(0x0020)(Edit, Protected, NativeAccessSpecifierProtected)
	EGpsTraceTestType                             HitOrMiss;                                         // 0x0158(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGpsTrace                              TraceParameters;                                   // 0x0160(0x0040)(Edit, AdvancedDisplay, Protected, NativeAccessSpecifierProtected)
};
DUMPER7_ASSERTS_FGpsTestSettings_Trace;

// ScriptStruct GbxAI.GpsTest_Trace
// 0x0078 (0x00D8 - 0x0060)
struct FGpsTest_Trace : public FGpsTest
{
public:
	uint8                                         Pad_60[0x78];                                      // 0x0060(0x0078)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsTest_Trace;

// ScriptStruct GbxAI.GpsTestSettings_TraceArc
// 0x0080 (0x0220 - 0x01A0)
struct FGpsTestSettings_TraceArc final : public FGpsTestSettings_Trace
{
public:
	struct FGbxBinding_TrajectoryOptions          TrajectoryOptions;                                 // 0x01A0(0x0060)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FGbxBinding_Int                        Segments;                                          // 0x0200(0x0020)(Edit, Protected, NativeAccessSpecifierProtected)
};
DUMPER7_ASSERTS_FGpsTestSettings_TraceArc;

// ScriptStruct GbxAI.GpsTest_TraceArc
// 0x0050 (0x0128 - 0x00D8)
struct FGpsTest_TraceArc final : public FGpsTest_Trace
{
public:
	uint8                                         Pad_D8[0x50];                                      // 0x00D8(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsTest_TraceArc;

// ScriptStruct GbxAI.GpsTraceConditionalPointHeightOffset
// 0x0040 (0x0040 - 0x0000)
struct FGpsTraceConditionalPointHeightOffset final
{
public:
	struct FGbxBinding_Bool                       Condition;                                         // 0x0000(0x0020)(Edit, NativeAccessSpecifierPublic)
	struct FGbxBinding_Float                      PointHeightOffset;                                 // 0x0020(0x0020)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGpsTraceConditionalPointHeightOffset;

// ScriptStruct GbxAI.GpsTestSettings_TraceList
// 0x0088 (0x0108 - 0x0080)
struct FGpsTestSettings_TraceList : public FGpsTestSettings
{
public:
	int32                                         MaxItems;                                          // 0x0080(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bLimitItems;                                       // 0x0084(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxBinding_Float                      PointHeightOffset;                                 // 0x0088(0x0020)(Edit, Protected, NativeAccessSpecifierProtected)
	bool                                          bOverridePointHeightOffset;                        // 0x00A8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGpsTraceConditionalPointHeightOffset> ConditionalPointHeightOffsets;              // 0x00B0(0x0010)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	EGpsTraceTestType                             HitOrMiss;                                         // 0x00C0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EGpsTraceListScore                            ScoreType;                                         // 0x00C1(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EGpsTraceListFilter                           PassRequirement;                                   // 0x00C2(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_C3[0x1];                                       // 0x00C3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         NumPassPercent;                                    // 0x00C4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGpsTrace                              TraceParameters;                                   // 0x00C8(0x0040)(Edit, AdvancedDisplay, Protected, NativeAccessSpecifierProtected)
};
DUMPER7_ASSERTS_FGpsTestSettings_TraceList;

// ScriptStruct GbxAI.GpsTest_TraceList
// 0x0078 (0x00D8 - 0x0060)
struct FGpsTest_TraceList : public FGpsTest
{
public:
	uint8                                         Pad_60[0x78];                                      // 0x0060(0x0078)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsTest_TraceList;

// ScriptStruct GbxAI.GpsTestSettings_TracePerceivedEnemies
// 0x0058 (0x0160 - 0x0108)
struct FGpsTestSettings_TracePerceivedEnemies final : public FGpsTestSettings_TraceList
{
public:
	struct FGbxParam                              SenseAgeMax;                                       // 0x0108(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxBinding_Bool                       TracePlayersOnly;                                  // 0x0140(0x0020)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGpsTestSettings_TracePerceivedEnemies;

// ScriptStruct GbxAI.GpsTest_TracePerceivedEnemies
// 0x0008 (0x00E0 - 0x00D8)
struct FGpsTest_TracePerceivedEnemies final : public FGpsTest_TraceList
{
public:
	uint8                                         Pad_D8[0x8];                                       // 0x00D8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsTest_TracePerceivedEnemies;

// ScriptStruct GbxAI.GbxTargetInfo
// 0x0030 (0x0030 - 0x0000)
struct alignas(0x08) FGbxTargetInfo final
{
public:
	uint8                                         Pad_0[0x30];                                       // 0x0000(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxTargetInfo;

// ScriptStruct GbxAI.TargetInfoRef
// 0x0018 (0x0018 - 0x0000)
struct alignas(0x08) FTargetInfoRef final
{
public:
	uint8                                         Pad_0[0x18];                                       // 0x0000(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FTargetInfoRef;

}

