#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GbxDynamicWind

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "GbxDynamicWind_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"


namespace SDK
{

// Class GbxDynamicWind.GbxWindActor
// 0x0010 (0x03A0 - 0x0390)
class AGbxWindActor final : public AActor
{
public:
	class UGbxWindComponent*                      WindComponent;                                     // 0x0390(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UNiagaraComponent*                      NiagaraComponent;                                  // 0x0398(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxWindActor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxWindActor")
	}
	static class AGbxWindActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGbxWindActor>();
	}
};
DUMPER7_ASSERTS_AGbxWindActor;

// Class GbxDynamicWind.GbxWindComponent
// 0x0090 (0x0340 - 0x02B0)
class UGbxWindComponent final : public USceneComponent
{
public:
	struct FGbxWindGridDimension                  GridDimensions;                                    // 0x02A8(0x0028)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FGbxWindTurbulenceSettings             Turbulence;                                        // 0x02D0(0x000C)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bUseGlobalWindOverride;                            // 0x02DC(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2DD[0x3];                                      // 0x02DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector3f                              GlobalWind;                                        // 0x02E0(0x000C)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   WeatherNiagaraParamCollection_WindName;            // 0x02EC(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2F4[0x4];                                      // 0x02F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraParameterCollection*            WeatherNiagaraParamCollection;                     // 0x02F8(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextureRenderTargetVolume*             VelocityRenderTarget;                              // 0x0300(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextureRenderTargetVolume*             VelocityHistoryRenderTarget;                       // 0x0308(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialParameterCollection*           WindMaterialParamCollection;                       // 0x0310(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   WindMaterialParamCollection_OriginName;            // 0x0318(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   WindMaterialParamCollection_PreviousFrameOriginName; // 0x0320(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   WindMaterialParamCollection_ExtentsName;           // 0x0328(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UNiagaraParameterCollectionInstance*    NiagaraParameterCollection;                        // 0x0330(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_338[0x8];                                      // 0x0338(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void UpdateGlobalWind(const struct FVector3f& Wind);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxWindComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxWindComponent")
	}
	static class UGbxWindComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxWindComponent>();
	}
};
DUMPER7_ASSERTS_UGbxWindComponent;

// Class GbxDynamicWind.GbxWindProjectSettings
// 0x0008 (0x0030 - 0x0028)
class UGbxWindProjectSettings final : public UObject
{
public:
	bool                                          bKillWind;                                         // 0x0028(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         WindGridSizeMultiplier;                            // 0x002C(0x0004)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxWindProjectSettings")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxWindProjectSettings")
	}
	static class UGbxWindProjectSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxWindProjectSettings>();
	}
};
DUMPER7_ASSERTS_UGbxWindProjectSettings;

// Class GbxDynamicWind.GbxWindSourceComponentBase
// 0x0000 (0x0600 - 0x0600)
class UGbxWindSourceComponentBase : public UPrimitiveComponent
{
public:
	struct FColor                                 ShapeColor;                                        // 0x05F8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bDrawOnlyIfSelected : 1;                           // 0x05FC(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_5FD[0x3];                                      // 0x05FD(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxWindSourceComponentBase")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxWindSourceComponentBase")
	}
	static class UGbxWindSourceComponentBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxWindSourceComponentBase>();
	}
};
DUMPER7_ASSERTS_UGbxWindSourceComponentBase;

// Class GbxDynamicWind.GbxWindSphereSource
// 0x0008 (0x0398 - 0x0390)
class AGbxWindSphereSource final : public AActor
{
public:
	class UGbxWindSphereSourceComponent*          SphereSource;                                      // 0x0390(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxWindSphereSource")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxWindSphereSource")
	}
	static class AGbxWindSphereSource* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGbxWindSphereSource>();
	}
};
DUMPER7_ASSERTS_AGbxWindSphereSource;

// Class GbxDynamicWind.GbxWindSphereSourceComponent
// 0x0010 (0x0610 - 0x0600)
class UGbxWindSphereSourceComponent final : public UGbxWindSourceComponentBase
{
public:
	float                                         SourceRadius;                                      // 0x0600(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RadialForceAmplitude;                              // 0x0604(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DirectionalForceAmplitude;                         // 0x0608(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_60C[0x4];                                      // 0x060C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxWindSphereSourceComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxWindSphereSourceComponent")
	}
	static class UGbxWindSphereSourceComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxWindSphereSourceComponent>();
	}
};
DUMPER7_ASSERTS_UGbxWindSphereSourceComponent;

// Class GbxDynamicWind.GbxWindSubsystem
// 0x0018 (0x0058 - 0x0040)
class UGbxWindSubsystem final : public UTickableWorldSubsystem
{
public:
	uint8                                         Pad_40[0x18];                                      // 0x0040(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static void AddGbxWindRadialImpulse(class UObject* WorldContextObject, const struct FVector& WorldPosition, float Radius, const struct FVector& ForceDirection, float ForceStrength);

	void RegisterGbxWindSphereSource(class UGbxWindSphereSourceComponent* SphereSource);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxWindSubsystem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxWindSubsystem")
	}
	static class UGbxWindSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxWindSubsystem>();
	}
};
DUMPER7_ASSERTS_UGbxWindSubsystem;

}

