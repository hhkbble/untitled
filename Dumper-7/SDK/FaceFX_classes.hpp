#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FaceFX

#include "Basic.hpp"

#include "FaceFX_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "MovieScene_classes.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// Class FaceFX.FaceFXAsset
// 0x0000 (0x0028 - 0x0028)
class UFaceFXAsset : public UObject
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("FaceFXAsset")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"FaceFXAsset")
	}
	static class UFaceFXAsset* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFaceFXAsset>();
	}
};
DUMPER7_ASSERTS_UFaceFXAsset;

// Class FaceFX.FaceFXActor
// 0x0058 (0x0080 - 0x0028)
class UFaceFXActor final : public UFaceFXAsset
{
public:
	TArray<struct FFaceFXActorData>               PlatformData;                                      // 0x0028(0x0010)(ZeroConstructor, Deprecated, NativeAccessSpecifierPrivate)
	struct FFaceFXActorData                       ActorData;                                         // 0x0038(0x0030)(Edit, DisableEditOnTemplate, EditConst, NativeAccessSpecifierPrivate)
	TArray<class UFaceFXAnim*>                    Animations;                                        // 0x0068(0x0010)(Edit, ZeroConstructor, DisableEditOnTemplate, NativeAccessSpecifierPrivate)
	EFaceFXActorBlendMode                         BlendMode;                                         // 0x0078(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("FaceFXActor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"FaceFXActor")
	}
	static class UFaceFXActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFaceFXActor>();
	}
};
DUMPER7_ASSERTS_UFaceFXActor;

// Class FaceFX.FaceFXAnim
// 0x00F8 (0x0120 - 0x0028)
class UFaceFXAnim final : public UFaceFXAsset
{
public:
	TArray<struct FFaceFXAnimData>                PlatformData;                                      // 0x0028(0x0010)(ZeroConstructor, Deprecated, NativeAccessSpecifierPrivate)
	struct FFaceFXAnimData                        AnimData;                                          // 0x0038(0x0010)(Edit, DisableEditOnTemplate, EditConst, NativeAccessSpecifierPrivate)
	struct FFaceFXAnimId                          ID;                                                // 0x0048(0x0010)(Edit, DisableEditOnTemplate, NoDestructor, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class USoundWave>              Audio;                                             // 0x0058(0x0028)(Edit, DisableEditOnTemplate, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UObject>                 AudioAkEvent;                                      // 0x0080(0x0028)(Edit, DisableEditOnTemplate, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UObject>                 AudioAkEventStop;                                  // 0x00A8(0x0028)(Edit, DisableEditOnTemplate, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UObject>                 AudioAkEventPause;                                 // 0x00D0(0x0028)(Edit, DisableEditOnTemplate, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UObject>                 AudioAkEventResume;                                // 0x00F8(0x0028)(Edit, DisableEditOnTemplate, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("FaceFXAnim")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"FaceFXAnim")
	}
	static class UFaceFXAnim* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFaceFXAnim>();
	}
};
DUMPER7_ASSERTS_UFaceFXAnim;

// Class FaceFX.FaceFXAnimationSection
// 0x0058 (0x0150 - 0x00F8)
class UFaceFXAnimationSection final : public UMovieSceneSection
{
public:
	struct FFaceFXSkelMeshComponentId             SkelMeshComponentId;                               // 0x00F8(0x000C)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FFaceFXAnimId                          AnimationId;                                       // 0x0104(0x0010)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UFaceFXAnim>             Animation;                                         // 0x0118(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         StartOffset;                                       // 0x0140(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         EndOffset;                                         // 0x0144(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         bIsAnimationDurationLoaded : 1;                    // 0x0148(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate))
	uint8                                         Pad_149[0x3];                                      // 0x0149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AnimationDuration;                                 // 0x014C(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("FaceFXAnimationSection")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"FaceFXAnimationSection")
	}
	static class UFaceFXAnimationSection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFaceFXAnimationSection>();
	}
};
DUMPER7_ASSERTS_UFaceFXAnimationSection;

// Class FaceFX.FaceFXAnimationTrack
// 0x0018 (0x0110 - 0x00F8)
class UFaceFXAnimationTrack final : public UMovieSceneNameableTrack
{
public:
	uint8                                         Pad_F8[0x8];                                       // 0x00F8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMovieSceneSection*>             AnimationSections;                                 // 0x0100(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("FaceFXAnimationTrack")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"FaceFXAnimationTrack")
	}
	static class UFaceFXAnimationTrack* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFaceFXAnimationTrack>();
	}
};
DUMPER7_ASSERTS_UFaceFXAnimationTrack;

// Class FaceFX.FaceFXAnimSet
// 0x0020 (0x0050 - 0x0030)
class UFaceFXAnimSet final : public UDataAsset
{
public:
	TArray<struct FGbxFaceFXAnimData>             FaceFXAnimDataList;                                // 0x0030(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<uint8>                                 AnimBuffer;                                        // 0x0040(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("FaceFXAnimSet")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"FaceFXAnimSet")
	}
	static class UFaceFXAnimSet* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFaceFXAnimSet>();
	}
};
DUMPER7_ASSERTS_UFaceFXAnimSet;

// Class FaceFX.FaceFXBlueprintLibrary
// 0x0000 (0x0028 - 0x0028)
class UFaceFXBlueprintLibrary final : public UBlueprintFunctionLibrary
{
public:
	static bool GetAnimationBounds(const class UFaceFXAnim* Animation, float* Start, float* End, float* Duration);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("FaceFXBlueprintLibrary")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"FaceFXBlueprintLibrary")
	}
	static class UFaceFXBlueprintLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFaceFXBlueprintLibrary>();
	}
};
DUMPER7_ASSERTS_UFaceFXBlueprintLibrary;

// Class FaceFX.FaceFXCharacter
// 0x0198 (0x01C0 - 0x0028)
class UFaceFXCharacter final : public UObject
{
public:
	uint8                                         Pad_28[0x80];                                      // 0x0028(0x0080)(Fixing Size After Last Property [ Dumper-7 ])
	class UFaceFXActor*                           FaceFXActor;                                       // 0x00A8(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_B0[0xD0];                                      // 0x00B0(0x00D0)(Fixing Size After Last Property [ Dumper-7 ])
	class UFaceFXAnim*                            CurrentAnim;                                       // 0x0180(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_188[0x18];                                     // 0x0188(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	class UFaceFXAnimSet*                         CurrentAnimSet;                                    // 0x01A0(0x0008)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1A8[0x18];                                     // 0x01A8(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("FaceFXCharacter")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"FaceFXCharacter")
	}
	static class UFaceFXCharacter* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFaceFXCharacter>();
	}
};
DUMPER7_ASSERTS_UFaceFXCharacter;

// Class FaceFX.FaceFXComponent
// 0x0048 (0x0158 - 0x0110)
class UFaceFXComponent final : public UActorComponent
{
public:
	TMulticastInlineDelegate<void(class USkeletalMeshComponent* SkelMeshComp, const class FName& AnimId, bool IsAudioStarted, class UActorComponent* AudioComponentStartedOn)> OnPlaybackAudioStart; // 0x0110(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class USkeletalMeshComponent* SkelMeshComp, const class FName& AnimId)> OnPlaybackStopped; // 0x0120(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class USkeletalMeshComponent* SkelMeshComp, const class FName& AnimId, int32 ChannelIndex, float ChannelTime, float EventTime, const class FString& payload)> OnAnimationEvent; // 0x0130(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<struct FFaceFXEntry>                   Entries;                                           // 0x0140(0x0010)(ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                         Pad_150[0x8];                                      // 0x0150(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	bool JumpTo(float position, bool Pause_0, class UFaceFXAnim* Animation, bool LoopAnimation, class USkeletalMeshComponent* SkelMeshComp, const class UObject* Caller);
	bool JumpToById(float position, bool Pause_0, class FName Group, class FName AnimName, bool LoopAnimation, class USkeletalMeshComponent* SkelMeshComp, const class UObject* Caller);
	void OnCharacterAnimationEvent(class UFaceFXCharacter* Character, const struct FFaceFXAnimId& AnimId, int32 ChannelIndex, float ChannelTime, float EventTime, const class FString& payload);
	void OnCharacterAudioStart(class UFaceFXCharacter* Character, const struct FFaceFXAnimId& AnimId, bool IsAudioStarted, class UActorComponent* AudioComponentStartedOn);
	void OnCharacterPlaybackStopped(class UFaceFXCharacter* Character, const struct FFaceFXAnimId& AnimId);
	bool Pause(class USkeletalMeshComponent* SkelMeshComp, const class UObject* Caller);
	bool Play(class UFaceFXAnim* Animation, class USkeletalMeshComponent* SkelMeshComp, bool Loop, const class UObject* Caller);
	bool PlayById(class FName Group, class FName AnimName, class USkeletalMeshComponent* SkelMeshComp, bool Loop, const class UObject* Caller);
	bool PlayByIdInAnimSet(const class UFaceFXAnimSet* FaceFXAnimSet, class FName Group, class FName AnimName, class USkeletalMeshComponent* SkelMeshComp, bool Loop, const class UObject* Caller);
	bool Resume(class USkeletalMeshComponent* SkelMeshComp, const class UObject* Caller);
	bool setup(class USkeletalMeshComponent* SkelMeshComp, class UActorComponent* AudioComponent, const class UFaceFXActor* Asset, bool IsCompensateForForceFrontXAxis, bool IsAutoPlaySound, bool IsDisableMorphTargets, bool IsDisableMaterialParameters, bool IsIgnoreEvents, const class UObject* Caller);
	bool Stop(class USkeletalMeshComponent* SkelMeshComp, const class UObject* Caller);
	void StopAll();

	bool IsPaused(class USkeletalMeshComponent* SkelMeshComp, const class UObject* Caller) const;
	bool IsPlaying(class USkeletalMeshComponent* SkelMeshComp, const class UObject* Caller) const;
	bool IsPlayingAnimation(const struct FFaceFXAnimId& AnimId, class USkeletalMeshComponent* SkelMeshComp, const class UObject* Caller) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("FaceFXComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"FaceFXComponent")
	}
	static class UFaceFXComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFaceFXComponent>();
	}
};
DUMPER7_ASSERTS_UFaceFXComponent;

// Class FaceFX.FaceFXConfig
// 0x0008 (0x0030 - 0x0028)
class UFaceFXConfig final : public UObject
{
public:
	EFaceFXBlendMode                              DefaultBlendMode;                                  // 0x0028(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("FaceFXConfig")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"FaceFXConfig")
	}
	static class UFaceFXConfig* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFaceFXConfig>();
	}
};
DUMPER7_ASSERTS_UFaceFXConfig;

// Class FaceFX.GbxDialogAnimSet
// 0x0010 (0x0040 - 0x0030)
class UGbxDialogAnimSet final : public UDataAsset
{
public:
	TArray<class UAnimSequenceBase*>              AnimationList;                                     // 0x0030(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxDialogAnimSet")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxDialogAnimSet")
	}
	static class UGbxDialogAnimSet* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxDialogAnimSet>();
	}
};
DUMPER7_ASSERTS_UGbxDialogAnimSet;

// Class FaceFX.GbxDialogAnimSetProvider
// 0x0000 (0x0000 - 0x0000)
class IGbxDialogAnimSetProvider final
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxDialogAnimSetProvider")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxDialogAnimSetProvider")
	}
	static class IGbxDialogAnimSetProvider* GetDefaultObj()
	{
		return GetDefaultObjImpl<IGbxDialogAnimSetProvider>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_IGbxDialogAnimSetProvider;

}

