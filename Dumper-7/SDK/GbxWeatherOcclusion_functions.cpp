#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GbxWeatherOcclusion

#include "Basic.hpp"

#include "GbxWeatherOcclusion_classes.hpp"
#include "GbxWeatherOcclusion_parameters.hpp"


namespace SDK
{

// Function GbxWeatherOcclusion.GbxWeatherOcclusionSubsystem.ReadbackDynamicOcclusionHeightMap
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UNiagaraSystem*                   InNiagaraSystem                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   InOrigin                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   InSize                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGbxWeatherOcclusionSubsystem::ReadbackDynamicOcclusionHeightMap(class UNiagaraSystem* InNiagaraSystem, const struct FVector& InOrigin, const struct FVector& InSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GbxWeatherOcclusionSubsystem", "ReadbackDynamicOcclusionHeightMap");

	Params::GbxWeatherOcclusionSubsystem_ReadbackDynamicOcclusionHeightMap Parms{};

	Parms.InNiagaraSystem = InNiagaraSystem;
	Parms.InOrigin = std::move(InOrigin);
	Parms.InSize = std::move(InSize);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GbxWeatherOcclusion.GbxWeatherOcclusionSubsystem.RegisterDynamicOcclusionNS
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UNiagaraSystem*                   InNiagaraSystem                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGbxWeatherOcclusionSubsystem::RegisterDynamicOcclusionNS(class UNiagaraSystem* InNiagaraSystem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GbxWeatherOcclusionSubsystem", "RegisterDynamicOcclusionNS");

	Params::GbxWeatherOcclusionSubsystem_RegisterDynamicOcclusionNS Parms{};

	Parms.InNiagaraSystem = InNiagaraSystem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GbxWeatherOcclusion.GbxWeatherOcclusionSubsystem.UnregisterDynamicOcclusionNS
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UNiagaraSystem*                   InNiagaraSystem                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGbxWeatherOcclusionSubsystem::UnregisterDynamicOcclusionNS(class UNiagaraSystem* InNiagaraSystem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GbxWeatherOcclusionSubsystem", "UnregisterDynamicOcclusionNS");

	Params::GbxWeatherOcclusionSubsystem_UnregisterDynamicOcclusionNS Parms{};

	Parms.InNiagaraSystem = InNiagaraSystem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GbxWeatherOcclusion.GbxWeatherOcclusionSubsystem.IsOccluded
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FVector&                   InPosition                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGbxWeatherOcclusionSubsystem::IsOccluded(const struct FVector& InPosition) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GbxWeatherOcclusionSubsystem", "IsOccluded");

	Params::GbxWeatherOcclusionSubsystem_IsOccluded Parms{};

	Parms.InPosition = std::move(InPosition);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

