#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ui_script_global

#include "Basic.hpp"

#include "OakGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass ui_script_global.ui_script_global_C
// 0x0000 (0x0028 - 0x0028)
class Uui_script_global_C final : public UOakUIScript_Global
{
public:
	void SwitchOn(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const;
	void SwitchOff(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const;
	void StepperRight(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const;
	void StepperLeft(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const;
	void SliderUp(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const;
	void SliderError(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const;
	void SliderDown(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const;
	void HoldActionStop(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const;
	void HoldActionStart(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const;
	void deactivate(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef) const;
	void Activate(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef) const;

public:
	static class UClass* StaticClass()
	{
		BP_STATIC_CLASS_IMPL("ui_script_global_C")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ui_script_global_C")
	}
	static class Uui_script_global_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<Uui_script_global_C>();
	}
};
DUMPER7_ASSERTS_Uui_script_global_C;

}

