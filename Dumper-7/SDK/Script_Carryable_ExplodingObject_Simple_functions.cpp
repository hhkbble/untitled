#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Script_Carryable_ExplodingObject_Simple

#include "Basic.hpp"

#include "Script_Carryable_ExplodingObject_Simple_classes.hpp"
#include "Script_Carryable_ExplodingObject_Simple_parameters.hpp"


namespace SDK
{

// Function Script_Carryable_ExplodingObject_Simple.Script_Carryable_ExplodingObject_Simple_C.ApplyForce
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ACharacter*                       instigator_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UScript_Carryable_ExplodingObject_Simple_C::ApplyForce(class ACharacter* instigator_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_Carryable_ExplodingObject_Simple_C", "ApplyForce");

	Params::Script_Carryable_ExplodingObject_Simple_C_ApplyForce Parms{};

	Parms.instigator_0 = instigator_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Script_Carryable_ExplodingObject_Simple.Script_Carryable_ExplodingObject_Simple_C.ExecuteUbergraph_Script_Carryable_ExplodingObject_Simple
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   entrypoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UScript_Carryable_ExplodingObject_Simple_C::ExecuteUbergraph_Script_Carryable_ExplodingObject_Simple(int32 entrypoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_Carryable_ExplodingObject_Simple_C", "ExecuteUbergraph_Script_Carryable_ExplodingObject_Simple");

	Params::Script_Carryable_ExplodingObject_Simple_C_ExecuteUbergraph_Script_Carryable_ExplodingObject_Simple Parms{};

	Parms.entrypoint = entrypoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Script_Carryable_ExplodingObject_Simple.Script_Carryable_ExplodingObject_Simple_C.Exploded__OnStateEnabled
// (BlueprintCallable, BlueprintEvent)

void UScript_Carryable_ExplodingObject_Simple_C::Exploded__OnStateEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_Carryable_ExplodingObject_Simple_C", "Exploded__OnStateEnabled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Script_Carryable_ExplodingObject_Simple.Script_Carryable_ExplodingObject_Simple_C.GbxActorScriptEvt__DamageState_OnTakeAnyDamage
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           DamageReceiver                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FReceivedDamageDetails&    Details                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)

void UScript_Carryable_ExplodingObject_Simple_C::GbxActorScriptEvt__DamageState_OnTakeAnyDamage(class AActor* DamageReceiver, const struct FReceivedDamageDetails& Details)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_Carryable_ExplodingObject_Simple_C", "GbxActorScriptEvt__DamageState_OnTakeAnyDamage");

	Params::Script_Carryable_ExplodingObject_Simple_C_GbxActorScriptEvt__DamageState_OnTakeAnyDamage Parms{};

	Parms.DamageReceiver = DamageReceiver;
	Parms.Details = std::move(Details);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Script_Carryable_ExplodingObject_Simple.Script_Carryable_ExplodingObject_Simple_C.GbxActorScriptEvt__OnActorHit
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           SelfActor                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   NormalImpulse                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FHitResult&                Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void UScript_Carryable_ExplodingObject_Simple_C::GbxActorScriptEvt__OnActorHit(class AActor* SelfActor, class AActor* OtherActor, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_Carryable_ExplodingObject_Simple_C", "GbxActorScriptEvt__OnActorHit");

	Params::Script_Carryable_ExplodingObject_Simple_C_GbxActorScriptEvt__OnActorHit Parms{};

	Parms.SelfActor = SelfActor;
	Parms.OtherActor = OtherActor;
	Parms.NormalImpulse = std::move(NormalImpulse);
	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Script_Carryable_ExplodingObject_Simple.Script_Carryable_ExplodingObject_Simple_C.GbxActorScriptEvt__OnCarried
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Carrier                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UScript_Carryable_ExplodingObject_Simple_C::GbxActorScriptEvt__OnCarried(class AActor* Carrier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_Carryable_ExplodingObject_Simple_C", "GbxActorScriptEvt__OnCarried");

	Params::Script_Carryable_ExplodingObject_Simple_C_GbxActorScriptEvt__OnCarried Parms{};

	Parms.Carrier = Carrier;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Script_Carryable_ExplodingObject_Simple.Script_Carryable_ExplodingObject_Simple_C.GbxActorScriptEvt__OnThrown
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Carrier                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UScript_Carryable_ExplodingObject_Simple_C::GbxActorScriptEvt__OnThrown(class AActor* Carrier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_Carryable_ExplodingObject_Simple_C", "GbxActorScriptEvt__OnThrown");

	Params::Script_Carryable_ExplodingObject_Simple_C_GbxActorScriptEvt__OnThrown Parms{};

	Parms.Carrier = Carrier;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Script_Carryable_ExplodingObject_Simple.Script_Carryable_ExplodingObject_Simple_C.LaunchExplodingObject
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   ThrowVector                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  force                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  X                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Y                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Z                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   Additive_Vector                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UScript_Carryable_ExplodingObject_Simple_C::LaunchExplodingObject(const struct FVector& ThrowVector, double force, double X, double Y, double Z, const struct FVector& Additive_Vector)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_Carryable_ExplodingObject_Simple_C", "LaunchExplodingObject");

	Params::Script_Carryable_ExplodingObject_Simple_C_LaunchExplodingObject Parms{};

	Parms.ThrowVector = std::move(ThrowVector);
	Parms.force = force;
	Parms.X = X;
	Parms.Y = Y;
	Parms.Z = Z;
	Parms.Additive_Vector = std::move(Additive_Vector);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Script_Carryable_ExplodingObject_Simple.Script_Carryable_ExplodingObject_Simple_C.OnBeginPlay
// (Event, Public, BlueprintEvent)

void UScript_Carryable_ExplodingObject_Simple_C::OnBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_Carryable_ExplodingObject_Simple_C", "OnBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Script_Carryable_ExplodingObject_Simple.Script_Carryable_ExplodingObject_Simple_C.OnInit
// (Event, Public, BlueprintEvent)

void UScript_Carryable_ExplodingObject_Simple_C::OnInit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_Carryable_ExplodingObject_Simple_C", "OnInit");

	UObject::ProcessEvent(Func, nullptr);
}

}

