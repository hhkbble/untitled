#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GbxSpline

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GbxSpline_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function GbxSpline.GbxSplineClutterRuleBase.EvaluateRule
// 0x0020 (0x0020 - 0x0000)
struct GbxSplineClutterRuleBase_EvaluateRule final
{
public:
	TScriptInterface<class IGbxSplineSegment>     Segment;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UGbxSplineClutterEntry*>         ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_GbxSplineClutterRuleBase_EvaluateRule;

// Function GbxSpline.GbxSplineClutterRuleBase.LandscapeAdjustmentHitFilter
// 0x0110 (0x0110 - 0x0000)
struct GbxSplineClutterRuleBase_LandscapeAdjustmentHitFilter final
{
public:
	const class UGbxSplineClutterEntry*           Entry;                                             // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FHitResult                             Hit;                                               // 0x0008(0x0100)(ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0108(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_GbxSplineClutterRuleBase_LandscapeAdjustmentHitFilter;

// Function GbxSpline.GbxSplineClutterRuleBase.ObjectOverlapFilter
// 0x0020 (0x0020 - 0x0000)
struct GbxSplineClutterRuleBase_ObjectOverlapFilter final
{
public:
	const class UGbxSplineClutterEntry*           Entry;                                             // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class AActor*                           OverlappedActor;                                   // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UPrimitiveComponent*              OverlappedComponent;                               // 0x0010(0x0008)(ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_GbxSplineClutterRuleBase_ObjectOverlapFilter;

// Function GbxSpline.GbxSplineClutterRuleBase.SelectClutter
// 0x0008 (0x0008 - 0x0000)
struct GbxSplineClutterRuleBase_SelectClutter final
{
public:
	class UGbxSplineClutterObject*                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_GbxSplineClutterRuleBase_SelectClutter;

// Function GbxSpline.GbxSplineClutterLibrary.AreParamsValid
// 0x00B0 (0x00B0 - 0x0000)
struct GbxSplineClutterLibrary_AreParamsValid final
{
public:
	struct FGbxSplineClutterEntryCreationParams   params;                                            // 0x0000(0x00A0)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x00A0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A1[0xF];                                       // 0x00A1(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_GbxSplineClutterLibrary_AreParamsValid;

// Function GbxSpline.GbxSplineClutterLibrary.ComputeClutterBasisPoints
// 0x0078 (0x0078 - 0x0000)
struct GbxSplineClutterLibrary_ComputeClutterBasisPoints final
{
public:
	TScriptInterface<class IGbxSplineSegment>     Segment;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGbxSplineClutterAnchorPoint                  AnchorPoint;                                       // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LerpValue;                                         // 0x0014(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxSplineClutterBasisPoints           ReturnValue;                                       // 0x0018(0x0060)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_GbxSplineClutterLibrary_ComputeClutterBasisPoints;

// Function GbxSpline.GbxSplineClutterLibrary.CreateActorClutterObject
// 0x00B0 (0x00B0 - 0x0000)
struct GbxSplineClutterLibrary_CreateActorClutterObject final
{
public:
	TScriptInterface<class IGbxSplineSegment>     Segment;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   ActorClass;                                        // 0x0010(0x0028)(Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_38[0x8];                                       // 0x0038(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Transform;                                         // 0x0040(0x0060)(ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxSplineClutterObject*                ReturnValue;                                       // 0x00A0(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A8[0x8];                                       // 0x00A8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_GbxSplineClutterLibrary_CreateActorClutterObject;

// Function GbxSpline.GbxSplineClutterLibrary.CreateClutterEntry
// 0x00B0 (0x00B0 - 0x0000)
struct GbxSplineClutterLibrary_CreateClutterEntry final
{
public:
	struct FGbxSplineClutterEntryCreationParams   params;                                            // 0x0000(0x00A0)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	class UGbxSplineClutterEntry*                 ReturnValue;                                       // 0x00A0(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A8[0x8];                                       // 0x00A8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_GbxSplineClutterLibrary_CreateClutterEntry;

// Function GbxSpline.GbxSplineClutterLibrary.CreateMeshClutterObject
// 0x0090 (0x0090 - 0x0000)
struct GbxSplineClutterLibrary_CreateMeshClutterObject final
{
public:
	TScriptInterface<class IGbxSplineSegment>     Segment;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                            Mesh;                                              // 0x0010(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_18[0x8];                                       // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Transform;                                         // 0x0020(0x0060)(ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxSplineClutterObject*                ReturnValue;                                       // 0x0080(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_88[0x8];                                       // 0x0088(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_GbxSplineClutterLibrary_CreateMeshClutterObject;

// Function GbxSpline.GbxSplineClutterLibrary.InterpolateVarianceTransforms
// 0x0130 (0x0130 - 0x0000)
struct GbxSplineClutterLibrary_InterpolateVarianceTransforms final
{
public:
	struct FTransform                             min_0;                                             // 0x0000(0x0060)(ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                             MAX;                                               // 0x0060(0x0060)(ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInterpolateScaleUniformly;                        // 0x00C0(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C1[0xF];                                       // 0x00C1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             ReturnValue;                                       // 0x00D0(0x0060)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_GbxSplineClutterLibrary_InterpolateVarianceTransforms;

// Function GbxSpline.GbxSplineClutterLibrary.LerpAndOffsetToLocation
// 0x0038 (0x0038 - 0x0000)
struct GbxSplineClutterLibrary_LerpAndOffsetToLocation final
{
public:
	TScriptInterface<class IGbxSplineSegment>     Segment;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGbxSplineClutterAnchorPoint                  AnchorPoint;                                       // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LerpValue;                                         // 0x0014(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Offset;                                            // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                ReturnValue;                                       // 0x0020(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_GbxSplineClutterLibrary_LerpAndOffsetToLocation;

// Function GbxSpline.GbxSplineClutterLibrary.LocationToLerpAndOffset
// 0x0038 (0x0038 - 0x0000)
struct GbxSplineClutterLibrary_LocationToLerpAndOffset final
{
public:
	TScriptInterface<class IGbxSplineSegment>     Segment;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGbxSplineClutterAnchorPoint                  AnchorPoint;                                       // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Location;                                          // 0x0018(0x0018)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OutLerpValue;                                      // 0x0030(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OutOffset;                                         // 0x0034(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_GbxSplineClutterLibrary_LocationToLerpAndOffset;

// Function GbxSpline.GbxSplineClutterLibrary.SelectClutterEntryName
// 0x0028 (0x0028 - 0x0000)
struct GbxSplineClutterLibrary_SelectClutterEntryName final
{
public:
	TScriptInterface<class IGbxSplineSegment>     Segment;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   RuleName;                                          // 0x0010(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FName                                   ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_GbxSplineClutterLibrary_SelectClutterEntryName;

// Function GbxSpline.GbxSplineClutterObject.GetBounds
// 0x0038 (0x0038 - 0x0000)
struct GbxSplineClutterObject_GetBounds final
{
public:
	struct FBoxSphereBounds                       ReturnValue;                                       // 0x0000(0x0038)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_GbxSplineClutterObject_GetBounds;

// Function GbxSpline.GbxSplineClutterObject.InterpolateVariance
// 0x0060 (0x0060 - 0x0000)
struct GbxSplineClutterObject_InterpolateVariance final
{
public:
	struct FTransform                             ReturnValue;                                       // 0x0000(0x0060)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_GbxSplineClutterObject_InterpolateVariance;

// Function GbxSpline.GbxSplineControlPoint.GetWidth
// 0x0004 (0x0004 - 0x0000)
struct GbxSplineControlPoint_GetWidth final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_GbxSplineControlPoint_GetWidth;

// Function GbxSpline.GbxSplineControlPoint.IsIntersection
// 0x0001 (0x0001 - 0x0000)
struct GbxSplineControlPoint_IsIntersection final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_GbxSplineControlPoint_IsIntersection;

// Function GbxSpline.GbxSplineSegment.GetEndControlPoint
// 0x0010 (0x0010 - 0x0000)
struct GbxSplineSegment_GetEndControlPoint final
{
public:
	TScriptInterface<class IGbxSplineControlPoint> ReturnValue;                                      // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_GbxSplineSegment_GetEndControlPoint;

// Function GbxSpline.GbxSplineSegment.GetStartControlPoint
// 0x0010 (0x0010 - 0x0000)
struct GbxSplineSegment_GetStartControlPoint final
{
public:
	TScriptInterface<class IGbxSplineControlPoint> ReturnValue;                                      // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_GbxSplineSegment_GetStartControlPoint;

}

