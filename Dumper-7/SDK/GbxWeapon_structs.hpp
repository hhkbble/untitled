#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GbxWeapon

#include "Basic.hpp"

#include "GbxNexus_structs.hpp"
#include "GbxEngine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GbxAI_structs.hpp"
#include "GbxGame_structs.hpp"
#include "GbxAudio_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK
{

// Enum GbxWeapon.EWeaponTargetLockChannel
// NumValues: 0x0003
enum class EWeaponTargetLockChannel : uint8
{
	Default                                  = 0,
	Ability                                  = 1,
	MAX                                      = 2,
};

// Enum GbxWeapon.EHideWeaponNotifyOption
// NumValues: 0x0003
enum class EHideWeaponNotifyOption : uint8
{
	Hide                                     = 0,
	Unhide                                   = 1,
	EHideWeaponNotifyOption_MAX              = 2,
};

// Enum GbxWeapon.EWeaponActionChannel
// NumValues: 0x0005
enum class EWeaponActionChannel : uint8
{
	Use                                      = 0,
	Zoom                                     = 1,
	Reload                                   = 2,
	Other                                    = 3,
	MAX                                      = 4,
};

// Enum GbxWeapon.EShotDamageModifierType
// NumValues: 0x0004
enum class EShotDamageModifierType : uint32
{
	ScaleAdd                                 = 0,
	Add                                      = 1,
	ScaleMultiply                            = 2,
	EShotDamageModifierType_MAX              = 3,
};

// Enum GbxWeapon.EWeaponUseEvent
// NumValues: 0x0004
enum class EWeaponUseEvent : uint8
{
	UseStarted                               = 0,
	Used                                     = 1,
	UseFinished                              = 2,
	EWeaponUseEvent_MAX                      = 3,
};

// Enum GbxWeapon.EWeaponHeatNotifyEvent
// NumValues: 0x0003
enum class EWeaponHeatNotifyEvent : uint8
{
	Changed                                  = 0,
	Impulse                                  = 1,
	EWeaponHeatNotifyEvent_MAX               = 2,
};

// Enum GbxWeapon.EWeaponAudioBehaviorScope
// NumValues: 0x0005
enum class EWeaponAudioBehaviorScope : uint8
{
	NPC                                      = 1,
	RemotePlayer                             = 2,
	LocalPlayer                              = 4,
	INVALID                                  = 8,
	EWeaponAudioBehaviorScope_MAX            = 9,
};

// Enum GbxWeapon.EAtt_Weapon
// NumValues: 0x0003
enum class EAtt_Weapon : uint8
{
	weapon_equip_time                        = 0,
	weapon_put_down_time                     = 1,
	weapon_MAX                               = 2,
};

// Enum GbxWeapon.EAudioWeaponStates
// NumValues: 0x0009
enum class EAudioWeaponStates : uint8
{
	Inactive                                 = 1,
	Active                                   = 2,
	Locked                                   = 4,
	Reloading                                = 8,
	Equipping                                = 16,
	PuttingDown                              = 32,
	Using                                    = 64,
	ModeSwitch                               = 128,
	EAudioWeaponStates_MAX                   = 129,
};

// Enum GbxWeapon.EAtt_WeaponBehaviorAmmo
// NumValues: 0x0004
enum class EAtt_WeaponBehaviorAmmo : uint8
{
	weapon_ammo_regen_rate                   = 0,
	weapon_ammo_consume_regen_delay          = 1,
	weapon_max_loaded_ammo                   = 2,
	weapon_MAX                               = 3,
};

// Enum GbxWeapon.EAmmoRegenType
// NumValues: 0x0004
enum class EAmmoRegenType : uint32
{
	None                                     = 0,
	GenerateAmmo                             = 1,
	RefillLoadedAmmo                         = 2,
	EAmmoRegenType_MAX                       = 3,
};

// Enum GbxWeapon.EAmmoRegenCondition
// NumValues: 0x0004
enum class EAmmoRegenCondition : uint32
{
	None                                     = 0,
	Equipped                                 = 1,
	Using                                    = 2,
	EAmmoRegenCondition_MAX                  = 3,
};

// Enum GbxWeapon.EAtt_WeaponBehaviorDamageModifier
// NumValues: 0x0002
enum class EAtt_WeaponBehaviorDamageModifier : uint8
{
	weapon_damage_modifier_add_critical_hit  = 0,
	weapon_damage_modifier_add_critical_MAX  = 1,
};

// Enum GbxWeapon.EAtt_WeaponBehaviorFire
// NumValues: 0x0019
enum class EAtt_WeaponBehaviorFire : uint8
{
	weapon_fire_rate                         = 0,
	weapon_auto_burst_count                  = 1,
	weapon_burst_fire_delay                  = 2,
	weapon_fire_rate_accel_duration          = 3,
	weapon_fire_rate_decel_duration          = 4,
	weapon_shot_cost                         = 5,
	weapon_damage                            = 6,
	weapon_damage_radius                     = 7,
	weapon_spread                            = 8,
	weapon_accuracy_impulse                  = 9,
	weapon_burst_accuracy_impulse_scale      = 10,
	weapon_recoil_scale_x                    = 11,
	weapon_recoil_scale_y                    = 12,
	weapon_impact_force                      = 13,
	weapon_destructible_force                = 14,
	weapon_destructible_strain               = 15,
	weapon_lock_onto_target                  = 16,
	weapon_heat_impulse                      = 17,
	weapon_ai_damage_scale                   = 18,
	weapon_shot_offset_scale                 = 19,
	weapon_min_fire_rate_scale               = 20,
	weapon_burst_fire_rate_scale             = 21,
	weapon_ai_force_scale                    = 22,
	weapon_ai_fire_rate_scale                = 23,
	weapon_MAX                               = 24,
};

// Enum GbxWeapon.EAtt_WeaponBehaviorHeat
// NumValues: 0x0005
enum class EAtt_WeaponBehaviorHeat : uint8
{
	weapon_heat_cooldown_rate                = 0,
	weapon_heat_cooldown_delay               = 1,
	weapon_overheat_time                     = 2,
	weapon_overheat_cooldown_delay           = 3,
	weapon_MAX                               = 4,
};

// Enum GbxWeapon.EAtt_WeaponBehaviorSway
// NumValues: 0x0005
enum class EAtt_WeaponBehaviorSway : uint8
{
	weapon_sway_scale                        = 0,
	weapon_sway_accuracy_scale               = 1,
	weapon_sway_zoom_scale                   = 2,
	weapon_sway_zoom_accuracy_scale          = 3,
	weapon_sway_MAX                          = 4,
};

// Enum GbxWeapon.EAtt_WeaponBehaviorUse
// NumValues: 0x000D
enum class EAtt_WeaponBehaviorUse : uint8
{
	weapon_switch_mode_time_scale            = 0,
	weapon_ai_accuracy                       = 1,
	weapon_ai_max_accuracy_scale_range       = 2,
	weapon_ai_min_accuracy_scale_range       = 3,
	weapon_ai_min_accuracy                   = 4,
	weapon_ai_min_desired_range              = 5,
	weapon_ai_max_desired_range              = 6,
	weapon_ai_preferred_range                = 7,
	weapon_ai_burst_count                    = 8,
	weapon_ai_burst_time                     = 9,
	weapon_ai_burst_delay                    = 10,
	weapon_ai_projectile_speed               = 11,
	weapon_MAX                               = 12,
};

// Enum GbxWeapon.EAtt_WeaponBehaviorVisibleAmmo
// NumValues: 0x0002
enum class EAtt_WeaponBehaviorVisibleAmmo : uint8
{
	weapon_visible_bones_per_loaded_ammo     = 0,
	weapon_visible_bones_per_loaded_MAX      = 1,
};

// Enum GbxWeapon.EVisibleAmmoState
// NumValues: 0x0004
enum class EVisibleAmmoState : uint8
{
	LoadedAmmo                               = 0,
	PendingLoadedAmmo                        = 1,
	Disabled                                 = 2,
	EVisibleAmmoState_MAX                    = 3,
};

// Enum GbxWeapon.EVisibleAmmoUpdateMethod
// NumValues: 0x0005
enum class EVisibleAmmoUpdateMethod : uint8
{
	Auto                                     = 0,
	Manual                                   = 1,
	AutoAdd                                  = 2,
	AutoRemove                               = 3,
	EVisibleAmmoUpdateMethod_MAX             = 4,
};

// Enum GbxWeapon.EVisibleAmmoUseModeType
// NumValues: 0x0004
enum class EVisibleAmmoUseModeType : uint8
{
	None                                     = 0,
	Start                                    = 1,
	Switch                                   = 2,
	EVisibleAmmoUseModeType_MAX              = 3,
};

// Enum GbxWeapon.EAtt_WeaponBehaviorZoom
// NumValues: 0x0004
enum class EAtt_WeaponBehaviorZoom : uint8
{
	weapon_zoom_fov_scale                    = 0,
	weapon_zoom_duration                     = 1,
	weapon_zoom_shot_offset_scale            = 2,
	weapon_zoom_MAX                          = 3,
};

// Enum GbxWeapon.EWeaponAmmoResolverValue
// NumValues: 0x000A
enum class EWeaponAmmoResolverValue : uint8
{
	LoadedAmmo                               = 0,
	MaxLoadedAmmo                            = 1,
	SpareAmmo                                = 2,
	MaxSpareAmmo                             = 3,
	StoredAmmo                               = 4,
	MaxStoredAmmo                            = 5,
	LoadedAmmoPercent                        = 6,
	SpareAmmoPercent                         = 7,
	StoredAmmoPercent                        = 8,
	EWeaponAmmoResolverValue_MAX             = 9,
};

// Enum GbxWeapon.EWeaponFireRateState
// NumValues: 0x0004
enum class EWeaponFireRateState : uint8
{
	None                                     = 0,
	Accelerating                             = 1,
	Decelerating                             = 2,
	EWeaponFireRateState_MAX                 = 3,
};

// Enum GbxWeapon.EAtt_WeaponBehaviorReload
// NumValues: 0x0002
enum class EAtt_WeaponBehaviorReload : uint8
{
	weapon_reload_time                       = 0,
	weapon_reload_MAX                        = 1,
};

// Enum GbxWeapon.EWeaponPutDownType
// NumValues: 0x0003
enum class EWeaponPutDownType : uint8
{
	Default                                  = 0,
	Instant                                  = 1,
	EWeaponPutDownType_MAX                   = 2,
};

// Enum GbxWeapon.EWeaponEquipType
// NumValues: 0x0004
enum class EWeaponEquipType : uint8
{
	Default                                  = 0,
	Instant                                  = 1,
	Custom                                   = 2,
	EWeaponEquipType_MAX                     = 3,
};

// Enum GbxWeapon.EResolverWeaponState
// NumValues: 0x0005
enum class EResolverWeaponState : uint8
{
	None                                     = 0,
	Using                                    = 1,
	Firing                                   = 2,
	Reloading                                = 3,
	EResolverWeaponState_MAX                 = 4,
};

// Enum GbxWeapon.EWeaponTargetLockContext
// NumValues: 0x0003
enum class EWeaponTargetLockContext : uint8
{
	Default                                  = 0,
	Instigator                               = 1,
	EWeaponTargetLockContext_MAX             = 2,
};

// Enum GbxWeapon.EWeaponTriggerFeedbackMode
// NumValues: 0x0006
enum class EWeaponTriggerFeedbackMode : uint8
{
	Off                                      = 0,
	Feedback                                 = 1,
	Weapon                                   = 2,
	Slope                                    = 3,
	Vibration                                = 4,
	EWeaponTriggerFeedbackMode_MAX           = 5,
};

// ScriptStruct GbxWeapon.CameraModeBehavior_WeaponLook
// 0x0008 (0x0098 - 0x0090)
struct FCameraModeBehavior_WeaponLook : public FCameraModeBehavior_Look
{
public:
	float                                         PreviousZoomPct;                                   // 0x0090(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         CurrentPitchSnap;                                  // 0x0094(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FCameraModeBehavior_WeaponLook;

// ScriptStruct GbxWeapon.WeaponAmmoChamberBoneControl
// 0x0010 (0x0058 - 0x0048)
struct FWeaponAmmoChamberBoneControl final : public FInventoryBodyControl
{
public:
	TArray<class FName>                           Bones;                                             // 0x0048(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FWeaponAmmoChamberBoneControl;

// ScriptStruct GbxWeapon.ActiveWeaponSlotData
// 0x0020 (0x0020 - 0x0000)
struct alignas(0x08) FActiveWeaponSlotData final
{
public:
	class FName                                   AttachSocket;                                      // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      AccuracyPool;                                      // 0x0008(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FActiveWeaponSlotData;

// ScriptStruct GbxWeapon.UseModeAttributeEffects
// 0x0018 (0x0018 - 0x0000)
struct FUseModeAttributeEffects final
{
public:
	int32                                         usemodebitmask;                                    // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGbxAttributeEffect>            attributeeffects;                                  // 0x0008(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FUseModeAttributeEffects;

// ScriptStruct GbxWeapon.ActiveWeaponSlot
// 0x0140 (0x0140 - 0x0000)
struct FActiveWeaponSlot final
{
public:
	uint8                                         Pad_0[0x20];                                       // 0x0000(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	class AWeapon*                                Weapon;                                            // 0x0020(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AWeapon*                                PendingWeapon;                                     // 0x0028(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AWeapon*                                ClientPredictedPendingWeapon;                      // 0x0030(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_38[0x108];                                     // 0x0038(0x0108)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FActiveWeaponSlot;

// ScriptStruct GbxWeapon.ActiveWeaponsState
// 0x0208 (0x0208 - 0x0000)
struct FActiveWeaponsState
{
public:
	uint8                                         Pad_0[0x8];                                        // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class AWeapon* EventWeapon, bool bAutoReload)> OnWeaponReloadStarted; // 0x0008(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_18[0x18];                                      // 0x0018(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class AWeapon* EventWeapon, bool bCompleted)> OnWeaponReloadEnded; // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_40[0x18];                                      // 0x0040(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(bool bRestricted)> OnWeaponRestrictionChanged;                     // 0x0058(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_68[0x38];                                      // 0x0068(0x0038)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FActiveWeaponSlot>              Slots;                                             // 0x00A0(0x0010)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_B0[0x158];                                     // 0x00B0(0x0158)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FActiveWeaponsState;

// ScriptStruct GbxWeapon.CameraWeaponData
// 0x0138 (0x0138 - 0x0000)
struct alignas(0x08) FCameraWeaponData final
{
public:
	uint8                                         Pad_0[0x138];                                      // 0x0000(0x0138)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FCameraWeaponData;

// ScriptStruct GbxWeapon.WeaponFireMidiSequence
// 0x0018 (0x0018 - 0x0000)
struct FWeaponFireMidiSequence final
{
public:
	TArray<uint8>                                 Sequence;                                          // 0x0000(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                         LoopIndex;                                         // 0x0010(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FWeaponFireMidiSequence;

// ScriptStruct GbxWeapon.WeaponFireAudioBehavior
// 0x0090 (0x0090 - 0x0000)
struct FWeaponFireAudioBehavior final
{
public:
	struct FGameplayTag                           BehaviorName;                                      // 0x0000(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSetSocket;                                        // 0x0008(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   EmitterSocket;                                     // 0x000C(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x1];                                       // 0x0014(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bSetEvent;                                         // 0x0015(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	FGbxDefPtrProperty_                           WwiseEvent;                                        // 0x0018(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSetStopEvent;                                     // 0x0030(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FGbxDefPtrProperty_                           StopEvent;                                         // 0x0038(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_50[0x1];                                       // 0x0050(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bSetModeMask;                                      // 0x0051(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_52[0x2];                                       // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ModeMask;                                          // 0x0054(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_58[0x1];                                       // 0x0058(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bSetDelay;                                         // 0x0059(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5A[0x2];                                       // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         delay;                                             // 0x005C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_60[0x1];                                       // 0x0060(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bSetScope;                                         // 0x0061(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_62[0x2];                                       // 0x0062(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ScopeMask;                                         // 0x0064(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_68[0x1];                                       // 0x0068(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bSetMidiSequence;                                  // 0x0069(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWeaponFireMidiSequence                MidiSequence;                                      // 0x0070(0x0018)(Edit, NativeAccessSpecifierPublic)
	uint8                                         Pad_88[0x8];                                       // 0x0088(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FWeaponFireAudioBehavior;

// ScriptStruct GbxWeapon.AIWantsToFireWeaponValueResolver
// 0x0000 (0x0008 - 0x0008)
struct FAIWantsToFireWeaponValueResolver final : public FAttributeValueResolver
{
};
DUMPER7_ASSERTS_FAIWantsToFireWeaponValueResolver;

// ScriptStruct GbxWeapon.AIWeaponUserState
// 0x01F0 (0x01F0 - 0x0000)
struct FAIWeaponUserState final
{
public:
	TMulticastInlineDelegate<void()>              OnWeaponReloadStarted;                             // 0x0000(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_10[0x30];                                      // 0x0010(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 OwnerActor;                                        // 0x0040(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TScriptInterface<class IAIWeaponUser>         owner;                                             // 0x0048(0x0010)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_58[0x30];                                      // 0x0058(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAITicketUseData                    AIWeaponUseTicket;                                 // 0x0088(0x00B8)(NativeAccessSpecifierPrivate)
	uint8                                         Pad_140[0xB0];                                     // 0x0140(0x00B0)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FAIWeaponUserState;

// ScriptStruct GbxWeapon.AIWeaponUseSettings
// 0x04C0 (0x04C0 - 0x0000)
struct FAIWeaponUseSettings final
{
public:
	struct FGbxAttributeInit                      MaxDesiredRange;                                   // 0x0000(0x0050)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FGbxAttributeInit                      MinDesiredRange;                                   // 0x0050(0x0050)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bOverrideDesiredRange;                             // 0x00A0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAttributeInit                      PreferredRange;                                    // 0x00A8(0x0050)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bOverridePerferredRange;                           // 0x00F8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAttributeInit                      DesiredUseMode;                                    // 0x0100(0x0050)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bOverrideDesiredUseMode;                           // 0x0150(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAttributeInit                      FireConeAngle;                                     // 0x0158(0x0050)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bOverrideFireConeAngle;                            // 0x01A8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseBurstTime;                                     // 0x01A9(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOverrideUseBurstTime;                             // 0x01AA(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1AB[0x5];                                      // 0x01AB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAttributeInit                      BurstCount;                                        // 0x01B0(0x0050)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bOverrideBurstCount;                               // 0x0200(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_201[0x7];                                      // 0x0201(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAttributeInit                      BurstTime;                                         // 0x0208(0x0050)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bOverrideBurstTime;                                // 0x0258(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_259[0x7];                                      // 0x0259(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAttributeInit                      BurstDelay;                                        // 0x0260(0x0050)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bOverrideBurstDelay;                               // 0x02B0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2B1[0x7];                                      // 0x02B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAttributeInit                      Accuracy;                                          // 0x02B8(0x0050)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bOverrideAccuracy;                                 // 0x0308(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_309[0x7];                                      // 0x0309(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAttributeInit                      MinAccuracy;                                       // 0x0310(0x0050)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bOverrideMinAccuracy;                              // 0x0360(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_361[0x7];                                      // 0x0361(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAttributeInit                      MaxAccuracyScaleRange;                             // 0x0368(0x0050)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FGbxAttributeInit                      MinAccuracyScaleRange;                             // 0x03B8(0x0050)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bOverrideAccuracyScaleRange;                       // 0x0408(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_409[0x7];                                      // 0x0409(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAttributeInit                      ProjectileSpeed;                                   // 0x0410(0x0050)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bOverrideProjectileSpeed;                          // 0x0460(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_461[0x7];                                      // 0x0461(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAttributeInit                      CoveringFireTime;                                  // 0x0468(0x0050)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bOverrideCoveringFireTime;                         // 0x04B8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4B9[0x7];                                      // 0x04B9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FAIWeaponUseSettings;

// ScriptStruct GbxWeapon.CrosshairDef
// 0x0010 (0x0028 - 0x0018)
struct FCrosshairDef : public FGbxDef
{
public:
	class FString                                 DynamicCrosshairVisual;                            // 0x0018(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FCrosshairDef;

// ScriptStruct GbxWeapon.CurrentWeaponValueResolver
// 0x0000 (0x0008 - 0x0008)
struct FCurrentWeaponValueResolver final : public FAttributeValueResolver
{
};
DUMPER7_ASSERTS_FCurrentWeaponValueResolver;

// ScriptStruct GbxWeapon.GbxBrainAspectSettings_CanUseWeapon
// 0x0000 (0x0080 - 0x0080)
struct FGbxBrainAspectSettings_CanUseWeapon final : public FGbxBrainAspectSettings
{
};
DUMPER7_ASSERTS_FGbxBrainAspectSettings_CanUseWeapon;

// ScriptStruct GbxWeapon.GbxBrainAspect_CanUseWeapon
// 0x0010 (0x00E8 - 0x00D8)
struct FGbxBrainAspect_CanUseWeapon final : public FGbxBrainAspect
{
public:
	uint8                                         Pad_D8[0x10];                                      // 0x00D8(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainAspect_CanUseWeapon;

// ScriptStruct GbxWeapon.GbxBrainAspectSettings_ReloadWeapon
// 0x0070 (0x00F0 - 0x0080)
struct FGbxBrainAspectSettings_ReloadWeapon final : public FGbxBrainAspectSettings
{
public:
	struct FGbxParam                              LoadedAmmoThreshold;                               // 0x0080(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              NoTargetWarmup;                                    // 0x00B8(0x0038)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxBrainAspectSettings_ReloadWeapon;

// ScriptStruct GbxWeapon.GbxBrainAspect_ReloadWeapon
// 0x0028 (0x0100 - 0x00D8)
struct FGbxBrainAspect_ReloadWeapon final : public FGbxBrainAspect
{
public:
	uint8                                         Pad_D8[0x28];                                      // 0x00D8(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainAspect_ReloadWeapon;

// ScriptStruct GbxWeapon.GbxBrainAspectSettings_UseWeapon
// 0x04D0 (0x0550 - 0x0080)
struct FGbxBrainAspectSettings_UseWeapon final : public FGbxBrainAspectSettings
{
public:
	struct FAIWeaponUseSettings                   AIWeaponOverrides;                                 // 0x0080(0x04C0)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FGbxAIHeldFilter                       WeaponFilter;                                      // 0x0540(0x000C)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_54C[0x4];                                      // 0x054C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainAspectSettings_UseWeapon;

// ScriptStruct GbxWeapon.GbxBrainAspect_UseWeapon
// 0x0020 (0x00F8 - 0x00D8)
struct FGbxBrainAspect_UseWeapon final : public FGbxBrainAspect
{
public:
	uint8                                         Pad_D8[0x20];                                      // 0x00D8(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainAspect_UseWeapon;

// ScriptStruct GbxWeapon.GbxBrainTaskSettings_CoverAttack
// 0x0358 (0x04F0 - 0x0198)
struct FGbxBrainTaskSettings_CoverAttack final : public FGbxBrainTaskSettings_CompositeQuery
{
public:
	struct FCoverUseParams                        UseParams;                                         // 0x0198(0x0110)(Edit, NativeAccessSpecifierPrivate)
	bool                                          bCanFireWhileMoving;                               // 0x02A8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bMustHaveUsableWeapon;                             // 0x02A9(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2AA[0x2];                                      // 0x02AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAIHeldFilter                       WeaponFilter;                                      // 0x02AC(0x000C)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FGbxParam                              target;                                            // 0x02B8(0x0038)(Edit, NativeAccessSpecifierPrivate)
	FGbxDefPtrProperty_                           TakeCoverDialogEvent;                              // 0x02F0(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EGbxBrainRotationPreset                       RotationWhileMoving;                               // 0x0308(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_309[0x7];                                      // 0x0309(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGpsQueryRunData                       Query;                                             // 0x0310(0x01E0)(Edit, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxBrainTaskSettings_CoverAttack;

// ScriptStruct GbxWeapon.GbxBrainTaskSettings_Hide
// 0x0320 (0x04B8 - 0x0198)
struct FGbxBrainTaskSettings_Hide final : public FGbxBrainTaskSettings_CompositeQuery
{
public:
	struct FGbxParam                              target;                                            // 0x0198(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGpsQueryRunData                       HidingSpotQuery;                                   // 0x01D0(0x01E0)(Edit, NativeAccessSpecifierPublic)
	bool                                          bFaceTargetWhileMoving;                            // 0x03B0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShootTargetWhileMoving;                           // 0x03B1(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFaceTargetWhileHiding;                            // 0x03B2(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3B3[0x5];                                      // 0x03B3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              HideDuration;                                      // 0x03B8(0x0038)(Edit, NativeAccessSpecifierPublic)
	bool                                          bUseHideDuration;                                  // 0x03F0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseHideAction;                                    // 0x03F1(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3F2[0x6];                                      // 0x03F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxTrickRef                           HideAction;                                        // 0x03F8(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FGbxParam                              HideActionCooldown;                                // 0x0410(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              HideActionCount;                                   // 0x0448(0x0038)(Edit, AdvancedDisplay, NativeAccessSpecifierPublic)
	struct FGbxParam                              HideActionPlayRate;                                // 0x0480(0x0038)(Edit, AdvancedDisplay, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxBrainTaskSettings_Hide;

// ScriptStruct GbxWeapon.GbxBrainTaskSettings_Wait
// 0x0550 (0x06E8 - 0x0198)
struct FGbxBrainTaskSettings_Wait final : public FGbxBrainTaskSettings_Composite
{
public:
	struct FGbxParam                              target;                                            // 0x0198(0x0038)(Edit, NativeAccessSpecifierPublic)
	bool                                          bAllowRotateBody;                                  // 0x01D0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAllowRotateAim;                                   // 0x01D1(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAllowRotateHead;                                  // 0x01D2(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAllowRotateEyes;                                  // 0x01D3(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D4[0x4];                                      // 0x01D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              DesiredBodyAngle;                                  // 0x01D8(0x0038)(Edit, AdvancedDisplay, NativeAccessSpecifierPublic)
	bool                                          bUseDesiredBodyAngle;                              // 0x0210(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAllowWeaponFire;                                  // 0x0211(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_212[0x6];                                      // 0x0212(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAIWeaponUseSettings                   WeaponUseSettingsOverrides;                        // 0x0218(0x04C0)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FGbxAIHeldFilter                       WeaponFilter;                                      // 0x06D8(0x000C)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_6E4[0x4];                                      // 0x06E4(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainTaskSettings_Wait;

// ScriptStruct GbxWeapon.GbxBrainTaskSettings_WeaponAttack
// 0x06E0 (0x0878 - 0x0198)
struct FGbxBrainTaskSettings_WeaponAttack final : public FGbxBrainTaskSettings_CompositeQuery
{
public:
	struct FGbxParam                              target;                                            // 0x0198(0x0038)(Edit, NativeAccessSpecifierPrivate)
	bool                                          bCanMoveIntoPosition;                              // 0x01D0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bCanFireWhileMoving;                               // 0x01D1(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EGbxBrainRotationPreset                       RotationWhileMoving;                               // 0x01D2(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EGbxBrainRotationPreset                       RotationWhileStill;                                // 0x01D3(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1D4[0x4];                                      // 0x01D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGpsQueryRunData                       Query;                                             // 0x01D8(0x01E0)(Edit, NativeAccessSpecifierPrivate)
	struct FAIWeaponUseSettings                   AIWeaponOverrides;                                 // 0x03B8(0x04C0)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxBrainTaskSettings_WeaponAttack;

// ScriptStruct GbxWeapon.GbxBrainTaskSettings_WeaponAttack_v2
// 0x0F48 (0x10E0 - 0x0198)
struct FGbxBrainTaskSettings_WeaponAttack_v2 final : public FGbxBrainTaskSettings_CompositeQuery
{
public:
	struct FAIWeaponUseSettings                   AIWeaponOverrides;                                 // 0x0198(0x04C0)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FGbxAIHeldFilter                       WeaponFilter;                                      // 0x0658(0x000C)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_664[0x4];                                      // 0x0664(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              BoundMinRange;                                     // 0x0668(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              BoundMaxRange;                                     // 0x06A0(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              DesiredHeightMin;                                  // 0x06D8(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              DesiredHeightMax;                                  // 0x0710(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              ProjectUpOffset;                                   // 0x0748(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              BoundCooldown;                                     // 0x0780(0x0038)(Edit, NativeAccessSpecifierPublic)
	bool                                          bUseTicketForBound;                                // 0x07B8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_7B9[0x7];                                      // 0x07B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAITicketUseData                    MoveTicket;                                        // 0x07C0(0x00B8)(Edit, NativeAccessSpecifierPublic)
	EGbxBrainRotationPreset                       RotationWhileStill;                                // 0x0878(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGbxBrainRotationPreset                       RotationWhileBound;                                // 0x0879(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCanFireWhileBounding;                             // 0x087A(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_87B[0x5];                                      // 0x087B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	FGbxDefPtrProperty_                           AdvancingDialogEvent;                              // 0x0880(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           RepositioningDialogEvent;                          // 0x0898(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCanDoBackup;                                      // 0x08B0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8B1[0x7];                                      // 0x08B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              BackupStartRange;                                  // 0x08B8(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              BackupCooldown;                                    // 0x08F0(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              WaitForTargetTime;                                 // 0x0928(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGpsQueryRunData                       SmthSmartQuery;                                    // 0x0960(0x01E0)(NativeAccessSpecifierPrivate)
	struct FGpsQueryRunData                       AdjustQuery;                                       // 0x0B40(0x01E0)(NativeAccessSpecifierPrivate)
	struct FGpsQueryRunData                       BackupQuery;                                       // 0x0D20(0x01E0)(NativeAccessSpecifierPrivate)
	struct FGpsQueryRunData                       BoundQuery;                                        // 0x0F00(0x01E0)(NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxBrainTaskSettings_WeaponAttack_v2;

// ScriptStruct GbxWeapon.GbxCondition_CanReloadWeapon
// 0x0000 (0x0010 - 0x0010)
struct FGbxCondition_CanReloadWeapon final : public FGbxConditionValueResolver
{
};
DUMPER7_ASSERTS_FGbxCondition_CanReloadWeapon;

// ScriptStruct GbxWeapon.GbxCondition_WeaponActiveSlot
// 0x0008 (0x0018 - 0x0010)
struct FGbxCondition_WeaponActiveSlot final : public FGbxConditionValueResolver
{
public:
	int32                                         ActiveSlot;                                        // 0x0010(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxCondition_WeaponActiveSlot;

// ScriptStruct GbxWeapon.GbxCondition_WeaponAmmoCount
// 0x0008 (0x0018 - 0x0010)
struct FGbxCondition_WeaponAmmoCount final : public FGbxConditionValueResolver
{
public:
	int32                                         Count;                                             // 0x0010(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          GreaterCheck;                                      // 0x0014(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxCondition_WeaponAmmoCount;

// ScriptStruct GbxWeapon.GbxCondition_WeaponHeldComponent
// 0x0008 (0x0018 - 0x0010)
struct FGbxCondition_WeaponHeldComponent final : public FGbxConditionValueResolver
{
public:
	class FName                                   Identifier;                                        // 0x0010(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxCondition_WeaponHeldComponent;

// ScriptStruct GbxWeapon.GbxCondition_WeaponUseMode
// 0x0008 (0x0018 - 0x0010)
struct FGbxCondition_WeaponUseMode final : public FGbxConditionValueResolver
{
public:
	uint8                                         Mode;                                              // 0x0010(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxCondition_WeaponUseMode;

// ScriptStruct GbxWeapon.GbxCondition_WeaponZoom
// 0x0008 (0x0018 - 0x0010)
struct FGbxCondition_WeaponZoom final : public FGbxConditionValueResolver
{
public:
	bool                                          bIsZoomedIn;                                       // 0x0010(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bIncludeTransition;                                // 0x0011(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxCondition_WeaponZoom;

// ScriptStruct GbxWeapon.GpsGeneratorSettings_TargetingOwner
// 0x0000 (0x0040 - 0x0040)
struct FGpsGeneratorSettings_TargetingOwner final : public FGpsGeneratorSettings
{
};
DUMPER7_ASSERTS_FGpsGeneratorSettings_TargetingOwner;

// ScriptStruct GbxWeapon.GpsGenerator_TargetingOwner
// 0x0390 (0x07A8 - 0x0418)
struct FGpsGenerator_TargetingOwner final : public FGpsGenerator
{
public:
	uint8                                         Pad_418[0x390];                                    // 0x0418(0x0390)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsGenerator_TargetingOwner;

// ScriptStruct GbxWeapon.GpsGeneratorSettings_WeaponTargetLocks
// 0x0008 (0x0048 - 0x0040)
struct FGpsGeneratorSettings_WeaponTargetLocks final : public FGpsGeneratorSettings
{
public:
	EWeaponTargetLockContext                      SourceContext;                                     // 0x0040(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EWeaponTargetLockChannel                      SourceChannel;                                     // 0x0041(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsGeneratorSettings_WeaponTargetLocks;

// ScriptStruct GbxWeapon.GpsGenerator_WeaponTargetLocks
// 0x0390 (0x07A8 - 0x0418)
struct FGpsGenerator_WeaponTargetLocks final : public FGpsGenerator
{
public:
	uint8                                         Pad_418[0x390];                                    // 0x0418(0x0390)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsGenerator_WeaponTargetLocks;

// ScriptStruct GbxWeapon.GpsTestSettings_WeaponTargetLockScoringBoost
// 0x0008 (0x0088 - 0x0080)
struct FGpsTestSettings_WeaponTargetLockScoringBoost final : public FGpsTestSettings
{
public:
	float                                         Boost;                                             // 0x0080(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EWeaponTargetLockContext                      SourceContext;                                     // 0x0084(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EWeaponTargetLockChannel                      SourceChannel;                                     // 0x0085(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_86[0x2];                                       // 0x0086(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsTestSettings_WeaponTargetLockScoringBoost;

// ScriptStruct GbxWeapon.GpsTest_WeaponTargetLockScoringBoost
// 0x0000 (0x0060 - 0x0060)
struct FGpsTest_WeaponTargetLockScoringBoost final : public FGpsTest
{
};
DUMPER7_ASSERTS_FGpsTest_WeaponTargetLockScoringBoost;

// ScriptStruct GbxWeapon.ShotModifierData
// 0x0210 (0x0218 - 0x0008)
struct FShotModifierData final : public FGbxHasStructType
{
public:
	uint16                                        ModifierFlags;                                     // 0x0008(0x0002)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bModifyDamage;                                     // 0x000A(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAttributeInit                      DamageModifier;                                    // 0x0010(0x0050)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	EShotDamageModifierType                       DamageModifierType;                                // 0x0060(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDistributeBetweenProjectiles;                     // 0x0064(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	FGameDataHandleProperty_                      DamageType;                                        // 0x0068(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAppendDamageSource;                               // 0x0080(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDamageSourceContainer                 DamageSource;                                      // 0x0088(0x0040)(Edit, NativeAccessSpecifierPublic)
	struct FDamageTags                            DamageTags;                                        // 0x00C8(0x0020)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FGbxInlineStruct>               ConditionalModifiers;                              // 0x00E8(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FGbxAttributeInit                      ProxyRadius;                                       // 0x00F8(0x0050)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bTriggerEveryXShots;                               // 0x0148(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAttributeInit                      TriggerEveryXShots;                                // 0x0150(0x0050)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bUseRandomChance;                                  // 0x01A0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A1[0x7];                                      // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAttributeInit                      RandomChance;                                      // 0x01A8(0x0050)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bRefundShotCostWhenTriggered;                      // 0x01F8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1F9[0x7];                                      // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FImpactEffectSelection                 ImpactEffect;                                      // 0x0200(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FShotModifierData;

// ScriptStruct GbxWeapon.ShotModifierDef
// 0x0018 (0x0030 - 0x0018)
struct FShotModifierDef final : public FGbxDef
{
public:
	struct FGbxInlineStruct                       Modifier;                                          // 0x0018(0x0018)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FShotModifierDef;

// ScriptStruct GbxWeapon.ShotModifierGameDataCategories_DONTUSE
// 0x0001 (0x0001 - 0x0000)
struct FShotModifierGameDataCategories_DONTUSE final
{
public:
	uint8                                         Pad_0[0x1];                                        // 0x0000(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FShotModifierGameDataCategories_DONTUSE;

// ScriptStruct GbxWeapon.WeaponClassData
// 0x0148 (0x0150 - 0x0008)
struct FWeaponClassData : public FInventoryTypeClassData
{
public:
	class FName                                   BodyAnimTag;                                       // 0x0008(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxAttributeInit                      EquipTime;                                         // 0x0010(0x0050)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FGbxAttributeInit                      PutDownTime;                                       // 0x0060(0x0050)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FGbxAttributeInit                      SwitchModeTime;                                    // 0x00B0(0x0050)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	float                                         SwitchModeCompletePercent;                         // 0x0100(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PostSprintUseDelay;                                // 0x0104(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         EquipToSwitchModeBlendTime;                        // 0x0108(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCanZoomWhileEquipping;                            // 0x010C(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_10D[0x3];                                      // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	FGameDataHandleProperty_                      audioprovider;                                     // 0x0110(0x0018)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UWeaponTriggerFeedback>  ClassTriggerFeedback;                              // 0x0128(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FWeaponClassData;

// ScriptStruct GbxWeapon.ReplicatedAmmoState
// 0x0008 (0x0008 - 0x0000)
struct FReplicatedAmmoState final
{
public:
	int32                                         LoadedAmmo;                                        // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CurrentRegenDelay;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FReplicatedAmmoState;

// ScriptStruct GbxWeapon.WeaponAttributeContextResolver
// 0x0030 (0x0038 - 0x0008)
struct FWeaponAttributeContextResolver : public FAttributeContextResolver
{
public:
	TSoftClassPtr<class UClass>                   BehaviorTypeToFurtherResolveTo;                    // 0x0008(0x0028)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint32                                        usemodebitmask;                                    // 0x0030(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FWeaponAttributeContextResolver;

// ScriptStruct GbxWeapon.WeaponAttributeEffectAspect
// 0x0010 (0x00D0 - 0x00C0)
struct FWeaponAttributeEffectAspect : public FAttributeEffectAspect
{
public:
	TArray<struct FUseModeAttributeEffects>       UseModeAttributeEffects;                           // 0x00C0(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FWeaponAttributeEffectAspect;

// ScriptStruct GbxWeapon.WeaponAudioProviderRTPCData
// 0x0028 (0x0028 - 0x0000)
struct alignas(0x08) FWeaponAudioProviderRTPCData final
{
public:
	FGbxDefPtrProperty_                           Rtpc;                                              // 0x0000(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Value;                                             // 0x0018(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0xC];                                       // 0x001C(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FWeaponAudioProviderRTPCData;

// ScriptStruct GbxWeapon.WeaponShellCasingAudioParameters
// 0x0050 (0x0050 - 0x0000)
struct alignas(0x08) FWeaponShellCasingAudioParameters final
{
public:
	FGbxDefPtrProperty_                           ShellCasingWwiseEvent;                             // 0x0000(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSetEvent;                                         // 0x0018(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   EjectionSocket;                                    // 0x001C(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSetSocket;                                        // 0x0024(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         EjectDistance;                                     // 0x0028(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSetDistance;                                      // 0x002C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D[0x1];                                       // 0x002D(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          AmbidextrousEjection;                              // 0x002E(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSetAmbidexterity;                                 // 0x002F(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_30[0x4];                                       // 0x0030(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ImpactDelay;                                       // 0x0034(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSetDelay;                                         // 0x0038(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x1];                                       // 0x0039(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bSetModeMask;                                      // 0x003A(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3B[0x1];                                       // 0x003B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ModeMask;                                          // 0x003C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_40[0x1];                                       // 0x0040(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bSetScope;                                         // 0x0041(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_42[0x2];                                       // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ScopeMask;                                         // 0x0044(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_48[0x8];                                       // 0x0048(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FWeaponShellCasingAudioParameters;

// ScriptStruct GbxWeapon.WeaponAudioBodyLoop
// 0x0070 (0x0070 - 0x0000)
struct alignas(0x08) FWeaponAudioBodyLoop final
{
public:
	int32                                         ActiveStates;                                      // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ModeMask;                                          // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           LoopEvent;                                         // 0x0008(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           StopEvent;                                         // 0x0020(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   socket;                                            // 0x0038(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseEmitterTag;                                    // 0x0040(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   EmitterTag;                                        // 0x0044(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4C[0x24];                                      // 0x004C(0x0024)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FWeaponAudioBodyLoop;

// ScriptStruct GbxWeapon.WeaponAudioHoverParams
// 0x0048 (0x0048 - 0x0000)
struct alignas(0x08) FWeaponAudioHoverParams final
{
public:
	FGbxDefPtrProperty_                           OnHoverStart;                                      // 0x0000(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSetStartEvent;                                    // 0x0018(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FGbxDefPtrProperty_                           OnHoverStop;                                       // 0x0020(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSetStopEvent;                                     // 0x0038(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   EmitterTag;                                        // 0x003C(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSetEmitterTag;                                    // 0x0044(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FWeaponAudioHoverParams;

// ScriptStruct GbxWeapon.WeaponAudioAspect
// 0x0198 (0x01C8 - 0x0030)
struct FWeaponAudioAspect : public FInventoryAspect
{
public:
	TArray<struct FWeaponFireAudioBehavior>       ConfigBehaviors;                                   // 0x0030(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FWeaponFireAudioBehavior>       PreFireBehaviors;                                  // 0x0040(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FWeaponFireAudioBehavior>       WeaponFireBehaviors;                               // 0x0050(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FWeaponFireAudioBehavior>       PostFireBehaviors;                                 // 0x0060(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FWeaponFireAudioBehavior>       DryFireBehaviors;                                  // 0x0070(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FWeaponFireAudioBehavior>       ZoomEnterBehaviors;                                // 0x0080(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FWeaponFireAudioBehavior>       ZoomedBehaviors;                                   // 0x0090(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FWeaponFireAudioBehavior>       ZoomExitBehaviors;                                 // 0x00A0(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FWeaponAudioProviderRTPCData>   Configuration;                                     // 0x00B0(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TMap<struct FGameplayTag, FGbxDefPtrProperty_> SoundTags;                                        // 0x00C0(0x0050)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FWeaponAudioBodyLoop>           BodyLoops;                                         // 0x0110(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FWeaponShellCasingAudioParameters      ShellCasingParams;                                 // 0x0120(0x0050)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponAudioHoverParams                HoverParams;                                       // 0x0170(0x0048)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FWwiseGameParameterAttributeContainer> AttributeBoundRtpcs;                        // 0x01B8(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FWeaponAudioAspect;

// ScriptStruct GbxWeapon.WeaponAudioProvider
// 0x0540 (0x0840 - 0x0300)
struct FWeaponAudioProvider : public FGbxDialogAudioProvider
{
public:
	uint8                                         Pad_300[0x540];                                    // 0x0300(0x0540)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FWeaponAudioProvider;

// ScriptStruct GbxWeapon.WeaponAudioParams
// 0x0168 (0x0168 - 0x0000)
struct alignas(0x08) FWeaponAudioParams final
{
public:
	FGbxDefPtrProperty_                           Time_Fired;                                        // 0x0000(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           Shots_Fired;                                       // 0x0018(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           Is_Firing;                                         // 0x0030(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           Fire_Rate;                                         // 0x0048(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           damage;                                            // 0x0060(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           Accuracy;                                          // 0x0078(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           Ammo_Count;                                        // 0x0090(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           Ammo_Pool;                                         // 0x00A8(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           Heat;                                              // 0x00C0(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           Heat2;                                             // 0x00D8(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           Overheat;                                          // 0x00F0(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           Overheat2;                                         // 0x0108(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           AimDownSights;                                     // 0x0120(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           TargetLock;                                        // 0x0138(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           TargetDistance;                                    // 0x0150(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FWeaponAudioParams;

// ScriptStruct GbxWeapon.WeaponAudioProviderDef
// 0x02C8 (0x0410 - 0x0148)
struct FWeaponAudioProviderDef : public FGbxAudioProviderDef
{
public:
	TArray<struct FWeaponFireAudioBehavior>       ConfigBehaviors;                                   // 0x0148(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FWeaponFireAudioBehavior>       PreFireBehaviors;                                  // 0x0158(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FWeaponFireAudioBehavior>       WeaponFireBehaviors;                               // 0x0168(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FWeaponFireAudioBehavior>       PostFireBehaviors;                                 // 0x0178(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FWeaponFireAudioBehavior>       DryFireBehaviors;                                  // 0x0188(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FWeaponFireAudioBehavior>       ZoomEnterBehaviors;                                // 0x0198(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FWeaponFireAudioBehavior>       ZoomedBehaviors;                                   // 0x01A8(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FWeaponFireAudioBehavior>       ZoomExitBehaviors;                                 // 0x01B8(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FWeaponAudioProviderRTPCData>   Configuration;                                     // 0x01C8(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FWeaponAudioParams                     WeaponAudioParams;                                 // 0x01D8(0x0168)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FWeaponAudioBodyLoop>           BodyLoops;                                         // 0x0340(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FFoleyLoopInfo                         FoleyLoop;                                         // 0x0350(0x00C0)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FWeaponAudioProviderDef;

// ScriptStruct GbxWeapon.WeaponBehaviorDef
// 0x0028 (0x0030 - 0x0008)
struct FWeaponBehaviorDef : public FGbxHasStructType
{
public:
	TSoftClassPtr<class UClass>                   BehaviorClass;                                     // 0x0008(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FWeaponBehaviorDef;

// ScriptStruct GbxWeapon.WeaponBehaviorDef_Ammo
// 0x00B0 (0x00E0 - 0x0030)
struct FWeaponBehaviorDef_Ammo : public FWeaponBehaviorDef
{
public:
	uint8                                         bAutoSwitchModeWhenOutOfAmmo : 1;                  // 0x0030(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bSyncAmmo : 1;                                     // 0x0030(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bLimitMaxLoadedAmmoModifiers : 1;                  // 0x0030(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	EAmmoRegenType                                RegenType;                                         // 0x0034(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxAttributeInit                      RegenRate;                                         // 0x0038(0x0050)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FGbxAttributeInit                      ConsumeRegenDelay;                                 // 0x0088(0x0050)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	EAmmoRegenCondition                           RegenCondition;                                    // 0x00D8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FWeaponBehaviorDef_Ammo;

// ScriptStruct GbxWeapon.WeaponBehaviorDef_DamageModifier
// 0x0008 (0x0038 - 0x0030)
struct FWeaponBehaviorDef_DamageModifier final : public FWeaponBehaviorDef
{
public:
	float                                         CriticalHitMultiplier;                             // 0x0030(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FWeaponBehaviorDef_DamageModifier;

// ScriptStruct GbxWeapon.WeaponBehaviorDef_Use
// 0x0060 (0x0090 - 0x0030)
struct FWeaponBehaviorDef_Use : public FWeaponBehaviorDef
{
public:
	uint8                                         UsedSwitchModeOption;                              // 0x0030(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bClearUseInputWhenSwitchingModes : 1;              // 0x0031(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bSwitchModeAfterEveryUse : 1;                      // 0x0031(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bActivateModeWhenZoomed : 1;                       // 0x0031(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bPlaySwitchAnimationOnEquip : 1;                   // 0x0031(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bUseAnimationSwitchModeTime : 1;                   // 0x0031(0x0001)(BitIndex: 0x04, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bUseBurstTime : 1;                                 // 0x0031(0x0001)(BitIndex: 0x05, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bUseWeaponSpread : 1;                              // 0x0031(0x0001)(BitIndex: 0x06, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_32[0x1E];                                      // 0x0032(0x001E)(Fixing Size After Last Property [ Dumper-7 ])
	FGameDataHandleProperty_                      crosshair;                                         // 0x0050(0x0018)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      ZoomedCrosshair;                                   // 0x0068(0x0018)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   UseModeText;                                       // 0x0080(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FWeaponBehaviorDef_Use;

// ScriptStruct GbxWeapon.WeaponBehaviorDef_Fire
// 0x0248 (0x02D8 - 0x0090)
struct FWeaponBehaviorDef_Fire : public FWeaponBehaviorDef_Use
{
public:
	int32                                         AutomaticBurstCount;                               // 0x0090(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BurstFireDelay;                                    // 0x0094(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                           FireSockets;                                       // 0x0098(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                         MinFireRateScale;                                  // 0x00A8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinFireRatePercentToFire;                          // 0x00AC(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UCurveFloat>             FireRateCurve;                                     // 0x00B0(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ShotAmmoCost;                                      // 0x00D8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bConsumeClip;                                      // 0x00DC(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_DD[0x3];                                       // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         BurstAccuracyImpulseScale;                         // 0x00E0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FGameDataHandleProperty_                      DamageType;                                        // 0x00E8(0x0018)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDamageSourceContainer                 DamageSource;                                      // 0x0100(0x0040)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FDamageTags                            DamageTags;                                        // 0x0140(0x0020)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      Recoil;                                            // 0x0160(0x0018)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FForceSelection                        ImpactForce;                                       // 0x0178(0x0048)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactEffectSelection                 ImpactEffect;                                      // 0x01C0(0x0018)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UCurveFloat>             ShotStrengthDamageCurve;                           // 0x01D8(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UCurveFloat>             ShotStrengthDamageRadiusCurve;                     // 0x0200(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UCurveFloat>             ShotStrengthImpactForceCurve;                      // 0x0228(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      FireFeedback;                                      // 0x0250(0x0018)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      FireRateFeedback;                                  // 0x0268(0x0018)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   FeedbackSocket;                                    // 0x0280(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UWeaponTriggerFeedback>  ReactiveTriggerSettings;                           // 0x0288(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAutoBurst;                                        // 0x02B0(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFullFireSocketCycle;                              // 0x02B1(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLockOntoTarget;                                   // 0x02B2(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseShotStrength;                                  // 0x02B3(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLoopingFireFeedback;                              // 0x02B4(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPlayFeedbackAtLocation;                           // 0x02B5(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPlayFeedbackWithFireRate;                         // 0x02B6(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNoRicochet;                                       // 0x02B7(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCanSimulateShotsOnClient;                         // 0x02B8(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bForceEmptyReload;                                 // 0x02B9(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2BA[0x1E];                                     // 0x02BA(0x001E)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FWeaponBehaviorDef_Fire;

// ScriptStruct GbxWeapon.WeaponRecoilDef
// 0x00A0 (0x00B8 - 0x0018)
struct FWeaponRecoilDef final : public FGbxDef
{
public:
	struct FVector2D                              min_0;                                             // 0x0018(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              MAX;                                               // 0x0028(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              FirstShotScale;                                    // 0x0038(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UCurveFloat>             ShotCurve;                                         // 0x0048(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UCurveFloat>             InvertedShotCurve;                                 // 0x0070(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ScaleShotCurveByMagazinePercent;                   // 0x0098(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ZoomScale;                                         // 0x009C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ZoomFOVMinScale;                                   // 0x00A0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         speed;                                             // 0x00A4(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RecoveryTime;                                      // 0x00A8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RecoveryDelayTime;                                 // 0x00AC(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReachedTargetTolerance;                            // 0x00B0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bScaleByFOV : 1;                                   // 0x00B4(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bStartRecoveryWhenFiringEnds : 1;                  // 0x00B4(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bScaleShotCurveByMagazineSize : 1;                 // 0x00B4(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FWeaponRecoilDef;

// ScriptStruct GbxWeapon.WeaponBehaviorDef_Heat
// 0x01B0 (0x01E0 - 0x0030)
struct FWeaponBehaviorDef_Heat final : public FWeaponBehaviorDef
{
public:
	struct FGbxAttributeInit                      CooldownRate;                                      // 0x0030(0x0050)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FGbxAttributeInit                      CooldownDelay;                                     // 0x0080(0x0050)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         bSimulateOnClients : 1;                            // 0x00D0(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bSimulateOnAI : 1;                                 // 0x00D0(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bCanOverheat : 1;                                  // 0x00D0(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bCanUseWhenOverheated : 1;                         // 0x00D0(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAttributeInit                      OverheatTime;                                      // 0x00D8(0x0050)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FGbxAttributeInit                      OverheatCooldownDelay;                             // 0x0128(0x0050)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FDamageTags                            OverheatDamageTags;                                // 0x0178(0x0020)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FName                                   MaterialParamName;                                 // 0x0198(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UCurveFloat>             MaterialParamCurve;                                // 0x01A0(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bStartCooldownEffectOnEndUse : 1;                  // 0x01C8(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_1C9[0x3];                                      // 0x01C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CooldownEffectType;                                // 0x01CC(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CooldownEffectOnThreshold;                         // 0x01D4(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CooldownEffectOffThreshold;                        // 0x01D8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1DC[0x4];                                      // 0x01DC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FWeaponBehaviorDef_Heat;

// ScriptStruct GbxWeapon.WeaponBehaviorDef_PreUse
// 0x0000 (0x0030 - 0x0030)
struct FWeaponBehaviorDef_PreUse : public FWeaponBehaviorDef
{
};
DUMPER7_ASSERTS_FWeaponBehaviorDef_PreUse;

// ScriptStruct GbxWeapon.WeaponBehaviorDef_StatusEffectModifier
// 0x0000 (0x0030 - 0x0030)
struct FWeaponBehaviorDef_StatusEffectModifier : public FWeaponBehaviorDef
{
};
DUMPER7_ASSERTS_FWeaponBehaviorDef_StatusEffectModifier;

// ScriptStruct GbxWeapon.WeaponBehaviorDef_Sway
// 0x0038 (0x0068 - 0x0030)
struct FWeaponBehaviorDef_Sway final : public FWeaponBehaviorDef
{
public:
	float                                         scale;                                             // 0x0030(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AccuracyScale;                                     // 0x0034(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ZoomScale;                                         // 0x0038(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ZoomAccuracyScale;                                 // 0x003C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WidthScale;                                        // 0x0040(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HeightScale;                                       // 0x0044(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         speed;                                             // 0x0048(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Lacunarity;                                        // 0x004C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Persistence;                                       // 0x0050(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SmoothingSpeed;                                    // 0x0054(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ZoomSmoothTime;                                    // 0x0058(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FireSmoothTime;                                    // 0x005C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bApplyAccuracyScaleOnlyWhenFiring;                 // 0x0060(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MaxAccuracyPercent;                                // 0x0064(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FWeaponBehaviorDef_Sway;

// ScriptStruct GbxWeapon.VisibleAmmoEffectData
// 0x00C0 (0x00C0 - 0x0000)
struct FVisibleAmmoEffectData final
{
public:
	TSoftObjectPtr<class UFXSystemAsset>          Effect;                                            // 0x0000(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      EffectCollection;                                  // 0x0028(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                             RelativeTransform;                                 // 0x0040(0x0060)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGbxParticleParameter>          EffectParameters;                                  // 0x00A0(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FName                                   RegionSamplingParam;                               // 0x00B0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B8[0x8];                                       // 0x00B8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FVisibleAmmoEffectData;

// ScriptStruct GbxWeapon.WeaponBehaviorDef_VisibleAmmo
// 0x0200 (0x0230 - 0x0030)
struct FWeaponBehaviorDef_VisibleAmmo final : public FWeaponBehaviorDef
{
public:
	TArray<class FName>                           Bones;                                             // 0x0030(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FGbxAttributeInit                      BonesPerLoadedAmmo;                                // 0x0040(0x0050)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	EInventoryBodyVisibilityType                  MeshType;                                          // 0x0090(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EVisibleAmmoState                             InitialState;                                      // 0x0091(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EVisibleAmmoUpdateMethod                      UpdateMethod;                                      // 0x0092(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EVisibleAmmoUseModeType                       ShowOnUseMode;                                     // 0x0093(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ShowOnUseModeDelay;                                // 0x0094(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EVisibleAmmoUseModeType                       HideOnUseMode;                                     // 0x0098(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         HideOnUseModeDelay;                                // 0x009C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EInventoryUseMode                             VisibleUseMode;                                    // 0x00A0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A1[0xF];                                       // 0x00A1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVisibleAmmoEffectData                 HideEffect;                                        // 0x00B0(0x00C0)(Edit, NativeAccessSpecifierPublic)
	struct FVisibleAmmoEffectData                 ShowEffect;                                        // 0x0170(0x00C0)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FWeaponBehaviorDef_VisibleAmmo;

// ScriptStruct GbxWeapon.WeaponZoomLevel
// 0x0014 (0x0014 - 0x0000)
struct FWeaponZoomLevel final
{
public:
	float                                         DurationScale;                                     // 0x0000(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FOVScale;                                          // 0x0004(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FOVLerpPct;                                        // 0x0008(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ViewModelFOVScale;                                 // 0x000C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ShotOffsetLevelScale;                              // 0x0010(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FWeaponZoomLevel;

// ScriptStruct GbxWeapon.WeaponBehaviorDef_Zoom
// 0x00A8 (0x00D8 - 0x0030)
struct FWeaponBehaviorDef_Zoom : public FWeaponBehaviorDef
{
public:
	TArray<struct FWeaponZoomLevel>               ZoomLevels;                                        // 0x0030(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                         FlinchAnimationMagnitudeScale;                     // 0x0040(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bForceUnzoomWhenSwitchingModes : 1;                // 0x0044(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bUseSecondaryModeFOVModifier : 1;                  // 0x0044(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ZoomFOVScale;                                      // 0x0048(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ZoomDuration;                                      // 0x004C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ZoomShotOffsetScale;                               // 0x0050(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ViewModelLeadingScale;                             // 0x0054(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SecondaryModeFOVModifier;                          // 0x0058(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ModeTransitionDuration;                            // 0x005C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InstigatorAccuracyScale;                           // 0x0060(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bShowCrosshairWhenZoomed : 1;                      // 0x0064(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MuteMotionWeight;                                  // 0x0068(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bUseScopeSocket : 1;                               // 0x006C(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   EyeSocket;                                         // 0x0070(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   FrontScopeSocket;                                  // 0x0078(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   FrontSightSocket;                                  // 0x0080(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   RearSightSocket;                                   // 0x0088(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bApplyAttributesWhenFullyZoomed;                   // 0x0090(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGbxAttributeEffect>            attributeeffects;                                  // 0x0098(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FGbxAttributeEffect>            InstigatorAttributeEffects;                        // 0x00A8(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      UseFeedback;                                       // 0x00B8(0x0018)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         UseFeedbackScale;                                  // 0x00D0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FWeaponBehaviorDef_Zoom;

// ScriptStruct GbxWeapon.WeaponConsumedLoadedAmmoValueResolver
// 0x0000 (0x0008 - 0x0008)
struct FWeaponConsumedLoadedAmmoValueResolver final : public FAttributeValueResolver
{
};
DUMPER7_ASSERTS_FWeaponConsumedLoadedAmmoValueResolver;

// ScriptStruct GbxWeapon.WeaponLoadedAmmoPercentValueResolver
// 0x0008 (0x0010 - 0x0008)
struct FWeaponLoadedAmmoPercentValueResolver final : public FAttributeValueResolver
{
public:
	bool                                          bInvert;                                           // 0x0008(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FWeaponLoadedAmmoPercentValueResolver;

// ScriptStruct GbxWeapon.WeaponAmmoValueResolver
// 0x0008 (0x0010 - 0x0008)
struct FWeaponAmmoValueResolver final : public FAttributeValueResolver
{
public:
	EWeaponAmmoResolverValue                      Value;                                             // 0x0008(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bInvert;                                           // 0x0009(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bLimitModifiers;                                   // 0x000A(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FWeaponAmmoValueResolver;

// ScriptStruct GbxWeapon.WeaponFireRateAccelerationValueResolver
// 0x0000 (0x0008 - 0x0008)
struct FWeaponFireRateAccelerationValueResolver final : public FAttributeValueResolver
{
};
DUMPER7_ASSERTS_FWeaponFireRateAccelerationValueResolver;

// ScriptStruct GbxWeapon.WeaponDamageTypeAspect
// 0x0040 (0x0088 - 0x0048)
struct FWeaponDamageTypeAspect : public FDamageTypeAspect
{
public:
	int32                                         usemodebitmask;                                    // 0x0048(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FGameDataHandleProperty_                      ImpactEffect;                                      // 0x0050(0x0018)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDamageTags                            DamageTags;                                        // 0x0068(0x0020)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FWeaponDamageTypeAspect;

// ScriptStruct GbxWeapon.WeaponGlobals
// 0x0090 (0x00B0 - 0x0020)
struct FWeaponGlobals final : public FGbxGlobalDef
{
public:
	TArray<struct FGbxVector2DWaveform>           AccuracyPattern;                                   // 0x0020(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                         AccuracyPatternTimeScale;                          // 0x0030(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class USwayPatternData>        SwayPattern;                                       // 0x0038(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UWeaponTriggerFeedback>  DefaultTriggerFeedback;                            // 0x0060(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UGbxTrick>               DigistructOutTrick;                                // 0x0088(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FWeaponGlobals;

// ScriptStruct GbxWeapon.WeaponStateValueResolver
// 0x0008 (0x0010 - 0x0008)
struct FWeaponStateValueResolver final : public FAttributeValueResolver
{
public:
	bool                                          bInvert;                                           // 0x0008(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EResolverWeaponState                          State;                                             // 0x0009(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FWeaponStateValueResolver;

// ScriptStruct GbxWeapon.GbxContextParam_WeaponStatsPropertyResolver
// 0x0008 (0x0010 - 0x0008)
struct FGbxContextParam_WeaponStatsPropertyResolver final : public FGbxContextParam_CustomPropertyResolver
{
public:
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxContextParam_WeaponStatsPropertyResolver;

// ScriptStruct GbxWeapon.WeaponStatsContainer
// 0x00D8 (0x02E0 - 0x0208)
struct FWeaponStatsContainer final : public FInventoryStatsContainer
{
public:
	uint8                                         Pad_208[0xD8];                                     // 0x0208(0x00D8)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FWeaponStatsContainer;

// ScriptStruct GbxWeapon.WeaponStatsDef
// 0x0000 (0x0098 - 0x0098)
struct FWeaponStatsDef final : public FInventoryStatsDef
{
};
DUMPER7_ASSERTS_FWeaponStatsDef;

// ScriptStruct GbxWeapon.WeaponTargetLockValueResolver
// 0x0008 (0x0010 - 0x0008)
struct FWeaponTargetLockValueResolver final : public FAttributeValueResolver
{
public:
	EWeaponTargetLockChannel                      channel;                                           // 0x0008(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FWeaponTargetLockValueResolver;

// ScriptStruct GbxWeapon.WeaponTriggerFeedbackData
// 0x0008 (0x0008 - 0x0000)
struct FWeaponTriggerFeedbackData final
{
public:
	float                                         position;                                          // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         force;                                             // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FWeaponTriggerFeedbackData;

// ScriptStruct GbxWeapon.WeaponTriggerWeaponData
// 0x000C (0x000C - 0x0000)
struct FWeaponTriggerWeaponData final
{
public:
	float                                         StartPosition;                                     // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         EndPosition;                                       // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         force;                                             // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FWeaponTriggerWeaponData;

// ScriptStruct GbxWeapon.SlopeTriggerWeaponData
// 0x0010 (0x0010 - 0x0000)
struct FSlopeTriggerWeaponData final
{
public:
	float                                         StartPosition;                                     // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StartForce;                                        // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         EndPosition;                                       // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         EndForce;                                          // 0x000C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSlopeTriggerWeaponData;

// ScriptStruct GbxWeapon.WeaponTriggerVibrationData
// 0x000C (0x000C - 0x0000)
struct FWeaponTriggerVibrationData final
{
public:
	float                                         position;                                          // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Frequency;                                         // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Amplitude;                                         // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FWeaponTriggerVibrationData;

// ScriptStruct GbxWeapon.WeaponTriggerFireThreasholdData
// 0x0004 (0x0004 - 0x0000)
struct FWeaponTriggerFireThreasholdData final
{
public:
	float                                         position;                                          // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FWeaponTriggerFireThreasholdData;

// ScriptStruct GbxWeapon.WeaponAttachState
// 0x0010 (0x0010 - 0x0000)
struct FWeaponAttachState final
{
public:
	uint8                                         Pad_0[0x8];                                        // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  instigator;                                        // 0x0008(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FWeaponAttachState;

// ScriptStruct GbxWeapon.WeaponTargetLockResult
// 0x0040 (0x0040 - 0x0000)
struct FWeaponTargetLockResult final
{
public:
	TWeakObjectPtr<class AActor>                  Actor;                                             // 0x0000(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Offset;                                            // 0x0008(0x0018)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   socket;                                            // 0x0020(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               RotationOffset;                                    // 0x0028(0x0018)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FWeaponTargetLockResult;

// ScriptStruct GbxWeapon.WeaponUseModeAspect
// 0x0030 (0x0060 - 0x0030)
struct FWeaponUseModeAspect : public FInventoryAspect
{
public:
	int32                                         usemodebitmask;                                    // 0x0030(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         InputChannelBitmask;                               // 0x0034(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   UseModeTag;                                        // 0x0038(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRemoveUseModes;                                   // 0x0040(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxInlineStruct                       behavior;                                          // 0x0048(0x0018)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FWeaponUseModeAspect;

// ScriptStruct GbxWeapon.WeaponUseModeBehaviorAspect
// 0x0048 (0x0078 - 0x0030)
struct FWeaponUseModeBehaviorAspect : public FInventoryAspect
{
public:
	int32                                         usemodebitmask;                                    // 0x0030(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAdditive;                                         // 0x0034(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShareBetweenUseModes;                             // 0x0035(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRemoveFromUseModes;                               // 0x0036(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_37[0x1];                                       // 0x0037(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxInlineStruct                       behavior;                                          // 0x0038(0x0018)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	uint8                                         Pad_50[0x28];                                      // 0x0050(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FWeaponUseModeBehaviorAspect;

// ScriptStruct GbxWeapon.WeaponUseModeMaterialAspect
// 0x0040 (0x0070 - 0x0030)
struct FWeaponUseModeMaterialAspect : public FInventoryAspect
{
public:
	int32                                         usemodebitmask;                                    // 0x0030(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ComparisionTag;                                    // 0x0034(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BlendTime;                                         // 0x003C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FAspectMaterialVectorParameter> VectorParameters;                                  // 0x0040(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FAspectMaterialScalarParameter> ScalarParameters;                                  // 0x0050(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FAspectMaterialScalarParameter> SwitchParameters;                                  // 0x0060(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FWeaponUseModeMaterialAspect;

// ScriptStruct GbxWeapon.WeaponUseModeNameAspect
// 0x0018 (0x0048 - 0x0030)
struct FWeaponUseModeNameAspect : public FInventoryAspect
{
public:
	int32                                         usemodebitmask;                                    // 0x0030(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   UseModeText;                                       // 0x0038(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FWeaponUseModeNameAspect;

}

