#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GbxUICore

#include "Basic.hpp"

#include "GbxUICore_classes.hpp"
#include "GbxUICore_parameters.hpp"


namespace SDK
{

// Function GbxUICore.GbxLoadingScreenManager.RemoveLoadingScreen
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGbxUILoadingScreenHandle&       Handle                                                 (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UGbxLoadingScreenManager::RemoveLoadingScreen(struct FGbxUILoadingScreenHandle& Handle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GbxLoadingScreenManager", "RemoveLoadingScreen");

	Params::GbxLoadingScreenManager_RemoveLoadingScreen Parms{};

	Parms.Handle = std::move(Handle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Handle = std::move(Parms.Handle);
}


// Function GbxUICore.GbxLoadingScreenManager.RequestLoadingScreen
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGbxUILoadingScreenHandle&       Handle                                                 (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UGbxLoadingScreenManager::RequestLoadingScreen(struct FGbxUILoadingScreenHandle& Handle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GbxLoadingScreenManager", "RequestLoadingScreen");

	Params::GbxLoadingScreenManager_RequestLoadingScreen Parms{};

	Parms.Handle = std::move(Handle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Handle = std::move(Parms.Handle);
}


// Function GbxUICore.GbxUIPopupManager.RemovePopup
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGbxUIPopupHandle&               Handle                                                 (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UGbxUIPopupManager::RemovePopup(struct FGbxUIPopupHandle& Handle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GbxUIPopupManager", "RemovePopup");

	Params::GbxUIPopupManager_RemovePopup Parms{};

	Parms.Handle = std::move(Handle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Handle = std::move(Parms.Handle);
}


// Function GbxUICore.GbxUIPopupManager.RequestPopup
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGbxUIPopupHandle&               Handle                                                 (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FGbxUIPopupOptions&        options                                                (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UGbxUIPopupManager::RequestPopup(struct FGbxUIPopupHandle& Handle, const struct FGbxUIPopupOptions& options)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GbxUIPopupManager", "RequestPopup");

	Params::GbxUIPopupManager_RequestPopup Parms{};

	Parms.Handle = std::move(Handle);
	Parms.options = std::move(options);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Handle = std::move(Parms.Handle);
}


// Function GbxUICore.GbxUIPopupManager.UpdatePopup
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGbxUIPopupHandle&         Handle                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FGbxUIPopupOptions&        options                                                (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UGbxUIPopupManager::UpdatePopup(const struct FGbxUIPopupHandle& Handle, const struct FGbxUIPopupOptions& options)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GbxUIPopupManager", "UpdatePopup");

	Params::GbxUIPopupManager_UpdatePopup Parms{};

	Parms.Handle = std::move(Handle);
	Parms.options = std::move(options);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

