#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GbxUISettings

#include "Basic.hpp"

#include "GbxUISettings_structs.hpp"
#include "DeveloperSettings_classes.hpp"
#include "GbxGame_classes.hpp"
#include "GameSettings_classes.hpp"
#include "GameplayTags_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "SlateCore_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// Class GbxUISettings.GbxUIGameUserSettings
// 0x0048 (0x0288 - 0x0240)
class UGbxUIGameUserSettings : public UGbxGameUserSettings
{
public:
	int32                                         RecommendedGraphicsQualityMode;                    // 0x0240(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         OverrideGraphicsQualityMode;                       // 0x0244(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         Brightness;                                        // 0x0248(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         AntiAliasingMode;                                  // 0x024C(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         ScreenPercentage;                                  // 0x0250(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         SafeZoneScale;                                     // 0x0254(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bIsProfanityFilterOptional;                        // 0x0258(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_259[0x1F];                                     // 0x0259(0x001F)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class UInputSettingsGamepadPreset>> RegisteredGamepadPresets;              // 0x0278(0x0010)(Edit, ZeroConstructor, EditConst, Protected, UObjectWrapper, NativeAccessSpecifierProtected)

public:
	int32 GetDefaultGraphicsQualityMode();
	void SetBrightness(float NewBightness);
	void SetSafeZone(float Value);
	void SetScreenPercentage(float NewValue);

	float GetBrightness() const;
	int32 GetOverrideGraphicsQualityMode() const;
	int32 GetRecommendedGraphicsQualityMode() const;
	float GetSafeZone() const;
	float GetScreenPercentage() const;
	bool IsSafeZoneSet() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxUIGameUserSettings")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxUIGameUserSettings")
	}
	static class UGbxUIGameUserSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxUIGameUserSettings>();
	}
};
DUMPER7_ASSERTS_UGbxUIGameUserSettings;

// Class GbxUISettings.GbxUIPlatformEmulationSettings
// 0x0050 (0x0088 - 0x0038)
class UGbxUIPlatformEmulationSettings final : public UDeveloperSettingsBackedByCVars
{
public:
	struct FGameplayTagContainer                  AdditionalPlatformTraitsToEnable;                  // 0x0038(0x0020)(Edit, Config, NativeAccessSpecifierPrivate)
	struct FGameplayTagContainer                  AdditionalPlatformTraitsToSuppress;                // 0x0058(0x0020)(Edit, Config, NativeAccessSpecifierPrivate)
	class FName                                   PretendPlatform;                                   // 0x0078(0x0008)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                   PretendBaseDeviceProfile;                          // 0x0080(0x0008)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	TArray<class FName> GetKnownDeviceProfiles() const;
	TArray<class FName> GetKnownPlatformIds() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxUIPlatformEmulationSettings")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxUIPlatformEmulationSettings")
	}
	static class UGbxUIPlatformEmulationSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxUIPlatformEmulationSettings>();
	}
};
DUMPER7_ASSERTS_UGbxUIPlatformEmulationSettings;

// Class GbxUISettings.GbxUISaveGameSettings
// 0x00A0 (0x00C8 - 0x0028)
class UGbxUISaveGameSettings final : public USaveGame
{
public:
	uint8                                         Pad_28[0x4];                                       // 0x0028(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MasterVolume;                                      // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         MusicVolume;                                       // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         EffectsVolume;                                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         UIVolume;                                          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         DialogVolume;                                      // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                 DialogLanguage;                                    // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         DynamicRange;                                      // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bMono;                                             // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ESubtitlesSettings                            ShowSubtitles;                                     // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ESubtitlesTextSize                            SubtitlesTextSize;                                 // 0x0056(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ESubtitlesTextColor                           SubtitlesTextColor;                                // 0x0057(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ESubtitlesBackgroundOpacity                   SubtitlesBackgroundOpacity;                        // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bShowSpeakerName;                                  // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bShowSpeakerColor;                                 // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_5B[0x5];                                       // 0x005B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 PendingCulture;                                    // 0x0060(0x0010)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_70[0x1];                                       // 0x0070(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bInvertVerticalAxis;                               // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bHoldToSprint;                                     // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_73[0x5];                                       // 0x0073(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        ForceFeedbackScale;                                // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_80[0x18];                                      // 0x0080(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        GamepadSensitivity;                                // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                 GamepadPresetName;                                 // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	double                                        MouseSensitivity;                                  // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EColorVisionDeficiency                        ColorBlindMode;                                    // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ColorBlindStrength;                                // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ULocalPlayer*                           OwningPlayer;                                      // 0x00C0(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void SetColorBlindMode(EColorVisionDeficiency InMode);
	void SetColorBlindStrength(int32 InColorBlindStrength);
	void SetDialogLanguage(const class FString& NewValue);
	void SetDialogVolume(float NewValue);
	void SetDynamicRange(float NewValue);
	void SetEffectsVolume(float NewValue);
	void SetForceFeedbackScale(double NewValue);
	void SetGamepadPreset(const class FString& NewValue);
	void SetGamepadSensitivity(double NewValue);
	void SetHoldToSprint(bool NewValue);
	void SetInvertVerticalAxis(bool NewValue);
	void SetMasterVolume(float NewValue);
	void SetMono(bool NewValue);
	void SetMouseSensitivity(double NewValue);
	void SetMusicVolume(float NewValue);
	void SetShowSpeakerColor(bool NewValue);
	void SetShowSpeakerName(bool NewValue);
	void SetShowSubtitles(ESubtitlesSettings NewValue);
	void SetSubtitlesBackgroundOpacity(ESubtitlesBackgroundOpacity NewValue);
	void SetSubtitlesTextColor(ESubtitlesTextColor NewValue);
	void SetSubtitlesTextSize(ESubtitlesTextSize NewValue);
	void SetUIVolume(float NewValue);

	EColorVisionDeficiency GetColorBlindMode() const;
	int32 GetColorBlindStrength() const;
	class FString GetDialogLanguage() const;
	float GetDialogVolume() const;
	float GetDynamicRange() const;
	float GetEffectsVolume() const;
	double GetForceFeedbackScale() const;
	class FString GetGamepadPreset() const;
	double GetGamepadSensitivity() const;
	bool GetHoldToSprint() const;
	bool GetInvertVerticalAxis() const;
	float GetMasterVolume() const;
	bool GetMono() const;
	double GetMouseSensitivity() const;
	float GetMusicVolume() const;
	bool GetShowSpeakerColor() const;
	bool GetShowSpeakerName() const;
	ESubtitlesSettings GetShowSubtitles() const;
	ESubtitlesBackgroundOpacity GetSubtitlesBackgroundOpacity() const;
	ESubtitlesTextColor GetSubtitlesTextColor() const;
	ESubtitlesTextSize GetSubtitlesTextSize() const;
	bool GetToggleToSprint() const;
	float GetUIVolume() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxUISaveGameSettings")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxUISaveGameSettings")
	}
	static class UGbxUISaveGameSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxUISaveGameSettings>();
	}
};
DUMPER7_ASSERTS_UGbxUISaveGameSettings;

// Class GbxUISettings.GbxUISettingValueDiscrete_SafeZoneValue
// 0x0000 (0x0200 - 0x0200)
class UGbxUISettingValueDiscrete_SafeZoneValue final : public UGameSettingValueScalarDynamic
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxUISettingValueDiscrete_SafeZoneValue")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxUISettingValueDiscrete_SafeZoneValue")
	}
	static class UGbxUISettingValueDiscrete_SafeZoneValue* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxUISettingValueDiscrete_SafeZoneValue>();
	}
};
DUMPER7_ASSERTS_UGbxUISettingValueDiscrete_SafeZoneValue;

// Class GbxUISettings.GbxUISettingAction_SafeZoneEditor
// 0x0008 (0x0188 - 0x0180)
class UGbxUISettingAction_SafeZoneEditor final : public UGameSettingAction
{
public:
	class UGbxUISettingValueDiscrete_SafeZoneValue* SafeZoneValueSetting;                            // 0x0180(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxUISettingAction_SafeZoneEditor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxUISettingAction_SafeZoneEditor")
	}
	static class UGbxUISettingAction_SafeZoneEditor* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxUISettingAction_SafeZoneEditor>();
	}
};
DUMPER7_ASSERTS_UGbxUISettingAction_SafeZoneEditor;

// Class GbxUISettings.GbxUISettingKeyboardInput
// 0x00A0 (0x01D8 - 0x0138)
class UGbxUISettingKeyboardInput : public UGameSettingValue
{
public:
	uint8                                         Pad_138[0xA0];                                     // 0x0138(0x00A0)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxUISettingKeyboardInput")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxUISettingKeyboardInput")
	}
	static class UGbxUISettingKeyboardInput* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxUISettingKeyboardInput>();
	}
};
DUMPER7_ASSERTS_UGbxUISettingKeyboardInput;

// Class GbxUISettings.GbxUISettingRegistry
// 0x0000 (0x00B0 - 0x00B0)
class UGbxUISettingRegistry final : public UGameSettingRegistry
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxUISettingRegistry")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxUISettingRegistry")
	}
	static class UGbxUISettingRegistry* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxUISettingRegistry>();
	}
};
DUMPER7_ASSERTS_UGbxUISettingRegistry;

// Class GbxUISettings.GbxUISettingsLocalPlayerInterface
// 0x0000 (0x0000 - 0x0000)
class IGbxUISettingsLocalPlayerInterface final
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxUISettingsLocalPlayerInterface")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxUISettingsLocalPlayerInterface")
	}
	static class IGbxUISettingsLocalPlayerInterface* GetDefaultObj()
	{
		return GetDefaultObjImpl<IGbxUISettingsLocalPlayerInterface>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_IGbxUISettingsLocalPlayerInterface;

// Class GbxUISettings.GbxUISettingsMappingData
// 0x0018 (0x0048 - 0x0030)
class UGbxUISettingsMappingData : public UDataAsset
{
public:
	bool                                          bShowInSettings;                                   // 0x0030(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           ExtraActionMappingNames;                           // 0x0038(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxUISettingsMappingData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxUISettingsMappingData")
	}
	static class UGbxUISettingsMappingData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxUISettingsMappingData>();
	}
};
DUMPER7_ASSERTS_UGbxUISettingsMappingData;

// Class GbxUISettings.GbxUISettingValueDiscrete_DeviceProfileFragment
// 0x0018 (0x0150 - 0x0138)
class UGbxUISettingValueDiscrete_DeviceProfileFragment final : public UGameSettingValueDiscrete
{
public:
	uint8                                         Pad_138[0x18];                                     // 0x0138(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxUISettingValueDiscrete_DeviceProfileFragment")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxUISettingValueDiscrete_DeviceProfileFragment")
	}
	static class UGbxUISettingValueDiscrete_DeviceProfileFragment* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxUISettingValueDiscrete_DeviceProfileFragment>();
	}
};
DUMPER7_ASSERTS_UGbxUISettingValueDiscrete_DeviceProfileFragment;

// Class GbxUISettings.GbxUISettingValueDiscrete_GamepadPreset
// 0x0020 (0x01B8 - 0x0198)
class UGbxUISettingValueDiscrete_GamepadPreset final : public UGameSettingValueDiscreteDynamic
{
public:
	uint8                                         Pad_198[0x20];                                     // 0x0198(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxUISettingValueDiscrete_GamepadPreset")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxUISettingValueDiscrete_GamepadPreset")
	}
	static class UGbxUISettingValueDiscrete_GamepadPreset* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxUISettingValueDiscrete_GamepadPreset>();
	}
};
DUMPER7_ASSERTS_UGbxUISettingValueDiscrete_GamepadPreset;

// Class GbxUISettings.GbxUISettingValueDiscrete_GraphicsQualityPreset
// 0x0008 (0x0140 - 0x0138)
class UGbxUISettingValueDiscrete_GraphicsQualityPreset final : public UGameSettingValueDiscrete
{
public:
	uint8                                         Pad_138[0x8];                                      // 0x0138(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxUISettingValueDiscrete_GraphicsQualityPreset")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxUISettingValueDiscrete_GraphicsQualityPreset")
	}
	static class UGbxUISettingValueDiscrete_GraphicsQualityPreset* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxUISettingValueDiscrete_GraphicsQualityPreset>();
	}
};
DUMPER7_ASSERTS_UGbxUISettingValueDiscrete_GraphicsQualityPreset;

// Class GbxUISettings.GbxUISettingValueDiscrete_Language
// 0x0020 (0x0158 - 0x0138)
class UGbxUISettingValueDiscrete_Language final : public UGameSettingValueDiscrete
{
public:
	uint8                                         Pad_138[0x20];                                     // 0x0138(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxUISettingValueDiscrete_Language")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxUISettingValueDiscrete_Language")
	}
	static class UGbxUISettingValueDiscrete_Language* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxUISettingValueDiscrete_Language>();
	}
};
DUMPER7_ASSERTS_UGbxUISettingValueDiscrete_Language;

// Class GbxUISettings.GbxUISettingValueDiscrete_OverallQuality
// 0x0020 (0x0158 - 0x0138)
class UGbxUISettingValueDiscrete_OverallQuality final : public UGameSettingValueDiscrete
{
public:
	uint8                                         Pad_138[0x20];                                     // 0x0138(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxUISettingValueDiscrete_OverallQuality")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxUISettingValueDiscrete_OverallQuality")
	}
	static class UGbxUISettingValueDiscrete_OverallQuality* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxUISettingValueDiscrete_OverallQuality>();
	}
};
DUMPER7_ASSERTS_UGbxUISettingValueDiscrete_OverallQuality;

// Class GbxUISettings.GbxUISettingValueDiscrete_Resolution
// 0x0048 (0x0180 - 0x0138)
class UGbxUISettingValueDiscrete_Resolution final : public UGameSettingValueDiscrete
{
public:
	uint8                                         Pad_138[0x48];                                     // 0x0138(0x0048)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxUISettingValueDiscrete_Resolution")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxUISettingValueDiscrete_Resolution")
	}
	static class UGbxUISettingValueDiscrete_Resolution* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxUISettingValueDiscrete_Resolution>();
	}
};
DUMPER7_ASSERTS_UGbxUISettingValueDiscrete_Resolution;

// Class GbxUISettings.InputSettingsGamepadPreset
// 0x0040 (0x0070 - 0x0030)
class UInputSettingsGamepadPreset : public UDataAsset
{
public:
	class FString                                 PresetDevName;                                     // 0x0030(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   PresetName;                                        // 0x0040(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<struct FInputSettingsGamepadMapping>   GamepadMappings;                                   // 0x0050(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UInputMappingContext>> MappingContexts;                              // 0x0060(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)

public:
	TArray<class FName> GetAvailableGamepadMappableNames();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("InputSettingsGamepadPreset")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"InputSettingsGamepadPreset")
	}
	static class UInputSettingsGamepadPreset* GetDefaultObj()
	{
		return GetDefaultObjImpl<UInputSettingsGamepadPreset>();
	}
};
DUMPER7_ASSERTS_UInputSettingsGamepadPreset;

}

