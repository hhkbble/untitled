#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GbxAudio

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "GbxAudio_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "MovieSceneCapture_classes.hpp"
#include "GbxEngine_classes.hpp"
#include "PhysicsCore_structs.hpp"
#include "MovieScene_structs.hpp"
#include "MovieScene_classes.hpp"
#include "GbxNexus_classes.hpp"


namespace SDK
{

// Class GbxAudio.AnimNotifyState_GbxAudioEvent
// 0x00A0 (0x00D0 - 0x0030)
class UAnimNotifyState_GbxAudioEvent final : public UAnimNotifyState
{
public:
	EGbxAudioNotifyType                           NotifyType;                                        // 0x0030(0x0004)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAudioEvent                         BeginAudioEvent;                                   // 0x0038(0x0030)(Edit, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGbxAudioEvent                         EndAudioEvent;                                     // 0x0068(0x0030)(Edit, BlueprintReadOnly, NativeAccessSpecifierPublic)
	float                                         FadeTime;                                          // 0x0098(0x0004)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   EmitterTag;                                        // 0x009C(0x0008)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   socket;                                            // 0x00A4(0x0008)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIgnorePerspective;                                // 0x00AC(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_AD[0x23];                                      // 0x00AD(0x0023)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimNotifyState_GbxAudioEvent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimNotifyState_GbxAudioEvent")
	}
	static class UAnimNotifyState_GbxAudioEvent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimNotifyState_GbxAudioEvent>();
	}
};
DUMPER7_ASSERTS_UAnimNotifyState_GbxAudioEvent;

// Class GbxAudio.AnimNotify_GbxAudioEvent
// 0x00E8 (0x0120 - 0x0038)
class UAnimNotify_GbxAudioEvent : public UAnimNotify
{
public:
	EGbxAudioNotifyType                           NotifyType;                                        // 0x0038(0x0004)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAudioEvent                         AudioEvent;                                        // 0x0040(0x0030)(Edit, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayTag                           AssociatedAudioProviderTag;                        // 0x0070(0x0008)(Edit, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseAssociatedAudioProvider;                       // 0x0078(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   EmitterTag;                                        // 0x007C(0x0008)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_84[0xC];                                       // 0x0084(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAudioEmitterSource                 EmitterSource;                                     // 0x0090(0x0080)(Edit, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	class FName                                   socket;                                            // 0x0110(0x0008)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIgnorePerspective;                                // 0x0118(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimNotify_GbxAudioEvent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimNotify_GbxAudioEvent")
	}
	static class UAnimNotify_GbxAudioEvent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimNotify_GbxAudioEvent>();
	}
};
DUMPER7_ASSERTS_UAnimNotify_GbxAudioEvent;

// Class GbxAudio.GbxAudioBlueprintFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UGbxAudioBlueprintFunctionLibrary final : public UBlueprintFunctionLibrary
{
public:
	static void ApplyActionOnEvent(const struct FGbxAudioPlaybackInstance& PlaybackInstance, EWwisePlaybackAction Action);
	static void GetClosestListener(class UObject* WorldContextObject, const struct FVector& SourceLocation, bool* bSuccess, float* Distance, struct FVector* ListenerLocation, struct FVector* ListenerDirection);
	static bool GetGameParameterValue(class AActor* Actor, class FName EmitterTag, FGbxDefPtrProperty_ GameParameterDef, float* out_Value);
	static bool IsManagedLoopPlaying(const struct FManagedLoopHandle& ManagedLoopHandle);
	static bool IsPlaying(const struct FGbxAudioPlaybackInstance& PlaybackInstance);
	static bool IsPossiblyAudible(class UObject* WorldContextObject, const struct FVector& Location, const struct FGbxAudioEvent& Event, class AActor* ContextActor);
	static void OverrideEmitterSources(const TArray<struct FGbxAudioEmitterSource>& Sources, class AActor* Actor, class FName EmitterTag);
	static void PlayAudioGraph(class UObject* WorldContextObject, class AActor* ContextActor, class UGbxAudioGraphAsset* AudioGraph);
	static struct FGbxAudioPlaybackInstance PostEventInWorld(class UObject* WorldContextObject, class AActor* ActorInstigator, const struct FGbxAudioEmitterSource& EmitterSource, const struct FGbxAudioEvent& Event, FGbxDefPtrProperty_ OptionalSwitch);
	static void PostTrigger(const struct FGbxAudioPlaybackInstance& PlaybackInstance, FGbxDefPtrProperty_ Trigger);
	static struct FGbxAudioPlaybackInstance PostWwiseEventOnActor(class AActor* Actor, class FName EmitterTag, const struct FGbxAudioEvent& Event, FGbxDefPtrProperty_ OptionalSwitch);
	static struct FGbxAudioPlaybackInstance PostWwiseEventOnActorSocket(class AActor* Actor, class FName socket, const struct FGbxAudioEvent& Event, bool bAttached, const struct FGbxAudioEmitterSource& SocketTransform, FGbxDefPtrProperty_ OptionalSwitch);
	static void PostWwiseMessage(const class FString& Message, bool bError);
	static struct FManagedLoopHandle RegisterManagedLoopOnActor(class AActor* Actor, class FName EmitterTag, const struct FGbxAudioEvent& Event);
	static struct FManagedLoopHandle RegisterManagedLoopOnActorSocket(class AActor* Actor, class FName socket, const struct FGbxAudioEvent& Event, bool bAttached, const struct FGbxAudioEmitterSource& SocketTransform);
	static void SetEmitterRtpc(FGbxDefPtrProperty_ Rtpc, float RtpcValue, float FadeTimeSeconds, class AActor* Actor, class FName EmitterTag);
	static void SetGameParameter(const struct FGbxAudioPlaybackInstance& PlaybackInstance, FGbxDefPtrProperty_ Rtpc, float RtpcValue, float FadeTimeSeconds);
	static void SetGlobalRtpc(FGbxDefPtrProperty_ Rtpc, float RtpcValue, float FadeTimeSeconds);
	static void SetListenerGameParameter(class UObject* WorldContextObject, class AActor* Actor, FGbxDefPtrProperty_ Rtpc, float RtpcValue, float FadeTimeSeconds);
	static void SetManagedLoopGameParameter(const struct FManagedLoopHandle& ManagedLoopHandle, FGbxDefPtrProperty_ Rtpc, float RtpcValue, float FadeTimeSeconds);
	static void SetManagedLoopSwitch(const struct FManagedLoopHandle& ManagedLoopHandle, FGbxDefPtrProperty_ Switch);
	static void SetSoundTag(class AActor* Actor, const struct FGameplayTag& SoundTag, FGbxDefPtrProperty_ EventDef);
	static void SetState(FGbxDefPtrProperty_ StateName);
	static void SetSwitch(const struct FGbxAudioPlaybackInstance& PlaybackInstance, FGbxDefPtrProperty_ Switch);
	static void Stop(const struct FGbxAudioPlaybackInstance& PlaybackInstance, float FadeTime);
	static void UnregisterManagedLoop(const struct FManagedLoopHandle& ManagedLoopHandle, const struct FGbxAudioEvent& StopEvent);
	static void WaitForAudioPlayback(class UObject* WorldContextObject, const struct FGbxAudioPlaybackInstance& PlaybackInstance, const struct FLatentActionInfo& LatentInfo);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxAudioBlueprintFunctionLibrary")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxAudioBlueprintFunctionLibrary")
	}
	static class UGbxAudioBlueprintFunctionLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxAudioBlueprintFunctionLibrary>();
	}
};
DUMPER7_ASSERTS_UGbxAudioBlueprintFunctionLibrary;

// Class GbxAudio.GbxAudioCaptureProtocol
// 0x0018 (0x0070 - 0x0058)
class UGbxAudioCaptureProtocol final : public UMovieSceneAudioCaptureProtocolBase
{
public:
	class FString                                 Filename;                                          // 0x0058(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Config, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_68[0x8];                                       // 0x0068(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxAudioCaptureProtocol")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxAudioCaptureProtocol")
	}
	static class UGbxAudioCaptureProtocol* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxAudioCaptureProtocol>();
	}
};
DUMPER7_ASSERTS_UGbxAudioCaptureProtocol;

// Class GbxAudio.GbxAudioGlobals
// 0x0188 (0x01B8 - 0x0030)
class UGbxAudioGlobals : public UDataAsset
{
public:
	FGbxDefPtrProperty_                           ScreenPosX;                                        // 0x0030(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           ScreenPosY;                                        // 0x0048(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           ListenerApproachSpeedRTPC;                         // 0x0060(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           SourceSpeedRTPC;                                   // 0x0078(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           SourceAngularVelocityRTPC;                         // 0x0090(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           OwnerImplementerSizeRTPC;                          // 0x00A8(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           instigator;                                        // 0x00C0(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           PerspectiveRTPC;                                   // 0x00D8(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           RandomVariationRTPC;                               // 0x00F0(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxAudioUserSettings*                  UserSettings;                                      // 0x0108(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           NumLocalPlayersRTPC;                               // 0x0110(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxInlineStruct                       AcousticsDataProvider;                             // 0x0128(0x0018)(Edit, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           OfflinePauseEvent;                                 // 0x0140(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           OfflineResumeEvent;                                // 0x0158(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           OnlinePauseEvent;                                  // 0x0170(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           OnlineResumeEvent;                                 // 0x0188(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           DefaultEnvironmentSwitch;                          // 0x01A0(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxAudioGlobals")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxAudioGlobals")
	}
	static class UGbxAudioGlobals* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxAudioGlobals>();
	}
};
DUMPER7_ASSERTS_UGbxAudioGlobals;

// Class GbxAudio.GbxAudioGraphAsset
// 0x0028 (0x0078 - 0x0050)
class UGbxAudioGraphAsset final : public UGbxGraphAsset
{
public:
	uint8                                         Pad_50[0x28];                                      // 0x0050(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxAudioGraphAsset")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxAudioGraphAsset")
	}
	static class UGbxAudioGraphAsset* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxAudioGraphAsset>();
	}
};
DUMPER7_ASSERTS_UGbxAudioGraphAsset;

// Class GbxAudio.GbxAudioImplementer
// 0x0000 (0x0000 - 0x0000)
class IGbxAudioImplementer final
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxAudioImplementer")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxAudioImplementer")
	}
	static class IGbxAudioImplementer* GetDefaultObj()
	{
		return GetDefaultObjImpl<IGbxAudioImplementer>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_IGbxAudioImplementer;

// Class GbxAudio.GbxAudioSequencerComponent
// 0x0018 (0x0128 - 0x0110)
class UGbxAudioSequencerComponent final : public UActorComponent
{
public:
	uint8                                         Pad_110[0x18];                                     // 0x0110(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxAudioSequencerComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxAudioSequencerComponent")
	}
	static class UGbxAudioSequencerComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxAudioSequencerComponent>();
	}
};
DUMPER7_ASSERTS_UGbxAudioSequencerComponent;

// Class GbxAudio.GbxAudioSettings
// 0x0458 (0x0480 - 0x0028)
class UGbxAudioSettings final : public UObject
{
public:
	struct FDirectoryPath                         WwiseWindowsInstallationPath;                      // 0x0028(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFilePath                              WwiseMacInstallationPath;                          // 0x0038(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAutoConnectToWAAPI;                               // 0x0048(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFilePath                              WwiseProjectPath;                                  // 0x0050(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FString, EWwiseValidationSeverity> WwiseContentValidationQueries;                     // 0x0060(0x0050)(Edit, Config, NativeAccessSpecifierPublic)
	TMap<class FString, class FString>            WwiseLocalizationEquivalents;                      // 0x00B0(0x0050)(Edit, Config, NativeAccessSpecifierPublic)
	TArray<struct FGbxLocalizedAudioChunkData>    LocalizedAudioChunks;                              // 0x0100(0x0010)(Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)
	TMap<class FString, int32>                    LocalizedBinkAudioTracks;                          // 0x0110(0x0050)(Edit, Config, NativeAccessSpecifierPublic)
	class FString                                 DefaultLanguage;                                   // 0x0160(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDefaultLanguageOverride;                          // 0x0170(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FString, class FString>            WwisePlatformEquivalents;                          // 0x0178(0x0050)(Edit, Config, NativeAccessSpecifierPublic)
	TArray<class FString>                         AlwaysLoadedSoundbanks;                            // 0x01C8(0x0010)(Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)
	class FString                                 MonoMixBus;                                        // 0x01D8(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         LocalizedSoundbanks;                               // 0x01E8(0x0010)(Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)
	class FString                                 WwiseDLCSignifier;                                 // 0x01F8(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDirectoryPath                         WwiseDefaultDataSyncDestination;                   // 0x0208(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FString, struct FDirectoryPath>    WwiseDLCDataSyncDestinations;                      // 0x0218(0x0050)(Edit, Config, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           EchoControlWwiseParameterDef;                      // 0x0268(0x0018)(Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<EPhysicalSurface, FGbxDefPtrProperty_>   PhysicalSurfaceSwitchMap;                          // 0x0280(0x0050)(Edit, Config, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                        AudioGlobals;                                      // 0x02D0(0x0020)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        UnloadEventQueueSize;                              // 0x02F0(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShouldStopAtSectionEndDefault;                    // 0x02F4(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2F5[0x3];                                      // 0x02F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MonitorQueuePoolSizeMB;                            // 0x02F8(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         IOMemoryPoolSizeMB;                                // 0x02FC(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        IODeviceGranularityB;                              // 0x0300(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnableStreamCache;                                // 0x0304(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnableMulticoreRendering;                         // 0x0305(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_306[0x2];                                      // 0x0306(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	uint32                                        MaxNumJobWorkers;                                  // 0x0308(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        JobWorkerMaxExecutionTimeUSec;                     // 0x030C(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        CommandQueueSize;                                  // 0x0310(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        NumSamplesPerFrame;                                // 0x0314(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint16                                        NumRefillsInVoiceBuffer;                           // 0x0318(0x0002)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseHardwareCodecLowLatencyMode;                   // 0x031A(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseVorbisHwAcceleration;                          // 0x031B(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        NumOperationsForHwMixing;                          // 0x031C(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        NumAudioOut2Ports;                                 // 0x0320(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        NumAudioOut2ObjectPorts;                           // 0x0324(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnable3DAudioSync;                                // 0x0328(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_329[0x1];                                      // 0x0329(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	uint16                                        MaximumNumberOfXMAVoices;                          // 0x032A(0x0002)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint16                                        MaximumNumberOfOpusVoices;                         // 0x032C(0x0002)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_32E[0x2];                                      // 0x032E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	uint32                                        APUHeapCachedSize;                                 // 0x0330(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        APUHeapNonCachedSize;                              // 0x0334(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        MaxSystemAudioObjects;                             // 0x0338(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33C[0x4];                                      // 0x033C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FGbxDefPtrProperty_                           PreTitleEvent;                                     // 0x0340(0x0018)(Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           TitleMenuEvent;                                    // 0x0358(0x0018)(Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           PreMainMenuEvent;                                  // 0x0370(0x0018)(Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           MainMenuEvent;                                     // 0x0388(0x0018)(Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           TravelingToGameplayEvent;                          // 0x03A0(0x0018)(Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           PreGameplayEvent;                                  // 0x03B8(0x0018)(Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           GameplayEvent;                                     // 0x03D0(0x0018)(Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           LeavingGameplayEvent;                              // 0x03E8(0x0018)(Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           TitleMusicStartEvent;                              // 0x0400(0x0018)(Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           TitleMusicStopEvent;                               // 0x0418(0x0018)(Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_430[0x50];                                     // 0x0430(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxAudioSettings")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxAudioSettings")
	}
	static class UGbxAudioSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxAudioSettings>();
	}
};
DUMPER7_ASSERTS_UGbxAudioSettings;

// Class GbxAudio.GbxAudioSettingsPerUser
// 0x0060 (0x0088 - 0x0028)
class UGbxAudioSettingsPerUser final : public UObject
{
public:
	FGameDataHandleProperty_                      AnimationPreviewAudioProviderDef;                  // 0x0028(0x0018)(Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UPhysicalMaterial>       AudioPreviewMaterial;                              // 0x0040(0x0028)(Edit, Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         AnimPreviewDrawFlags;                              // 0x0068(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bWwiseSyncExperimentalEventSync;                   // 0x006C(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 WaapiIPAddress;                                    // 0x0070(0x0010)(Edit, ZeroConstructor, Config, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        WaapiPort;                                         // 0x0080(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxAudioSettingsPerUser")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxAudioSettingsPerUser")
	}
	static class UGbxAudioSettingsPerUser* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxAudioSettingsPerUser>();
	}
};
DUMPER7_ASSERTS_UGbxAudioSettingsPerUser;

// Class GbxAudio.GbxAudioEditorPreviewAudioImplementer
// 0x0020 (0x0048 - 0x0028)
class UGbxAudioEditorPreviewAudioImplementer final : public UObject
{
public:
	uint8                                         Pad_28[0x20];                                      // 0x0028(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxAudioEditorPreviewAudioImplementer")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxAudioEditorPreviewAudioImplementer")
	}
	static class UGbxAudioEditorPreviewAudioImplementer* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxAudioEditorPreviewAudioImplementer>();
	}
};
DUMPER7_ASSERTS_UGbxAudioEditorPreviewAudioImplementer;

// Class GbxAudio.GbxAudioUserSettings
// 0x0070 (0x00A0 - 0x0030)
class UGbxAudioUserSettings : public UDataAsset
{
public:
	FGbxDefPtrProperty_                           MasterVolumeRTPC;                                  // 0x0030(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_48[0x8];                                       // 0x0048(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	FGbxDefPtrProperty_                           MusicVolumeRTPC;                                   // 0x0050(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           SFXVolumeRTPC;                                     // 0x0068(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           DialogVolumeRTPC;                                  // 0x0080(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_98[0x8];                                       // 0x0098(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxAudioUserSettings")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxAudioUserSettings")
	}
	static class UGbxAudioUserSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxAudioUserSettings>();
	}
};
DUMPER7_ASSERTS_UGbxAudioUserSettings;

// Class GbxAudio.GbxAudioVoiceManager
// 0x0040 (0x0070 - 0x0030)
class UGbxAudioVoiceManager : public UGameInstanceSubsystem
{
public:
	uint8                                         Pad_30[0x40];                                      // 0x0030(0x0040)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxAudioVoiceManager")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxAudioVoiceManager")
	}
	static class UGbxAudioVoiceManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxAudioVoiceManager>();
	}
};
DUMPER7_ASSERTS_UGbxAudioVoiceManager;

// Class GbxAudio.MovieSceneGbxAudioEventSection
// 0x0098 (0x0190 - 0x00F8)
class UMovieSceneGbxAudioEventSection final : public UMovieSceneSection
{
public:
	uint8                                         Pad_F8[0x14];                                      // 0x00F8(0x0014)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ScrubTailLengthMs;                                 // 0x010C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          StopAtSectionEnd;                                  // 0x0110(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 EventName;                                         // 0x0118(0x0010)(ZeroConstructor, Deprecated, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                   CollectionName;                                    // 0x0128(0x0008)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bUseExistingEmitter;                               // 0x0130(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_131[0x3];                                      // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   EmitterTag;                                        // 0x0134(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                   SocketName;                                        // 0x013C(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bAttachEmitterToComponent;                         // 0x0144(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_145[0x3];                                      // 0x0145(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAudioEvent                         EventHandle;                                       // 0x0148(0x0030)(Edit, AdvancedDisplay, NativeAccessSpecifierPrivate)
	bool                                          bPlayInReverse;                                    // 0x0178(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_179[0xF];                                      // 0x0179(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MaxSourceDuration;                                 // 0x0188(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_18C[0x4];                                      // 0x018C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetWwiseEvent(const struct FGbxAudioEvent& InEventHandle, class FName InEmitterSourceName, bool bInUseExistingEmitter);

	class FString GetEventName() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MovieSceneGbxAudioEventSection")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MovieSceneGbxAudioEventSection")
	}
	static class UMovieSceneGbxAudioEventSection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovieSceneGbxAudioEventSection>();
	}
};
DUMPER7_ASSERTS_UMovieSceneGbxAudioEventSection;

// Class GbxAudio.MovieSceneGbxAudioTrack
// 0x0018 (0x0110 - 0x00F8)
class UMovieSceneGbxAudioTrack : public UMovieSceneNameableTrack
{
public:
	TArray<class UMovieSceneSection*>             sections;                                          // 0x00F8(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	uint8                                         bIsAMasterTrack : 1;                               // 0x0108(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MovieSceneGbxAudioTrack")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MovieSceneGbxAudioTrack")
	}
	static class UMovieSceneGbxAudioTrack* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovieSceneGbxAudioTrack>();
	}
};
DUMPER7_ASSERTS_UMovieSceneGbxAudioTrack;

// Class GbxAudio.MovieSceneGbxAudioEventTrack
// 0x0008 (0x0118 - 0x0110)
class UMovieSceneGbxAudioEventTrack final : public UMovieSceneGbxAudioTrack
{
public:
	uint8                                         Pad_110[0x8];                                      // 0x0110(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MovieSceneGbxAudioEventTrack")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MovieSceneGbxAudioEventTrack")
	}
	static class UMovieSceneGbxAudioEventTrack* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovieSceneGbxAudioEventTrack>();
	}
};
DUMPER7_ASSERTS_UMovieSceneGbxAudioEventTrack;

// Class GbxAudio.MovieSceneGbxAudioRTPCSection
// 0x0130 (0x0228 - 0x00F8)
class UMovieSceneGbxAudioRTPCSection final : public UMovieSceneSection
{
public:
	FGbxDefPtrProperty_                           Rtpc;                                              // 0x00F8(0x0018)(Edit, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   EmitterTag;                                        // 0x0110(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FMovieSceneFloatChannel                RTPCChannel;                                       // 0x0118(0x0110)(Protected, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MovieSceneGbxAudioRTPCSection")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MovieSceneGbxAudioRTPCSection")
	}
	static class UMovieSceneGbxAudioRTPCSection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovieSceneGbxAudioRTPCSection>();
	}
};
DUMPER7_ASSERTS_UMovieSceneGbxAudioRTPCSection;

// Class GbxAudio.MovieSceneGbxAudioRTPCTrack
// 0x0008 (0x0118 - 0x0110)
class UMovieSceneGbxAudioRTPCTrack final : public UMovieSceneGbxAudioTrack
{
public:
	uint8                                         Pad_110[0x8];                                      // 0x0110(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MovieSceneGbxAudioRTPCTrack")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MovieSceneGbxAudioRTPCTrack")
	}
	static class UMovieSceneGbxAudioRTPCTrack* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovieSceneGbxAudioRTPCTrack>();
	}
};
DUMPER7_ASSERTS_UMovieSceneGbxAudioRTPCTrack;

// Class GbxAudio.NexusConfigStoreAudioProvider
// 0x0000 (0x0390 - 0x0390)
class UNexusConfigStoreAudioProvider final : public UNexusConfigStoreBasic
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NexusConfigStoreAudioProvider")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NexusConfigStoreAudioProvider")
	}
	static class UNexusConfigStoreAudioProvider* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNexusConfigStoreAudioProvider>();
	}
};
DUMPER7_ASSERTS_UNexusConfigStoreAudioProvider;

// Class GbxAudio.NexusConfigStore_WwiseObjects
// 0x00A0 (0x03E0 - 0x0340)
class UNexusConfigStore_WwiseObjects : public UNexusConfigStorePath
{
public:
	uint8                                         Pad_340[0xA0];                                     // 0x0340(0x00A0)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NexusConfigStore_WwiseObjects")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NexusConfigStore_WwiseObjects")
	}
	static class UNexusConfigStore_WwiseObjects* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNexusConfigStore_WwiseObjects>();
	}
};
DUMPER7_ASSERTS_UNexusConfigStore_WwiseObjects;

// Class GbxAudio.NexusConfigStore_WwiseAuxBus
// 0x0000 (0x03E0 - 0x03E0)
class UNexusConfigStore_WwiseAuxBus final : public UNexusConfigStore_WwiseObjects
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NexusConfigStore_WwiseAuxBus")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NexusConfigStore_WwiseAuxBus")
	}
	static class UNexusConfigStore_WwiseAuxBus* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNexusConfigStore_WwiseAuxBus>();
	}
};
DUMPER7_ASSERTS_UNexusConfigStore_WwiseAuxBus;

// Class GbxAudio.NexusConfigStore_WwiseEvents
// 0x0000 (0x03E0 - 0x03E0)
class UNexusConfigStore_WwiseEvents final : public UNexusConfigStore_WwiseObjects
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NexusConfigStore_WwiseEvents")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NexusConfigStore_WwiseEvents")
	}
	static class UNexusConfigStore_WwiseEvents* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNexusConfigStore_WwiseEvents>();
	}
};
DUMPER7_ASSERTS_UNexusConfigStore_WwiseEvents;

// Class GbxAudio.NexusConfigStore_WwiseGameParameters
// 0x0000 (0x03E0 - 0x03E0)
class UNexusConfigStore_WwiseGameParameters final : public UNexusConfigStore_WwiseObjects
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NexusConfigStore_WwiseGameParameters")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NexusConfigStore_WwiseGameParameters")
	}
	static class UNexusConfigStore_WwiseGameParameters* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNexusConfigStore_WwiseGameParameters>();
	}
};
DUMPER7_ASSERTS_UNexusConfigStore_WwiseGameParameters;

// Class GbxAudio.NexusConfigStore_WwiseSoundBank
// 0x0000 (0x03E0 - 0x03E0)
class UNexusConfigStore_WwiseSoundBank final : public UNexusConfigStore_WwiseObjects
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NexusConfigStore_WwiseSoundBank")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NexusConfigStore_WwiseSoundBank")
	}
	static class UNexusConfigStore_WwiseSoundBank* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNexusConfigStore_WwiseSoundBank>();
	}
};
DUMPER7_ASSERTS_UNexusConfigStore_WwiseSoundBank;

// Class GbxAudio.NexusConfigStore_WwiseStates
// 0x0000 (0x03E0 - 0x03E0)
class UNexusConfigStore_WwiseStates final : public UNexusConfigStore_WwiseObjects
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NexusConfigStore_WwiseStates")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NexusConfigStore_WwiseStates")
	}
	static class UNexusConfigStore_WwiseStates* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNexusConfigStore_WwiseStates>();
	}
};
DUMPER7_ASSERTS_UNexusConfigStore_WwiseStates;

// Class GbxAudio.NexusConfigStore_WwiseSwitches
// 0x0000 (0x03E0 - 0x03E0)
class UNexusConfigStore_WwiseSwitches final : public UNexusConfigStore_WwiseObjects
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NexusConfigStore_WwiseSwitches")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NexusConfigStore_WwiseSwitches")
	}
	static class UNexusConfigStore_WwiseSwitches* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNexusConfigStore_WwiseSwitches>();
	}
};
DUMPER7_ASSERTS_UNexusConfigStore_WwiseSwitches;

// Class GbxAudio.NexusConfigStore_WwiseTriggers
// 0x0000 (0x03E0 - 0x03E0)
class UNexusConfigStore_WwiseTriggers final : public UNexusConfigStore_WwiseObjects
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NexusConfigStore_WwiseTriggers")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NexusConfigStore_WwiseTriggers")
	}
	static class UNexusConfigStore_WwiseTriggers* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNexusConfigStore_WwiseTriggers>();
	}
};
DUMPER7_ASSERTS_UNexusConfigStore_WwiseTriggers;

}

