#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: OakGame

#include "Basic.hpp"

#include "OakGame_classes.hpp"
#include "OakGame_parameters.hpp"


namespace SDK
{

// Function OakGame.AITargetLockBlueprintLibrary.AbortTargetLock
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Context                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAITargetLockBlueprintLibrary::AbortTargetLock(class AActor* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AITargetLockBlueprintLibrary", "AbortTargetLock");

	Params::AITargetLockBlueprintLibrary_AbortTargetLock Parms{};

	Parms.Context = Context;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.AITargetLockBlueprintLibrary.ApplyTargetLock
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Context                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Timer                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAITargetLockBlueprintLibrary::ApplyTargetLock(class AActor* Context, class AActor* target, float Timer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AITargetLockBlueprintLibrary", "ApplyTargetLock");

	Params::AITargetLockBlueprintLibrary_ApplyTargetLock Parms{};

	Parms.Context = Context;
	Parms.target = target;
	Parms.Timer = Timer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.AITargetLockBlueprintLibrary.GetLockedTarget
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Context                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UAITargetLockBlueprintLibrary::GetLockedTarget(class AActor* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AITargetLockBlueprintLibrary", "GetLockedTarget");

	Params::AITargetLockBlueprintLibrary_GetLockedTarget Parms{};

	Parms.Context = Context;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.AITargetLockBlueprintLibrary.IsTargetLocked
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Context                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAITargetLockBlueprintLibrary::IsTargetLocked(class AActor* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AITargetLockBlueprintLibrary", "IsTargetLocked");

	Params::AITargetLockBlueprintLibrary_IsTargetLocked Parms{};

	Parms.Context = Context;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakProjectile.OnActorOverlap
// (Final, Native, Public)
// Parameters:
// class AActor*                           OverlappedActor                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakProjectile::OnActorOverlap(class AActor* OverlappedActor, class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakProjectile", "OnActorOverlap");

	Params::OakProjectile_OnActorOverlap Parms{};

	Parms.OverlappedActor = OverlappedActor;
	Parms.OtherActor = OtherActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakProjectile.SetGrappleableEnabled
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bNewIsEnabled                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakProjectile::SetGrappleableEnabled(bool bNewIsEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakProjectile", "SetGrappleableEnabled");

	Params::OakProjectile_SetGrappleableEnabled Parms{};

	Parms.bNewIsEnabled = bNewIsEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakProjectile.IsGrappleableEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AOakProjectile::IsGrappleableEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakProjectile", "IsGrappleableEnabled");

	Params::OakProjectile_IsGrappleableEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.ModularGrenade.ActivateGrenade
// (Final, Native, Public, BlueprintCallable)

void AModularGrenade::ActivateGrenade()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModularGrenade", "ActivateGrenade");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.ModularGrenade.DivideGrenade
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector&                   Direction                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AModularGrenade::DivideGrenade(const struct FVector& Direction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModularGrenade", "DivideGrenade");

	Params::ModularGrenade_DivideGrenade Parms{};

	Parms.Direction = std::move(Direction);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.ModularGrenade.OnRep_PayloadPostExploded
// (Final, Native, Protected)

void AModularGrenade::OnRep_PayloadPostExploded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModularGrenade", "OnRep_PayloadPostExploded");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.ModularGrenade.PayloadBeginExplodeCallback
// (Final, Native, Protected)

void AModularGrenade::PayloadBeginExplodeCallback()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModularGrenade", "PayloadBeginExplodeCallback");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.ModularGrenade.PayloadBounceCallback
// (Final, Native, Protected, HasOutParams, HasDefaults)
// Parameters:
// const struct FHitResult&                Impact                                                 (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// const struct FVector&                   ImpactVelocity                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AModularGrenade::PayloadBounceCallback(const struct FHitResult& Impact, const struct FVector& ImpactVelocity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModularGrenade", "PayloadBounceCallback");

	Params::ModularGrenade_PayloadBounceCallback Parms{};

	Parms.Impact = std::move(Impact);
	Parms.ImpactVelocity = std::move(ImpactVelocity);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.ModularGrenade.PayloadExplodeCallback
// (Final, Native, Protected)
// Parameters:
// const class AActor*                     projectile                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AModularGrenade::PayloadExplodeCallback(const class AActor* projectile)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModularGrenade", "PayloadExplodeCallback");

	Params::ModularGrenade_PayloadExplodeCallback Parms{};

	Parms.projectile = projectile;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.ModularGrenade.PayloadImpactCallback
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FHitResult&                Impact                                                 (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AModularGrenade::PayloadImpactCallback(const struct FHitResult& Impact)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModularGrenade", "PayloadImpactCallback");

	Params::ModularGrenade_PayloadImpactCallback Parms{};

	Parms.Impact = std::move(Impact);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.ModularGrenade.PayloadTakingDamageCallback
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FProjectileTakingDamageDetails&Details                                                (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AModularGrenade::PayloadTakingDamageCallback(const struct FProjectileTakingDamageDetails& Details)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModularGrenade", "PayloadTakingDamageCallback");

	Params::ModularGrenade_PayloadTakingDamageCallback Parms{};

	Parms.Details = std::move(Details);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.ModularGrenade.SpawnChildGrenade
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector&                   Location                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Direction                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ChildDamage                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ChildRadius                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ChildForce                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SpeedOverride                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           IgnoreActor                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TargetActor                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InFuseTime                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AModularGrenade::SpawnChildGrenade(const struct FVector& Location, const struct FVector& Direction, float ChildDamage, float ChildRadius, float ChildForce, float delay, float SpeedOverride, class AActor* IgnoreActor, class AActor* TargetActor, float InFuseTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModularGrenade", "SpawnChildGrenade");

	Params::ModularGrenade_SpawnChildGrenade Parms{};

	Parms.Location = std::move(Location);
	Parms.Direction = std::move(Direction);
	Parms.ChildDamage = ChildDamage;
	Parms.ChildRadius = ChildRadius;
	Parms.ChildForce = ChildForce;
	Parms.delay = delay;
	Parms.SpeedOverride = SpeedOverride;
	Parms.IgnoreActor = IgnoreActor;
	Parms.TargetActor = TargetActor;
	Parms.InFuseTime = InFuseTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakInteractiveObject.OnActorOverlap
// (Final, Native, Public)
// Parameters:
// class AActor*                           OverlappedActor                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakInteractiveObject::OnActorOverlap(class AActor* OverlappedActor, class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakInteractiveObject", "OnActorOverlap");

	Params::OakInteractiveObject_OnActorOverlap Parms{};

	Parms.OverlappedActor = OverlappedActor;
	Parms.OtherActor = OtherActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakInteractiveObject.OnRep_HealthState
// (Final, Native, Private)

void AOakInteractiveObject::OnRep_HealthState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakInteractiveObject", "OnRep_HealthState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakInteractiveObject.SetGrappleableEnabled
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bNewIsEnabled                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakInteractiveObject::SetGrappleableEnabled(bool bNewIsEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakInteractiveObject", "SetGrappleableEnabled");

	Params::OakInteractiveObject_SetGrappleableEnabled Parms{};

	Parms.bNewIsEnabled = bNewIsEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakInteractiveObject.IsGrappleableEnabled
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AOakInteractiveObject::IsGrappleableEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakInteractiveObject", "IsGrappleableEnabled");

	Params::OakInteractiveObject_IsGrappleableEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.NexusConfigStoreUISkillTree.GetAllProgressGraphGroupDefs
// (Final, Native, Static, Public, HasOutParams)
// Parameters:
// TArray<FGbxDefPtrProperty_>*            graphs                                                 (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UNexusConfigStoreUISkillTree::GetAllProgressGraphGroupDefs(TArray<FGbxDefPtrProperty_>* graphs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("NexusConfigStoreUISkillTree", "GetAllProgressGraphGroupDefs");

	Params::NexusConfigStoreUISkillTree_GetAllProgressGraphGroupDefs Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (graphs != nullptr)
		*graphs = std::move(Parms.graphs);
}


// Function OakGame.NexusConfigStoreUISkillTree.GetNodeNames
// (Final, Native, Static, Public, HasOutParams)
// Parameters:
// class UObject*                          EditObject                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     ProgressGraph                                          (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FName>*                    OutNames                                               (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UNexusConfigStoreUISkillTree::GetNodeNames(class UObject* EditObject, FGbxDefPtrProperty_ ProgressGraph, TArray<class FName>* OutNames)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("NexusConfigStoreUISkillTree", "GetNodeNames");

	Params::NexusConfigStoreUISkillTree_GetNodeNames Parms{};

	Parms.EditObject = EditObject;
	Parms.ProgressGraph = ProgressGraph;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutNames != nullptr)
		*OutNames = std::move(Parms.OutNames);
}


// Function OakGame.OakGameplayActorStatics.FilterActors
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<class AActor*>&            InActorsToFilter                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// const TArray<class AActor*>&            InActorsToExclude                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class AActor*>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AActor*> UOakGameplayActorStatics::FilterActors(const TArray<class AActor*>& InActorsToFilter, const TArray<class AActor*>& InActorsToExclude)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakGameplayActorStatics", "FilterActors");

	Params::OakGameplayActorStatics_FilterActors Parms{};

	Parms.InActorsToFilter = std::move(InActorsToFilter);
	Parms.InActorsToExclude = std::move(InActorsToExclude);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakGameplayActorStatics.QueryPlayers
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContext                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FOakPlayerQuerySpec&       InSpec                                                 (Parm, NativeAccessSpecifierPublic)
// struct FOakPlayerQueryResult            ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FOakPlayerQueryResult UOakGameplayActorStatics::QueryPlayers(class UObject* WorldContext, const struct FOakPlayerQuerySpec& InSpec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakGameplayActorStatics", "QueryPlayers");

	Params::OakGameplayActorStatics_QueryPlayers Parms{};

	Parms.WorldContext = WorldContext;
	Parms.InSpec = std::move(InSpec);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakGameplayActorStatics.QueryResultToCharacters
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const TArray<struct FOakPlayerQueryResultItem>&InQueryResultItems                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class AOakCharacter*>            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AOakCharacter*> UOakGameplayActorStatics::QueryResultToCharacters(const TArray<struct FOakPlayerQueryResultItem>& InQueryResultItems)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakGameplayActorStatics", "QueryResultToCharacters");

	Params::OakGameplayActorStatics_QueryResultToCharacters Parms{};

	Parms.InQueryResultItems = std::move(InQueryResultItems);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakGameplayActorStatics.QueryResultToPlayerControllers
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const TArray<struct FOakPlayerQueryResultItem>&InQueryResultItems                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class AOakPlayerController*>     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AOakPlayerController*> UOakGameplayActorStatics::QueryResultToPlayerControllers(const TArray<struct FOakPlayerQueryResultItem>& InQueryResultItems)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakGameplayActorStatics", "QueryResultToPlayerControllers");

	Params::OakGameplayActorStatics_QueryResultToPlayerControllers Parms{};

	Parms.InQueryResultItems = std::move(InQueryResultItems);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakGameplayActorStatics.SpawnSingularityActor
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// FGameDataHandleProperty_                SingularityDef                                         (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTransform&                SingularityTransform                                   (ConstParm, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class AActor*                     owner                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<class AActor*>&            IgnoreActors                                           (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// const struct FOakSingularityOverrides&  Overrides                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class AOakSingularity*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AOakSingularity* UOakGameplayActorStatics::SpawnSingularityActor(FGameDataHandleProperty_ SingularityDef, const struct FTransform& SingularityTransform, const class AActor* owner, const TArray<class AActor*>& IgnoreActors, const struct FOakSingularityOverrides& Overrides)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakGameplayActorStatics", "SpawnSingularityActor");

	Params::OakGameplayActorStatics_SpawnSingularityActor Parms{};

	Parms.SingularityDef = SingularityDef;
	Parms.SingularityTransform = std::move(SingularityTransform);
	Parms.owner = owner;
	Parms.IgnoreActors = std::move(IgnoreActors);
	Parms.Overrides = std::move(Overrides);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.BioArmorStatics.HasBioArmor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Context                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBioArmorStatics::HasBioArmor(class AActor* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BioArmorStatics", "HasBioArmor");

	Params::BioArmorStatics_HasBioArmor Parms{};

	Parms.Context = Context;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.BioArmorStatics.IsBioArmorActive
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Context                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBioArmorStatics::IsBioArmorActive(class AActor* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BioArmorStatics", "IsBioArmorActive");

	Params::BioArmorStatics_IsBioArmorActive Parms{};

	Parms.Context = Context;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.BioArmorStatics.TryActivateBioArmor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Context                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsInstantaneous                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBioArmorStatics::TryActivateBioArmor(class AActor* Context, bool bIsInstantaneous)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BioArmorStatics", "TryActivateBioArmor");

	Params::BioArmorStatics_TryActivateBioArmor Parms{};

	Parms.Context = Context;
	Parms.bIsInstantaneous = bIsInstantaneous;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.BioArmorStatics.TryDeactivateBioArmor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Context                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBioArmorStatics::TryDeactivateBioArmor(class AActor* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BioArmorStatics", "TryDeactivateBioArmor");

	Params::BioArmorStatics_TryDeactivateBioArmor Parms{};

	Parms.Context = Context;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.MissionTaskType_EventBoundary_Observer.OnActorEntered
// (Final, Native, Private)
// Parameters:
// class AActor*                           TouchingActor                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsPlayer                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMissionTaskType_EventBoundary_Observer::OnActorEntered(class AActor* TouchingActor, bool bIsPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionTaskType_EventBoundary_Observer", "OnActorEntered");

	Params::MissionTaskType_EventBoundary_Observer_OnActorEntered Parms{};

	Parms.TouchingActor = TouchingActor;
	Parms.bIsPlayer = bIsPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.MissionTaskType_EventBoundary_Observer.OnActorLeft
// (Final, Native, Private)
// Parameters:
// class AActor*                           TouchingActor                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsPlayer                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMissionTaskType_EventBoundary_Observer::OnActorLeft(class AActor* TouchingActor, bool bIsPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionTaskType_EventBoundary_Observer", "OnActorLeft");

	Params::MissionTaskType_EventBoundary_Observer_OnActorLeft Parms{};

	Parms.TouchingActor = TouchingActor;
	Parms.bIsPlayer = bIsPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.BlueprintableCameraModeTransition.EndTransition
// (Event, Public, BlueprintEvent)
// Parameters:
// class UCameraModeState*                 State                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBlueprintableCameraModeTransition::EndTransition(class UCameraModeState* State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BlueprintableCameraModeTransition", "EndTransition");

	Params::BlueprintableCameraModeTransition_EndTransition Parms{};

	Parms.State = State;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.BlueprintableCameraModeTransition.PostUpdatePOV
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCameraModeState*                 State                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FMinimalViewInfo&          InPOV                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FPOV&                      InViewModelPOV                                         (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FMinimalViewInfo&          InBlendDelta                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FMinimalViewInfo*                OutPOV                                                 (Parm, OutParm, NativeAccessSpecifierPublic)
// struct FPOV*                            OutViewModelPOV                                        (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FMinimalViewInfo*                OutBlendDelta                                          (Parm, OutParm, NativeAccessSpecifierPublic)
// float                                   BlendPct                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBlueprintableCameraModeTransition::PostUpdatePOV(float DeltaTime, class UCameraModeState* State, const struct FMinimalViewInfo& InPOV, const struct FPOV& InViewModelPOV, const struct FMinimalViewInfo& InBlendDelta, struct FMinimalViewInfo* OutPOV, struct FPOV* OutViewModelPOV, struct FMinimalViewInfo* OutBlendDelta, float BlendPct)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BlueprintableCameraModeTransition", "PostUpdatePOV");

	Params::BlueprintableCameraModeTransition_PostUpdatePOV Parms{};

	Parms.DeltaTime = DeltaTime;
	Parms.State = State;
	Parms.InPOV = std::move(InPOV);
	Parms.InViewModelPOV = std::move(InViewModelPOV);
	Parms.InBlendDelta = std::move(InBlendDelta);
	Parms.BlendPct = BlendPct;

	UObject::ProcessEvent(Func, &Parms);

	if (OutPOV != nullptr)
		*OutPOV = std::move(Parms.OutPOV);

	if (OutViewModelPOV != nullptr)
		*OutViewModelPOV = std::move(Parms.OutViewModelPOV);

	if (OutBlendDelta != nullptr)
		*OutBlendDelta = std::move(Parms.OutBlendDelta);
}


// Function OakGame.BlueprintableCameraModeTransition.PreUpdatePOV
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCameraModeState*                 State                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FMinimalViewInfo&          InPOV                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FPOV&                      InViewModelPOV                                         (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FMinimalViewInfo&          InBlendDelta                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FMinimalViewInfo*                OutPOV                                                 (Parm, OutParm, NativeAccessSpecifierPublic)
// struct FPOV*                            OutViewModelPOV                                        (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FMinimalViewInfo*                OutBlendDelta                                          (Parm, OutParm, NativeAccessSpecifierPublic)
// float                                   BlendPct                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBlueprintableCameraModeTransition::PreUpdatePOV(float DeltaTime, class UCameraModeState* State, const struct FMinimalViewInfo& InPOV, const struct FPOV& InViewModelPOV, const struct FMinimalViewInfo& InBlendDelta, struct FMinimalViewInfo* OutPOV, struct FPOV* OutViewModelPOV, struct FMinimalViewInfo* OutBlendDelta, float BlendPct)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BlueprintableCameraModeTransition", "PreUpdatePOV");

	Params::BlueprintableCameraModeTransition_PreUpdatePOV Parms{};

	Parms.DeltaTime = DeltaTime;
	Parms.State = State;
	Parms.InPOV = std::move(InPOV);
	Parms.InViewModelPOV = std::move(InViewModelPOV);
	Parms.InBlendDelta = std::move(InBlendDelta);
	Parms.BlendPct = BlendPct;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutPOV != nullptr)
		*OutPOV = std::move(Parms.OutPOV);

	if (OutViewModelPOV != nullptr)
		*OutViewModelPOV = std::move(Parms.OutViewModelPOV);

	if (OutBlendDelta != nullptr)
		*OutBlendDelta = std::move(Parms.OutBlendDelta);

	return Parms.ReturnValue;
}


// Function OakGame.BlueprintableCameraModeTransition.StartTransition
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class UCameraModeState*                 State                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FName                       PreviousModeName                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FMinimalViewInfo&          PreviousPOV                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FPOV&                      PreviousViewModelPOV                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    bWasUsingViewModel                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float&                            InBlendTimeOverride                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  OutBlendTimeOverride                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBlueprintableCameraModeTransition::StartTransition(class UCameraModeState* State, const class FName PreviousModeName, const struct FMinimalViewInfo& PreviousPOV, const struct FPOV& PreviousViewModelPOV, bool bWasUsingViewModel, const float& InBlendTimeOverride, float* OutBlendTimeOverride)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BlueprintableCameraModeTransition", "StartTransition");

	Params::BlueprintableCameraModeTransition_StartTransition Parms{};

	Parms.State = State;
	Parms.PreviousModeName = PreviousModeName;
	Parms.PreviousPOV = std::move(PreviousPOV);
	Parms.PreviousViewModelPOV = std::move(PreviousViewModelPOV);
	Parms.bWasUsingViewModel = bWasUsingViewModel;
	Parms.InBlendTimeOverride = InBlendTimeOverride;

	UObject::ProcessEvent(Func, &Parms);

	if (OutBlendTimeOverride != nullptr)
		*OutBlendTimeOverride = Parms.OutBlendTimeOverride;
}


// Function OakGame.CarryableObject.DisablePhysicsSimulation
// (Final, Native, Public, BlueprintCallable)

void ACarryableObject::DisablePhysicsSimulation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CarryableObject", "DisablePhysicsSimulation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.CarryableObject.EnablePhysicsSimulation
// (Final, Native, Public, BlueprintCallable)

void ACarryableObject::EnablePhysicsSimulation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CarryableObject", "EnablePhysicsSimulation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.CarryableObject.OnComponentSleep
// (Final, Native, Protected)
// Parameters:
// class UPrimitiveComponent*              SleepingComponent                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             BoneName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACarryableObject::OnComponentSleep(class UPrimitiveComponent* SleepingComponent, class FName BoneName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CarryableObject", "OnComponentSleep");

	Params::CarryableObject_OnComponentSleep Parms{};

	Parms.SleepingComponent = SleepingComponent;
	Parms.BoneName = BoneName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.CarryableObject.OnComponentWake
// (Final, Native, Protected)
// Parameters:
// class UPrimitiveComponent*              SleepingComponent                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             BoneName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACarryableObject::OnComponentWake(class UPrimitiveComponent* SleepingComponent, class FName BoneName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CarryableObject", "OnComponentWake");

	Params::CarryableObject_OnComponentWake Parms{};

	Parms.SleepingComponent = SleepingComponent;
	Parms.BoneName = BoneName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.CarryableObject.OnMeshCollision
// (Final, Native, Protected, HasOutParams, HasDefaults)
// Parameters:
// class UPrimitiveComponent*              HitComponent                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   NormalImpulse                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHitResult&                Hit                                                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void ACarryableObject::OnMeshCollision(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CarryableObject", "OnMeshCollision");

	Params::CarryableObject_OnMeshCollision Parms{};

	Parms.HitComponent = HitComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.NormalImpulse = std::move(NormalImpulse);
	Parms.Hit = std::move(Hit);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.CarryableObject.OnRep_CarryablePhysicsState
// (Final, Native, Protected)
// Parameters:
// const struct FCarryablePhysicsState&    PreviousPhysicsState                                   (Parm, NoDestructor, NativeAccessSpecifierPublic)

void ACarryableObject::OnRep_CarryablePhysicsState(const struct FCarryablePhysicsState& PreviousPhysicsState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CarryableObject", "OnRep_CarryablePhysicsState");

	Params::CarryableObject_OnRep_CarryablePhysicsState Parms{};

	Parms.PreviousPhysicsState = std::move(PreviousPhysicsState);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.InventoryGadget.OnRep_Attached
// (Final, Native, Protected)

void AInventoryGadget::OnRep_Attached()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryGadget", "OnRep_Attached");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.InventoryGadget.OnRep_NumberOfCharges
// (Final, Native, Protected)

void AInventoryGadget::OnRep_NumberOfCharges()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryGadget", "OnRep_NumberOfCharges");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.InventoryGadget.OnRep_Using
// (Final, Native, Protected)

void AInventoryGadget::OnRep_Using()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryGadget", "OnRep_Using");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.InventoryGadget.ServerInputDoubleTap
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void AInventoryGadget::ServerInputDoubleTap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryGadget", "ServerInputDoubleTap");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.InventoryGadget.ServerInputHeld
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// bool                                    bStarted                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AInventoryGadget::ServerInputHeld(bool bStarted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryGadget", "ServerInputHeld");

	Params::InventoryGadget_ServerInputHeld Parms{};

	Parms.bStarted = bStarted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.GrenadeGadget.DetonateGrenades
// (Final, Native, Public, BlueprintCallable)

void AGrenadeGadget::DetonateGrenades()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GrenadeGadget", "DetonateGrenades");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.GrenadeGadget.ExplodeCallback
// (Final, Native, Protected)
// Parameters:
// const class AActor*                     projectile                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AGrenadeGadget::ExplodeCallback(const class AActor* projectile)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GrenadeGadget", "ExplodeCallback");

	Params::GrenadeGadget_ExplodeCallback Parms{};

	Parms.projectile = projectile;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.GrenadeGadget.SpawnGrenade
// (Final, BlueprintAuthorityOnly, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FSpawnGrenadeOptions&      SpawnGrenadeOptions                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void AGrenadeGadget::SpawnGrenade(const struct FSpawnGrenadeOptions& SpawnGrenadeOptions)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GrenadeGadget", "SpawnGrenade");

	Params::GrenadeGadget_SpawnGrenade Parms{};

	Parms.SpawnGrenadeOptions = std::move(SpawnGrenadeOptions);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.CarryableObjectContainer.OnContainerBeginOverlap
// (Final, Native, Public, HasOutParams)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFromSweep                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHitResult&                SweepResult                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void ACarryableObjectContainer::OnContainerBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CarryableObjectContainer", "OnContainerBeginOverlap");

	Params::CarryableObjectContainer_OnContainerBeginOverlap Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.CarryableObjectContainer.OnContainerEndOverlap
// (Final, Native, Public)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACarryableObjectContainer::OnContainerEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CarryableObjectContainer", "OnContainerEndOverlap");

	Params::CarryableObjectContainer_OnContainerEndOverlap Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.CarryableObjectContainer.OnRep_ReplicatedSocketInfo
// (Final, Native, Protected)

void ACarryableObjectContainer::OnRep_ReplicatedSocketInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CarryableObjectContainer", "OnRep_ReplicatedSocketInfo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.CarryableObjectContainer.SetContainerEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bNewEnabled                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACarryableObjectContainer::SetContainerEnabled(bool bNewEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CarryableObjectContainer", "SetContainerEnabled");

	Params::CarryableObjectContainer_SetContainerEnabled Parms{};

	Parms.bNewEnabled = bNewEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.CarryableObjectDispenser.ActivateDispenser
// (Final, Native, Public, BlueprintCallable)

void ACarryableObjectDispenser::ActivateDispenser()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CarryableObjectDispenser", "ActivateDispenser");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.CarryableObjectDispenser.DeactivateDispenser
// (Final, Native, Public, BlueprintCallable)

void ACarryableObjectDispenser::DeactivateDispenser()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CarryableObjectDispenser", "DeactivateDispenser");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.CarryableObjectDispenser.Dispense
// (Final, Native, Public, BlueprintCallable)

void ACarryableObjectDispenser::Dispense()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CarryableObjectDispenser", "Dispense");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.CarryableObjectDispenser.IsDispenserActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ACarryableObjectDispenser::IsDispenserActive() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CarryableObjectDispenser", "IsDispenserActive");

	Params::CarryableObjectDispenser_IsDispenserActive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.CarryableObjectStatics.ActorForceDropCarriedObject
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AActor*                           TargetCarrier                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCarryableObjectStatics::ActorForceDropCarriedObject(class AActor* TargetCarrier, bool* success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CarryableObjectStatics", "ActorForceDropCarriedObject");

	Params::CarryableObjectStatics_ActorForceDropCarriedObject Parms{};

	Parms.TargetCarrier = TargetCarrier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (success != nullptr)
		*success = Parms.success;
}


// Function OakGame.CarryableObjectStatics.ForceActorCarryObject
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           TargetCarrier                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TargetCarryable                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCarryableObjectStatics::ForceActorCarryObject(class AActor* TargetCarrier, class AActor* TargetCarryable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CarryableObjectStatics", "ForceActorCarryObject");

	Params::CarryableObjectStatics_ForceActorCarryObject Parms{};

	Parms.TargetCarrier = TargetCarrier;
	Parms.TargetCarryable = TargetCarryable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.CarryableObjectStatics.ForceDropCarriedObject
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TScriptInterface<class ICarrier>        TargetCarrier                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCarryableObjectStatics::ForceDropCarriedObject(TScriptInterface<class ICarrier> TargetCarrier, bool* success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CarryableObjectStatics", "ForceDropCarriedObject");

	Params::CarryableObjectStatics_ForceDropCarriedObject Parms{};

	Parms.TargetCarrier = TargetCarrier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (success != nullptr)
		*success = Parms.success;
}


// Function OakGame.CarryableObjectStatics.GetCarriedActor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           TargetCarrier                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UCarryableObjectStatics::GetCarriedActor(class AActor* TargetCarrier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CarryableObjectStatics", "GetCarriedActor");

	Params::CarryableObjectStatics_GetCarriedActor Parms{};

	Parms.TargetCarrier = TargetCarrier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.CarryableObjectStatics.IsActorCarryingObject
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           TargetCarrier                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCarryableObjectStatics::IsActorCarryingObject(class AActor* TargetCarrier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CarryableObjectStatics", "IsActorCarryingObject");

	Params::CarryableObjectStatics_IsActorCarryingObject Parms{};

	Parms.TargetCarrier = TargetCarrier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.CarryableObjectStatics.SetCarryAbilityLock
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           TargetCarrier                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bLocked                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             reason                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCarryableObjectStatics::SetCarryAbilityLock(class AActor* TargetCarrier, bool bLocked, class FName reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CarryableObjectStatics", "SetCarryAbilityLock");

	Params::CarryableObjectStatics_SetCarryAbilityLock Parms{};

	Parms.TargetCarrier = TargetCarrier;
	Parms.bLocked = bLocked;
	Parms.reason = reason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIScript_CharacterSelect.AllPlayersReady
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_CharacterSelect::AllPlayersReady(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_CharacterSelect", "AllPlayersReady");

	Params::OakUIScript_CharacterSelect_AllPlayersReady Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_CharacterSelect.CycleRapSheetCharacter
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_CharacterSelect::CycleRapSheetCharacter(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_CharacterSelect", "CycleRapSheetCharacter");

	Params::OakUIScript_CharacterSelect_CycleRapSheetCharacter Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_CharacterSelect.LineupCharacterClick
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_CharacterSelect::LineupCharacterClick(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_CharacterSelect", "LineupCharacterClick");

	Params::OakUIScript_CharacterSelect_LineupCharacterClick Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_CharacterSelect.LineupCharacterHover
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_CharacterSelect::LineupCharacterHover(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_CharacterSelect", "LineupCharacterHover");

	Params::OakUIScript_CharacterSelect_LineupCharacterHover Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_CharacterSelect.LineupIntro
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_CharacterSelect::LineupIntro(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_CharacterSelect", "LineupIntro");

	Params::OakUIScript_CharacterSelect_LineupIntro Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_CharacterSelect.MakeCharacterChoice
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_CharacterSelect::MakeCharacterChoice(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_CharacterSelect", "MakeCharacterChoice");

	Params::OakUIScript_CharacterSelect_MakeCharacterChoice Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_CharacterSelect.TransitionBackToLineup
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_CharacterSelect::TransitionBackToLineup(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_CharacterSelect", "TransitionBackToLineup");

	Params::OakUIScript_CharacterSelect_TransitionBackToLineup Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_CharacterSelect.TransitionToCharacterSelected
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_CharacterSelect::TransitionToCharacterSelected(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_CharacterSelect", "TransitionToCharacterSelected");

	Params::OakUIScript_CharacterSelect_TransitionToCharacterSelected Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_CharacterSelect.TransitionToRapSheet
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_CharacterSelect::TransitionToRapSheet(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_CharacterSelect", "TransitionToRapSheet");

	Params::OakUIScript_CharacterSelect_TransitionToRapSheet Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_RepairKit.FailToUseRepairKit
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_RepairKit::FailToUseRepairKit(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_RepairKit", "FailToUseRepairKit");

	Params::OakUIScript_RepairKit_FailToUseRepairKit Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_RepairKit.GainChargeRepairKit
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_RepairKit::GainChargeRepairKit(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_RepairKit", "GainChargeRepairKit");

	Params::OakUIScript_RepairKit_GainChargeRepairKit Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_RepairKit.ReadyToUseRepairKit
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_RepairKit::ReadyToUseRepairKit(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_RepairKit", "ReadyToUseRepairKit");

	Params::OakUIScript_RepairKit_ReadyToUseRepairKit Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_RepairKit.StartReadyCountdownRepairKit
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_RepairKit::StartReadyCountdownRepairKit(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_RepairKit", "StartReadyCountdownRepairKit");

	Params::OakUIScript_RepairKit_StartReadyCountdownRepairKit Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_RepairKit.TickReadyCountdownOneRepairKit
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_RepairKit::TickReadyCountdownOneRepairKit(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_RepairKit", "TickReadyCountdownOneRepairKit");

	Params::OakUIScript_RepairKit_TickReadyCountdownOneRepairKit Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_RepairKit.TickReadyCountdownThreeRepairKit
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_RepairKit::TickReadyCountdownThreeRepairKit(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_RepairKit", "TickReadyCountdownThreeRepairKit");

	Params::OakUIScript_RepairKit_TickReadyCountdownThreeRepairKit Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_RepairKit.TickReadyCountdownTwoRepairKit
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_RepairKit::TickReadyCountdownTwoRepairKit(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_RepairKit", "TickReadyCountdownTwoRepairKit");

	Params::OakUIScript_RepairKit_TickReadyCountdownTwoRepairKit Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_RepairKit.UseRepairKit
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_RepairKit::UseRepairKit(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_RepairKit", "UseRepairKit");

	Params::OakUIScript_RepairKit_UseRepairKit Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.TravelStationObject.GetDisplayName
// (Native, Public, BlueprintCallable)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText ATravelStationObject::GetDisplayName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TravelStationObject", "GetDisplayName");

	Params::TravelStationObject_GetDisplayName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.TravelStationObject.IsZoneActive
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATravelStationObject::IsZoneActive() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TravelStationObject", "IsZoneActive");

	Params::TravelStationObject_IsZoneActive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakUIScript_BigMap.AddWaypoint
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_BigMap::AddWaypoint(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_BigMap", "AddWaypoint");

	Params::OakUIScript_BigMap_AddWaypoint Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_BigMap.CantDo
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_BigMap::CantDo(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_BigMap", "CantDo");

	Params::OakUIScript_BigMap_CantDo Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_BigMap.Center
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_BigMap::Center(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_BigMap", "Center");

	Params::OakUIScript_BigMap_Center Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_BigMap.DragEnd
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_BigMap::DragEnd(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_BigMap", "DragEnd");

	Params::OakUIScript_BigMap_DragEnd Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_BigMap.DragMoved
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_BigMap::DragMoved(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_BigMap", "DragMoved");

	Params::OakUIScript_BigMap_DragMoved Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_BigMap.DragStart
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_BigMap::DragStart(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_BigMap", "DragStart");

	Params::OakUIScript_BigMap_DragStart Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_BigMap.ExploreMenuClose
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_BigMap::ExploreMenuClose(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_BigMap", "ExploreMenuClose");

	Params::OakUIScript_BigMap_ExploreMenuClose Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_BigMap.ExploreMenuOpen
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_BigMap::ExploreMenuOpen(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_BigMap", "ExploreMenuOpen");

	Params::OakUIScript_BigMap_ExploreMenuOpen Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_BigMap.InteractableElementRollOver
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_BigMap::InteractableElementRollOver(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_BigMap", "InteractableElementRollOver");

	Params::OakUIScript_BigMap_InteractableElementRollOver Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_BigMap.LocateOnMap
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_BigMap::LocateOnMap(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_BigMap", "LocateOnMap");

	Params::OakUIScript_BigMap_LocateOnMap Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_BigMap.NewMap
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_BigMap::NewMap(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_BigMap", "NewMap");

	Params::OakUIScript_BigMap_NewMap Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_BigMap.RemoveWaypoint
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_BigMap::RemoveWaypoint(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_BigMap", "RemoveWaypoint");

	Params::OakUIScript_BigMap_RemoveWaypoint Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_BigMap.Select
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_BigMap::Select(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_BigMap", "Select");

	Params::OakUIScript_BigMap_Select Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_BigMap.StartBigMapEndGameMenuTutorial
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_BigMap::StartBigMapEndGameMenuTutorial(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_BigMap", "StartBigMapEndGameMenuTutorial");

	Params::OakUIScript_BigMap_StartBigMapEndGameMenuTutorial Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_BigMap.StartBigMapIntroMenuTutorial
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_BigMap::StartBigMapIntroMenuTutorial(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_BigMap", "StartBigMapIntroMenuTutorial");

	Params::OakUIScript_BigMap_StartBigMapIntroMenuTutorial Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_BigMap.ToggleLegendItem
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_BigMap::ToggleLegendItem(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_BigMap", "ToggleLegendItem");

	Params::OakUIScript_BigMap_ToggleLegendItem Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_BigMap.ZoomIn
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_BigMap::ZoomIn(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_BigMap", "ZoomIn");

	Params::OakUIScript_BigMap_ZoomIn Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_BigMap.ZoomOut
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_BigMap::ZoomOut(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_BigMap", "ZoomOut");

	Params::OakUIScript_BigMap_ZoomOut Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.CommandRing.GetCommandRingTargetWorldLocation
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FCommandRingTarget&        TargetInfo_0                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector ACommandRing::GetCommandRingTargetWorldLocation(const struct FCommandRingTarget& TargetInfo_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CommandRing", "GetCommandRingTargetWorldLocation");

	Params::CommandRing_GetCommandRingTargetWorldLocation Parms{};

	Parms.TargetInfo_0 = std::move(TargetInfo_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.CommandRing.CreateTrajectoryComponent
// (Final, Native, Protected, BlueprintCallable)

void ACommandRing::CreateTrajectoryComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CommandRing", "CreateTrajectoryComponent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.CommandRing.OnHidden
// (Final, Native, Protected)

void ACommandRing::OnHidden()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CommandRing", "OnHidden");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.CommandRing.OnTrajectorySimulationFinished
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FHitResult&                Result                                                 (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void ACommandRing::OnTrajectorySimulationFinished(const struct FHitResult& Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CommandRing", "OnTrajectorySimulationFinished");

	Params::CommandRing_OnTrajectorySimulationFinished Parms{};

	Parms.Result = std::move(Result);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.CommandRing.ReleaseTarget
// (Final, Native, Public, BlueprintCallable)

void ACommandRing::ReleaseTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CommandRing", "ReleaseTarget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.CommandRing.SetVisibility
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    bIsVisible                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACommandRing::SetVisibility(bool bIsVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CommandRing", "SetVisibility");

	Params::CommandRing_SetVisibility Parms{};

	Parms.bIsVisible = bIsVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.CommandRing.StartTargetQuery
// (Final, Native, Public, BlueprintCallable)

void ACommandRing::StartTargetQuery()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CommandRing", "StartTargetQuery");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.CommandRing.StopTargetQuery
// (Final, Native, Public, BlueprintCallable)

void ACommandRing::StopTargetQuery()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CommandRing", "StopTargetQuery");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.CommandRing.UpdateTarget
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                           target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Location                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FRotator&                  Rotation                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// class USceneComponent*                  base                                                   (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   SurfaceNormal                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACommandRing::UpdateTarget(class AActor* target, const struct FVector& Location, const struct FRotator& Rotation, class USceneComponent* base, const struct FVector& SurfaceNormal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CommandRing", "UpdateTarget");

	Params::CommandRing_UpdateTarget Parms{};

	Parms.target = target;
	Parms.Location = std::move(Location);
	Parms.Rotation = std::move(Rotation);
	Parms.base = base;
	Parms.SurfaceNormal = std::move(SurfaceNormal);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.CommandRing.ComputeLocation
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECommandRingLocationType                type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           RefActor                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   RefLocation                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SearchDistance                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector*                         SurfaceNormal                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector ACommandRing::ComputeLocation(ECommandRingLocationType type, class AActor* RefActor, const struct FVector& RefLocation, float SearchDistance, struct FVector* SurfaceNormal) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CommandRing", "ComputeLocation");

	Params::CommandRing_ComputeLocation Parms{};

	Parms.type = type;
	Parms.RefActor = RefActor;
	Parms.RefLocation = std::move(RefLocation);
	Parms.SearchDistance = SearchDistance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (SurfaceNormal != nullptr)
		*SurfaceNormal = std::move(Parms.SurfaceNormal);

	return Parms.ReturnValue;
}


// Function OakGame.CommandRing.ComputeRotation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECommandRingAlignmentType               type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           RefActor                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FRotator&                  RefRotation                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// const struct FVector&                   SurfaceNormal                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FRotator ACommandRing::ComputeRotation(ECommandRingAlignmentType type, class AActor* RefActor, const struct FRotator& RefRotation, const struct FVector& SurfaceNormal) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CommandRing", "ComputeRotation");

	Params::CommandRing_ComputeRotation Parms{};

	Parms.type = type;
	Parms.RefActor = RefActor;
	Parms.RefRotation = std::move(RefRotation);
	Parms.SurfaceNormal = std::move(SurfaceNormal);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.CommandRing.GetTarget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FCommandRingTarget         ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

const struct FCommandRingTarget ACommandRing::GetTarget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CommandRing", "GetTarget");

	Params::CommandRing_GetTarget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.CommandRing.IsTargetValid
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ACommandRing::IsTargetValid() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CommandRing", "IsTargetValid");

	Params::CommandRing_IsTargetValid Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.PhasedObjectStatics.IsPhased
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPhasedObjectStatics::IsPhased(class AActor* target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PhasedObjectStatics", "IsPhased");

	Params::PhasedObjectStatics_IsPhased Parms{};

	Parms.target = target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.PhasedObjectStatics.TryEnterPhasedState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPhasedObjectStatics::TryEnterPhasedState(class AActor* target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PhasedObjectStatics", "TryEnterPhasedState");

	Params::PhasedObjectStatics_TryEnterPhasedState Parms{};

	Parms.target = target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.PhasedObjectStatics.TryExitPhasedState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPhasedObjectStatics::TryExitPhasedState(class AActor* target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PhasedObjectStatics", "TryExitPhasedState");

	Params::PhasedObjectStatics_TryExitPhasedState Parms{};

	Parms.target = target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakAIWeaponUserFunctionLibrary.LockAIFiring
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           AIActor                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             reason                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Block                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGbxAIHeldFilter&          WeaponFilter                                           (Parm, NoDestructor, AdvancedDisplay, NativeAccessSpecifierPublic)

void UOakAIWeaponUserFunctionLibrary::LockAIFiring(class AActor* AIActor, class FName reason, bool Block, const struct FGbxAIHeldFilter& WeaponFilter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakAIWeaponUserFunctionLibrary", "LockAIFiring");

	Params::OakAIWeaponUserFunctionLibrary_LockAIFiring Parms{};

	Parms.AIActor = AIActor;
	Parms.reason = reason;
	Parms.Block = Block;
	Parms.WeaponFilter = std::move(WeaponFilter);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakAIWeaponUserFunctionLibrary.LockAIScriptedFiring
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           AIActor                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             reason                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Block                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIgnoreFiringRestrictions                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGbxAIHeldFilter&          WeaponFilter                                           (Parm, NoDestructor, AdvancedDisplay, NativeAccessSpecifierPublic)

void UOakAIWeaponUserFunctionLibrary::LockAIScriptedFiring(class AActor* AIActor, class FName reason, bool Block, bool bIgnoreFiringRestrictions, const struct FGbxAIHeldFilter& WeaponFilter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakAIWeaponUserFunctionLibrary", "LockAIScriptedFiring");

	Params::OakAIWeaponUserFunctionLibrary_LockAIScriptedFiring Parms{};

	Parms.AIActor = AIActor;
	Parms.reason = reason;
	Parms.Block = Block;
	Parms.bIgnoreFiringRestrictions = bIgnoreFiringRestrictions;
	Parms.WeaponFilter = std::move(WeaponFilter);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.EridiumEncasingComponent.OnRep_EridiumEncasingState
// (Final, Native, Protected)

void UEridiumEncasingComponent::OnRep_EridiumEncasingState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EridiumEncasingComponent", "OnRep_EridiumEncasingState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.FirmwareTransferBlueprintLibrary.GetFirmwareTransferCost
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class APlayerController*                PlayerController                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FInventoryItemHandle&      SourceHandle                                           (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FInventoryItemHandle&      DestinationHandle                                      (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64*                                  OutCashCost                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64*                                  OutEridiumCost                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFirmwareTransferBlueprintLibrary::GetFirmwareTransferCost(class APlayerController* PlayerController, const struct FInventoryItemHandle& SourceHandle, const struct FInventoryItemHandle& DestinationHandle, int64* OutCashCost, int64* OutEridiumCost)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FirmwareTransferBlueprintLibrary", "GetFirmwareTransferCost");

	Params::FirmwareTransferBlueprintLibrary_GetFirmwareTransferCost Parms{};

	Parms.PlayerController = PlayerController;
	Parms.SourceHandle = std::move(SourceHandle);
	Parms.DestinationHandle = std::move(DestinationHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutCashCost != nullptr)
		*OutCashCost = Parms.OutCashCost;

	if (OutEridiumCost != nullptr)
		*OutEridiumCost = Parms.OutEridiumCost;

	return Parms.ReturnValue;
}


// Function OakGame.FirmwareTransferBlueprintLibrary.GetFirmwareTransferredItem
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class APlayerController*                PlayerController                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FInventoryItemHandle&      SourceHandle                                           (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FInventoryItemHandle&      DestinationHandle                                      (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FInventoryIdentity*              OutTransferredItemIdentity                             (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFirmwareTransferBlueprintLibrary::GetFirmwareTransferredItem(class APlayerController* PlayerController, const struct FInventoryItemHandle& SourceHandle, const struct FInventoryItemHandle& DestinationHandle, struct FInventoryIdentity* OutTransferredItemIdentity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FirmwareTransferBlueprintLibrary", "GetFirmwareTransferredItem");

	Params::FirmwareTransferBlueprintLibrary_GetFirmwareTransferredItem Parms{};

	Parms.PlayerController = PlayerController;
	Parms.SourceHandle = std::move(SourceHandle);
	Parms.DestinationHandle = std::move(DestinationHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutTransferredItemIdentity != nullptr)
		*OutTransferredItemIdentity = std::move(Parms.OutTransferredItemIdentity);

	return Parms.ReturnValue;
}


// Function OakGame.FirmwareTransferBlueprintLibrary.TransferFirmware
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class APlayerController*                PlayerController                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FInventoryItemHandle&      SourceHandle                                           (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FInventoryItemHandle&      DestinationHandle                                      (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFirmwareTransferBlueprintLibrary::TransferFirmware(class APlayerController* PlayerController, const struct FInventoryItemHandle& SourceHandle, const struct FInventoryItemHandle& DestinationHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FirmwareTransferBlueprintLibrary", "TransferFirmware");

	Params::FirmwareTransferBlueprintLibrary_TransferFirmware Parms{};

	Parms.PlayerController = PlayerController;
	Parms.SourceHandle = std::move(SourceHandle);
	Parms.DestinationHandle = std::move(DestinationHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.StructuredInteractableUserState.ClientSetCurrentInteractable
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
// Parameters:
// const TScriptInterface<class IStructuredInteractable>&NewInteractable                                        (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InteractionName                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInstant                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStructuredInteractableUserState::ClientSetCurrentInteractable(const TScriptInterface<class IStructuredInteractable>& NewInteractable, class FName InteractionName, bool bInstant)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StructuredInteractableUserState", "ClientSetCurrentInteractable");

	Params::StructuredInteractableUserState_ClientSetCurrentInteractable Parms{};

	Parms.NewInteractable = NewInteractable;
	Parms.InteractionName = InteractionName;
	Parms.bInstant = bInstant;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.StructuredInteractableUserState.ServerClearCurrentInteractable
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                                    bImmediate                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStructuredInteractableUserState::ServerClearCurrentInteractable(bool bImmediate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StructuredInteractableUserState", "ServerClearCurrentInteractable");

	Params::StructuredInteractableUserState_ServerClearCurrentInteractable Parms{};

	Parms.bImmediate = bImmediate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.GameDataHandleBlueprintLibrary.Resolve_DamageDefGameDataHandle
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGbxParam&                 Param                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UObject*                          Context                                                (Parm, ZeroConstructor, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGameDataHandleProperty_                ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

FGameDataHandleProperty_ UGameDataHandleBlueprintLibrary::Resolve_DamageDefGameDataHandle(const struct FGbxParam& Param, class UObject* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GameDataHandleBlueprintLibrary", "Resolve_DamageDefGameDataHandle");

	Params::GameDataHandleBlueprintLibrary_Resolve_DamageDefGameDataHandle Parms{};

	Parms.Param = std::move(Param);
	Parms.Context = Context;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.GameDataHandleBlueprintLibrary.Resolve_GbxActorDefGameDataHandle
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGbxParam&                 Param                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UObject*                          Context                                                (Parm, ZeroConstructor, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGameDataHandleProperty_                ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

FGameDataHandleProperty_ UGameDataHandleBlueprintLibrary::Resolve_GbxActorDefGameDataHandle(const struct FGbxParam& Param, class UObject* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GameDataHandleBlueprintLibrary", "Resolve_GbxActorDefGameDataHandle");

	Params::GameDataHandleBlueprintLibrary_Resolve_GbxActorDefGameDataHandle Parms{};

	Parms.Param = std::move(Param);
	Parms.Context = Context;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.GameDataHandleBlueprintLibrary.Resolve_ImpactEffectDefGameDataHandle
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGbxParam&                 Param                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UObject*                          Context                                                (Parm, ZeroConstructor, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGameDataHandleProperty_                ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

FGameDataHandleProperty_ UGameDataHandleBlueprintLibrary::Resolve_ImpactEffectDefGameDataHandle(const struct FGbxParam& Param, class UObject* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GameDataHandleBlueprintLibrary", "Resolve_ImpactEffectDefGameDataHandle");

	Params::GameDataHandleBlueprintLibrary_Resolve_ImpactEffectDefGameDataHandle Parms{};

	Parms.Param = std::move(Param);
	Parms.Context = Context;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.SoloTravelStationObject.TeleportPlayerToDestination
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AOakPlayerController*             OakPC                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASoloTravelStationObject::TeleportPlayerToDestination(class AOakPlayerController* OakPC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SoloTravelStationObject", "TeleportPlayerToDestination");

	Params::SoloTravelStationObject_TeleportPlayerToDestination Parms{};

	Parms.OakPC = OakPC;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakVaultTrackable.DiscoverTrackerObject
// (Final, Native, Public, BlueprintCallable)

void AOakVaultTrackable::DiscoverTrackerObject()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakVaultTrackable", "DiscoverTrackerObject");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakVaultTrackable.ToggleTrackingEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bEnabled                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakVaultTrackable::ToggleTrackingEnabled(bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakVaultTrackable", "ToggleTrackingEnabled");

	Params::OakVaultTrackable_ToggleTrackingEnabled Parms{};

	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakNoSignalZone.OnBeginNoSignalOverlapped
// (Final, Native, Private)
// Parameters:
// class AActor*                           OverlappedActor                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakNoSignalZone::OnBeginNoSignalOverlapped(class AActor* OverlappedActor, class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakNoSignalZone", "OnBeginNoSignalOverlapped");

	Params::OakNoSignalZone_OnBeginNoSignalOverlapped Parms{};

	Parms.OverlappedActor = OverlappedActor;
	Parms.OtherActor = OtherActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakNoSignalZone.OnEndNoSignalOverlapped
// (Final, Native, Private)
// Parameters:
// class AActor*                           OverlappedActor                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakNoSignalZone::OnEndNoSignalOverlapped(class AActor* OverlappedActor, class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakNoSignalZone", "OnEndNoSignalOverlapped");

	Params::OakNoSignalZone_OnEndNoSignalOverlapped Parms{};

	Parms.OverlappedActor = OverlappedActor;
	Parms.OtherActor = OtherActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakAttributeDefinedSummaryLibrary.GetSummary_ChanceDefinedValueRow
// (Final, Native, Static, Public, HasOutParams)
// Parameters:
// const struct FChanceDefinedValueRow&    Struct                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UOakAttributeDefinedSummaryLibrary::GetSummary_ChanceDefinedValueRow(const struct FChanceDefinedValueRow& Struct)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakAttributeDefinedSummaryLibrary", "GetSummary_ChanceDefinedValueRow");

	Params::OakAttributeDefinedSummaryLibrary_GetSummary_ChanceDefinedValueRow Parms{};

	Parms.Struct = std::move(Struct);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakAttributeDefinedSummaryLibrary.GetSummary_LootChanceDefinedValueRow
// (Final, Native, Static, Public, HasOutParams)
// Parameters:
// const struct FLootChanceDefinedValueRow&Struct                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UOakAttributeDefinedSummaryLibrary::GetSummary_LootChanceDefinedValueRow(const struct FLootChanceDefinedValueRow& Struct)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakAttributeDefinedSummaryLibrary", "GetSummary_LootChanceDefinedValueRow");

	Params::OakAttributeDefinedSummaryLibrary_GetSummary_LootChanceDefinedValueRow Parms{};

	Parms.Struct = std::move(Struct);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakBasePlayerController.AddUIViewState
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// const struct FGameplayTag&              InState                                                (ConstParm, Parm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakBasePlayerController::AddUIViewState(const struct FGameplayTag& InState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakBasePlayerController", "AddUIViewState");

	Params::OakBasePlayerController_AddUIViewState Parms{};

	Parms.InState = std::move(InState);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.GbxSkillComponentFunctions_ActionSkill.AdjustDuration
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// class AOakCharacter*                    target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGbxSkillComponentFunctions_ActionSkill::AdjustDuration(class AOakCharacter* target, float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxSkillComponentFunctions_ActionSkill", "AdjustDuration");

	Params::GbxSkillComponentFunctions_ActionSkill_AdjustDuration Parms{};

	Parms.target = target;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.GbxSkillComponentFunctions_ActionSkill.AdjustDurationInternal
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// const struct FGbxSkillComponentReference&ComponentReference                                     (Parm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGbxSkillComponentFunctions_ActionSkill::AdjustDurationInternal(const struct FGbxSkillComponentReference& ComponentReference, float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxSkillComponentFunctions_ActionSkill", "AdjustDurationInternal");

	Params::GbxSkillComponentFunctions_ActionSkill_AdjustDurationInternal Parms{};

	Parms.ComponentReference = std::move(ComponentReference);
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.GbxSkillComponentFunctions_ActionSkill.GetCooldown
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// class AOakCharacter*                    target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UGbxSkillComponentFunctions_ActionSkill::GetCooldown(class AOakCharacter* target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxSkillComponentFunctions_ActionSkill", "GetCooldown");

	Params::GbxSkillComponentFunctions_ActionSkill_GetCooldown Parms{};

	Parms.target = target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.GbxSkillComponentFunctions_ActionSkill.GetCooldownAsPercent
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// class AOakCharacter*                    target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UGbxSkillComponentFunctions_ActionSkill::GetCooldownAsPercent(class AOakCharacter* target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxSkillComponentFunctions_ActionSkill", "GetCooldownAsPercent");

	Params::GbxSkillComponentFunctions_ActionSkill_GetCooldownAsPercent Parms{};

	Parms.target = target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.GbxSkillComponentFunctions_ActionSkill.GetCooldownAsPercentInternal
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// const struct FGbxSkillComponentReference&ComponentReference                                     (Parm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UGbxSkillComponentFunctions_ActionSkill::GetCooldownAsPercentInternal(const struct FGbxSkillComponentReference& ComponentReference)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxSkillComponentFunctions_ActionSkill", "GetCooldownAsPercentInternal");

	Params::GbxSkillComponentFunctions_ActionSkill_GetCooldownAsPercentInternal Parms{};

	Parms.ComponentReference = std::move(ComponentReference);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.GbxSkillComponentFunctions_ActionSkill.GetCooldownInternal
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// const struct FGbxSkillComponentReference&ComponentReference                                     (Parm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UGbxSkillComponentFunctions_ActionSkill::GetCooldownInternal(const struct FGbxSkillComponentReference& ComponentReference)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxSkillComponentFunctions_ActionSkill", "GetCooldownInternal");

	Params::GbxSkillComponentFunctions_ActionSkill_GetCooldownInternal Parms{};

	Parms.ComponentReference = std::move(ComponentReference);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.GbxSkillComponentFunctions_ActionSkill.GetDuration
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// class AOakCharacter*                    target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UGbxSkillComponentFunctions_ActionSkill::GetDuration(class AOakCharacter* target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxSkillComponentFunctions_ActionSkill", "GetDuration");

	Params::GbxSkillComponentFunctions_ActionSkill_GetDuration Parms{};

	Parms.target = target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.GbxSkillComponentFunctions_ActionSkill.GetDurationAsPercent
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// class AOakCharacter*                    target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UGbxSkillComponentFunctions_ActionSkill::GetDurationAsPercent(class AOakCharacter* target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxSkillComponentFunctions_ActionSkill", "GetDurationAsPercent");

	Params::GbxSkillComponentFunctions_ActionSkill_GetDurationAsPercent Parms{};

	Parms.target = target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.GbxSkillComponentFunctions_ActionSkill.GetDurationAsPercentInternal
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// const struct FGbxSkillComponentReference&ComponentReference                                     (Parm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UGbxSkillComponentFunctions_ActionSkill::GetDurationAsPercentInternal(const struct FGbxSkillComponentReference& ComponentReference)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxSkillComponentFunctions_ActionSkill", "GetDurationAsPercentInternal");

	Params::GbxSkillComponentFunctions_ActionSkill_GetDurationAsPercentInternal Parms{};

	Parms.ComponentReference = std::move(ComponentReference);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.GbxSkillComponentFunctions_ActionSkill.GetDurationInternal
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// const struct FGbxSkillComponentReference&ComponentReference                                     (Parm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UGbxSkillComponentFunctions_ActionSkill::GetDurationInternal(const struct FGbxSkillComponentReference& ComponentReference)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxSkillComponentFunctions_ActionSkill", "GetDurationInternal");

	Params::GbxSkillComponentFunctions_ActionSkill_GetDurationInternal Parms{};

	Parms.ComponentReference = std::move(ComponentReference);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.GbxSkillComponentFunctions_ActionSkill.PauseCooldownRefill
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// const struct FGbxSkillComponentReference&ComponentReference                                     (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UGbxSkillComponentFunctions_ActionSkill::PauseCooldownRefill(const struct FGbxSkillComponentReference& ComponentReference)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxSkillComponentFunctions_ActionSkill", "PauseCooldownRefill");

	Params::GbxSkillComponentFunctions_ActionSkill_PauseCooldownRefill Parms{};

	Parms.ComponentReference = std::move(ComponentReference);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.GbxSkillComponentFunctions_ActionSkill.RefillCooldown
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// class AOakCharacter*                    target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Percent                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EOakActionSkillResourceRefillMode       RefillMode                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGbxSkillComponentFunctions_ActionSkill::RefillCooldown(class AOakCharacter* target, float Percent, EOakActionSkillResourceRefillMode RefillMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxSkillComponentFunctions_ActionSkill", "RefillCooldown");

	Params::GbxSkillComponentFunctions_ActionSkill_RefillCooldown Parms{};

	Parms.target = target;
	Parms.Percent = Percent;
	Parms.RefillMode = RefillMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.GbxSkillComponentFunctions_ActionSkill.RefillCooldownByValue
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// class AOakCharacter*                    target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGbxSkillComponentFunctions_ActionSkill::RefillCooldownByValue(class AOakCharacter* target, float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxSkillComponentFunctions_ActionSkill", "RefillCooldownByValue");

	Params::GbxSkillComponentFunctions_ActionSkill_RefillCooldownByValue Parms{};

	Parms.target = target;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.GbxSkillComponentFunctions_ActionSkill.RefillCooldownByValueInternal
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// const struct FGbxSkillComponentReference&ComponentReference                                     (Parm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGbxSkillComponentFunctions_ActionSkill::RefillCooldownByValueInternal(const struct FGbxSkillComponentReference& ComponentReference, float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxSkillComponentFunctions_ActionSkill", "RefillCooldownByValueInternal");

	Params::GbxSkillComponentFunctions_ActionSkill_RefillCooldownByValueInternal Parms{};

	Parms.ComponentReference = std::move(ComponentReference);
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.GbxSkillComponentFunctions_ActionSkill.RefillCooldownInternal
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// const struct FGbxSkillComponentReference&ComponentReference                                     (Parm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   Percent                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EOakActionSkillResourceRefillMode       RefillMode                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGbxSkillComponentFunctions_ActionSkill::RefillCooldownInternal(const struct FGbxSkillComponentReference& ComponentReference, float Percent, EOakActionSkillResourceRefillMode RefillMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxSkillComponentFunctions_ActionSkill", "RefillCooldownInternal");

	Params::GbxSkillComponentFunctions_ActionSkill_RefillCooldownInternal Parms{};

	Parms.ComponentReference = std::move(ComponentReference);
	Parms.Percent = Percent;
	Parms.RefillMode = RefillMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.GbxSkillComponentFunctions_ActionSkill.RefillDuration
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// class AOakCharacter*                    target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Percent                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EOakActionSkillResourceRefillMode       RefillMode                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGbxSkillComponentFunctions_ActionSkill::RefillDuration(class AOakCharacter* target, float Percent, EOakActionSkillResourceRefillMode RefillMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxSkillComponentFunctions_ActionSkill", "RefillDuration");

	Params::GbxSkillComponentFunctions_ActionSkill_RefillDuration Parms{};

	Parms.target = target;
	Parms.Percent = Percent;
	Parms.RefillMode = RefillMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.GbxSkillComponentFunctions_ActionSkill.RefillDurationInternal
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// const struct FGbxSkillComponentReference&ComponentReference                                     (Parm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   Percent                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EOakActionSkillResourceRefillMode       RefillMode                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGbxSkillComponentFunctions_ActionSkill::RefillDurationInternal(const struct FGbxSkillComponentReference& ComponentReference, float Percent, EOakActionSkillResourceRefillMode RefillMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxSkillComponentFunctions_ActionSkill", "RefillDurationInternal");

	Params::GbxSkillComponentFunctions_ActionSkill_RefillDurationInternal Parms{};

	Parms.ComponentReference = std::move(ComponentReference);
	Parms.Percent = Percent;
	Parms.RefillMode = RefillMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.GbxSkillComponentFunctions_DarkSiren.SpawnDrainBeam
// (Final, Native, Static, Private, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGbxSkillComponentReference&ComponentReference                                     (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FLightBeamSpawnData&       SpawnData                                              (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// EOakElementalType                       GreamReaperElement                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGbxSkillComponentFunctions_DarkSiren::SpawnDrainBeam(const struct FGbxSkillComponentReference& ComponentReference, const struct FLightBeamSpawnData& SpawnData, EOakElementalType GreamReaperElement)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxSkillComponentFunctions_DarkSiren", "SpawnDrainBeam");

	Params::GbxSkillComponentFunctions_DarkSiren_SpawnDrainBeam Parms{};

	Parms.ComponentReference = std::move(ComponentReference);
	Parms.SpawnData = std::move(SpawnData);
	Parms.GreamReaperElement = GreamReaperElement;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.GbxSkillComponentFunctions_PhaseAvatar.RefreshFluxBeams
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// const struct FGbxSkillComponentReference&ComponentReference                                     (Parm, NoDestructor, NativeAccessSpecifierPublic)
// class FName                             BeamID                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGbxSkillComponentFunctions_PhaseAvatar::RefreshFluxBeams(const struct FGbxSkillComponentReference& ComponentReference, class FName BeamID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxSkillComponentFunctions_PhaseAvatar", "RefreshFluxBeams");

	Params::GbxSkillComponentFunctions_PhaseAvatar_RefreshFluxBeams Parms{};

	Parms.ComponentReference = std::move(ComponentReference);
	Parms.BeamID = BeamID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.GbxSkillComponentFunctions_PhaseAvatar.SetScreenParticleFXEnabled
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// const struct FGbxSkillComponentReference&ComponentReference                                     (Parm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    bEnabled                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGbxSkillComponentFunctions_PhaseAvatar::SetScreenParticleFXEnabled(const struct FGbxSkillComponentReference& ComponentReference, bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxSkillComponentFunctions_PhaseAvatar", "SetScreenParticleFXEnabled");

	Params::GbxSkillComponentFunctions_PhaseAvatar_SetScreenParticleFXEnabled Parms{};

	Parms.ComponentReference = std::move(ComponentReference);
	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.GbxSkillComponentFunctions_PhaseAvatar.SpawnFluxBeam
// (Final, Native, Static, Private, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGbxSkillComponentReference&ComponentReference                                     (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FLightBeamSpawnData&       SpawnData                                              (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UGbxSkillComponentFunctions_PhaseAvatar::SpawnFluxBeam(const struct FGbxSkillComponentReference& ComponentReference, const struct FLightBeamSpawnData& SpawnData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxSkillComponentFunctions_PhaseAvatar", "SpawnFluxBeam");

	Params::GbxSkillComponentFunctions_PhaseAvatar_SpawnFluxBeam Parms{};

	Parms.ComponentReference = std::move(ComponentReference);
	Parms.SpawnData = std::move(SpawnData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.GbxActorScript_PhaseFamiliar.ApplyPendingModChanges
// (Final, Native, Protected, BlueprintCallable)

void UGbxActorScript_PhaseFamiliar::ApplyPendingModChanges()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GbxActorScript_PhaseFamiliar", "ApplyPendingModChanges");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.GbxActorScript_PhaseFamiliar.Init
// (Event, Protected, BlueprintEvent)
// Parameters:
// EPetSpawnType                           SpawnType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bBadass                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGbxActorScript_PhaseFamiliar::Init(EPetSpawnType SpawnType, bool bBadass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GbxActorScript_PhaseFamiliar", "Init");

	Params::GbxActorScript_PhaseFamiliar_Init Parms{};

	Parms.SpawnType = SpawnType;
	Parms.bBadass = bBadass;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.GbxActorScript_PhaseFamiliar.InterpScalar
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class FName                             ParamName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Scalar                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGbxActorScript_PhaseFamiliar::InterpScalar(class FName ParamName, float Scalar)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GbxActorScript_PhaseFamiliar", "InterpScalar");

	Params::GbxActorScript_PhaseFamiliar_InterpScalar Parms{};

	Parms.ParamName = ParamName;
	Parms.Scalar = Scalar;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.GbxActorScript_PhaseFamiliar.InterpVector
// (Final, Native, Protected, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             ParamName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLinearColor&              Color                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGbxActorScript_PhaseFamiliar::InterpVector(class FName ParamName, const struct FLinearColor& Color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GbxActorScript_PhaseFamiliar", "InterpVector");

	Params::GbxActorScript_PhaseFamiliar_InterpVector Parms{};

	Parms.ParamName = ParamName;
	Parms.Color = std::move(Color);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.GbxActorScript_PhaseFamiliar.NotifyPendingModChange
// (Event, Protected, BlueprintEvent)

void UGbxActorScript_PhaseFamiliar::NotifyPendingModChange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GbxActorScript_PhaseFamiliar", "NotifyPendingModChange");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OakGame.GbxActorScript_PhaseFamiliar.OnElementalAttunementChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// EOakElementalType                       OldElement                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EOakElementalType                       NewElement                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGbxActorScript_PhaseFamiliar::OnElementalAttunementChanged(EOakElementalType OldElement, EOakElementalType NewElement)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GbxActorScript_PhaseFamiliar", "OnElementalAttunementChanged");

	Params::GbxActorScript_PhaseFamiliar_OnElementalAttunementChanged Parms{};

	Parms.OldElement = OldElement;
	Parms.NewElement = NewElement;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.GbxActorScript_PhaseFamiliar.OnPetIsUnavailable
// (Event, Public, BlueprintEvent)
// Parameters:
// EPetUnavilableType                      reason                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGbxActorScript_PhaseFamiliar::OnPetIsUnavailable(EPetUnavilableType reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GbxActorScript_PhaseFamiliar", "OnPetIsUnavailable");

	Params::GbxActorScript_PhaseFamiliar_OnPetIsUnavailable Parms{};

	Parms.reason = reason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.GbxActorScript_PhaseFamiliar.PlayReveal
// (Event, Public, BlueprintEvent)

void UGbxActorScript_PhaseFamiliar::PlayReveal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GbxActorScript_PhaseFamiliar", "PlayReveal");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OakGame.GbxActorScript_PhaseFamiliar.SetBadassMode
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bBadass                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGbxActorScript_PhaseFamiliar::SetBadassMode(bool bBadass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GbxActorScript_PhaseFamiliar", "SetBadassMode");

	Params::GbxActorScript_PhaseFamiliar_SetBadassMode Parms{};

	Parms.bBadass = bBadass;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.GbxActorScript_PhaseFamiliar.TeleportToBadassMode
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// bool                                    bUseDesiredLocation                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   DesiredLocation                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGbxActorScript_PhaseFamiliar::TeleportToBadassMode(bool bUseDesiredLocation, const struct FVector& DesiredLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GbxActorScript_PhaseFamiliar", "TeleportToBadassMode");

	Params::GbxActorScript_PhaseFamiliar_TeleportToBadassMode Parms{};

	Parms.bUseDesiredLocation = bUseDesiredLocation;
	Parms.DesiredLocation = std::move(DesiredLocation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.GbxActorScript_PhaseFamiliar.GetElementalAttunement
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EOakElementalType                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EOakElementalType UGbxActorScript_PhaseFamiliar::GetElementalAttunement() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GbxActorScript_PhaseFamiliar", "GetElementalAttunement");

	Params::GbxActorScript_PhaseFamiliar_GetElementalAttunement Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.GbxActorScript_PhaseFamiliar.IsPendingModChange
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGbxActorScript_PhaseFamiliar::IsPendingModChange() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GbxActorScript_PhaseFamiliar", "IsPendingModChange");

	Params::GbxActorScript_PhaseFamiliar_IsPendingModChange Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakUIScript_Customization.ApplyCustomization
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Customization::ApplyCustomization(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Customization", "ApplyCustomization");

	Params::OakUIScript_Customization_ApplyCustomization Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Customization.CantDo
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Customization::CantDo(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Customization", "CantDo");

	Params::OakUIScript_Customization_CantDo Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Customization.Customization_Hover
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Customization::Customization_Hover(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Customization", "Customization_Hover");

	Params::OakUIScript_Customization_Customization_Hover Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Customization.Customization_Select
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Customization::Customization_Select(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Customization", "Customization_Select");

	Params::OakUIScript_Customization_Customization_Select Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Customization.CustomizationMenu_Hover
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Customization::CustomizationMenu_Hover(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Customization", "CustomizationMenu_Hover");

	Params::OakUIScript_Customization_CustomizationMenu_Hover Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Customization.CustomizationMenu_Select
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Customization::CustomizationMenu_Select(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Customization", "CustomizationMenu_Select");

	Params::OakUIScript_Customization_CustomizationMenu_Select Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Customization.HideUI
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Customization::HideUI(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Customization", "HideUI");

	Params::OakUIScript_Customization_HideUI Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Customization.ShowUI
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Customization::ShowUI(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Customization", "ShowUI");

	Params::OakUIScript_Customization_ShowUI Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakActorScript_Phaseable.TryEnterPhasedState
// (Final, Native, Public)

void UOakActorScript_Phaseable::TryEnterPhasedState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakActorScript_Phaseable", "TryEnterPhasedState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.AddCharacterCombatStyles
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGameplayTagContainer&     CombatStyles                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AOakCharacter::AddCharacterCombatStyles(const struct FGameplayTagContainer& CombatStyles)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "AddCharacterCombatStyles");

	Params::OakCharacter_AddCharacterCombatStyles Parms{};

	Parms.CombatStyles = std::move(CombatStyles);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.AddCharacterImmunities
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGameplayTagContainer&     Immunities                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AOakCharacter::AddCharacterImmunities(const struct FGameplayTagContainer& Immunities)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "AddCharacterImmunities");

	Params::OakCharacter_AddCharacterImmunities Parms{};

	Parms.Immunities = std::move(Immunities);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.AddToAdditionalLoot
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FInventoryItemSelectionData&LootToAdd                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AOakCharacter::AddToAdditionalLoot(const struct FInventoryItemSelectionData& LootToAdd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "AddToAdditionalLoot");

	Params::OakCharacter_AddToAdditionalLoot Parms{};

	Parms.LootToAdd = std::move(LootToAdd);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.ApplyFreezeFallDamage
// (Final, Native, Public, HasOutParams)
// Parameters:
// const struct FHitResult&                Hit                                                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AOakCharacter::ApplyFreezeFallDamage(const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "ApplyFreezeFallDamage");

	Params::OakCharacter_ApplyFreezeFallDamage Parms{};

	Parms.Hit = std::move(Hit);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.AttachGadget
// (Final, Native, Public, BlueprintCallable)

void AOakCharacter::AttachGadget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "AttachGadget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.AttachRepairKit
// (Final, Native, Public, BlueprintCallable)

void AOakCharacter::AttachRepairKit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "AttachRepairKit");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.AttachRevivingDevice
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             CustomSocket                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakCharacter::AttachRevivingDevice(class FName CustomSocket)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "AttachRevivingDevice");

	Params::OakCharacter_AttachRevivingDevice Parms{};

	Parms.CustomSocket = CustomSocket;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.AttemptBeginGroundSlam
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AOakCharacter::AttemptBeginGroundSlam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "AttemptBeginGroundSlam");

	Params::OakCharacter_AttemptBeginGroundSlam Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakCharacter.AttemptGroundSlam
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AOakCharacter::AttemptGroundSlam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "AttemptGroundSlam");

	Params::OakCharacter_AttemptGroundSlam Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakCharacter.BroadcastLevelUp
// (Net, NetReliable, Native, Event, NetMulticast, Public, NetValidate)
// Parameters:
// int32                                   NewLevel                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakCharacter::BroadcastLevelUp(int32 NewLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "BroadcastLevelUp");

	Params::OakCharacter_BroadcastLevelUp Parms{};

	Parms.NewLevel = NewLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.BroadcastSpecializationLevelUp
// (Net, NetReliable, Native, Event, NetMulticast, Public, NetValidate)
// Parameters:
// int32                                   NewLevel                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakCharacter::BroadcastSpecializationLevelUp(int32 NewLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "BroadcastSpecializationLevelUp");

	Params::OakCharacter_BroadcastSpecializationLevelUp Parms{};

	Parms.NewLevel = NewLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.CheckpointRespawnStart
// (Final, Native, Public, BlueprintCallable)

void AOakCharacter::CheckpointRespawnStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "CheckpointRespawnStart");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.ClearOverrideUXName
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void AOakCharacter::ClearOverrideUXName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "ClearOverrideUXName");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.ClientCancelGrappleCarry
// (Net, NetReliable, Native, Event, Protected, NetClient)

void AOakCharacter::ClientCancelGrappleCarry()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "ClientCancelGrappleCarry");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.ClientLockWeaponActions
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// class FName                             reason                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ChannelsMask                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bStopActions                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bClearInput                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakCharacter::ClientLockWeaponActions(class FName reason, int32 ChannelsMask, bool bStopActions, bool bClearInput)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "ClientLockWeaponActions");

	Params::OakCharacter_ClientLockWeaponActions Parms{};

	Parms.reason = reason;
	Parms.ChannelsMask = ChannelsMask;
	Parms.bStopActions = bStopActions;
	Parms.bClearInput = bClearInput;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.ClientNotifyMeleeExecutionHostLockFailed
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// class AActor*                           ExecutionTarget                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakCharacter::ClientNotifyMeleeExecutionHostLockFailed(class AActor* ExecutionTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "ClientNotifyMeleeExecutionHostLockFailed");

	Params::OakCharacter_ClientNotifyMeleeExecutionHostLockFailed Parms{};

	Parms.ExecutionTarget = ExecutionTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.ClientPlayAudioEvent
// (BlueprintAuthorityOnly, Net, Native, Event, Public, NetClient, BlueprintCallable)
// Parameters:
// const struct FGbxAudioEvent&            Event                                                  (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)

void AOakCharacter::ClientPlayAudioEvent(const struct FGbxAudioEvent& Event)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "ClientPlayAudioEvent");

	Params::OakCharacter_ClientPlayAudioEvent Parms{};

	Parms.Event = std::move(Event);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.ClientSetActiveActionSkill
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// FGbxDefPtrProperty_                     SkillDef                                               (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakCharacter::ClientSetActiveActionSkill(FGbxDefPtrProperty_ SkillDef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "ClientSetActiveActionSkill");

	Params::OakCharacter_ClientSetActiveActionSkill Parms{};

	Parms.SkillDef = SkillDef;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.ClientSetActiveWeaponEquipSlot
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// int32                                   EquipSlotIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakCharacter::ClientSetActiveWeaponEquipSlot(int32 EquipSlotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "ClientSetActiveWeaponEquipSlot");

	Params::OakCharacter_ClientSetActiveWeaponEquipSlot Parms{};

	Parms.EquipSlotIndex = EquipSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.ClientStopWeaponActions
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// int32                                   slot                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ChannelsMask                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bClearInput                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakCharacter::ClientStopWeaponActions(int32 slot, int32 ChannelsMask, bool bClearInput)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "ClientStopWeaponActions");

	Params::OakCharacter_ClientStopWeaponActions Parms{};

	Parms.slot = slot;
	Parms.ChannelsMask = ChannelsMask;
	Parms.bClearInput = bClearInput;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.ClientUnlockWeaponActions
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// class FName                             reason                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ChannelsMask                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakCharacter::ClientUnlockWeaponActions(class FName reason, int32 ChannelsMask)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "ClientUnlockWeaponActions");

	Params::OakCharacter_ClientUnlockWeaponActions Parms{};

	Parms.reason = reason;
	Parms.ChannelsMask = ChannelsMask;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.ClientWeaponChangeDuration
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// float                                   SwapDuration                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EWeaponChangeOperationType              OperationType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EWeaponType                             NewWeaponType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakCharacter::ClientWeaponChangeDuration(float SwapDuration, EWeaponChangeOperationType OperationType, EWeaponType NewWeaponType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "ClientWeaponChangeDuration");

	Params::OakCharacter_ClientWeaponChangeDuration Parms{};

	Parms.SwapDuration = SwapDuration;
	Parms.OperationType = OperationType;
	Parms.NewWeaponType = NewWeaponType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.DEBUG_Server_AddOvershield
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// const float                             Amount                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakCharacter::DEBUG_Server_AddOvershield(const float Amount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "DEBUG_Server_AddOvershield");

	Params::OakCharacter_DEBUG_Server_AddOvershield Parms{};

	Parms.Amount = Amount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.DeployEcho4
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults)
// Parameters:
// const struct FGbxRelativeLocation&      LocationOptions                                        (Parm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   Echo4DeployCooldown                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bUseOverrideRotation                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FRotator&                  OverrideRotation                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void AOakCharacter::DeployEcho4(const struct FGbxRelativeLocation& LocationOptions, float Echo4DeployCooldown, bool bUseOverrideRotation, const struct FRotator& OverrideRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "DeployEcho4");

	Params::OakCharacter_DeployEcho4 Parms{};

	Parms.LocationOptions = std::move(LocationOptions);
	Parms.Echo4DeployCooldown = Echo4DeployCooldown;
	Parms.bUseOverrideRotation = bUseOverrideRotation;
	Parms.OverrideRotation = std::move(OverrideRotation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.DetachGadget
// (Final, Native, Public, BlueprintCallable)

void AOakCharacter::DetachGadget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "DetachGadget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.DetachRepairKit
// (Final, Native, Public, BlueprintCallable)

void AOakCharacter::DetachRepairKit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "DetachRepairKit");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.DetachRevivingDevice
// (Final, Native, Public, BlueprintCallable)

void AOakCharacter::DetachRevivingDevice()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "DetachRevivingDevice");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.Die
// (Native, Public, BlueprintCallable)
// Parameters:
// ECharacterDeathType                     type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakCharacter::Die(ECharacterDeathType type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "Die");

	Params::OakCharacter_Die Parms{};

	Parms.type = type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.DownStateFinished
// (Final, Native, Public, BlueprintCallable)

void AOakCharacter::DownStateFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "DownStateFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.DropLoot
// (Final, Native, Public, BlueprintCallable)

void AOakCharacter::DropLoot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "DropLoot");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.EquipAIInventoryItem
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FInventoryIdentity&        Identity                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bReplaceExisting                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakCharacter::EquipAIInventoryItem(const struct FInventoryIdentity& Identity, bool bReplaceExisting)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "EquipAIInventoryItem");

	Params::OakCharacter_EquipAIInventoryItem Parms{};

	Parms.Identity = std::move(Identity);
	Parms.bReplaceExisting = bReplaceExisting;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.freeze
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInstant                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakCharacter::freeze(bool bInstant)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "freeze");

	Params::OakCharacter_freeze Parms{};

	Parms.bInstant = bInstant;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.GetGrenadeGadget
// (Native, Public, BlueprintCallable)
// Parameters:
// class AGrenadeGadget*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AGrenadeGadget* AOakCharacter::GetGrenadeGadget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "GetGrenadeGadget");

	Params::OakCharacter_GetGrenadeGadget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakCharacter.GetGroupTeamHandle
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FGbxTeamIdHandle                 ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FGbxTeamIdHandle AOakCharacter::GetGroupTeamHandle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "GetGroupTeamHandle");

	Params::OakCharacter_GetGroupTeamHandle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakCharacter.GetShowPipOnRadar
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AOakCharacter::GetShowPipOnRadar()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "GetShowPipOnRadar");

	Params::OakCharacter_GetShowPipOnRadar Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakCharacter.GetSpawnedTerminalCharacteristics
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector*                         position                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  Radius                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  Height                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakCharacter::GetSpawnedTerminalCharacteristics(struct FVector* position, float* Radius, float* Height)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "GetSpawnedTerminalCharacteristics");

	Params::OakCharacter_GetSpawnedTerminalCharacteristics Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (position != nullptr)
		*position = std::move(Parms.position);

	if (Radius != nullptr)
		*Radius = Parms.Radius;

	if (Height != nullptr)
		*Height = Parms.Height;
}


// Function OakGame.OakCharacter.GetTitleCardSerialNumber
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString*                          OutSerial                                              (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AOakCharacter::GetTitleCardSerialNumber(class FString* OutSerial)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "GetTitleCardSerialNumber");

	Params::OakCharacter_GetTitleCardSerialNumber Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSerial != nullptr)
		*OutSerial = std::move(Parms.OutSerial);

	return Parms.ReturnValue;
}


// Function OakGame.OakCharacter.GoFromDeadToHealthy
// (Final, Native, Public, BlueprintCallable)

void AOakCharacter::GoFromDeadToHealthy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "GoFromDeadToHealthy");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.InterruptEquipmentActions
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ChannelsMask                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakCharacter::InterruptEquipmentActions(int32 ChannelsMask)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "InterruptEquipmentActions");

	Params::OakCharacter_InterruptEquipmentActions Parms{};

	Parms.ChannelsMask = ChannelsMask;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.LockEquipmentActions
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             reason                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ChannelsMask                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bReplicate                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakCharacter::LockEquipmentActions(class FName reason, int32 ChannelsMask, bool bReplicate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "LockEquipmentActions");

	Params::OakCharacter_LockEquipmentActions Parms{};

	Parms.reason = reason;
	Parms.ChannelsMask = ChannelsMask;
	Parms.bReplicate = bReplicate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.LockFreeze
// (Native, Public, BlueprintCallable)
// Parameters:
// class FName                             reason                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Block                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakCharacter::LockFreeze(class FName reason, bool Block)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "LockFreeze");

	Params::OakCharacter_LockFreeze Parms{};

	Parms.reason = reason;
	Parms.Block = Block;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.LockFreezeSkirt
// (Native, Public, BlueprintCallable)
// Parameters:
// class FName                             reason                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Block                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakCharacter::LockFreezeSkirt(class FName reason, bool Block)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "LockFreezeSkirt");

	Params::OakCharacter_LockFreezeSkirt Parms{};

	Parms.reason = reason;
	Parms.Block = Block;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.NotifyCanUseRepairKit
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// bool                                    bCanUse                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakCharacter::NotifyCanUseRepairKit(bool bCanUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "NotifyCanUseRepairKit");

	Params::OakCharacter_NotifyCanUseRepairKit Parms{};

	Parms.bCanUse = bCanUse;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.OnEchoLocationPingEnded
// (Net, NetReliable, Native, Event, Public, NetServer)

void AOakCharacter::OnEchoLocationPingEnded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "OnEchoLocationPingEnded");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.OnEchoLocationPingStarted
// (Net, NetReliable, Native, Event, Public, NetServer)

void AOakCharacter::OnEchoLocationPingStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "OnEchoLocationPingStarted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.OnGrappleBeamFinished
// (Final, Native, Protected)
// Parameters:
// class UFXSystemComponent*               FinishedComponent                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakCharacter::OnGrappleBeamFinished(class UFXSystemComponent* FinishedComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "OnGrappleBeamFinished");

	Params::OakCharacter_OnGrappleBeamFinished Parms{};

	Parms.FinishedComponent = FinishedComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.OnGrappleMovementModeChanged
// (Final, Native, Protected)
// Parameters:
// class ACharacter*                       Character                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMovementMode                           PrevMovementMode                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   PreviousCustomMode                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakCharacter::OnGrappleMovementModeChanged(class ACharacter* Character, EMovementMode PrevMovementMode, uint8 PreviousCustomMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "OnGrappleMovementModeChanged");

	Params::OakCharacter_OnGrappleMovementModeChanged Parms{};

	Parms.Character = Character;
	Parms.PrevMovementMode = PrevMovementMode;
	Parms.PreviousCustomMode = PreviousCustomMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.OnNotifySwitchedMode
// (Final, Native, Public)

void AOakCharacter::OnNotifySwitchedMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "OnNotifySwitchedMode");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.OnReachedGrappleApex
// (Final, Native, Protected)

void AOakCharacter::OnReachedGrappleApex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "OnReachedGrappleApex");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.OnRep_ActorBeingRevived
// (Final, Native, Protected)

void AOakCharacter::OnRep_ActorBeingRevived()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "OnRep_ActorBeingRevived");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.OnRep_AICharacterState
// (Final, Native, Protected)

void AOakCharacter::OnRep_AICharacterState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "OnRep_AICharacterState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.OnRep_AICloakState
// (Final, Native, Public)

void AOakCharacter::OnRep_AICloakState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "OnRep_AICloakState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.OnRep_AITargetLockState
// (Final, Native, Protected)

void AOakCharacter::OnRep_AITargetLockState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "OnRep_AITargetLockState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.OnRep_CanBeExecuted
// (Final, Native, Protected)

void AOakCharacter::OnRep_CanBeExecuted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "OnRep_CanBeExecuted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.OnRep_CinematicViewConsumerState
// (Final, Native, Protected)

void AOakCharacter::OnRep_CinematicViewConsumerState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "OnRep_CinematicViewConsumerState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.OnRep_CoverUserState
// (Final, Native, Protected)

void AOakCharacter::OnRep_CoverUserState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "OnRep_CoverUserState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.OnRep_DownState
// (Final, Native, Protected)

void AOakCharacter::OnRep_DownState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "OnRep_DownState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.OnRep_Entangled
// (Final, Native, Private)

void AOakCharacter::OnRep_Entangled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "OnRep_Entangled");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.OnRep_EquipmentLocks
// (Final, Native, Protected)
// Parameters:
// int32                                   PrevLocks                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakCharacter::OnRep_EquipmentLocks(int32 PrevLocks)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "OnRep_EquipmentLocks");

	Params::OakCharacter_OnRep_EquipmentLocks Parms{};

	Parms.PrevLocks = PrevLocks;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.OnRep_EquippedInventorySlots
// (Final, Native, Protected)

void AOakCharacter::OnRep_EquippedInventorySlots()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "OnRep_EquippedInventorySlots");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.OnRep_FirmwareManager
// (Final, Native, Public)

void AOakCharacter::OnRep_FirmwareManager()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "OnRep_FirmwareManager");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.OnRep_FreezeState
// (Final, Native, Protected)

void AOakCharacter::OnRep_FreezeState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "OnRep_FreezeState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.OnRep_GbxProgression
// (Final, Native, Public)

void AOakCharacter::OnRep_GbxProgression()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "OnRep_GbxProgression");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.OnRep_GoreState
// (Final, Native, Public)

void AOakCharacter::OnRep_GoreState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "OnRep_GoreState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.OnRep_GrapplerState
// (Final, Native, Public)

void AOakCharacter::OnRep_GrapplerState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "OnRep_GrapplerState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.OnRep_HauntedMutex
// (Final, Native, Private)

void AOakCharacter::OnRep_HauntedMutex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "OnRep_HauntedMutex");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.OnRep_HealthCondition
// (Final, Native, Protected)

void AOakCharacter::OnRep_HealthCondition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "OnRep_HealthCondition");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.OnRep_HealthState
// (Final, Native, Protected)

void AOakCharacter::OnRep_HealthState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "OnRep_HealthState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.OnRep_IdleTrickPlayCount
// (Final, Native, Public)

void AOakCharacter::OnRep_IdleTrickPlayCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "OnRep_IdleTrickPlayCount");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.OnRep_MeleeState
// (Final, Native, Protected)

void AOakCharacter::OnRep_MeleeState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "OnRep_MeleeState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.OnRep_MovementLockReplicator
// (Final, Native, Private)

void AOakCharacter::OnRep_MovementLockReplicator()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "OnRep_MovementLockReplicator");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.OnRep_NPCInteractionRepState
// (Final, Native, Public)

void AOakCharacter::OnRep_NPCInteractionRepState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "OnRep_NPCInteractionRepState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.OnRep_OrderRewindState
// (Final, Native, Protected)

void AOakCharacter::OnRep_OrderRewindState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "OnRep_OrderRewindState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.OnRep_ReplicatedAttachedParticles
// (Final, Native, Private)

void AOakCharacter::OnRep_ReplicatedAttachedParticles()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "OnRep_ReplicatedAttachedParticles");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.OnRep_ReplicatedCarrierState
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FCarrierState&             PrevCarrierState                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AOakCharacter::OnRep_ReplicatedCarrierState(const struct FCarrierState& PrevCarrierState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "OnRep_ReplicatedCarrierState");

	Params::OakCharacter_OnRep_ReplicatedCarrierState Parms{};

	Parms.PrevCarrierState = std::move(PrevCarrierState);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.OnRep_ReplicatedDeathHitReactionState
// (Final, Native, Public)

void AOakCharacter::OnRep_ReplicatedDeathHitReactionState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "OnRep_ReplicatedDeathHitReactionState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.OnRep_ReplicatedPlayerStats
// (Final, Native, Private)

void AOakCharacter::OnRep_ReplicatedPlayerStats()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "OnRep_ReplicatedPlayerStats");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.OnRep_ReplicatedZoomState
// (Final, Native, Protected)

void AOakCharacter::OnRep_ReplicatedZoomState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "OnRep_ReplicatedZoomState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.OnRep_TraitsChanged
// (Final, Native, Public)

void AOakCharacter::OnRep_TraitsChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "OnRep_TraitsChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.OnRep_UsableActorState
// (Final, Native, Protected)

void AOakCharacter::OnRep_UsableActorState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "OnRep_UsableActorState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.OnRep_UseOverheadNameplateOverride
// (Final, Native, Protected)

void AOakCharacter::OnRep_UseOverheadNameplateOverride()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "OnRep_UseOverheadNameplateOverride");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.OnRep_UXNameRepData
// (Final, Native, Protected)

void AOakCharacter::OnRep_UXNameRepData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "OnRep_UXNameRepData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.OnRep_WaitingForSpawnTrick
// (Final, Native, Private)

void AOakCharacter::OnRep_WaitingForSpawnTrick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "OnRep_WaitingForSpawnTrick");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.OnRep_WeaponsRestricted
// (Final, Native, Protected)

void AOakCharacter::OnRep_WeaponsRestricted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "OnRep_WeaponsRestricted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.OnRep_WeaponTargetLocks
// (Final, Native, Protected)
// Parameters:
// uint8                                   PrevWeaponTargetLocks                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakCharacter::OnRep_WeaponTargetLocks(uint8 PrevWeaponTargetLocks)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "OnRep_WeaponTargetLocks");

	Params::OakCharacter_OnRep_WeaponTargetLocks Parms{};

	Parms.PrevWeaponTargetLocks = PrevWeaponTargetLocks;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.OnStartDash_AITargetLock
// (Final, Native, Protected)

void AOakCharacter::OnStartDash_AITargetLock()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "OnStartDash_AITargetLock");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.OnStartSprinting
// (Final, Native, Public)

void AOakCharacter::OnStartSprinting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "OnStartSprinting");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.OnStopSprinting
// (Final, Native, Public)

void AOakCharacter::OnStopSprinting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "OnStopSprinting");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.PauseDownStateTimer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bPaused                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             reason                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakCharacter::PauseDownStateTimer(bool bPaused, class FName reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "PauseDownStateTimer");

	Params::OakCharacter_PauseDownStateTimer Parms{};

	Parms.bPaused = bPaused;
	Parms.reason = reason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.PossessedBySkill
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           PossessingActor                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakCharacter::PossessedBySkill(class AActor* PossessingActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "PossessedBySkill");

	Params::OakCharacter_PossessedBySkill Parms{};

	Parms.PossessingActor = PossessingActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.RefreshWeaponAttributeEffects
// (Final, Native, Public)

void AOakCharacter::RefreshWeaponAttributeEffects()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "RefreshWeaponAttributeEffects");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.RegisterCompanion
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Companion                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakCharacter::RegisterCompanion(class AActor* Companion)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "RegisterCompanion");

	Params::OakCharacter_RegisterCompanion Parms{};

	Parms.Companion = Companion;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.RemoveCharacterCombatStyles
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGameplayTagContainer&     CombatStyles                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AOakCharacter::RemoveCharacterCombatStyles(const struct FGameplayTagContainer& CombatStyles)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "RemoveCharacterCombatStyles");

	Params::OakCharacter_RemoveCharacterCombatStyles Parms{};

	Parms.CombatStyles = std::move(CombatStyles);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.RemoveCharacterImmunities
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGameplayTagContainer&     Immunities                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AOakCharacter::RemoveCharacterImmunities(const struct FGameplayTagContainer& Immunities)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "RemoveCharacterImmunities");

	Params::OakCharacter_RemoveCharacterImmunities Parms{};

	Parms.Immunities = std::move(Immunities);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.ServerGiveUp
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AOakCharacter::ServerGiveUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "ServerGiveUp");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.ServerLockWeaponActions
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// class FName                             reason                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ChannelsMask                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bStopActions                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bClearInput                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakCharacter::ServerLockWeaponActions(class FName reason, int32 ChannelsMask, bool bStopActions, bool bClearInput)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "ServerLockWeaponActions");

	Params::OakCharacter_ServerLockWeaponActions Parms{};

	Parms.reason = reason;
	Parms.ChannelsMask = ChannelsMask;
	Parms.bStopActions = bStopActions;
	Parms.bClearInput = bClearInput;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.ServerPerformSpecificMelee
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults, NetValidate)
// Parameters:
// const struct FSName&                    InMeleeDefIdentifier                                   (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           InTargetActor                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInCanCloseInToTarget                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakCharacter::ServerPerformSpecificMelee(const struct FSName& InMeleeDefIdentifier, class AActor* InTargetActor, bool bInCanCloseInToTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "ServerPerformSpecificMelee");

	Params::OakCharacter_ServerPerformSpecificMelee Parms{};

	Parms.InMeleeDefIdentifier = std::move(InMeleeDefIdentifier);
	Parms.InTargetActor = InTargetActor;
	Parms.bInCanCloseInToTarget = bInCanCloseInToTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.ServerPlayIdleTrick
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AOakCharacter::ServerPlayIdleTrick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "ServerPlayIdleTrick");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.ServerSetCurrentWeapon
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// class AWeapon*                          NewWeapon                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   slot                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EWeaponPutDownType                      PutDownType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EWeaponEquipType                        EquipType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ClientActiveSlotIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakCharacter::ServerSetCurrentWeapon(class AWeapon* NewWeapon, int32 slot, EWeaponPutDownType PutDownType, EWeaponEquipType EquipType, int32 ClientActiveSlotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "ServerSetCurrentWeapon");

	Params::OakCharacter_ServerSetCurrentWeapon Parms{};

	Parms.NewWeapon = NewWeapon;
	Parms.slot = slot;
	Parms.PutDownType = PutDownType;
	Parms.EquipType = EquipType;
	Parms.ClientActiveSlotIndex = ClientActiveSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.ServerSetIsAnyMenuOpen
// (Final, Net, NetReliable, Native, Event, Private, NetServer)
// Parameters:
// bool                                    bInIsAnyMenuOpen                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakCharacter::ServerSetIsAnyMenuOpen(bool bInIsAnyMenuOpen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "ServerSetIsAnyMenuOpen");

	Params::OakCharacter_ServerSetIsAnyMenuOpen Parms{};

	Parms.bInIsAnyMenuOpen = bInIsAnyMenuOpen;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.ServerSetWantsWeaponLowered
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// uint8                                   InFlags                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakCharacter::ServerSetWantsWeaponLowered(uint8 InFlags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "ServerSetWantsWeaponLowered");

	Params::OakCharacter_ServerSetWantsWeaponLowered Parms{};

	Parms.InFlags = InFlags;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.ServerSetZoomState
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// EZoomState                              InState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   InLevel                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ZoomStartOffset                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakCharacter::ServerSetZoomState(EZoomState InState, uint8 InLevel, float ZoomStartOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "ServerSetZoomState");

	Params::OakCharacter_ServerSetZoomState Parms{};

	Parms.InState = InState;
	Parms.InLevel = InLevel;
	Parms.ZoomStartOffset = ZoomStartOffset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.ServerStartGrapple
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void AOakCharacter::ServerStartGrapple()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "ServerStartGrapple");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.ServerStartUsingGadget
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void AOakCharacter::ServerStartUsingGadget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "ServerStartUsingGadget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.ServerStopIdleTrick
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AOakCharacter::ServerStopIdleTrick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "ServerStopIdleTrick");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.ServerStopUsingGadget
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// bool                                    bForced                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInstantly                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FCommandRingTarget&        target                                                 (ConstParm, Parm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AOakCharacter::ServerStopUsingGadget(bool bForced, bool bInstantly, const struct FCommandRingTarget& target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "ServerStopUsingGadget");

	Params::OakCharacter_ServerStopUsingGadget Parms{};

	Parms.bForced = bForced;
	Parms.bInstantly = bInstantly;
	Parms.target = std::move(target);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.ServerStopWeaponActions
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// int32                                   slot                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ChannelsMask                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bClearInput                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakCharacter::ServerStopWeaponActions(int32 slot, int32 ChannelsMask, bool bClearInput)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "ServerStopWeaponActions");

	Params::OakCharacter_ServerStopWeaponActions Parms{};

	Parms.slot = slot;
	Parms.ChannelsMask = ChannelsMask;
	Parms.bClearInput = bClearInput;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.ServerTryToThrow
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void AOakCharacter::ServerTryToThrow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "ServerTryToThrow");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.ServerTryToUncarry
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void AOakCharacter::ServerTryToUncarry()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "ServerTryToUncarry");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.ServerUnlockWeaponActions
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// class FName                             reason                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ChannelsMask                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakCharacter::ServerUnlockWeaponActions(class FName reason, int32 ChannelsMask)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "ServerUnlockWeaponActions");

	Params::OakCharacter_ServerUnlockWeaponActions Parms{};

	Parms.reason = reason;
	Parms.ChannelsMask = ChannelsMask;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.SetAvatarSerialNumber
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    WithSerial                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AOakCharacter::SetAvatarSerialNumber(const class FString& WithSerial)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "SetAvatarSerialNumber");

	Params::OakCharacter_SetAvatarSerialNumber Parms{};

	Parms.WithSerial = std::move(WithSerial);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakCharacter.SetCanBeCaptured
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bEnabled                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakCharacter::SetCanBeCaptured(bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "SetCanBeCaptured");

	Params::OakCharacter_SetCanBeCaptured Parms{};

	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.SetCanBeDowned
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bEnabled                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakCharacter::SetCanBeDowned(bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "SetCanBeDowned");

	Params::OakCharacter_SetCanBeDowned Parms{};

	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.SetCharacterArmy
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              Army                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakCharacter::SetCharacterArmy(const struct FGameplayTag& Army)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "SetCharacterArmy");

	Params::OakCharacter_SetCharacterArmy Parms{};

	Parms.Army = std::move(Army);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.SetCharacterClan
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              Clan                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakCharacter::SetCharacterClan(const struct FGameplayTag& Clan)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "SetCharacterClan");

	Params::OakCharacter_SetCharacterClan Parms{};

	Parms.Clan = std::move(Clan);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.SetCharacterClassification
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              Classification                                         (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakCharacter::SetCharacterClassification(const struct FGameplayTag& Classification)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "SetCharacterClassification");

	Params::OakCharacter_SetCharacterClassification Parms{};

	Parms.Classification = std::move(Classification);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.SetCharacterCombatStyles
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGameplayTagContainer&     CombatStyles                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AOakCharacter::SetCharacterCombatStyles(const struct FGameplayTagContainer& CombatStyles)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "SetCharacterCombatStyles");

	Params::OakCharacter_SetCharacterCombatStyles Parms{};

	Parms.CombatStyles = std::move(CombatStyles);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.SetCharacterEnemyType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              EnemyType                                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakCharacter::SetCharacterEnemyType(const struct FGameplayTag& EnemyType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "SetCharacterEnemyType");

	Params::OakCharacter_SetCharacterEnemyType Parms{};

	Parms.EnemyType = std::move(EnemyType);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.SetCharacterImmunities
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGameplayTagContainer&     Immunities                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AOakCharacter::SetCharacterImmunities(const struct FGameplayTagContainer& Immunities)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "SetCharacterImmunities");

	Params::OakCharacter_SetCharacterImmunities Parms{};

	Parms.Immunities = std::move(Immunities);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.SetCharacterLocomotionStyle
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              LocomotionStyle                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakCharacter::SetCharacterLocomotionStyle(const struct FGameplayTag& LocomotionStyle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "SetCharacterLocomotionStyle");

	Params::OakCharacter_SetCharacterLocomotionStyle Parms{};

	Parms.LocomotionStyle = std::move(LocomotionStyle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.SetCharacterPerchUserType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              PerchUserType                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakCharacter::SetCharacterPerchUserType(const struct FGameplayTag& PerchUserType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "SetCharacterPerchUserType");

	Params::OakCharacter_SetCharacterPerchUserType Parms{};

	Parms.PerchUserType = std::move(PerchUserType);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.SetCharacterRank
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              Rank                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakCharacter::SetCharacterRank(const struct FGameplayTag& Rank)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "SetCharacterRank");

	Params::OakCharacter_SetCharacterRank Parms{};

	Parms.Rank = std::move(Rank);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.SetCharacterSize
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              Size                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakCharacter::SetCharacterSize(const struct FGameplayTag& Size)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "SetCharacterSize");

	Params::OakCharacter_SetCharacterSize Parms{};

	Parms.Size = std::move(Size);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.SetHeavyWeaponGadgetLock
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bLocked                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FName&                      reason                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakCharacter::SetHeavyWeaponGadgetLock(bool bLocked, const class FName& reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "SetHeavyWeaponGadgetLock");

	Params::OakCharacter_SetHeavyWeaponGadgetLock Parms{};

	Parms.bLocked = bLocked;
	Parms.reason = reason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.SetInventoryAugmentEffects
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Flags_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEnabled                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FName&                      reason                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakCharacter::SetInventoryAugmentEffects(int32 Flags_0, bool bEnabled, const class FName& reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "SetInventoryAugmentEffects");

	Params::OakCharacter_SetInventoryAugmentEffects Parms{};

	Parms.Flags_0 = Flags_0;
	Parms.bEnabled = bEnabled;
	Parms.reason = reason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.SetIsEntangled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InIsEntangled                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakCharacter::SetIsEntangled(bool InIsEntangled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "SetIsEntangled");

	Params::OakCharacter_SetIsEntangled Parms{};

	Parms.InIsEntangled = InIsEntangled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.SetOneHandEquipLock
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bLocked                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FName&                      reason                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakCharacter::SetOneHandEquipLock(bool bLocked, const class FName& reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "SetOneHandEquipLock");

	Params::OakCharacter_SetOneHandEquipLock Parms{};

	Parms.bLocked = bLocked;
	Parms.reason = reason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.SetOneHandWeaponActionLock
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bLocked                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FName&                      reason                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakCharacter::SetOneHandWeaponActionLock(bool bLocked, const class FName& reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "SetOneHandWeaponActionLock");

	Params::OakCharacter_SetOneHandWeaponActionLock Parms{};

	Parms.bLocked = bLocked;
	Parms.reason = reason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.SetOverrideUXName
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// FGbxDefPtrProperty_                     InName                                                 (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakCharacter::SetOverrideUXName(FGbxDefPtrProperty_ InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "SetOverrideUXName");

	Params::OakCharacter_SetOverrideUXName Parms{};

	Parms.InName = InName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.SetRandomUXName
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// FGbxDefPtrProperty_                     InName                                                 (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakCharacter::SetRandomUXName(FGbxDefPtrProperty_ InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "SetRandomUXName");

	Params::OakCharacter_SetRandomUXName Parms{};

	Parms.InName = InName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.SetShowPipOnRadar
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InShowPipOnRadar                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakCharacter::SetShowPipOnRadar(bool InShowPipOnRadar)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "SetShowPipOnRadar");

	Params::OakCharacter_SetShowPipOnRadar Parms{};

	Parms.InShowPipOnRadar = InShowPipOnRadar;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.SetTitleCardSerialNumber
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    WithSerial                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AOakCharacter::SetTitleCardSerialNumber(const class FString& WithSerial)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "SetTitleCardSerialNumber");

	Params::OakCharacter_SetTitleCardSerialNumber Parms{};

	Parms.WithSerial = std::move(WithSerial);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakCharacter.SetUXName
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// FGbxDefPtrProperty_                     InName                                                 (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakCharacter::SetUXName(FGbxDefPtrProperty_ InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "SetUXName");

	Params::OakCharacter_SetUXName Parms{};

	Parms.InName = InName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.SetWantsToDash
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bNewWantsToDash                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECharacterDashDirection                 InDirection                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakCharacter::SetWantsToDash(bool bNewWantsToDash, ECharacterDashDirection InDirection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "SetWantsToDash");

	Params::OakCharacter_SetWantsToDash Parms{};

	Parms.bNewWantsToDash = bNewWantsToDash;
	Parms.InDirection = InDirection;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.StartDownState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInstantDeath                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakCharacter::StartDownState(bool bInstantDeath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "StartDownState");

	Params::OakCharacter_StartDownState Parms{};

	Parms.bInstantDeath = bInstantDeath;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.StartHaunting
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AOakCharacter*                    HauntOwner                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AOakCharacter::StartHaunting(class AOakCharacter* HauntOwner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "StartHaunting");

	Params::OakCharacter_StartHaunting Parms{};

	Parms.HauntOwner = HauntOwner;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakCharacter.StartHealSelf
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AOakCharacter::StartHealSelf()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "StartHealSelf");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.StartRepair
// (Final, Native, Public, BlueprintCallable)

void AOakCharacter::StartRepair()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "StartRepair");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.StartUsingRepairKit
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AOakCharacter::StartUsingRepairKit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "StartUsingRepairKit");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.StopDownState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EExitDownStateReason                    reason                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakCharacter::StopDownState(EExitDownStateReason reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "StopDownState");

	Params::OakCharacter_StopDownState Parms{};

	Parms.reason = reason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.StopHaunting
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AOakCharacter*                    HauntOwner                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AOakCharacter::StopHaunting(class AOakCharacter* HauntOwner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "StopHaunting");

	Params::OakCharacter_StopHaunting Parms{};

	Parms.HauntOwner = HauntOwner;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakCharacter.StopHealSelf
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AOakCharacter::StopHealSelf()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "StopHealSelf");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.SuppressDropOnDeathItemPools
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bSuppress                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ELootPoolTypes                          LootPoolTypeToSuppress                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakCharacter::SuppressDropOnDeathItemPools(bool bSuppress, ELootPoolTypes LootPoolTypeToSuppress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "SuppressDropOnDeathItemPools");

	Params::OakCharacter_SuppressDropOnDeathItemPools Parms{};

	Parms.bSuppress = bSuppress;
	Parms.LootPoolTypeToSuppress = LootPoolTypeToSuppress;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.SwitchToAIWeapon
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   WeaponSlotIndex                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInstantSwitch                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakCharacter::SwitchToAIWeapon(int32 WeaponSlotIndex, bool bInstantSwitch)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "SwitchToAIWeapon");

	Params::OakCharacter_SwitchToAIWeapon Parms{};

	Parms.WeaponSlotIndex = WeaponSlotIndex;
	Parms.bInstantSwitch = bInstantSwitch;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.ThrowGadget
// (Final, Native, Public, BlueprintCallable)

void AOakCharacter::ThrowGadget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "ThrowGadget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.TriggerGadget
// (Final, Native, Public, BlueprintCallable)

void AOakCharacter::TriggerGadget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "TriggerGadget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.UnlockEquipmentActions
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             reason                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ChannelsMask                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bReplicate                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakCharacter::UnlockEquipmentActions(class FName reason, int32 ChannelsMask, bool bReplicate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "UnlockEquipmentActions");

	Params::OakCharacter_UnlockEquipmentActions Parms{};

	Parms.reason = reason;
	Parms.ChannelsMask = ChannelsMask;
	Parms.bReplicate = bReplicate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.UnregisterCompanion
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Companion                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakCharacter::UnregisterCompanion(class AActor* Companion)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "UnregisterCompanion");

	Params::OakCharacter_UnregisterCompanion Parms{};

	Parms.Companion = Companion;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.UpdateInventoryAugmentEffects
// (Final, Native, Protected)

void AOakCharacter::UpdateInventoryAugmentEffects()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "UpdateInventoryAugmentEffects");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.WeaponEquipped
// (Final, Native, Protected)
// Parameters:
// class AWeapon*                          Weapon                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakCharacter::WeaponEquipped(class AWeapon* Weapon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "WeaponEquipped");

	Params::OakCharacter_WeaponEquipped Parms{};

	Parms.Weapon = Weapon;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.WeaponPutDown
// (Final, Native, Protected)
// Parameters:
// class AWeapon*                          Weapon                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakCharacter::WeaponPutDown(class AWeapon* Weapon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "WeaponPutDown");

	Params::OakCharacter_WeaponPutDown Parms{};

	Parms.Weapon = Weapon;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.WeaponRestrictionChanged
// (Final, Native, Protected)
// Parameters:
// bool                                    bRestricted                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakCharacter::WeaponRestrictionChanged(bool bRestricted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "WeaponRestrictionChanged");

	Params::OakCharacter_WeaponRestrictionChanged Parms{};

	Parms.bRestricted = bRestricted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacter.CanBeCaptured
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AOakCharacter::CanBeCaptured() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "CanBeCaptured");

	Params::OakCharacter_CanBeCaptured Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakCharacter.CanBeDowned
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AOakCharacter::CanBeDowned() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "CanBeDowned");

	Params::OakCharacter_CanBeDowned Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakCharacter.CanZoomWhileInjured
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AOakCharacter::CanZoomWhileInjured() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "CanZoomWhileInjured");

	Params::OakCharacter_CanZoomWhileInjured Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakCharacter.GetAvatarSerialNumber
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString*                          OutSerial                                              (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AOakCharacter::GetAvatarSerialNumber(class FString* OutSerial) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "GetAvatarSerialNumber");

	Params::OakCharacter_GetAvatarSerialNumber Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSerial != nullptr)
		*OutSerial = std::move(Parms.OutSerial);

	return Parms.ReturnValue;
}


// Function OakGame.OakCharacter.GetCharacterArmy
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayTag AOakCharacter::GetCharacterArmy() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "GetCharacterArmy");

	Params::OakCharacter_GetCharacterArmy Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakCharacter.GetCharacterClan
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayTag AOakCharacter::GetCharacterClan() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "GetCharacterClan");

	Params::OakCharacter_GetCharacterClan Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakCharacter.GetCharacterClassification
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayTag AOakCharacter::GetCharacterClassification() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "GetCharacterClassification");

	Params::OakCharacter_GetCharacterClassification Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakCharacter.GetCharacterCombatStyles
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTagContainer            ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGameplayTagContainer AOakCharacter::GetCharacterCombatStyles() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "GetCharacterCombatStyles");

	Params::OakCharacter_GetCharacterCombatStyles Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakCharacter.GetCharacterEnemyType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayTag AOakCharacter::GetCharacterEnemyType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "GetCharacterEnemyType");

	Params::OakCharacter_GetCharacterEnemyType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakCharacter.GetCharacterImmunities
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTagContainer            ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGameplayTagContainer AOakCharacter::GetCharacterImmunities() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "GetCharacterImmunities");

	Params::OakCharacter_GetCharacterImmunities Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakCharacter.GetCharacterLocomotionStyle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayTag AOakCharacter::GetCharacterLocomotionStyle() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "GetCharacterLocomotionStyle");

	Params::OakCharacter_GetCharacterLocomotionStyle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakCharacter.GetCharacterPerchUserType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayTag AOakCharacter::GetCharacterPerchUserType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "GetCharacterPerchUserType");

	Params::OakCharacter_GetCharacterPerchUserType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakCharacter.GetCharacterRank
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayTag AOakCharacter::GetCharacterRank() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "GetCharacterRank");

	Params::OakCharacter_GetCharacterRank Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakCharacter.GetCharacterSize
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayTag AOakCharacter::GetCharacterSize() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "GetCharacterSize");

	Params::OakCharacter_GetCharacterSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakCharacter.GetSerialNumber
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class FName&                      InChannel                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString*                          OutSerial                                              (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AOakCharacter::GetSerialNumber(const class FName& InChannel, class FString* OutSerial) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "GetSerialNumber");

	Params::OakCharacter_GetSerialNumber Parms{};

	Parms.InChannel = InChannel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSerial != nullptr)
		*OutSerial = std::move(Parms.OutSerial);

	return Parms.ReturnValue;
}


// Function OakGame.OakCharacter.GetSwimmingAreaType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EOakSwimmingAreaType                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EOakSwimmingAreaType AOakCharacter::GetSwimmingAreaType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "GetSwimmingAreaType");

	Params::OakCharacter_GetSwimmingAreaType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakCharacter.InDownState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AOakCharacter::InDownState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "InDownState");

	Params::OakCharacter_InDownState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakCharacter.IsBeingCaptured
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AOakCharacter::IsBeingCaptured() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "IsBeingCaptured");

	Params::OakCharacter_IsBeingCaptured Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakCharacter.IsBeingRevived
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AOakCharacter::IsBeingRevived() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "IsBeingRevived");

	Params::OakCharacter_IsBeingRevived Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakCharacter.IsCharacterDashing
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AOakCharacter::IsCharacterDashing() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "IsCharacterDashing");

	Params::OakCharacter_IsCharacterDashing Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakCharacter.IsCharacterMoving
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AOakCharacter::IsCharacterMoving() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "IsCharacterMoving");

	Params::OakCharacter_IsCharacterMoving Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakCharacter.IsDead
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AOakCharacter::IsDead() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "IsDead");

	Params::OakCharacter_IsDead Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakCharacter.IsHaunted
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AOakCharacter::IsHaunted() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "IsHaunted");

	Params::OakCharacter_IsHaunted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakCharacter.IsHauntedBy
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AOakCharacter*                    HauntOwner                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AOakCharacter::IsHauntedBy(class AOakCharacter* HauntOwner) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "IsHauntedBy");

	Params::OakCharacter_IsHauntedBy Parms{};

	Parms.HauntOwner = HauntOwner;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakCharacter.IsHealthy
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AOakCharacter::IsHealthy() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "IsHealthy");

	Params::OakCharacter_IsHealthy Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakCharacter.IsInjured
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AOakCharacter::IsInjured() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "IsInjured");

	Params::OakCharacter_IsInjured Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakCharacter.IsPerformingAnyTypeOfGroundSlam
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AOakCharacter::IsPerformingAnyTypeOfGroundSlam() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "IsPerformingAnyTypeOfGroundSlam");

	Params::OakCharacter_IsPerformingAnyTypeOfGroundSlam Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakCharacter.IsPerformingGroundSlam
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AOakCharacter::IsPerformingGroundSlam() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "IsPerformingGroundSlam");

	Params::OakCharacter_IsPerformingGroundSlam Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakCharacter.IsResurrecting
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AOakCharacter::IsResurrecting() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacter", "IsResurrecting");

	Params::OakCharacter_IsResurrecting Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.GrapplePoint.OnPlayerProxySpawned
// (Final, Native, Public)

void AGrapplePoint::OnPlayerProxySpawned()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GrapplePoint", "OnPlayerProxySpawned");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakSkillCharacter_PhaseFamiliar.ClientReveal
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private, NetClient)

void AOakSkillCharacter_PhaseFamiliar::ClientReveal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakSkillCharacter_PhaseFamiliar", "ClientReveal");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakSkillCharacter_PhaseFamiliar.OnRep_ElementalAttunement
// (Final, Native, Private)

void AOakSkillCharacter_PhaseFamiliar::OnRep_ElementalAttunement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakSkillCharacter_PhaseFamiliar", "OnRep_ElementalAttunement");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakSkillCharacter_PhaseFamiliar.OnRep_Revealed
// (Final, Native, Private)

void AOakSkillCharacter_PhaseFamiliar::OnRep_Revealed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakSkillCharacter_PhaseFamiliar", "OnRep_Revealed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakActorScript_BioArmor.BioArmorVFXTransitionDeactivation
// (Final, Native, Private)
// Parameters:
// class UNiagaraComponent*                PSystem                                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakActorScript_BioArmor::BioArmorVFXTransitionDeactivation(class UNiagaraComponent* PSystem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakActorScript_BioArmor", "BioArmorVFXTransitionDeactivation");

	Params::OakActorScript_BioArmor_BioArmorVFXTransitionDeactivation Parms{};

	Parms.PSystem = PSystem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakActorScript_BioArmor.SetReactivationDelay
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   ReactivationDelay_0                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakActorScript_BioArmor::SetReactivationDelay(float ReactivationDelay_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakActorScript_BioArmor", "SetReactivationDelay");

	Params::OakActorScript_BioArmor_SetReactivationDelay Parms{};

	Parms.ReactivationDelay_0 = ReactivationDelay_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakActorScript_BioArmor.TryActivateArmor
// (Final, Native, Public)
// Parameters:
// bool                                    bIsInstantaneous                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOakActorScript_BioArmor::TryActivateArmor(bool bIsInstantaneous)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakActorScript_BioArmor", "TryActivateArmor");

	Params::OakActorScript_BioArmor_TryActivateArmor Parms{};

	Parms.bIsInstantaneous = bIsInstantaneous;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakActorScript_BioArmor.IsArmored
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOakActorScript_BioArmor::IsArmored() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakActorScript_BioArmor", "IsArmored");

	Params::OakActorScript_BioArmor_IsArmored Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.GbxSkillComponentFunctions_PhaseFamiliar.AbortBadassMode
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// const struct FGbxSkillComponentReference&ComponentReference                                     (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UGbxSkillComponentFunctions_PhaseFamiliar::AbortBadassMode(const struct FGbxSkillComponentReference& ComponentReference)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxSkillComponentFunctions_PhaseFamiliar", "AbortBadassMode");

	Params::GbxSkillComponentFunctions_PhaseFamiliar_AbortBadassMode Parms{};

	Parms.ComponentReference = std::move(ComponentReference);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.GbxSkillComponentFunctions_PhaseFamiliar.BindPrepareBadassQuery
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// const struct FGbxSkillComponentReference&ComponentReference                                     (Parm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void()>                       Delegate                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGbxSkillComponentFunctions_PhaseFamiliar::BindPrepareBadassQuery(const struct FGbxSkillComponentReference& ComponentReference, TDelegate<void()> Delegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxSkillComponentFunctions_PhaseFamiliar", "BindPrepareBadassQuery");

	Params::GbxSkillComponentFunctions_PhaseFamiliar_BindPrepareBadassQuery Parms{};

	Parms.ComponentReference = std::move(ComponentReference);
	Parms.Delegate = Delegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.GbxSkillComponentFunctions_PhaseFamiliar.EndBadassMode
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// const struct FGbxSkillComponentReference&ComponentReference                                     (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UGbxSkillComponentFunctions_PhaseFamiliar::EndBadassMode(const struct FGbxSkillComponentReference& ComponentReference)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxSkillComponentFunctions_PhaseFamiliar", "EndBadassMode");

	Params::GbxSkillComponentFunctions_PhaseFamiliar_EndBadassMode Parms{};

	Parms.ComponentReference = std::move(ComponentReference);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.GbxSkillComponentFunctions_PhaseFamiliar.GetElementalAttunement
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// const struct FGbxSkillComponentReference&ComponentReference                                     (Parm, NoDestructor, NativeAccessSpecifierPublic)
// EOakElementalType                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EOakElementalType UGbxSkillComponentFunctions_PhaseFamiliar::GetElementalAttunement(const struct FGbxSkillComponentReference& ComponentReference)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxSkillComponentFunctions_PhaseFamiliar", "GetElementalAttunement");

	Params::GbxSkillComponentFunctions_PhaseFamiliar_GetElementalAttunement Parms{};

	Parms.ComponentReference = std::move(ComponentReference);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.GbxSkillComponentFunctions_PhaseFamiliar.GetPrimaryPet
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// const struct FGbxSkillComponentReference&ComponentReference                                     (Parm, NoDestructor, NativeAccessSpecifierPublic)
// class AOakSkillCharacter_PhaseFamiliar* ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AOakSkillCharacter_PhaseFamiliar* UGbxSkillComponentFunctions_PhaseFamiliar::GetPrimaryPet(const struct FGbxSkillComponentReference& ComponentReference)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxSkillComponentFunctions_PhaseFamiliar", "GetPrimaryPet");

	Params::GbxSkillComponentFunctions_PhaseFamiliar_GetPrimaryPet Parms{};

	Parms.ComponentReference = std::move(ComponentReference);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.GbxSkillComponentFunctions_PhaseFamiliar.SpawnIllusionAtLocation
// (Final, Native, Static, Private, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FGbxSkillComponentReference&ComponentReference                                     (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FVector&                   Location                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGbxSkillComponentFunctions_PhaseFamiliar::SpawnIllusionAtLocation(const struct FGbxSkillComponentReference& ComponentReference, const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxSkillComponentFunctions_PhaseFamiliar", "SpawnIllusionAtLocation");

	Params::GbxSkillComponentFunctions_PhaseFamiliar_SpawnIllusionAtLocation Parms{};

	Parms.ComponentReference = std::move(ComponentReference);
	Parms.Location = std::move(Location);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.GbxSkillComponentFunctions_PhaseFamiliar.SpawnIllusionAtTarget
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// const struct FGbxSkillComponentReference&ComponentReference                                     (Parm, NoDestructor, NativeAccessSpecifierPublic)
// class AActor*                           target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGbxSkillComponentFunctions_PhaseFamiliar::SpawnIllusionAtTarget(const struct FGbxSkillComponentReference& ComponentReference, class AActor* target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxSkillComponentFunctions_PhaseFamiliar", "SpawnIllusionAtTarget");

	Params::GbxSkillComponentFunctions_PhaseFamiliar_SpawnIllusionAtTarget Parms{};

	Parms.ComponentReference = std::move(ComponentReference);
	Parms.target = target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.GbxSkillComponentFunctions_PhaseFamiliar.StartBadassMode
// (Final, Native, Static, Private, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FGbxSkillComponentReference&ComponentReference                                     (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FVector&                   DesiredBadassLocation                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGbxSkillComponentFunctions_PhaseFamiliar::StartBadassMode(const struct FGbxSkillComponentReference& ComponentReference, const struct FVector& DesiredBadassLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxSkillComponentFunctions_PhaseFamiliar", "StartBadassMode");

	Params::GbxSkillComponentFunctions_PhaseFamiliar_StartBadassMode Parms{};

	Parms.ComponentReference = std::move(ComponentReference);
	Parms.DesiredBadassLocation = std::move(DesiredBadassLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakUIScript_MainMenu.ContinueCampaign
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_MainMenu::ContinueCampaign(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_MainMenu", "ContinueCampaign");

	Params::OakUIScript_MainMenu_ContinueCampaign Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_MainMenu.CoopRelinquish
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_MainMenu::CoopRelinquish(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_MainMenu", "CoopRelinquish");

	Params::OakUIScript_MainMenu_CoopRelinquish Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_MainMenu.DifficultySwapEasy
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_MainMenu::DifficultySwapEasy(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_MainMenu", "DifficultySwapEasy");

	Params::OakUIScript_MainMenu_DifficultySwapEasy Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_MainMenu.DifficultySwapHard
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_MainMenu::DifficultySwapHard(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_MainMenu", "DifficultySwapHard");

	Params::OakUIScript_MainMenu_DifficultySwapHard Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_MainMenu.DifficultySwapMedium
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_MainMenu::DifficultySwapMedium(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_MainMenu", "DifficultySwapMedium");

	Params::OakUIScript_MainMenu_DifficultySwapMedium Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_MainMenu.DifficultySwapVeryHard
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_MainMenu::DifficultySwapVeryHard(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_MainMenu", "DifficultySwapVeryHard");

	Params::OakUIScript_MainMenu_DifficultySwapVeryHard Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.GbxSkillComponentFunctions_ActionSkill_Exo.AddMarkedTarget
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FGbxSkillComponentReference&ComponentReference                                     (Parm, NoDestructor, NativeAccessSpecifierPublic)
// class AOakCharacter*                    target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGbxSkillComponentFunctions_ActionSkill_Exo::AddMarkedTarget(const struct FGbxSkillComponentReference& ComponentReference, class AOakCharacter* target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxSkillComponentFunctions_ActionSkill_Exo", "AddMarkedTarget");

	Params::GbxSkillComponentFunctions_ActionSkill_Exo_AddMarkedTarget Parms{};

	Parms.ComponentReference = std::move(ComponentReference);
	Parms.target = target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.GbxSkillComponentFunctions_ActionSkill_Exo.ClearMarkedTargets
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FGbxSkillComponentReference&ComponentReference                                     (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UGbxSkillComponentFunctions_ActionSkill_Exo::ClearMarkedTargets(const struct FGbxSkillComponentReference& ComponentReference)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxSkillComponentFunctions_ActionSkill_Exo", "ClearMarkedTargets");

	Params::GbxSkillComponentFunctions_ActionSkill_Exo_ClearMarkedTargets Parms{};

	Parms.ComponentReference = std::move(ComponentReference);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.GbxSkillComponentFunctions_ActionSkill_Exo.GetMarkedTargetCount
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FGbxSkillComponentReference&ComponentReference                                     (Parm, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UGbxSkillComponentFunctions_ActionSkill_Exo::GetMarkedTargetCount(const struct FGbxSkillComponentReference& ComponentReference)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxSkillComponentFunctions_ActionSkill_Exo", "GetMarkedTargetCount");

	Params::GbxSkillComponentFunctions_ActionSkill_Exo_GetMarkedTargetCount Parms{};

	Parms.ComponentReference = std::move(ComponentReference);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.GbxSkillComponentFunctions_ActionSkill_Exo.RegisterBBInitFunc
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FGbxSkillComponentReference&ComponentReference                                     (Parm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void()>                       Delegate                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGbxSkillComponentFunctions_ActionSkill_Exo::RegisterBBInitFunc(const struct FGbxSkillComponentReference& ComponentReference, TDelegate<void()> Delegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxSkillComponentFunctions_ActionSkill_Exo", "RegisterBBInitFunc");

	Params::GbxSkillComponentFunctions_ActionSkill_Exo_RegisterBBInitFunc Parms{};

	Parms.ComponentReference = std::move(ComponentReference);
	Parms.Delegate = Delegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIScript_Global.HoldActionLoop
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Global::HoldActionLoop(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Global", "HoldActionLoop");

	Params::OakUIScript_Global_HoldActionLoop Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Global.HoldActionStart
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Global::HoldActionStart(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Global", "HoldActionStart");

	Params::OakUIScript_Global_HoldActionStart Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Global.HoldActionStop
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Global::HoldActionStop(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Global", "HoldActionStop");

	Params::OakUIScript_Global_HoldActionStop Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Global.SliderDown
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Global::SliderDown(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Global", "SliderDown");

	Params::OakUIScript_Global_SliderDown Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Global.SliderError
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Global::SliderError(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Global", "SliderError");

	Params::OakUIScript_Global_SliderError Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Global.SliderUp
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Global::SliderUp(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Global", "SliderUp");

	Params::OakUIScript_Global_SliderUp Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Global.StepperLeft
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Global::StepperLeft(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Global", "StepperLeft");

	Params::OakUIScript_Global_StepperLeft Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Global.StepperRight
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Global::StepperRight(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Global", "StepperRight");

	Params::OakUIScript_Global_StepperRight Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Global.SwitchOff
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Global::SwitchOff(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Global", "SwitchOff");

	Params::OakUIScript_Global_SwitchOff Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Global.SwitchOn
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Global::SwitchOn(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Global", "SwitchOn");

	Params::OakUIScript_Global_SwitchOn Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.GbxTrickScript_Stasis.EndStasis
// (Final, Native, Public, BlueprintCallable)

void UGbxTrickScript_Stasis::EndStasis()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GbxTrickScript_Stasis", "EndStasis");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.GbxTrickScript_Stasis.Fling
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector&                   Location                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGbxTrickScript_Stasis::Fling(const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GbxTrickScript_Stasis", "Fling");

	Params::GbxTrickScript_Stasis_Fling Parms{};

	Parms.Location = std::move(Location);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.GbxTrickScript_Stasis.OnFlingEnded
// (Event, Public, BlueprintEvent)

void UGbxTrickScript_Stasis::OnFlingEnded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GbxTrickScript_Stasis", "OnFlingEnded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OakGame.GbxTrickScript_Stasis.SetHoldTarget
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector&                   Location                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGbxTrickScript_Stasis::SetHoldTarget(const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GbxTrickScript_Stasis", "SetHoldTarget");

	Params::GbxTrickScript_Stasis_SetHoldTarget Parms{};

	Parms.Location = std::move(Location);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.GbxTrickScript_Stasis_Grav.GetStasisOwner
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UGbxTrickScript_Stasis_Grav::GetStasisOwner()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GbxTrickScript_Stasis_Grav", "GetStasisOwner");

	Params::GbxTrickScript_Stasis_Grav_GetStasisOwner Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.GbxTrickScript_Stasis_Grav.OnOwnerDied
// (Event, Public, BlueprintEvent)

void UGbxTrickScript_Stasis_Grav::OnOwnerDied()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GbxTrickScript_Stasis_Grav", "OnOwnerDied");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OakGame.GbxTrickScript_Stasis_Grav.OnUnstableChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGbxTrickScript_Stasis_Grav::OnUnstableChanged(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GbxTrickScript_Stasis_Grav", "OnUnstableChanged");

	Params::GbxTrickScript_Stasis_Grav_OnUnstableChanged Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakWeapon.ClientReduceWear
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// uint8                                   UseModeIndex                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Percent                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakWeapon::ClientReduceWear(uint8 UseModeIndex, float Percent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakWeapon", "ClientReduceWear");

	Params::OakWeapon_ClientReduceWear Parms{};

	Parms.UseModeIndex = UseModeIndex;
	Parms.Percent = Percent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakWeapon.ServerSetCommandRingTarget
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// const struct FCommandRingTarget&        target                                                 (ConstParm, Parm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AOakWeapon::ServerSetCommandRingTarget(const struct FCommandRingTarget& target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakWeapon", "ServerSetCommandRingTarget");

	Params::OakWeapon_ServerSetCommandRingTarget Parms{};

	Parms.target = std::move(target);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakWeapon.GetChargePercent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AOakWeapon::GetChargePercent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakWeapon", "GetChargePercent");

	Params::OakWeapon_GetChargePercent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakWeapon.GetPartValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EWeaponPartValue                        type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AOakWeapon::GetPartValue(EWeaponPartValue type) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakWeapon", "GetPartValue");

	Params::OakWeapon_GetPartValue Parms{};

	Parms.type = type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.WaypointSystemDelegateProxy.OnDataLayerStateChanged
// (Final, Native, Public)
// Parameters:
// const class UDataLayerInstance*         InDataLayer                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EDataLayerRuntimeState                  InState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWaypointSystemDelegateProxy::OnDataLayerStateChanged(const class UDataLayerInstance* InDataLayer, EDataLayerRuntimeState InState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WaypointSystemDelegateProxy", "OnDataLayerStateChanged");

	Params::WaypointSystemDelegateProxy_OnDataLayerStateChanged Parms{};

	Parms.InDataLayer = InDataLayer;
	Parms.InState = InState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.GbxSkillComponentFunctions_Gravitar.GetCommandRingTarget
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// const struct FGbxSkillComponentReference&ComponentReference                                     (Parm, NoDestructor, NativeAccessSpecifierPublic)
// struct FCommandRingTarget               ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

struct FCommandRingTarget UGbxSkillComponentFunctions_Gravitar::GetCommandRingTarget(const struct FGbxSkillComponentReference& ComponentReference)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxSkillComponentFunctions_Gravitar", "GetCommandRingTarget");

	Params::GbxSkillComponentFunctions_Gravitar_GetCommandRingTarget Parms{};

	Parms.ComponentReference = std::move(ComponentReference);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.GbxSkillComponentFunctions_Gravitar.RegisterCommandRingInitFunc
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// const struct FGbxSkillComponentReference&ComponentReference                                     (Parm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(class ACommandRing* CommandRing)>func                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGbxSkillComponentFunctions_Gravitar::RegisterCommandRingInitFunc(const struct FGbxSkillComponentReference& ComponentReference, TDelegate<void(class ACommandRing* CommandRing)> func)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxSkillComponentFunctions_Gravitar", "RegisterCommandRingInitFunc");

	Params::GbxSkillComponentFunctions_Gravitar_RegisterCommandRingInitFunc Parms{};

	Parms.ComponentReference = std::move(ComponentReference);
	Parms.func = func;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.GbxSkillComponentFunctions_Gravitar.SetCommandRingVisible
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// const struct FGbxSkillComponentReference&ComponentReference                                     (Parm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGbxSkillComponentFunctions_Gravitar::SetCommandRingVisible(const struct FGbxSkillComponentReference& ComponentReference, bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxSkillComponentFunctions_Gravitar", "SetCommandRingVisible");

	Params::GbxSkillComponentFunctions_Gravitar_SetCommandRingVisible Parms{};

	Parms.ComponentReference = std::move(ComponentReference);
	Parms.bVisible = bVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIScript_MenuTutorial.OnMenuTutorialSequenceClosed
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_MenuTutorial::OnMenuTutorialSequenceClosed(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_MenuTutorial", "OnMenuTutorialSequenceClosed");

	Params::OakUIScript_MenuTutorial_OnMenuTutorialSequenceClosed Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_MenuTutorial.OnMenuTutorialSequenceNext
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_MenuTutorial::OnMenuTutorialSequenceNext(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_MenuTutorial", "OnMenuTutorialSequenceNext");

	Params::OakUIScript_MenuTutorial_OnMenuTutorialSequenceNext Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_MenuTutorial.OnMenuTutorialSequenceOpen
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_MenuTutorial::OnMenuTutorialSequenceOpen(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_MenuTutorial", "OnMenuTutorialSequenceOpen");

	Params::OakUIScript_MenuTutorial_OnMenuTutorialSequenceOpen Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.GbxSkillComponentFunctions_ActionSkill_Paladin.AddPrimeStack
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FGbxSkillComponentReference&ComponentReference                                     (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FPaladinPrimeStackData&    StackData                                              (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UGbxSkillComponentFunctions_ActionSkill_Paladin::AddPrimeStack(const struct FGbxSkillComponentReference& ComponentReference, const struct FPaladinPrimeStackData& StackData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxSkillComponentFunctions_ActionSkill_Paladin", "AddPrimeStack");

	Params::GbxSkillComponentFunctions_ActionSkill_Paladin_AddPrimeStack Parms{};

	Parms.ComponentReference = std::move(ComponentReference);
	Parms.StackData = std::move(StackData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.GbxSkillComponentFunctions_ActionSkill_Paladin.BindPrimeStackOp
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FGbxSkillComponentReference&ComponentReference                                     (Parm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(class AOakCharacter* target, EPaladinPrimeStackOp Op, EOakElementalType type, float damage, int32 Stacks, EPrimeStackDetonationType DetonationType)>func                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGbxSkillComponentFunctions_ActionSkill_Paladin::BindPrimeStackOp(const struct FGbxSkillComponentReference& ComponentReference, TDelegate<void(class AOakCharacter* target, EPaladinPrimeStackOp Op, EOakElementalType type, float damage, int32 Stacks, EPrimeStackDetonationType DetonationType)> func)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxSkillComponentFunctions_ActionSkill_Paladin", "BindPrimeStackOp");

	Params::GbxSkillComponentFunctions_ActionSkill_Paladin_BindPrimeStackOp Parms{};

	Parms.ComponentReference = std::move(ComponentReference);
	Parms.func = func;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.GbxSkillComponentFunctions_ActionSkill_Paladin.ClearPrimeStacks
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FGbxSkillComponentReference&ComponentReference                                     (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UGbxSkillComponentFunctions_ActionSkill_Paladin::ClearPrimeStacks(const struct FGbxSkillComponentReference& ComponentReference)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxSkillComponentFunctions_ActionSkill_Paladin", "ClearPrimeStacks");

	Params::GbxSkillComponentFunctions_ActionSkill_Paladin_ClearPrimeStacks Parms{};

	Parms.ComponentReference = std::move(ComponentReference);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.GbxSkillComponentFunctions_ActionSkill_Paladin.Detonate
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FGbxSkillComponentReference&ComponentReference                                     (Parm, NoDestructor, NativeAccessSpecifierPublic)
// class AOakCharacter*                    target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   damagemultiplier                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGbxSkillComponentFunctions_ActionSkill_Paladin::Detonate(const struct FGbxSkillComponentReference& ComponentReference, class AOakCharacter* target, float damagemultiplier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxSkillComponentFunctions_ActionSkill_Paladin", "Detonate");

	Params::GbxSkillComponentFunctions_ActionSkill_Paladin_Detonate Parms{};

	Parms.ComponentReference = std::move(ComponentReference);
	Parms.target = target;
	Parms.damagemultiplier = damagemultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.GbxSkillComponentFunctions_ActionSkill_Paladin.GetStackCount
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FGbxSkillComponentReference&ComponentReference                                     (Parm, NoDestructor, NativeAccessSpecifierPublic)
// class AOakCharacter*                    target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UGbxSkillComponentFunctions_ActionSkill_Paladin::GetStackCount(const struct FGbxSkillComponentReference& ComponentReference, class AOakCharacter* target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxSkillComponentFunctions_ActionSkill_Paladin", "GetStackCount");

	Params::GbxSkillComponentFunctions_ActionSkill_Paladin_GetStackCount Parms{};

	Parms.ComponentReference = std::move(ComponentReference);
	Parms.target = target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.GbxSkillComponentFunctions_ActionSkill_Paladin.Jumpstart
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FGbxSkillComponentReference&ComponentReference                                     (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UGbxSkillComponentFunctions_ActionSkill_Paladin::Jumpstart(const struct FGbxSkillComponentReference& ComponentReference)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxSkillComponentFunctions_ActionSkill_Paladin", "Jumpstart");

	Params::GbxSkillComponentFunctions_ActionSkill_Paladin_Jumpstart Parms{};

	Parms.ComponentReference = std::move(ComponentReference);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.GbxSkillComponentFunctions_ActionSkill_Paladin.SetCryoSlowLocked
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FGbxSkillComponentReference&ComponentReference                                     (Parm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    bLocked                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGbxSkillComponentFunctions_ActionSkill_Paladin::SetCryoSlowLocked(const struct FGbxSkillComponentReference& ComponentReference, bool bLocked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxSkillComponentFunctions_ActionSkill_Paladin", "SetCryoSlowLocked");

	Params::GbxSkillComponentFunctions_ActionSkill_Paladin_SetCryoSlowLocked Parms{};

	Parms.ComponentReference = std::move(ComponentReference);
	Parms.bLocked = bLocked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.GbxSkillComponentFunctions_CharacterLocks.SetProfileEnabled
// (Final, Native, Static, Private, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FGbxSkillComponentReference&ComponentReference                                     (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FGuid&                     ProfileItemID                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEnabled                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGbxSkillComponentFunctions_CharacterLocks::SetProfileEnabled(const struct FGbxSkillComponentReference& ComponentReference, const struct FGuid& ProfileItemID, bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxSkillComponentFunctions_CharacterLocks", "SetProfileEnabled");

	Params::GbxSkillComponentFunctions_CharacterLocks_SetProfileEnabled Parms{};

	Parms.ComponentReference = std::move(ComponentReference);
	Parms.ProfileItemID = std::move(ProfileItemID);
	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.GbxSkillComponentFunctions_CharacterLocks.ClearLocks
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// const struct FGbxSkillComponentReference&ComponentReference                                     (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UGbxSkillComponentFunctions_CharacterLocks::ClearLocks(const struct FGbxSkillComponentReference& ComponentReference)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GbxSkillComponentFunctions_CharacterLocks", "ClearLocks");

	Params::GbxSkillComponentFunctions_CharacterLocks_ClearLocks Parms{};

	Parms.ComponentReference = std::move(ComponentReference);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakAIHeldLootableComponent.Lootable_OnPhysicsSleep
// (Final, Native, Private)
// Parameters:
// class UPrimitiveComponent*              Component                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             BoneName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakAIHeldLootableComponent::Lootable_OnPhysicsSleep(class UPrimitiveComponent* Component, class FName BoneName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakAIHeldLootableComponent", "Lootable_OnPhysicsSleep");

	Params::OakAIHeldLootableComponent_Lootable_OnPhysicsSleep Parms{};

	Parms.Component = Component;
	Parms.BoneName = BoneName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.GbxSkillComponentFunctions_Charges.AddCharges
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// const struct FGbxSkillComponentReference&ComponentReference                                     (Parm, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   Charges                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGbxSkillComponentFunctions_Charges::AddCharges(const struct FGbxSkillComponentReference& ComponentReference, int32 Charges)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxSkillComponentFunctions_Charges", "AddCharges");

	Params::GbxSkillComponentFunctions_Charges_AddCharges Parms{};

	Parms.ComponentReference = std::move(ComponentReference);
	Parms.Charges = Charges;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.GbxSkillComponentFunctions_Charges.AdjustVirtualCooldown
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// const struct FGbxSkillComponentReference&ComponentReference                                     (Parm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGbxSkillComponentFunctions_Charges::AdjustVirtualCooldown(const struct FGbxSkillComponentReference& ComponentReference, float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxSkillComponentFunctions_Charges", "AdjustVirtualCooldown");

	Params::GbxSkillComponentFunctions_Charges_AdjustVirtualCooldown Parms{};

	Parms.ComponentReference = std::move(ComponentReference);
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.GbxSkillComponentFunctions_Charges.ConsumeCharges
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// const struct FGbxSkillComponentReference&ComponentReference                                     (Parm, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   Charges                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGbxSkillComponentFunctions_Charges::ConsumeCharges(const struct FGbxSkillComponentReference& ComponentReference, int32 Charges)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxSkillComponentFunctions_Charges", "ConsumeCharges");

	Params::GbxSkillComponentFunctions_Charges_ConsumeCharges Parms{};

	Parms.ComponentReference = std::move(ComponentReference);
	Parms.Charges = Charges;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.GbxSkillComponentFunctions_Charges.GetCharges
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// const struct FGbxSkillComponentReference&ComponentReference                                     (Parm, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UGbxSkillComponentFunctions_Charges::GetCharges(const struct FGbxSkillComponentReference& ComponentReference)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxSkillComponentFunctions_Charges", "GetCharges");

	Params::GbxSkillComponentFunctions_Charges_GetCharges Parms{};

	Parms.ComponentReference = std::move(ComponentReference);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.GbxSkillComponentFunctions_Charges.GetMaxCharges
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// const struct FGbxSkillComponentReference&ComponentReference                                     (Parm, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UGbxSkillComponentFunctions_Charges::GetMaxCharges(const struct FGbxSkillComponentReference& ComponentReference)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxSkillComponentFunctions_Charges", "GetMaxCharges");

	Params::GbxSkillComponentFunctions_Charges_GetMaxCharges Parms{};

	Parms.ComponentReference = std::move(ComponentReference);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.GbxSkillComponentFunctions_Charges.HasCharges
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// const struct FGbxSkillComponentReference&ComponentReference                                     (Parm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGbxSkillComponentFunctions_Charges::HasCharges(const struct FGbxSkillComponentReference& ComponentReference)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxSkillComponentFunctions_Charges", "HasCharges");

	Params::GbxSkillComponentFunctions_Charges_HasCharges Parms{};

	Parms.ComponentReference = std::move(ComponentReference);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.GbxSkillComponentFunctions_Charges.RefillCooldown
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// const struct FGbxSkillComponentReference&ComponentReference                                     (Parm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGbxSkillComponentFunctions_Charges::RefillCooldown(const struct FGbxSkillComponentReference& ComponentReference, float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxSkillComponentFunctions_Charges", "RefillCooldown");

	Params::GbxSkillComponentFunctions_Charges_RefillCooldown Parms{};

	Parms.ComponentReference = std::move(ComponentReference);
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.GbxSkillComponentFunctions_Charges.RefillVirtualCooldown
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// const struct FGbxSkillComponentReference&ComponentReference                                     (Parm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   Percent                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EOakActionSkillResourceRefillMode       RefillMode                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGbxSkillComponentFunctions_Charges::RefillVirtualCooldown(const struct FGbxSkillComponentReference& ComponentReference, float Percent, EOakActionSkillResourceRefillMode RefillMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxSkillComponentFunctions_Charges", "RefillVirtualCooldown");

	Params::GbxSkillComponentFunctions_Charges_RefillVirtualCooldown Parms{};

	Parms.ComponentReference = std::move(ComponentReference);
	Parms.Percent = Percent;
	Parms.RefillMode = RefillMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.GbxSkillComponentFunctions_Turret.SetFiringSolution
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// const struct FGbxSkillComponentReference&ComponentReference                                     (Parm, NoDestructor, NativeAccessSpecifierPublic)
// const struct FGbxSkillComponent_Turret_FiringSolutionData&SolutionData                                           (Parm, NativeAccessSpecifierPublic)

void UGbxSkillComponentFunctions_Turret::SetFiringSolution(const struct FGbxSkillComponentReference& ComponentReference, const struct FGbxSkillComponent_Turret_FiringSolutionData& SolutionData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxSkillComponentFunctions_Turret", "SetFiringSolution");

	Params::GbxSkillComponentFunctions_Turret_SetFiringSolution Parms{};

	Parms.ComponentReference = std::move(ComponentReference);
	Parms.SolutionData = std::move(SolutionData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.GbxSkillTokenProviderStatics.AddToTokenStack
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          Context                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGameDataHandleProperty_                StackDef                                               (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Count                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGbxSkillTokenProviderStatics::AddToTokenStack(class UObject* Context, FGameDataHandleProperty_ StackDef, int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxSkillTokenProviderStatics", "AddToTokenStack");

	Params::GbxSkillTokenProviderStatics_AddToTokenStack Parms{};

	Parms.Context = Context;
	Parms.StackDef = StackDef;
	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.GbxSkillTokenProviderStatics.ConsumeAll
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          Context                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGameDataHandleProperty_                StackDef                                               (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGbxSkillTokenProviderStatics::ConsumeAll(class UObject* Context, FGameDataHandleProperty_ StackDef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxSkillTokenProviderStatics", "ConsumeAll");

	Params::GbxSkillTokenProviderStatics_ConsumeAll Parms{};

	Parms.Context = Context;
	Parms.StackDef = StackDef;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.GbxSkillTokenProviderStatics.ConsumeFromTokenStack
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          Context                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGameDataHandleProperty_                StackDef                                               (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Count                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGbxSkillTokenProviderStatics::ConsumeFromTokenStack(class UObject* Context, FGameDataHandleProperty_ StackDef, int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxSkillTokenProviderStatics", "ConsumeFromTokenStack");

	Params::GbxSkillTokenProviderStatics_ConsumeFromTokenStack Parms{};

	Parms.Context = Context;
	Parms.StackDef = StackDef;
	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.GbxSkillTokenProviderStatics.GetCurrentAmount
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          Context                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGameDataHandleProperty_                StackDef                                               (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UGbxSkillTokenProviderStatics::GetCurrentAmount(class UObject* Context, FGameDataHandleProperty_ StackDef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxSkillTokenProviderStatics", "GetCurrentAmount");

	Params::GbxSkillTokenProviderStatics_GetCurrentAmount Parms{};

	Parms.Context = Context;
	Parms.StackDef = StackDef;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.GbxSkillTokenProviderStatics.GetExpirationDelay
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          Context                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGameDataHandleProperty_                StackDef                                               (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UGbxSkillTokenProviderStatics::GetExpirationDelay(class UObject* Context, FGameDataHandleProperty_ StackDef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxSkillTokenProviderStatics", "GetExpirationDelay");

	Params::GbxSkillTokenProviderStatics_GetExpirationDelay Parms{};

	Parms.Context = Context;
	Parms.StackDef = StackDef;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.GbxSkillTokenProviderStatics.GetMaxAmount
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          Context                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGameDataHandleProperty_                StackDef                                               (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UGbxSkillTokenProviderStatics::GetMaxAmount(class UObject* Context, FGameDataHandleProperty_ StackDef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxSkillTokenProviderStatics", "GetMaxAmount");

	Params::GbxSkillTokenProviderStatics_GetMaxAmount Parms{};

	Parms.Context = Context;
	Parms.StackDef = StackDef;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.GbxSkillTokenProviderStatics.ResetExpirationDelay
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          Context                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGameDataHandleProperty_                StackDef                                               (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGbxSkillTokenProviderStatics::ResetExpirationDelay(class UObject* Context, FGameDataHandleProperty_ StackDef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxSkillTokenProviderStatics", "ResetExpirationDelay");

	Params::GbxSkillTokenProviderStatics_ResetExpirationDelay Parms{};

	Parms.Context = Context;
	Parms.StackDef = StackDef;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.GbxTrickScript_AICharge.OnHitWall_Mut
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGbxTrickScript_AICharge::OnHitWall_Mut(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GbxTrickScript_AICharge", "OnHitWall_Mut");

	Params::GbxTrickScript_AICharge_OnHitWall_Mut Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.GbxTrickScript_AICharge.OnLoop_Mut
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGbxTrickScript_AICharge::OnLoop_Mut(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GbxTrickScript_AICharge", "OnLoop_Mut");

	Params::GbxTrickScript_AICharge_OnLoop_Mut Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.GbxTrickScript_AICharge.OnLoopRep_Mut
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGbxTrickScript_AICharge::OnLoopRep_Mut(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GbxTrickScript_AICharge", "OnLoopRep_Mut");

	Params::GbxTrickScript_AICharge_OnLoopRep_Mut Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.GbxTrickScript_AICharge.OnMiss_Mut
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGbxTrickScript_AICharge::OnMiss_Mut(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GbxTrickScript_AICharge", "OnMiss_Mut");

	Params::GbxTrickScript_AICharge_OnMiss_Mut Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.GbxTrickScript_AICharge.OnReachCliff_Mut
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGbxTrickScript_AICharge::OnReachCliff_Mut(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GbxTrickScript_AICharge", "OnReachCliff_Mut");

	Params::GbxTrickScript_AICharge_OnReachCliff_Mut Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.GbxTrickScript_AICharge.OnStopForFriendly_Mut
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGbxTrickScript_AICharge::OnStopForFriendly_Mut(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GbxTrickScript_AICharge", "OnStopForFriendly_Mut");

	Params::GbxTrickScript_AICharge_OnStopForFriendly_Mut Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.GbxTrickScript_AICharge.OnStrike_Mut
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGbxTrickScript_AICharge::OnStrike_Mut(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GbxTrickScript_AICharge", "OnStrike_Mut");

	Params::GbxTrickScript_AICharge_OnStrike_Mut Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.GbxTrickScript_AICharge.OnHitWall_Const
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGbxTrickScript_AICharge::OnHitWall_Const(class AActor* Actor) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GbxTrickScript_AICharge", "OnHitWall_Const");

	Params::GbxTrickScript_AICharge_OnHitWall_Const Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.GbxTrickScript_AICharge.OnLoop_Const
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGbxTrickScript_AICharge::OnLoop_Const(class AActor* Actor) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GbxTrickScript_AICharge", "OnLoop_Const");

	Params::GbxTrickScript_AICharge_OnLoop_Const Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.GbxTrickScript_AICharge.OnLoopRep_Const
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGbxTrickScript_AICharge::OnLoopRep_Const(class AActor* Actor) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GbxTrickScript_AICharge", "OnLoopRep_Const");

	Params::GbxTrickScript_AICharge_OnLoopRep_Const Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.GbxTrickScript_AICharge.OnMiss_Const
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGbxTrickScript_AICharge::OnMiss_Const(class AActor* Actor) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GbxTrickScript_AICharge", "OnMiss_Const");

	Params::GbxTrickScript_AICharge_OnMiss_Const Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.GbxTrickScript_AICharge.OnReachCliff_Const
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGbxTrickScript_AICharge::OnReachCliff_Const(class AActor* Actor) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GbxTrickScript_AICharge", "OnReachCliff_Const");

	Params::GbxTrickScript_AICharge_OnReachCliff_Const Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.GbxTrickScript_AICharge.OnStopForFriendly_Const
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGbxTrickScript_AICharge::OnStopForFriendly_Const(class AActor* Actor) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GbxTrickScript_AICharge", "OnStopForFriendly_Const");

	Params::GbxTrickScript_AICharge_OnStopForFriendly_Const Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.GbxTrickScript_AICharge.OnStrike_Const
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGbxTrickScript_AICharge::OnStrike_Const(class AActor* Actor) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GbxTrickScript_AICharge", "OnStrike_Const");

	Params::GbxTrickScript_AICharge_OnStrike_Const Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.GbxTrickScript_AITargetLock.OnTargetLockEnded
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAITargetLockExitReason                 reason                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGbxTrickScript_AITargetLock::OnTargetLockEnded(class AActor* Actor, EAITargetLockExitReason reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GbxTrickScript_AITargetLock", "OnTargetLockEnded");

	Params::GbxTrickScript_AITargetLock_OnTargetLockEnded Parms{};

	Parms.Actor = Actor;
	Parms.reason = reason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakVehicle.ClientLockWeaponActions
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// class FName                             reason                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ChannelsMask                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bStopActions                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bClearInput                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakVehicle::ClientLockWeaponActions(class FName reason, int32 ChannelsMask, bool bStopActions, bool bClearInput)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakVehicle", "ClientLockWeaponActions");

	Params::OakVehicle_ClientLockWeaponActions Parms{};

	Parms.reason = reason;
	Parms.ChannelsMask = ChannelsMask;
	Parms.bStopActions = bStopActions;
	Parms.bClearInput = bClearInput;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakVehicle.ClientSetActiveWeaponTypeIndex
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// int32                                   ClientWeaponTypeIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakVehicle::ClientSetActiveWeaponTypeIndex(int32 ClientWeaponTypeIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakVehicle", "ClientSetActiveWeaponTypeIndex");

	Params::OakVehicle_ClientSetActiveWeaponTypeIndex Parms{};

	Parms.ClientWeaponTypeIndex = ClientWeaponTypeIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakVehicle.ClientStopWeaponActions
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// int32                                   slot                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ChannelsMask                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bClearInput                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakVehicle::ClientStopWeaponActions(int32 slot, int32 ChannelsMask, bool bClearInput)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakVehicle", "ClientStopWeaponActions");

	Params::OakVehicle_ClientStopWeaponActions Parms{};

	Parms.slot = slot;
	Parms.ChannelsMask = ChannelsMask;
	Parms.bClearInput = bClearInput;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakVehicle.ClientUnlockWeaponActions
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// class FName                             reason                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ChannelsMask                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakVehicle::ClientUnlockWeaponActions(class FName reason, int32 ChannelsMask)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakVehicle", "ClientUnlockWeaponActions");

	Params::OakVehicle_ClientUnlockWeaponActions Parms{};

	Parms.reason = reason;
	Parms.ChannelsMask = ChannelsMask;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakVehicle.ClientVehicleImpact
// (Net, Native, Event, Public, HasDefaults, NetClient)
// Parameters:
// const struct FVector&                   HitLocation                                            (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   HitNormal                                              (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHitResult&                Hit                                                    (ConstParm, Parm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// float                                   ImpactSeverity                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInferred                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSoftImpact                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakVehicle::ClientVehicleImpact(const struct FVector& HitLocation, const struct FVector& HitNormal, const struct FHitResult& Hit, float ImpactSeverity, bool bInferred, bool bSoftImpact)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakVehicle", "ClientVehicleImpact");

	Params::OakVehicle_ClientVehicleImpact Parms{};

	Parms.HitLocation = std::move(HitLocation);
	Parms.HitNormal = std::move(HitNormal);
	Parms.Hit = std::move(Hit);
	Parms.ImpactSeverity = ImpactSeverity;
	Parms.bInferred = bInferred;
	Parms.bSoftImpact = bSoftImpact;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakVehicle.OnRep_AppearanceNetChannels
// (Final, Native, Public)

void AOakVehicle::OnRep_AppearanceNetChannels()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakVehicle", "OnRep_AppearanceNetChannels");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakVehicle.OnRep_DriverReplicatedState
// (Final, Native, Private)

void AOakVehicle::OnRep_DriverReplicatedState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakVehicle", "OnRep_DriverReplicatedState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakVehicle.OnRep_GbxActorPartOwnerState
// (Final, Native, Public)

void AOakVehicle::OnRep_GbxActorPartOwnerState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakVehicle", "OnRep_GbxActorPartOwnerState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakVehicle.OnRep_HealthState
// (Final, Native, Protected)

void AOakVehicle::OnRep_HealthState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakVehicle", "OnRep_HealthState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakVehicle.OnRep_HoverDrive
// (Final, Native, Public, HasOutParams)
// Parameters:
// const FGbxDefPtrProperty_&              PrevHoverDrive                                         (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakVehicle::OnRep_HoverDrive(const FGbxDefPtrProperty_& PrevHoverDrive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakVehicle", "OnRep_HoverDrive");

	Params::OakVehicle_OnRep_HoverDrive Parms{};

	Parms.PrevHoverDrive = PrevHoverDrive;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakVehicle.OnRep_ReplicatedZoomState
// (Final, Native, Protected)

void AOakVehicle::OnRep_ReplicatedZoomState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakVehicle", "OnRep_ReplicatedZoomState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakVehicle.ServerCancelFreeBoost
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AOakVehicle::ServerCancelFreeBoost()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakVehicle", "ServerCancelFreeBoost");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakVehicle.ServerEnterVehicle
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// class AOakPlayerController*             InDriver                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakVehicle::ServerEnterVehicle(class AOakPlayerController* InDriver)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakVehicle", "ServerEnterVehicle");

	Params::OakVehicle_ServerEnterVehicle Parms{};

	Parms.InDriver = InDriver;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakVehicle.ServerExitVehicle
// (Final, Net, NetReliable, Native, Event, Private, NetServer, HasDefaults, NetValidate)
// Parameters:
// EVehicleExitReason                      reason                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FRotator&                  InExitRotation                                         (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void AOakVehicle::ServerExitVehicle(EVehicleExitReason reason, const struct FRotator& InExitRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakVehicle", "ServerExitVehicle");

	Params::OakVehicle_ServerExitVehicle Parms{};

	Parms.reason = reason;
	Parms.InExitRotation = std::move(InExitRotation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakVehicle.ServerLockWeaponActions
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// class FName                             reason                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ChannelsMask                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bStopActions                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bClearInput                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakVehicle::ServerLockWeaponActions(class FName reason, int32 ChannelsMask, bool bStopActions, bool bClearInput)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakVehicle", "ServerLockWeaponActions");

	Params::OakVehicle_ServerLockWeaponActions Parms{};

	Parms.reason = reason;
	Parms.ChannelsMask = ChannelsMask;
	Parms.bStopActions = bStopActions;
	Parms.bClearInput = bClearInput;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakVehicle.ServerRecomputeBoostCost
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AOakVehicle::ServerRecomputeBoostCost()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakVehicle", "ServerRecomputeBoostCost");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakVehicle.ServerSetCurrentWeapon
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// class AWeapon*                          NewWeapon                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   slot                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ClientWeaponTypeIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakVehicle::ServerSetCurrentWeapon(class AWeapon* NewWeapon, int32 slot, int32 ClientWeaponTypeIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakVehicle", "ServerSetCurrentWeapon");

	Params::OakVehicle_ServerSetCurrentWeapon Parms{};

	Parms.NewWeapon = NewWeapon;
	Parms.slot = slot;
	Parms.ClientWeaponTypeIndex = ClientWeaponTypeIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakVehicle.ServerSetZoomState
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// EZoomState                              InState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   InLevel                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ZoomStartOffset                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakVehicle::ServerSetZoomState(EZoomState InState, uint8 InLevel, float ZoomStartOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakVehicle", "ServerSetZoomState");

	Params::OakVehicle_ServerSetZoomState Parms{};

	Parms.InState = InState;
	Parms.InLevel = InLevel;
	Parms.ZoomStartOffset = ZoomStartOffset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakVehicle.ServerStopWeaponActions
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// int32                                   slot                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ChannelsMask                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bClearInput                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakVehicle::ServerStopWeaponActions(int32 slot, int32 ChannelsMask, bool bClearInput)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakVehicle", "ServerStopWeaponActions");

	Params::OakVehicle_ServerStopWeaponActions Parms{};

	Parms.slot = slot;
	Parms.ChannelsMask = ChannelsMask;
	Parms.bClearInput = bClearInput;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakVehicle.ServerUnlockWeaponActions
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// class FName                             reason                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ChannelsMask                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakVehicle::ServerUnlockWeaponActions(class FName reason, int32 ChannelsMask)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakVehicle", "ServerUnlockWeaponActions");

	Params::OakVehicle_ServerUnlockWeaponActions Parms{};

	Parms.reason = reason;
	Parms.ChannelsMask = ChannelsMask;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakVehicle.WeaponEquipped
// (Final, Native, Protected)
// Parameters:
// class AWeapon*                          Weapon                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakVehicle::WeaponEquipped(class AWeapon* Weapon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakVehicle", "WeaponEquipped");

	Params::OakVehicle_WeaponEquipped Parms{};

	Parms.Weapon = Weapon;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakVehicle.WeaponPutDown
// (Final, Native, Protected)
// Parameters:
// class AWeapon*                          Weapon                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakVehicle::WeaponPutDown(class AWeapon* Weapon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakVehicle", "WeaponPutDown");

	Params::OakVehicle_WeaponPutDown Parms{};

	Parms.Weapon = Weapon;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakStasisBlueprintLibrary.End
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakStasisBlueprintLibrary::End(class AActor* target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakStasisBlueprintLibrary", "End");

	Params::OakStasisBlueprintLibrary_End Parms{};

	Parms.target = target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakStasisBlueprintLibrary.Fling
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                           target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   TargetLocation                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(class AActor* target)>   OnEnd                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakStasisBlueprintLibrary::Fling(class AActor* target, const struct FVector& TargetLocation, TDelegate<void(class AActor* target)> OnEnd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakStasisBlueprintLibrary", "Fling");

	Params::OakStasisBlueprintLibrary_Fling Parms{};

	Parms.target = target;
	Parms.TargetLocation = std::move(TargetLocation);
	Parms.OnEnd = OnEnd;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakStasisBlueprintLibrary.Hold
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                           target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGbxTrick_Stasis*                 Trick                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   HoldLocation                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SpeedModifier                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakStasisBlueprintLibrary::Hold(class AActor* target, class UGbxTrick_Stasis* Trick, const struct FVector& HoldLocation, float SpeedModifier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakStasisBlueprintLibrary", "Hold");

	Params::OakStasisBlueprintLibrary_Hold Parms{};

	Parms.target = target;
	Parms.Trick = Trick;
	Parms.HoldLocation = std::move(HoldLocation);
	Parms.SpeedModifier = SpeedModifier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakStasisBlueprintLibrary.Hold_WithOnHoldTargetReachedDelegate
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                           target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGbxTrick_Stasis*                 Trick                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   HoldLocation                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(class AActor* target)>   OnHoldTargetReached                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SpeedModifier                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakStasisBlueprintLibrary::Hold_WithOnHoldTargetReachedDelegate(class AActor* target, class UGbxTrick_Stasis* Trick, const struct FVector& HoldLocation, TDelegate<void(class AActor* target)> OnHoldTargetReached, float SpeedModifier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakStasisBlueprintLibrary", "Hold_WithOnHoldTargetReachedDelegate");

	Params::OakStasisBlueprintLibrary_Hold_WithOnHoldTargetReachedDelegate Parms{};

	Parms.target = target;
	Parms.Trick = Trick;
	Parms.HoldLocation = std::move(HoldLocation);
	Parms.OnHoldTargetReached = OnHoldTargetReached;
	Parms.SpeedModifier = SpeedModifier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.GrappleStatics.BreakGrappleableTarget
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGrappleableTarget&        target                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// class AActor**                          OwnerActor                                             (Parm, OutParm, ZeroConstructor, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent**                 TargetComponent                                        (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName*                            SocketName                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName*                            Identifier                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGrappleableTargetInit*          TargetData                                             (Parm, OutParm, NoDestructor, AdvancedDisplay, NativeAccessSpecifierPublic)

void UGrappleStatics::BreakGrappleableTarget(const struct FGrappleableTarget& target, class AActor** OwnerActor, class USceneComponent** TargetComponent, class FName* SocketName, class FName* Identifier, struct FGrappleableTargetInit* TargetData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GrappleStatics", "BreakGrappleableTarget");

	Params::GrappleStatics_BreakGrappleableTarget Parms{};

	Parms.target = std::move(target);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OwnerActor != nullptr)
		*OwnerActor = Parms.OwnerActor;

	if (TargetComponent != nullptr)
		*TargetComponent = Parms.TargetComponent;

	if (SocketName != nullptr)
		*SocketName = Parms.SocketName;

	if (Identifier != nullptr)
		*Identifier = Parms.Identifier;

	if (TargetData != nullptr)
		*TargetData = std::move(Parms.TargetData);
}


// Function OakGame.GrappleStatics.BreakGrappleableTargetInit
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGrappleableTargetInit&    TargetInit                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool*                                   bInitiatesTravel                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAxis*                                  FacingAxis                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   bOmnidirectional                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   bRequiresEnhancedGrapple                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGrappleStatics::BreakGrappleableTargetInit(const struct FGrappleableTargetInit& TargetInit, bool* bInitiatesTravel, EAxis* FacingAxis, bool* bOmnidirectional, bool* bRequiresEnhancedGrapple)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GrappleStatics", "BreakGrappleableTargetInit");

	Params::GrappleStatics_BreakGrappleableTargetInit Parms{};

	Parms.TargetInit = std::move(TargetInit);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bInitiatesTravel != nullptr)
		*bInitiatesTravel = Parms.bInitiatesTravel;

	if (FacingAxis != nullptr)
		*FacingAxis = Parms.FacingAxis;

	if (bOmnidirectional != nullptr)
		*bOmnidirectional = Parms.bOmnidirectional;

	if (bRequiresEnhancedGrapple != nullptr)
		*bRequiresEnhancedGrapple = Parms.bRequiresEnhancedGrapple;
}


// Function OakGame.OakPlayerController.CameraTransition
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             NewMode                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Transition                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   BlendTimeOverride                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bTeleport                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bForceResetMode                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakPlayerController::CameraTransition(class FName NewMode, class FName Transition, float BlendTimeOverride, bool bTeleport, bool bForceResetMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "CameraTransition");

	Params::OakPlayerController_CameraTransition Parms{};

	Parms.NewMode = NewMode;
	Parms.Transition = Transition;
	Parms.BlendTimeOverride = BlendTimeOverride;
	Parms.bTeleport = bTeleport;
	Parms.bForceResetMode = bForceResetMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.Client_PlayEchoLog
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// const FGbxDefPtrProperty_&              InEchoLog                                              (ConstParm, Parm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakPlayerController::Client_PlayEchoLog(const FGbxDefPtrProperty_& InEchoLog)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "Client_PlayEchoLog");

	Params::OakPlayerController_Client_PlayEchoLog Parms{};

	Parms.InEchoLog = InEchoLog;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.Client_RequestDLCEntitlements
// (Net, NetReliable, Native, Event, Public, NetClient)

void AOakPlayerController::Client_RequestDLCEntitlements()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "Client_RequestDLCEntitlements");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.Client_UnlockEchoLog
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// const FGbxDefPtrProperty_&              InEchoLog                                              (ConstParm, Parm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakPlayerController::Client_UnlockEchoLog(const FGbxDefPtrProperty_& InEchoLog)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "Client_UnlockEchoLog");

	Params::OakPlayerController_Client_UnlockEchoLog Parms{};

	Parms.InEchoLog = InEchoLog;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.ClientBroadcastPersonalVehiclePermission
// (Net, Native, Event, Public, NetClient)
// Parameters:
// EPersonalVehicleSummonPermission        Permission                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakPlayerController::ClientBroadcastPersonalVehiclePermission(EPersonalVehicleSummonPermission Permission)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "ClientBroadcastPersonalVehiclePermission");

	Params::OakPlayerController_ClientBroadcastPersonalVehiclePermission Parms{};

	Parms.Permission = Permission;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.ClientCallBlackMarketCooldownEvent
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// bool                                    bEnded                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakPlayerController::ClientCallBlackMarketCooldownEvent(bool bEnded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "ClientCallBlackMarketCooldownEvent");

	Params::OakPlayerController_ClientCallBlackMarketCooldownEvent Parms{};

	Parms.bEnded = bEnded;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.ClientCallVendingMachineUsabilityFunction
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class AOakVendingMachine*               VendingMachineActor                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EOakVendorUsabilityFunction             FunctionType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakPlayerController::ClientCallVendingMachineUsabilityFunction(class AOakVendingMachine* VendingMachineActor, EOakVendorUsabilityFunction FunctionType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "ClientCallVendingMachineUsabilityFunction");

	Params::OakPlayerController_ClientCallVendingMachineUsabilityFunction Parms{};

	Parms.VendingMachineActor = VendingMachineActor;
	Parms.FunctionType = FunctionType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.ClientCancelPing
// (Net, NetReliable, Native, Event, Public, HasDefaults, NetClient)
// Parameters:
// int32                                   PingInstigator                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TargetedActor                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Location                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakPlayerController::ClientCancelPing(int32 PingInstigator, class AActor* TargetedActor, const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "ClientCancelPing");

	Params::OakPlayerController_ClientCancelPing Parms{};

	Parms.PingInstigator = PingInstigator;
	Parms.TargetedActor = TargetedActor;
	Parms.Location = std::move(Location);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.ClientCloseItemContainers
// (Net, NetReliable, Native, Event, Public, NetClient)

void AOakPlayerController::ClientCloseItemContainers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "ClientCloseItemContainers");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.ClientCreatePing
// (Net, NetReliable, Native, Event, Public, HasDefaults, NetClient)
// Parameters:
// int32                                   PingInstigator                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TargetedActor                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Location                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FSName&                    PingFeedbackDefName                                    (ConstParm, Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakPlayerController::ClientCreatePing(int32 PingInstigator, class AActor* TargetedActor, const struct FVector& Location, const struct FSName& PingFeedbackDefName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "ClientCreatePing");

	Params::OakPlayerController_ClientCreatePing Parms{};

	Parms.PingInstigator = PingInstigator;
	Parms.TargetedActor = TargetedActor;
	Parms.Location = std::move(Location);
	Parms.PingFeedbackDefName = std::move(PingFeedbackDefName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.ClientDiscoveryNotifyLocationDiscoveredStateChanged
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// const struct FGbxDiscoveryDiscoveredKey&InLocation                                             (ConstParm, Parm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EGbxDiscoveryProximity                  InProximity                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AGbxPlayerState*                  InDiscoveringPlayer                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakPlayerController::ClientDiscoveryNotifyLocationDiscoveredStateChanged(const struct FGbxDiscoveryDiscoveredKey& InLocation, EGbxDiscoveryProximity InProximity, class AGbxPlayerState* InDiscoveringPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "ClientDiscoveryNotifyLocationDiscoveredStateChanged");

	Params::OakPlayerController_ClientDiscoveryNotifyLocationDiscoveredStateChanged Parms{};

	Parms.InLocation = std::move(InLocation);
	Parms.InProximity = InProximity;
	Parms.InDiscoveringPlayer = InDiscoveringPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.ClientEntitlementDisconnect
// (Net, NetReliable, Native, Event, Public, NetClient)

void AOakPlayerController::ClientEntitlementDisconnect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "ClientEntitlementDisconnect");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.ClientForceCharacterSelectionAfterCountdown
// (Net, NetReliable, Native, Event, Public, NetClient)

void AOakPlayerController::ClientForceCharacterSelectionAfterCountdown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "ClientForceCharacterSelectionAfterCountdown");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.ClientGameHostDisconnecting
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// EGbxNetworkDestroyReason                reason                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakPlayerController::ClientGameHostDisconnecting(EGbxNetworkDestroyReason reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "ClientGameHostDisconnecting");

	Params::OakPlayerController_ClientGameHostDisconnecting Parms{};

	Parms.reason = reason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.ClientNotifyExitingVehicle
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class AOakVehicle*                      OakVehicle                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EVehicleExitReason                      reason                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   HealthRegenTime                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakPlayerController::ClientNotifyExitingVehicle(class AOakVehicle* OakVehicle, EVehicleExitReason reason, float HealthRegenTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "ClientNotifyExitingVehicle");

	Params::OakPlayerController_ClientNotifyExitingVehicle Parms{};

	Parms.OakVehicle = OakVehicle;
	Parms.reason = reason;
	Parms.HealthRegenTime = HealthRegenTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.ClientNotifyNewGameEnded
// (Net, NetReliable, Native, Event, Public, NetClient)

void AOakPlayerController::ClientNotifyNewGameEnded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "ClientNotifyNewGameEnded");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.ClientNotifyTeleporting
// (Final, Net, NetReliable, Native, Event, Private, HasDefaults, NetClient)
// Parameters:
// uint8                                   TeleportId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const FGameDataHandleProperty_&         station                                                (ConstParm, Parm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   DestLocation                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bPreTeleport                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bImmediate                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bPresumedLoaded                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bNoInstantEffects                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bTethered                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakPlayerController::ClientNotifyTeleporting(uint8 TeleportId, const FGameDataHandleProperty_& station, const struct FVector& DestLocation, bool bPreTeleport, bool bImmediate, bool bPresumedLoaded, bool bNoInstantEffects, bool bTethered)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "ClientNotifyTeleporting");

	Params::OakPlayerController_ClientNotifyTeleporting Parms{};

	Parms.TeleportId = TeleportId;
	Parms.station = station;
	Parms.DestLocation = std::move(DestLocation);
	Parms.bPreTeleport = bPreTeleport;
	Parms.bImmediate = bImmediate;
	Parms.bPresumedLoaded = bPresumedLoaded;
	Parms.bNoInstantEffects = bNoInstantEffects;
	Parms.bTethered = bTethered;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.ClientOpenItemContainer
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class FName                             PlayerContainerName                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             OtherContainerName                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherContainerOwner                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EInventoryTransactionType               TransactionType                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TransactionTag                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bNeedsCallbackWhenClosed                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakPlayerController::ClientOpenItemContainer(class FName PlayerContainerName, class FName OtherContainerName, class AActor* OtherContainerOwner, EInventoryTransactionType TransactionType, class FName TransactionTag, bool bNeedsCallbackWhenClosed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "ClientOpenItemContainer");

	Params::OakPlayerController_ClientOpenItemContainer Parms{};

	Parms.PlayerContainerName = PlayerContainerName;
	Parms.OtherContainerName = OtherContainerName;
	Parms.OtherContainerOwner = OtherContainerOwner;
	Parms.TransactionType = TransactionType;
	Parms.TransactionTag = TransactionTag;
	Parms.bNeedsCallbackWhenClosed = bNeedsCallbackWhenClosed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.ClientOpenMissionAcceptMenu
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// const TScriptInterface<class IMissionGiver>&MissionGiver                                           (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakPlayerController::ClientOpenMissionAcceptMenu(const TScriptInterface<class IMissionGiver>& MissionGiver)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "ClientOpenMissionAcceptMenu");

	Params::OakPlayerController_ClientOpenMissionAcceptMenu Parms{};

	Parms.MissionGiver = MissionGiver;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.ClientSendAllPlayersRequiredNotification
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// bool                                    bPlayerAlreadyPresent                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakPlayerController::ClientSendAllPlayersRequiredNotification(bool bPlayerAlreadyPresent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "ClientSendAllPlayersRequiredNotification");

	Params::OakPlayerController_ClientSendAllPlayersRequiredNotification Parms{};

	Parms.bPlayerAlreadyPresent = bPlayerAlreadyPresent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.ClientStartInGameCredits
// (Net, NetReliable, Native, Event, Public, NetClient)

void AOakPlayerController::ClientStartInGameCredits()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "ClientStartInGameCredits");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.ClientStartPlatformActivity
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// const class FName&                      ActivityID                                             (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakPlayerController::ClientStartPlatformActivity(const class FName& ActivityID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "ClientStartPlatformActivity");

	Params::OakPlayerController_ClientStartPlatformActivity Parms{};

	Parms.ActivityID = ActivityID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.ClientStopInGameCredits
// (Net, NetReliable, Native, Event, Public, NetClient)

void AOakPlayerController::ClientStopInGameCredits()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "ClientStopInGameCredits");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.ClientStopPlatformActivity
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// const class FName&                      ActivityID                                             (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bCompleted                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakPlayerController::ClientStopPlatformActivity(const class FName& ActivityID, bool bCompleted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "ClientStopPlatformActivity");

	Params::OakPlayerController_ClientStopPlatformActivity Parms{};

	Parms.ActivityID = ActivityID;
	Parms.bCompleted = bCompleted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.ClientSyncVendingMachineTimer
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class AOakVendingMachine*               VendingMachineActor                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeTilShuffle                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakPlayerController::ClientSyncVendingMachineTimer(class AOakVendingMachine* VendingMachineActor, float TimeTilShuffle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "ClientSyncVendingMachineTimer");

	Params::OakPlayerController_ClientSyncVendingMachineTimer Parms{};

	Parms.VendingMachineActor = VendingMachineActor;
	Parms.TimeTilShuffle = TimeTilShuffle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.ClientTakeAllLostLoot
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class AOakLostLootMachine*              LostLootMachine                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bTrash                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakPlayerController::ClientTakeAllLostLoot(class AOakLostLootMachine* LostLootMachine, bool bTrash)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "ClientTakeAllLostLoot");

	Params::OakPlayerController_ClientTakeAllLostLoot Parms{};

	Parms.LostLootMachine = LostLootMachine;
	Parms.bTrash = bTrash;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.DepositItemsMarkedForBankDeposit
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void AOakPlayerController::DepositItemsMarkedForBankDeposit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "DepositItemsMarkedForBankDeposit");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.Multicast_CheckpointActivated
// (Net, NetReliable, Native, Event, NetMulticast, Public, HasDefaults)
// Parameters:
// const struct FVector&                   Location                                               (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakPlayerController::Multicast_CheckpointActivated(const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "Multicast_CheckpointActivated");

	Params::OakPlayerController_Multicast_CheckpointActivated Parms{};

	Parms.Location = std::move(Location);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.NotifyNotIdle
// (Final, Native, Public, BlueprintCallable)

void AOakPlayerController::NotifyNotIdle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "NotifyNotIdle");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.OnBossDimmedStateUpdatedRPC
// (Final, Net, Native, Event, Private, NetClient)
// Parameters:
// class AActor*                           Boss                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsDimmed                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakPlayerController::OnBossDimmedStateUpdatedRPC(class AActor* Boss, bool bIsDimmed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "OnBossDimmedStateUpdatedRPC");

	Params::OakPlayerController_OnBossDimmedStateUpdatedRPC Parms{};

	Parms.Boss = Boss;
	Parms.bIsDimmed = bIsDimmed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.OnBossInvulnerabilityStateUpdatedRPC
// (Final, Net, Native, Event, Private, NetClient)
// Parameters:
// class AActor*                           Boss                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsInvulnerable                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakPlayerController::OnBossInvulnerabilityStateUpdatedRPC(class AActor* Boss, bool bIsInvulnerable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "OnBossInvulnerabilityStateUpdatedRPC");

	Params::OakPlayerController_OnBossInvulnerabilityStateUpdatedRPC Parms{};

	Parms.Boss = Boss;
	Parms.bIsInvulnerable = bIsInvulnerable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.OnRep_Ammo
// (Final, Native, Protected)

void AOakPlayerController::OnRep_Ammo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "OnRep_Ammo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.OnRep_BossState
// (Final, Native, Private, HasOutParams)
// Parameters:
// const struct FOakBossState&             PrevBossState                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AOakPlayerController::OnRep_BossState(const struct FOakBossState& PrevBossState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "OnRep_BossState");

	Params::OakPlayerController_OnRep_BossState Parms{};

	Parms.PrevBossState = std::move(PrevBossState);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.OnRep_HUDIconTotalCount
// (Final, Native, Private)

void AOakPlayerController::OnRep_HUDIconTotalCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "OnRep_HUDIconTotalCount");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.OnRep_PendingTriggeredPresentation
// (Final, Native, Protected)

void AOakPlayerController::OnRep_PendingTriggeredPresentation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "OnRep_PendingTriggeredPresentation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.OnRep_RecentlyCausedDamageInstances
// (Final, Native, Protected)

void AOakPlayerController::OnRep_RecentlyCausedDamageInstances()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "OnRep_RecentlyCausedDamageInstances");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.OnRep_ResurrectStation
// (Final, Native, Private)

void AOakPlayerController::OnRep_ResurrectStation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "OnRep_ResurrectStation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.OnRep_ServerCameraModeChanged
// (Final, Native, Protected)

void AOakPlayerController::OnRep_ServerCameraModeChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "OnRep_ServerCameraModeChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.OnRep_TravelStatus
// (Final, Native, Private)

void AOakPlayerController::OnRep_TravelStatus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "OnRep_TravelStatus");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.OnVehicleSummonPermissionChecked
// (Final, Native, Public)
// Parameters:
// EPersonalVehicleSummonPermission        Permission                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakPlayerController::OnVehicleSummonPermissionChecked(EPersonalVehicleSummonPermission Permission)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "OnVehicleSummonPermissionChecked");

	Params::OakPlayerController_OnVehicleSummonPermissionChecked Parms{};

	Parms.Permission = Permission;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.OnVehicleSummonStateChanged
// (Final, Native, Public)
// Parameters:
// EPersonalVehicleSummonState             State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakPlayerController::OnVehicleSummonStateChanged(EPersonalVehicleSummonState State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "OnVehicleSummonStateChanged");

	Params::OakPlayerController_OnVehicleSummonStateChanged Parms{};

	Parms.State = State;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.OpenInventoryMenu
// (Final, Native, Public, BlueprintCallable)

void AOakPlayerController::OpenInventoryMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "OpenInventoryMenu");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.OpenSkillsMenu
// (Final, Native, Public, BlueprintCallable)

void AOakPlayerController::OpenSkillsMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "OpenSkillsMenu");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.OpenStatusMenu
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// const class FName                       SubMenuId                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          SelectionObject                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakPlayerController::OpenStatusMenu(const class FName SubMenuId, class UObject* SelectionObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "OpenStatusMenu");

	Params::OakPlayerController_OpenStatusMenu Parms{};

	Parms.SubMenuId = SubMenuId;
	Parms.SelectionObject = SelectionObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.RequestTeleportToPlayer
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// int32                                   PlayerId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakPlayerController::RequestTeleportToPlayer(int32 PlayerId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "RequestTeleportToPlayer");

	Params::OakPlayerController_RequestTeleportToPlayer Parms{};

	Parms.PlayerId = PlayerId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.RequestTeleportToStation
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// const FGameDataHandleProperty_&         station                                                (ConstParm, Parm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bForRespawn                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bLocalOnly                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakPlayerController::RequestTeleportToStation(const FGameDataHandleProperty_& station, bool bForRespawn, bool bLocalOnly)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "RequestTeleportToStation");

	Params::OakPlayerController_RequestTeleportToStation Parms{};

	Parms.station = station;
	Parms.bForRespawn = bForRespawn;
	Parms.bLocalOnly = bLocalOnly;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.Server_PlayEchoLog
// (Net, NetReliable, Native, Event, Protected, NetServer)
// Parameters:
// const FGbxDefPtrProperty_&              InEchoLog                                              (ConstParm, Parm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakPlayerController::Server_PlayEchoLog(const FGbxDefPtrProperty_& InEchoLog)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "Server_PlayEchoLog");

	Params::OakPlayerController_Server_PlayEchoLog Parms{};

	Parms.InEchoLog = InEchoLog;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.ServerActivateDevPerk
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// EDevPerk                                Perk                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakPlayerController::ServerActivateDevPerk(EDevPerk Perk)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "ServerActivateDevPerk");

	Params::OakPlayerController_ServerActivateDevPerk Parms{};

	Parms.Perk = Perk;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.ServerActivateMission
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults, NetValidate)
// Parameters:
// const struct FSToken&                   mission                                                (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   EntryId                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bTrack                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int16                             PlayerStableIndex                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakPlayerController::ServerActivateMission(const struct FSToken& mission, int32 EntryId, bool bTrack, const int16 PlayerStableIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "ServerActivateMission");

	Params::OakPlayerController_ServerActivateMission Parms{};

	Parms.mission = std::move(mission);
	Parms.EntryId = EntryId;
	Parms.bTrack = bTrack;
	Parms.PlayerStableIndex = PlayerStableIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.ServerCallLostLootEvent
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// const ELostLootEventType&               EventType                                              (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AOakLostLootMachine*              LostLootMachineActor                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Rarity                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakPlayerController::ServerCallLostLootEvent(const ELostLootEventType& EventType, class AOakLostLootMachine* LostLootMachineActor, int32 Rarity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "ServerCallLostLootEvent");

	Params::OakPlayerController_ServerCallLostLootEvent Parms{};

	Parms.EventType = EventType;
	Parms.LostLootMachineActor = LostLootMachineActor;
	Parms.Rarity = Rarity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.ServerCallVendingEvent
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// const EVendingMachineEventType&         EventType                                              (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AOakVendingMachine*               VendingMachineActor                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bBuyback                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakPlayerController::ServerCallVendingEvent(const EVendingMachineEventType& EventType, class AOakVendingMachine* VendingMachineActor, bool bBuyback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "ServerCallVendingEvent");

	Params::OakPlayerController_ServerCallVendingEvent Parms{};

	Parms.EventType = EventType;
	Parms.VendingMachineActor = VendingMachineActor;
	Parms.bBuyback = bBuyback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.ServerCameraTransition
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class FName                             NewMode                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Transition                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   BlendTimeOverride                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bTeleport                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bForceResetMode                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakPlayerController::ServerCameraTransition(class FName NewMode, class FName Transition, float BlendTimeOverride, bool bTeleport, bool bForceResetMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "ServerCameraTransition");

	Params::OakPlayerController_ServerCameraTransition Parms{};

	Parms.NewMode = NewMode;
	Parms.Transition = Transition;
	Parms.BlendTimeOverride = BlendTimeOverride;
	Parms.bTeleport = bTeleport;
	Parms.bForceResetMode = bForceResetMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.ServerCancelPing
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults, NetValidate)
// Parameters:
// class AActor*                           TargetedActor                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Location                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakPlayerController::ServerCancelPing(class AActor* TargetedActor, const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "ServerCancelPing");

	Params::OakPlayerController_ServerCancelPing Parms{};

	Parms.TargetedActor = TargetedActor;
	Parms.Location = std::move(Location);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.ServerCreatePing
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults, NetValidate)
// Parameters:
// class AActor*                           TargetedActor                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Location                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FSName&                    PingFeedbackDefName                                    (ConstParm, Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakPlayerController::ServerCreatePing(class AActor* TargetedActor, const struct FVector& Location, const struct FSName& PingFeedbackDefName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "ServerCreatePing");

	Params::OakPlayerController_ServerCreatePing Parms{};

	Parms.TargetedActor = TargetedActor;
	Parms.Location = std::move(Location);
	Parms.PingFeedbackDefName = std::move(PingFeedbackDefName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.ServerCycleTrackedMission
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int32                                   slot                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bReverse                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakPlayerController::ServerCycleTrackedMission(int32 slot, bool bReverse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "ServerCycleTrackedMission");

	Params::OakPlayerController_ServerCycleTrackedMission Parms{};

	Parms.slot = slot;
	Parms.bReverse = bReverse;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.ServerDiscoveryMakeNonAuthoritativeDiscovery
// (Net, NetReliable, Native, Event, Protected, NetServer)
// Parameters:
// const struct FGbxDiscoveryDiscoveredKey&InLocation                                             (ConstParm, Parm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EGbxDiscoveryProximity                  InProximity                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakPlayerController::ServerDiscoveryMakeNonAuthoritativeDiscovery(const struct FGbxDiscoveryDiscoveredKey& InLocation, EGbxDiscoveryProximity InProximity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "ServerDiscoveryMakeNonAuthoritativeDiscovery");

	Params::OakPlayerController_ServerDiscoveryMakeNonAuthoritativeDiscovery Parms{};

	Parms.InLocation = std::move(InLocation);
	Parms.InProximity = InProximity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.ServerIncrementChallengeForPlayer
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// const class FString&                    ChallengeIdentString                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32&                            IncrementCount                                         (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakPlayerController::ServerIncrementChallengeForPlayer(const class FString& ChallengeIdentString, const int32& IncrementCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "ServerIncrementChallengeForPlayer");

	Params::OakPlayerController_ServerIncrementChallengeForPlayer Parms{};

	Parms.ChallengeIdentString = std::move(ChallengeIdentString);
	Parms.IncrementCount = IncrementCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.ServerInterruptTravelCountdown
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults, NetValidate)
// Parameters:
// const struct FSName&                    CancelReason                                           (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakPlayerController::ServerInterruptTravelCountdown(const struct FSName& CancelReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "ServerInterruptTravelCountdown");

	Params::OakPlayerController_ServerInterruptTravelCountdown Parms{};

	Parms.CancelReason = std::move(CancelReason);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.ServerIOTDBought
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// class AOakVendingMachine*               VendingMachineActor                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakPlayerController::ServerIOTDBought(class AOakVendingMachine* VendingMachineActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "ServerIOTDBought");

	Params::OakPlayerController_ServerIOTDBought Parms{};

	Parms.VendingMachineActor = VendingMachineActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.ServerLogInventoryState
// (Net, NetReliable, Native, Event, Public, NetServer)

void AOakPlayerController::ServerLogInventoryState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "ServerLogInventoryState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.ServerNotifyCharacterReadyForGameplay
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)

void AOakPlayerController::ServerNotifyCharacterReadyForGameplay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "ServerNotifyCharacterReadyForGameplay");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.ServerNotifyCharacterSelectFinished
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// bool                                    bSelected                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakPlayerController::ServerNotifyCharacterSelectFinished(bool bSelected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "ServerNotifyCharacterSelectFinished");

	Params::OakPlayerController_ServerNotifyCharacterSelectFinished Parms{};

	Parms.bSelected = bSelected;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.ServerNotifyCharacterSelectStarted
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)

void AOakPlayerController::ServerNotifyCharacterSelectStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "ServerNotifyCharacterSelectStarted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.ServerNotifyReadyForTeleport
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// uint8                                   TeleportId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakPlayerController::ServerNotifyReadyForTeleport(uint8 TeleportId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "ServerNotifyReadyForTeleport");

	Params::OakPlayerController_ServerNotifyReadyForTeleport Parms{};

	Parms.TeleportId = TeleportId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.ServerNotifyTeleportFailed
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// uint8                                   TeleportId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakPlayerController::ServerNotifyTeleportFailed(uint8 TeleportId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "ServerNotifyTeleportFailed");

	Params::OakPlayerController_ServerNotifyTeleportFailed Parms{};

	Parms.TeleportId = TeleportId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.ServerNotifyTeleportScreenActive
// (Final, Net, NetReliable, Native, Event, Private, NetServer)
// Parameters:
// bool                                    bActive                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakPlayerController::ServerNotifyTeleportScreenActive(bool bActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "ServerNotifyTeleportScreenActive");

	Params::OakPlayerController_ServerNotifyTeleportScreenActive Parms{};

	Parms.bActive = bActive;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.ServerOnItemContainerMenuClosed
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// EItemContainerMenuButton                MenuButton                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakPlayerController::ServerOnItemContainerMenuClosed(EItemContainerMenuButton MenuButton)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "ServerOnItemContainerMenuClosed");

	Params::OakPlayerController_ServerOnItemContainerMenuClosed Parms{};

	Parms.MenuButton = MenuButton;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.ServerOnRefillAmmo
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults)
// Parameters:
// class AOakVendingMachine*               VendingMachineActor                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FSToken&                   CurrencyID                                             (ConstParm, Parm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInVendorMenu                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakPlayerController::ServerOnRefillAmmo(class AOakVendingMachine* VendingMachineActor, const struct FSToken& CurrencyID, bool bInVendorMenu)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "ServerOnRefillAmmo");

	Params::OakPlayerController_ServerOnRefillAmmo Parms{};

	Parms.VendingMachineActor = VendingMachineActor;
	Parms.CurrencyID = std::move(CurrencyID);
	Parms.bInVendorMenu = bInVendorMenu;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.ServerPingNewGameState
// (Net, NetReliable, Native, Event, Public, NetServer)

void AOakPlayerController::ServerPingNewGameState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "ServerPingNewGameState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.ServerPlayIdleDialog
// (Net, NetReliable, Native, Event, Protected, NetServer)

void AOakPlayerController::ServerPlayIdleDialog()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "ServerPlayIdleDialog");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.ServerPuppetIt
// (Net, NetReliable, Native, Event, Public, NetServer)

void AOakPlayerController::ServerPuppetIt()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "ServerPuppetIt");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.ServerPurchaseBuybackItem
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults)
// Parameters:
// class AOakVendingMachine*               VendingMachineActor                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FShopItemHandle&           ShopHandle                                             (ConstParm, Parm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FSToken&                   CurrencyID                                             (ConstParm, Parm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakPlayerController::ServerPurchaseBuybackItem(class AOakVendingMachine* VendingMachineActor, const struct FShopItemHandle& ShopHandle, const struct FSToken& CurrencyID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "ServerPurchaseBuybackItem");

	Params::OakPlayerController_ServerPurchaseBuybackItem Parms{};

	Parms.VendingMachineActor = VendingMachineActor;
	Parms.ShopHandle = std::move(ShopHandle);
	Parms.CurrencyID = std::move(CurrencyID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.ServerPurchaseShopItem
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults)
// Parameters:
// class AOakVendingMachine*               VendingMachineActor                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             Idx                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FSToken&                   CurrencyID                                             (ConstParm, Parm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInVendorMenu                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakPlayerController::ServerPurchaseShopItem(class AOakVendingMachine* VendingMachineActor, const int32 Idx, const struct FSToken& CurrencyID, bool bInVendorMenu)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "ServerPurchaseShopItem");

	Params::OakPlayerController_ServerPurchaseShopItem Parms{};

	Parms.VendingMachineActor = VendingMachineActor;
	Parms.Idx = Idx;
	Parms.CurrencyID = std::move(CurrencyID);
	Parms.bInVendorMenu = bInVendorMenu;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.ServerReportDiscoveredPoAState
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// const class FName&                      LocationMetadataIdent                                  (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   DiscoverState                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakPlayerController::ServerReportDiscoveredPoAState(const class FName& LocationMetadataIdent, int32 DiscoverState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "ServerReportDiscoveredPoAState");

	Params::OakPlayerController_ServerReportDiscoveredPoAState Parms{};

	Parms.LocationMetadataIdent = LocationMetadataIdent;
	Parms.DiscoverState = DiscoverState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.ServerRequestAbandonMission
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults, NetValidate)
// Parameters:
// const struct FSToken&                   mission                                                (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakPlayerController::ServerRequestAbandonMission(const struct FSToken& mission)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "ServerRequestAbandonMission");

	Params::OakPlayerController_ServerRequestAbandonMission Parms{};

	Parms.mission = std::move(mission);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.ServerRequestEndMissionReplay
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AOakPlayerController::ServerRequestEndMissionReplay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "ServerRequestEndMissionReplay");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.ServerRequestPersonalVehicle
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                                    bDebugRequest                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakPlayerController::ServerRequestPersonalVehicle(bool bDebugRequest)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "ServerRequestPersonalVehicle");

	Params::OakPlayerController_ServerRequestPersonalVehicle Parms{};

	Parms.bDebugRequest = bDebugRequest;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.ServerRequestPlayTraitMission
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults, NetValidate)
// Parameters:
// const struct FSToken&                   TraitMissionDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakPlayerController::ServerRequestPlayTraitMission(const struct FSToken& TraitMissionDef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "ServerRequestPlayTraitMission");

	Params::OakPlayerController_ServerRequestPlayTraitMission Parms{};

	Parms.TraitMissionDef = std::move(TraitMissionDef);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.ServerRequestReplayMission
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults, NetValidate)
// Parameters:
// const struct FSToken&                   mission                                                (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakPlayerController::ServerRequestReplayMission(const struct FSToken& mission)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "ServerRequestReplayMission");

	Params::OakPlayerController_ServerRequestReplayMission Parms{};

	Parms.mission = std::move(mission);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.ServerRequestTrackMission
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults, NetValidate)
// Parameters:
// const struct FSToken&                   mission                                                (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int16                             PlayerStableIndex                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakPlayerController::ServerRequestTrackMission(const struct FSToken& mission, const int16 PlayerStableIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "ServerRequestTrackMission");

	Params::OakPlayerController_ServerRequestTrackMission Parms{};

	Parms.mission = std::move(mission);
	Parms.PlayerStableIndex = PlayerStableIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.ServerRerollBlackMarketParts
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// class AOakVendingMachine*               VendingMachineActor                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakPlayerController::ServerRerollBlackMarketParts(class AOakVendingMachine* VendingMachineActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "ServerRerollBlackMarketParts");

	Params::OakPlayerController_ServerRerollBlackMarketParts Parms{};

	Parms.VendingMachineActor = VendingMachineActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.ServerSellItem
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults)
// Parameters:
// class AOakVendingMachine*               VendingMachineActor                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FInventoryItemHandle&      ItemHandle                                             (ConstParm, Parm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FName&                      ItemContainerName                                      (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FSToken&                   CurrencyID                                             (ConstParm, Parm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakPlayerController::ServerSellItem(class AOakVendingMachine* VendingMachineActor, const struct FInventoryItemHandle& ItemHandle, const class FName& ItemContainerName, const struct FSToken& CurrencyID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "ServerSellItem");

	Params::OakPlayerController_ServerSellItem Parms{};

	Parms.VendingMachineActor = VendingMachineActor;
	Parms.ItemHandle = std::move(ItemHandle);
	Parms.ItemContainerName = ItemContainerName;
	Parms.CurrencyID = std::move(CurrencyID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.ServerSetBestGrappleable
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class UObject*                          GrappleableObject                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint32                                  GrappleTargetHash                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakPlayerController::ServerSetBestGrappleable(class UObject* GrappleableObject, uint32 GrappleTargetHash)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "ServerSetBestGrappleable");

	Params::OakPlayerController_ServerSetBestGrappleable Parms{};

	Parms.GrappleableObject = GrappleableObject;
	Parms.GrappleTargetHash = GrappleTargetHash;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.ServerSetBestTarget
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AActor*                           NewBestTarget                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakPlayerController::ServerSetBestTarget(class AActor* NewBestTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "ServerSetBestTarget");

	Params::OakPlayerController_ServerSetBestTarget Parms{};

	Parms.NewBestTarget = NewBestTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.ServerSetBulletMagnetismSettings
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                                    bDoBulletMagnetism                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakPlayerController::ServerSetBulletMagnetismSettings(bool bDoBulletMagnetism)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "ServerSetBulletMagnetismSettings");

	Params::OakPlayerController_ServerSetBulletMagnetismSettings Parms{};

	Parms.bDoBulletMagnetism = bDoBulletMagnetism;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.ServerSetCurrentVendingMachineUsable
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// class AOakVendingMachine*               VendingMachineActor                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bRemove                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakPlayerController::ServerSetCurrentVendingMachineUsable(class AOakVendingMachine* VendingMachineActor, bool bRemove)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "ServerSetCurrentVendingMachineUsable");

	Params::OakPlayerController_ServerSetCurrentVendingMachineUsable Parms{};

	Parms.VendingMachineActor = VendingMachineActor;
	Parms.bRemove = bRemove;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.ServerSetFullyAimingAtTarget
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// bool                                    bInClientFullyAimingAtTarget                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakPlayerController::ServerSetFullyAimingAtTarget(bool bInClientFullyAimingAtTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "ServerSetFullyAimingAtTarget");

	Params::OakPlayerController_ServerSetFullyAimingAtTarget Parms{};

	Parms.bInClientFullyAimingAtTarget = bInClientFullyAimingAtTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.ServerSetPersonalVehicleDef
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// FGbxDefPtrProperty_                     InDef                                                  (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakPlayerController::ServerSetPersonalVehicleDef(FGbxDefPtrProperty_ InDef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "ServerSetPersonalVehicleDef");

	Params::OakPlayerController_ServerSetPersonalVehicleDef Parms{};

	Parms.InDef = InDef;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.ServerSetRemoteCameraInfo
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// bool                                    bIsFirstPerson                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakPlayerController::ServerSetRemoteCameraInfo(bool bIsFirstPerson)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "ServerSetRemoteCameraInfo");

	Params::OakPlayerController_ServerSetRemoteCameraInfo Parms{};

	Parms.bIsFirstPerson = bIsFirstPerson;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.ServerSetVehicleHoverDriveDef
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// FGbxDefPtrProperty_                     InDef                                                  (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakPlayerController::ServerSetVehicleHoverDriveDef(FGbxDefPtrProperty_ InDef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "ServerSetVehicleHoverDriveDef");

	Params::OakPlayerController_ServerSetVehicleHoverDriveDef Parms{};

	Parms.InDef = InDef;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.ServerStartUsing_ObjectHosted
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// class UObject*                          Usable                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EUsabilityType                          UseType                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakPlayerController::ServerStartUsing_ObjectHosted(class UObject* Usable, EUsabilityType UseType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "ServerStartUsing_ObjectHosted");

	Params::OakPlayerController_ServerStartUsing_ObjectHosted Parms{};

	Parms.Usable = Usable;
	Parms.UseType = UseType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.ServerStopUsing_ObjectHosted
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// class UObject*                          Usable                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EUsabilityType                          UseType                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakPlayerController::ServerStopUsing_ObjectHosted(class UObject* Usable, EUsabilityType UseType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "ServerStopUsing_ObjectHosted");

	Params::OakPlayerController_ServerStopUsing_ObjectHosted Parms{};

	Parms.Usable = Usable;
	Parms.UseType = UseType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.ServerSwitchActiveCharacterProfile
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int32                                   InProfileIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakPlayerController::ServerSwitchActiveCharacterProfile(int32 InProfileIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "ServerSwitchActiveCharacterProfile");

	Params::OakPlayerController_ServerSwitchActiveCharacterProfile Parms{};

	Parms.InProfileIndex = InProfileIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.ServerTransferFirmware
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// const struct FInventoryItemHandle&      SourceHandle                                           (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FInventoryItemHandle&      DestinationHandle                                      (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakPlayerController::ServerTransferFirmware(const struct FInventoryItemHandle& SourceHandle, const struct FInventoryItemHandle& DestinationHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "ServerTransferFirmware");

	Params::OakPlayerController_ServerTransferFirmware Parms{};

	Parms.SourceHandle = std::move(SourceHandle);
	Parms.DestinationHandle = std::move(DestinationHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.ServerUnpuppet
// (Net, NetReliable, Native, Event, Public, NetServer)

void AOakPlayerController::ServerUnpuppet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "ServerUnpuppet");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.ServerUpdateOakCamera
// (Net, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// const struct FVector_NetQuantize&       CamLoc                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CamPitchAndYaw                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint32                                  CompressedInputRot                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakPlayerController::ServerUpdateOakCamera(const struct FVector_NetQuantize& CamLoc, int32 CamPitchAndYaw, uint32 CompressedInputRot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "ServerUpdateOakCamera");

	Params::OakPlayerController_ServerUpdateOakCamera Parms{};

	Parms.CamLoc = std::move(CamLoc);
	Parms.CamPitchAndYaw = CamPitchAndYaw;
	Parms.CompressedInputRot = CompressedInputRot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.ServerUseJunkObject
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// const struct FJunkId&                   JunkId                                                 (ConstParm, Parm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bWasHeld                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAutoTrash                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakPlayerController::ServerUseJunkObject(const struct FJunkId& JunkId, bool bWasHeld, bool bAutoTrash)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "ServerUseJunkObject");

	Params::OakPlayerController_ServerUseJunkObject Parms{};

	Parms.JunkId = std::move(JunkId);
	Parms.bWasHeld = bWasHeld;
	Parms.bAutoTrash = bAutoTrash;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.ServerUseObject
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// class UObject*                          Usable                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EUsabilityType                          UseType                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bWasHeld                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakPlayerController::ServerUseObject(class UObject* Usable, EUsabilityType UseType, bool bWasHeld)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "ServerUseObject");

	Params::OakPlayerController_ServerUseObject Parms{};

	Parms.Usable = Usable;
	Parms.UseType = UseType;
	Parms.bWasHeld = bWasHeld;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.SetCustomViewportViewFlags
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ViewFlags                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEnabled                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakPlayerController::SetCustomViewportViewFlags(int32 ViewFlags, bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "SetCustomViewportViewFlags");

	Params::OakPlayerController_SetCustomViewportViewFlags Parms{};

	Parms.ViewFlags = ViewFlags;
	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.ShakeUI
// (Net, Native, Event, Public, NetClient)

void AOakPlayerController::ShakeUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "ShakeUI");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.ToggleMapMenu
// (Final, Native, Public, BlueprintCallable)

void AOakPlayerController::ToggleMapMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "ToggleMapMenu");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.ToggleMissionLogMenu
// (Final, Native, Public, BlueprintCallable)

void AOakPlayerController::ToggleMissionLogMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "ToggleMissionLogMenu");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.CanOpenStatusMenu
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AOakPlayerController::CanOpenStatusMenu() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "CanOpenStatusMenu");

	Params::OakPlayerController_CanOpenStatusMenu Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakPlayerController.DisplayHUDErrorNotification
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class FName&                      Ident                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             Duration                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakPlayerController::DisplayHUDErrorNotification(const class FName& Ident, const float Duration) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "DisplayHUDErrorNotification");

	Params::OakPlayerController_DisplayHUDErrorNotification Parms{};

	Parms.Ident = Ident;
	Parms.Duration = Duration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerController.GetOakPlayerState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AOakPlayerState*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AOakPlayerState* AOakPlayerController::GetOakPlayerState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "GetOakPlayerState");

	Params::OakPlayerController_GetOakPlayerState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakPlayerController.IsIdle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AOakPlayerController::IsIdle() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerController", "IsIdle");

	Params::OakPlayerController_IsIdle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.InteractiveItemContainer.OnRep_ConsumerPlayerController
// (Native, Protected)

void AInteractiveItemContainer::OnRep_ConsumerPlayerController()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InteractiveItemContainer", "OnRep_ConsumerPlayerController");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.InteractiveItemContainer.OnRep_InventoryItems
// (Final, Native, Protected)

void AInteractiveItemContainer::OnRep_InventoryItems()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InteractiveItemContainer", "OnRep_InventoryItems");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.InteractiveItemContainer.OnRep_Timer
// (Native, Protected)

void AInteractiveItemContainer::OnRep_Timer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InteractiveItemContainer", "OnRep_Timer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.InventoryItemBlueprintLibrary.GetSummary_InventoryItemSelectionData
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FInventoryItemSelectionData&data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UInventoryItemBlueprintLibrary::GetSummary_InventoryItemSelectionData(const struct FInventoryItemSelectionData& data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("InventoryItemBlueprintLibrary", "GetSummary_InventoryItemSelectionData");

	Params::InventoryItemBlueprintLibrary_GetSummary_InventoryItemSelectionData Parms{};

	Parms.data = std::move(data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.JumpPad.Launch
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AOakCharacter*                    Character                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AJumpPad::Launch(class AOakCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JumpPad", "Launch");

	Params::JumpPad_Launch Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.JumpPad.LaunchVehicle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AOakVehicle*                      Vehicle                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AJumpPad::LaunchVehicle(class AOakVehicle* Vehicle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JumpPad", "LaunchVehicle");

	Params::JumpPad_LaunchVehicle Parms{};

	Parms.Vehicle = Vehicle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.JumpPad.OnCharacterTouch
// (Final, Native, Protected, HasOutParams, HasDefaults)
// Parameters:
// class UPrimitiveComponent*              HitComp                                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   NormalImpulse                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHitResult&                Hit                                                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AJumpPad::OnCharacterTouch(class UPrimitiveComponent* HitComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JumpPad", "OnCharacterTouch");

	Params::JumpPad_OnCharacterTouch Parms{};

	Parms.HitComp = HitComp;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.NormalImpulse = std::move(NormalImpulse);
	Parms.Hit = std::move(Hit);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.JumpPad.OnLaunched
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AOakCharacter*                    Character                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AJumpPad::OnLaunched(class AOakCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JumpPad", "OnLaunched");

	Params::JumpPad_OnLaunched Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.JumpPad.OnLaunchedVehicle
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AOakVehicle*                      Vehicle                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AJumpPad::OnLaunchedVehicle(class AOakVehicle* Vehicle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JumpPad", "OnLaunchedVehicle");

	Params::JumpPad_OnLaunchedVehicle Parms{};

	Parms.Vehicle = Vehicle;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.JumpPad.SetJumpPadEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bEnabled                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AJumpPad::SetJumpPadEnabled(bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JumpPad", "SetJumpPadEnabled");

	Params::JumpPad_SetJumpPadEnabled Parms{};

	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.LocalPlayerSubsystem_DispatchEvents.OnLeaveGameChoiceMade
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const class FName&                      ChoiceNameId                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             ControllerId                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULocalPlayerSubsystem_DispatchEvents::OnLeaveGameChoiceMade(const class FName& ChoiceNameId, const int32 ControllerId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LocalPlayerSubsystem_DispatchEvents", "OnLeaveGameChoiceMade");

	Params::LocalPlayerSubsystem_DispatchEvents_OnLeaveGameChoiceMade Parms{};

	Parms.ChoiceNameId = ChoiceNameId;
	Parms.ControllerId = ControllerId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.LootableObject.OnComponentSleep
// (Final, Native, Protected)
// Parameters:
// class UPrimitiveComponent*              SleepingComponent                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             BoneName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ALootableObject::OnComponentSleep(class UPrimitiveComponent* SleepingComponent, class FName BoneName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootableObject", "OnComponentSleep");

	Params::LootableObject_OnComponentSleep Parms{};

	Parms.SleepingComponent = SleepingComponent;
	Parms.BoneName = BoneName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.LootableObject.OnMeshCollision
// (Final, Native, Protected, HasOutParams, HasDefaults)
// Parameters:
// class UPrimitiveComponent*              HitComponent                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   NormalImpulse                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHitResult&                Hit                                                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void ALootableObject::OnMeshCollision(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootableObject", "OnMeshCollision");

	Params::LootableObject_OnMeshCollision Parms{};

	Parms.HitComponent = HitComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.NormalImpulse = std::move(NormalImpulse);
	Parms.Hit = std::move(Hit);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.LootableObject.OnMeshPhysicsStateChanged
// (Final, Native, Protected)
// Parameters:
// class UPrimitiveComponent*              Component                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EComponentPhysicsStateChange            StateChange                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ALootableObject::OnMeshPhysicsStateChanged(class UPrimitiveComponent* Component, EComponentPhysicsStateChange StateChange)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LootableObject", "OnMeshPhysicsStateChanged");

	Params::LootableObject_OnMeshPhysicsStateChanged Parms{};

	Parms.Component = Component;
	Parms.StateChange = StateChange;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.LootGlobalsDefSummaryLibrary.GetSummary_CharacterDefContainer
// (Final, Native, Static, Public, HasOutParams)
// Parameters:
// const struct FCharacterDefContainer&    Container                                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ULootGlobalsDefSummaryLibrary::GetSummary_CharacterDefContainer(const struct FCharacterDefContainer& Container)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LootGlobalsDefSummaryLibrary", "GetSummary_CharacterDefContainer");

	Params::LootGlobalsDefSummaryLibrary_GetSummary_CharacterDefContainer Parms{};

	Parms.Container = std::move(Container);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakTrackerBlueprintLibrary.ToggleVaultTrackingEnabled_Actor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AOakVaultTrackable*               TrackedActor                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEnabled                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakTrackerBlueprintLibrary::ToggleVaultTrackingEnabled_Actor(class AOakVaultTrackable* TrackedActor, bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakTrackerBlueprintLibrary", "ToggleVaultTrackingEnabled_Actor");

	Params::OakTrackerBlueprintLibrary_ToggleVaultTrackingEnabled_Actor Parms{};

	Parms.TrackedActor = TrackedActor;
	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakTrackerBlueprintLibrary.ToggleVaultTrackingEnabled_Def
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UWorld*                           World                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGameDataHandleProperty_                LocDef                                                 (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEnabled                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakTrackerBlueprintLibrary::ToggleVaultTrackingEnabled_Def(class UWorld* World, FGameDataHandleProperty_ LocDef, bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakTrackerBlueprintLibrary", "ToggleVaultTrackingEnabled_Def");

	Params::OakTrackerBlueprintLibrary_ToggleVaultTrackingEnabled_Def Parms{};

	Parms.World = World;
	Parms.LocDef = LocDef;
	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.MissionTaskType_TriggerVolume_Observer.OnActorEntered
// (Final, Native, Private)
// Parameters:
// class AActor*                           TouchingActor                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsPlayer                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMissionTaskType_TriggerVolume_Observer::OnActorEntered(class AActor* TouchingActor, bool bIsPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionTaskType_TriggerVolume_Observer", "OnActorEntered");

	Params::MissionTaskType_TriggerVolume_Observer_OnActorEntered Parms{};

	Parms.TouchingActor = TouchingActor;
	Parms.bIsPlayer = bIsPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.MissionTaskType_TriggerVolume_Observer.OnActorLeft
// (Final, Native, Private)
// Parameters:
// class AActor*                           TouchingActor                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsPlayer                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMissionTaskType_TriggerVolume_Observer::OnActorLeft(class AActor* TouchingActor, bool bIsPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionTaskType_TriggerVolume_Observer", "OnActorLeft");

	Params::MissionTaskType_TriggerVolume_Observer_OnActorLeft Parms{};

	Parms.TouchingActor = TouchingActor;
	Parms.bIsPlayer = bIsPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.ModularTerminal.OnEnteringBarrier
// (Final, Native, Private, HasOutParams)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFromSweep                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHitResult&                SweepResult                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AModularTerminal::OnEnteringBarrier(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModularTerminal", "OnEnteringBarrier");

	Params::ModularTerminal_OnEnteringBarrier Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.ModularTerminal.OnEnteringTerminalZone
// (Final, Native, Private, HasOutParams)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFromSweep                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHitResult&                SweepResult                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AModularTerminal::OnEnteringTerminalZone(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModularTerminal", "OnEnteringTerminalZone");

	Params::ModularTerminal_OnEnteringTerminalZone Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.ModularTerminal.OnExitingTerminalZone
// (Final, Native, Private)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AModularTerminal::OnExitingTerminalZone(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModularTerminal", "OnExitingTerminalZone");

	Params::ModularTerminal_OnExitingTerminalZone Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.ModularTerminal.OnRep_SetInventoryIdentity
// (Final, Native, Private)

void AModularTerminal::OnRep_SetInventoryIdentity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModularTerminal", "OnRep_SetInventoryIdentity");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.ModularTerminal.PlayAudioForTerminal
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// const struct FGbxAudioEvent&            AudioEvent                                             (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)

void AModularTerminal::PlayAudioForTerminal(const struct FGbxAudioEvent& AudioEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModularTerminal", "PlayAudioForTerminal");

	Params::ModularTerminal_PlayAudioForTerminal Parms{};

	Parms.AudioEvent = std::move(AudioEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.ModularTerminal.PlayAudioForTerminalAtSource
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// const struct FGbxAudioEvent&            AudioEvent                                             (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FGbxAudioEmitterSource&    Source                                                 (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void AModularTerminal::PlayAudioForTerminalAtSource(const struct FGbxAudioEvent& AudioEvent, const struct FGbxAudioEmitterSource& Source)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModularTerminal", "PlayAudioForTerminalAtSource");

	Params::ModularTerminal_PlayAudioForTerminalAtSource Parms{};

	Parms.AudioEvent = std::move(AudioEvent);
	Parms.Source = std::move(Source);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.ModularTerminal.SetupTerminalStructure
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// const float                             Radius                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             Height                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             BarrierWidth                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             BarrierHeight                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              HasBarrier                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              HasDome                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AModularTerminal::SetupTerminalStructure(const float Radius, const float Height, const float BarrierWidth, const float BarrierHeight, const bool HasBarrier, const bool HasDome)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModularTerminal", "SetupTerminalStructure");

	Params::ModularTerminal_SetupTerminalStructure Parms{};

	Parms.Radius = Radius;
	Parms.Height = Height;
	Parms.BarrierWidth = BarrierWidth;
	Parms.BarrierHeight = BarrierHeight;
	Parms.HasBarrier = HasBarrier;
	Parms.HasDome = HasDome;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.NPCInteractionBlueprintLibrary.StartNPCGiveTakeInteraction
// (Final, BlueprintAuthorityOnly, Native, Static, Private, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FNPCInteractionDesignParams&params                                                 (Parm, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UNPCInteractionBlueprintLibrary::StartNPCGiveTakeInteraction(class AActor* Actor, const struct FNPCInteractionDesignParams& params, const struct FLatentActionInfo& LatentInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("NPCInteractionBlueprintLibrary", "StartNPCGiveTakeInteraction");

	Params::NPCInteractionBlueprintLibrary_StartNPCGiveTakeInteraction Parms{};

	Parms.Actor = Actor;
	Parms.params = std::move(params);
	Parms.LatentInfo = std::move(LatentInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.NPCInteractionBlueprintLibrary.StopNPCGiveTakeInteraction
// (Final, BlueprintAuthorityOnly, Native, Static, Private, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNPCInteractionBlueprintLibrary::StopNPCGiveTakeInteraction(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("NPCInteractionBlueprintLibrary", "StopNPCGiveTakeInteraction");

	Params::NPCInteractionBlueprintLibrary_StopNPCGiveTakeInteraction Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakActorScript_AscensionBeam.OnNextBeamAscensionStepReached
// (Event, Public, BlueprintEvent)

void UOakActorScript_AscensionBeam::OnNextBeamAscensionStepReached()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakActorScript_AscensionBeam", "OnNextBeamAscensionStepReached");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OakGame.OakActorScript_AscensionBeam.OnRep_RepData
// (Final, Native, Public)

void UOakActorScript_AscensionBeam::OnRep_RepData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakActorScript_AscensionBeam", "OnRep_RepData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakActorScript_AscensionBeam.OnSequenceFinished
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void UOakActorScript_AscensionBeam::OnSequenceFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakActorScript_AscensionBeam", "OnSequenceFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakActorScript_AscensionBeam.OnStartPlayerLerp
// (Event, Public, BlueprintEvent)

void UOakActorScript_AscensionBeam::OnStartPlayerLerp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakActorScript_AscensionBeam", "OnStartPlayerLerp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OakGame.OakActorScript_AscensionBeam.SetCurrentAscensionBeamStep
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InStepID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakActorScript_AscensionBeam::SetCurrentAscensionBeamStep(int32 InStepID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakActorScript_AscensionBeam", "SetCurrentAscensionBeamStep");

	Params::OakActorScript_AscensionBeam_SetCurrentAscensionBeamStep Parms{};

	Parms.InStepID = InStepID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakActorScript_AscensionBeam.SetEndRot
// (Final, BlueprintAuthorityOnly, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FRotator&                  Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void UOakActorScript_AscensionBeam::SetEndRot(const struct FRotator& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakActorScript_AscensionBeam", "SetEndRot");

	Params::OakActorScript_AscensionBeam_SetEndRot Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakActorScript_AscensionBeam.SetStartPos
// (Final, BlueprintAuthorityOnly, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector&                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakActorScript_AscensionBeam::SetStartPos(const struct FVector& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakActorScript_AscensionBeam", "SetStartPos");

	Params::OakActorScript_AscensionBeam_SetStartPos Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakActorScript_AscensionBeam.SetStartRot
// (Final, BlueprintAuthorityOnly, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FRotator&                  Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void UOakActorScript_AscensionBeam::SetStartRot(const struct FRotator& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakActorScript_AscensionBeam", "SetStartRot");

	Params::OakActorScript_AscensionBeam_SetStartRot Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakActorScript_AscensionBeam.StartPlayerLerping
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<struct FVector>&           StartPositions                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// const TArray<struct FVector>&           EndPositions                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// const TArray<class AOakCharacter*>&     Players                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UOakActorScript_AscensionBeam::StartPlayerLerping(const TArray<struct FVector>& StartPositions, const TArray<struct FVector>& EndPositions, const TArray<class AOakCharacter*>& Players)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakActorScript_AscensionBeam", "StartPlayerLerping");

	Params::OakActorScript_AscensionBeam_StartPlayerLerping Parms{};

	Parms.StartPositions = std::move(StartPositions);
	Parms.EndPositions = std::move(EndPositions);
	Parms.Players = std::move(Players);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakActorScript_AscensionBeam.GetCurrentAscensionBeamActionData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FAscensionBeamActionData         ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FAscensionBeamActionData UOakActorScript_AscensionBeam::GetCurrentAscensionBeamActionData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakActorScript_AscensionBeam", "GetCurrentAscensionBeamActionData");

	Params::OakActorScript_AscensionBeam_GetCurrentAscensionBeamActionData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakActorScript_AscensionBeam.GetCurrentAscensionBeamStep
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UOakActorScript_AscensionBeam::GetCurrentAscensionBeamStep() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakActorScript_AscensionBeam", "GetCurrentAscensionBeamStep");

	Params::OakActorScript_AscensionBeam_GetCurrentAscensionBeamStep Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakActorScript_AscensionBeam.GetEndRot
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FRotator UOakActorScript_AscensionBeam::GetEndRot() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakActorScript_AscensionBeam", "GetEndRot");

	Params::OakActorScript_AscensionBeam_GetEndRot Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakActorScript_AscensionBeam.GetLerpEndPositions
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FVector>                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FVector> UOakActorScript_AscensionBeam::GetLerpEndPositions() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakActorScript_AscensionBeam", "GetLerpEndPositions");

	Params::OakActorScript_AscensionBeam_GetLerpEndPositions Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakActorScript_AscensionBeam.GetLerpPlayers
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class AOakCharacter*>            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AOakCharacter*> UOakActorScript_AscensionBeam::GetLerpPlayers() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakActorScript_AscensionBeam", "GetLerpPlayers");

	Params::OakActorScript_AscensionBeam_GetLerpPlayers Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakActorScript_AscensionBeam.GetLerpStartPositions
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FVector>                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FVector> UOakActorScript_AscensionBeam::GetLerpStartPositions() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakActorScript_AscensionBeam", "GetLerpStartPositions");

	Params::OakActorScript_AscensionBeam_GetLerpStartPositions Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakActorScript_AscensionBeam.GetNextAscensionBeamActionDelay
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UOakActorScript_AscensionBeam::GetNextAscensionBeamActionDelay() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakActorScript_AscensionBeam", "GetNextAscensionBeamActionDelay");

	Params::OakActorScript_AscensionBeam_GetNextAscensionBeamActionDelay Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakActorScript_AscensionBeam.GetStartPos
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UOakActorScript_AscensionBeam::GetStartPos() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakActorScript_AscensionBeam", "GetStartPos");

	Params::OakActorScript_AscensionBeam_GetStartPos Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakActorScript_AscensionBeam.GetStartRot
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FRotator UOakActorScript_AscensionBeam::GetStartRot() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakActorScript_AscensionBeam", "GetStartRot");

	Params::OakActorScript_AscensionBeam_GetStartRot Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakActorScript_DamageableBell.OnRep_BellColor
// (Final, Native, Public)

void UOakActorScript_DamageableBell::OnRep_BellColor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakActorScript_DamageableBell", "OnRep_BellColor");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakActorScript_DamageableBell.SetBellColor
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FLinearColor&              InColor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakActorScript_DamageableBell::SetBellColor(const struct FLinearColor& InColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakActorScript_DamageableBell", "SetBellColor");

	Params::OakActorScript_DamageableBell_SetBellColor Parms{};

	Parms.InColor = std::move(InColor);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakActorScript_Echo4.ExitPerch
// (Final, Native, Public, BlueprintCallable)

void UOakActorScript_Echo4::ExitPerch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakActorScript_Echo4", "ExitPerch");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakActorScript_Echo4.GetPerchTarget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UOakActorScript_Echo4::GetPerchTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakActorScript_Echo4", "GetPerchTarget");

	Params::OakActorScript_Echo4_GetPerchTarget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakActorScript_Echo4.NotifyEchoLocationAnimFinished
// (Final, Native, Public, BlueprintCallable)

void UOakActorScript_Echo4::NotifyEchoLocationAnimFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakActorScript_Echo4", "NotifyEchoLocationAnimFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakActorScript_Echo4.IsDeployedForEchoLocation
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOakActorScript_Echo4::IsDeployedForEchoLocation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakActorScript_Echo4", "IsDeployedForEchoLocation");

	Params::OakActorScript_Echo4_IsDeployedForEchoLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakActorScript_GrassBoss.OnRep_ArmorPartsToRegenerate
// (Final, Native, Protected)

void UOakActorScript_GrassBoss::OnRep_ArmorPartsToRegenerate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakActorScript_GrassBoss", "OnRep_ArmorPartsToRegenerate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakActorScript_GrassBoss.ShuffleArmorToRegenerate
// (Final, Native, Public, BlueprintCallable)

void UOakActorScript_GrassBoss::ShuffleArmorToRegenerate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakActorScript_GrassBoss", "ShuffleArmorToRegenerate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakAICloakBlueprintLibrary.AIScriptedCloak
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           AIActor                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bCloak                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGbxTrick*                        TrickOverride                                          (Parm, ZeroConstructor, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSkipPresentation                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bForce                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakAICloakBlueprintLibrary::AIScriptedCloak(class AActor* AIActor, bool bCloak, class UGbxTrick* TrickOverride, bool bSkipPresentation, bool bForce)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakAICloakBlueprintLibrary", "AIScriptedCloak");

	Params::OakAICloakBlueprintLibrary_AIScriptedCloak Parms{};

	Parms.AIActor = AIActor;
	Parms.bCloak = bCloak;
	Parms.TrickOverride = TrickOverride;
	Parms.bSkipPresentation = bSkipPresentation;
	Parms.bForce = bForce;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakAICloakBlueprintLibrary.InterruptCloaking
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           AIActor                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakAICloakBlueprintLibrary::InterruptCloaking(class AActor* AIActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakAICloakBlueprintLibrary", "InterruptCloaking");

	Params::OakAICloakBlueprintLibrary_InterruptCloaking Parms{};

	Parms.AIActor = AIActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakAICloakBlueprintLibrary.IsCloaked
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           AIActor                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOakAICloakBlueprintLibrary::IsCloaked(class AActor* AIActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakAICloakBlueprintLibrary", "IsCloaked");

	Params::OakAICloakBlueprintLibrary_IsCloaked Parms{};

	Parms.AIActor = AIActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakAICloakBlueprintLibrary.LockCloaking
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           AIActor                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             reason                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Block                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakAICloakBlueprintLibrary::LockCloaking(class AActor* AIActor, class FName reason, bool Block)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakAICloakBlueprintLibrary", "LockCloaking");

	Params::OakAICloakBlueprintLibrary_LockCloaking Parms{};

	Parms.AIActor = AIActor;
	Parms.reason = reason;
	Parms.Block = Block;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakZoneTransition.OnZoneBeginOverlap
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class UPrimitiveComponent*              OverlappedComp                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Other                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFromSweep                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHitResult&                SweepResult                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AOakZoneTransition::OnZoneBeginOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakZoneTransition", "OnZoneBeginOverlap");

	Params::OakZoneTransition_OnZoneBeginOverlap Parms{};

	Parms.OverlappedComp = OverlappedComp;
	Parms.Other = Other;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakZoneTransition.OnZoneEndOverlap
// (Final, Native, Protected)
// Parameters:
// class UPrimitiveComponent*              OverlappedComp                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Other                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakZoneTransition::OnZoneEndOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakZoneTransition", "OnZoneEndOverlap");

	Params::OakZoneTransition_OnZoneEndOverlap Parms{};

	Parms.OverlappedComp = OverlappedComp;
	Parms.Other = Other;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakZoneTransition.GetTransitionEntryGate
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EOakZoneTransitionGate                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EOakZoneTransitionGate AOakZoneTransition::GetTransitionEntryGate() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakZoneTransition", "GetTransitionEntryGate");

	Params::OakZoneTransition_GetTransitionEntryGate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakAirlockTransition.PerformZoneTransition
// (Final, Native, Public, BlueprintCallable)

void AOakAirlockTransition::PerformZoneTransition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakAirlockTransition", "PerformZoneTransition");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakAirlockTransition.PrepareZoneTransition
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AOakPlayerController*             Controller                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakAirlockTransition::PrepareZoneTransition(class AOakPlayerController* Controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakAirlockTransition", "PrepareZoneTransition");

	Params::OakAirlockTransition_PrepareZoneTransition Parms{};

	Parms.Controller = Controller;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakBalanceStatics.AILevelUp
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   levels                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ELevelUpHealthStrategy                  HealthStrategy                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakBalanceStatics::AILevelUp(class AActor* Actor, int32 levels, ELevelUpHealthStrategy HealthStrategy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakBalanceStatics", "AILevelUp");

	Params::OakBalanceStatics_AILevelUp Parms{};

	Parms.Actor = Actor;
	Parms.levels = levels;
	Parms.HealthStrategy = HealthStrategy;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakBalanceStatics.GetActorGameStage
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UOakBalanceStatics::GetActorGameStage(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakBalanceStatics", "GetActorGameStage");

	Params::OakBalanceStatics_GetActorGameStage Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakBalanceStatics.GetTestGameStage
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UOakBalanceStatics::GetTestGameStage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakBalanceStatics", "GetTestGameStage");

	Params::OakBalanceStatics_GetTestGameStage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakBalanceStatics.GetTestInfamy
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UOakBalanceStatics::GetTestInfamy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakBalanceStatics", "GetTestInfamy");

	Params::OakBalanceStatics_GetTestInfamy Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakBalanceStatics.GetTestWorldDifficulty
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UOakBalanceStatics::GetTestWorldDifficulty()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakBalanceStatics", "GetTestWorldDifficulty");

	Params::OakBalanceStatics_GetTestWorldDifficulty Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakBalanceStatics.GetWorldGameStage
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContext                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UOakBalanceStatics::GetWorldGameStage(const class UObject* WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakBalanceStatics", "GetWorldGameStage");

	Params::OakBalanceStatics_GetWorldGameStage Parms{};

	Parms.WorldContext = WorldContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakBlackMarketVendingMachineScript.CooldownBegin_ScriptEvent
// (Event, Public, BlueprintEvent)

void UOakBlackMarketVendingMachineScript::CooldownBegin_ScriptEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakBlackMarketVendingMachineScript", "CooldownBegin_ScriptEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OakGame.OakBlackMarketVendingMachineScript.CooldownEnd_ScriptEvent
// (Event, Public, BlueprintEvent)

void UOakBlackMarketVendingMachineScript::CooldownEnd_ScriptEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakBlackMarketVendingMachineScript", "CooldownEnd_ScriptEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OakGame.OakBlackMarketVendingMachineScript.DiscoverTrackerObject
// (Final, Native, Public, BlueprintCallable)

void UOakBlackMarketVendingMachineScript::DiscoverTrackerObject()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakBlackMarketVendingMachineScript", "DiscoverTrackerObject");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakBlackMarketVendingMachineScript.Script_StartCooldown
// (Final, Native, Public, BlueprintCallable)

void UOakBlackMarketVendingMachineScript::Script_StartCooldown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakBlackMarketVendingMachineScript", "Script_StartCooldown");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakBlackMarketVendingMachineScript.ToggleTrackingEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bEnabled                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakBlackMarketVendingMachineScript::ToggleTrackingEnabled(bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakBlackMarketVendingMachineScript", "ToggleTrackingEnabled");

	Params::OakBlackMarketVendingMachineScript_ToggleTrackingEnabled Parms{};

	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakBossFight.BossDied
// (Final, Native, Public)
// Parameters:
// class AActor*                           DeadActor                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakBossFight::BossDied(class AActor* DeadActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakBossFight", "BossDied");

	Params::OakBossFight_BossDied Parms{};

	Parms.DeadActor = DeadActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakBossFight.ForceResetBossFight
// (Final, Native, Public, BlueprintCallable)

void AOakBossFight::ForceResetBossFight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakBossFight", "ForceResetBossFight");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakBossFight.GetBossFightCost
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AOakBossFight::GetBossFightCost()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakBossFight", "GetBossFightCost");

	Params::OakBossFight_GetBossFightCost Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakBossFight.GetBossFightName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FName                       ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class FName AOakBossFight::GetBossFightName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakBossFight", "GetBossFightName");

	Params::OakBossFight_GetBossFightName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakBossFight.GetTrueBossFightCost
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AOakBossFight::GetTrueBossFightCost()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakBossFight", "GetTrueBossFightCost");

	Params::OakBossFight_GetTrueBossFightCost Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakBossFight.HasFightBeenCompletedOnce
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AOakBossFight::HasFightBeenCompletedOnce()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakBossFight", "HasFightBeenCompletedOnce");

	Params::OakBossFight_HasFightBeenCompletedOnce Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakBossFight.OnActorEnteredBarVisibilityVolume
// (Final, Native, Public)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakBossFight::OnActorEnteredBarVisibilityVolume(class AActor* Actor, class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakBossFight", "OnActorEnteredBarVisibilityVolume");

	Params::OakBossFight_OnActorEnteredBarVisibilityVolume Parms{};

	Parms.Actor = Actor;
	Parms.OtherActor = OtherActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakBossFight.OnActorEnteredResetVolume
// (Final, Native, Public)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakBossFight::OnActorEnteredResetVolume(class AActor* Actor, class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakBossFight", "OnActorEnteredResetVolume");

	Params::OakBossFight_OnActorEnteredResetVolume Parms{};

	Parms.Actor = Actor;
	Parms.OtherActor = OtherActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakBossFight.OnActorExitedVolume
// (Final, Native, Public)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakBossFight::OnActorExitedVolume(class AActor* Actor, class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakBossFight", "OnActorExitedVolume");

	Params::OakBossFight_OnActorExitedVolume Parms{};

	Parms.Actor = Actor;
	Parms.OtherActor = OtherActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakBossFight.SetAllBossDimmed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const bool                              bSetDimmed                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakBossFight::SetAllBossDimmed(const bool bSetDimmed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakBossFight", "SetAllBossDimmed");

	Params::OakBossFight_SetAllBossDimmed Parms{};

	Parms.bSetDimmed = bSetDimmed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakBossFight.SetAllBossInvulnerable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const bool                              bSetInvulnerable                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakBossFight::SetAllBossInvulnerable(const bool bSetInvulnerable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakBossFight", "SetAllBossInvulnerable");

	Params::OakBossFight_SetAllBossInvulnerable Parms{};

	Parms.bSetInvulnerable = bSetInvulnerable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakBossFight.SetBossBarEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Boss                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakBossFight::SetBossBarEnabled(class AActor* Boss, bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakBossFight", "SetBossBarEnabled");

	Params::OakBossFight_SetBossBarEnabled Parms{};

	Parms.Boss = Boss;
	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakBossFight.SetBossFightActive
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bActive                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakBossFight::SetBossFightActive(bool bActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakBossFight", "SetBossFightActive");

	Params::OakBossFight_SetBossFightActive Parms{};

	Parms.bActive = bActive;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakBossFight.SetBossFightName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FName                       NewName                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakBossFight::SetBossFightName(const class FName NewName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakBossFight", "SetBossFightName");

	Params::OakBossFight_SetBossFightName Parms{};

	Parms.NewName = NewName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakBossFight.SetBossFightPending
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bPending                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakBossFight::SetBossFightPending(bool bPending)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakBossFight", "SetBossFightPending");

	Params::OakBossFight_SetBossFightPending Parms{};

	Parms.bPending = bPending;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakBossFight.SetBossFightState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EBossInfoState                          NewState                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakBossFight::SetBossFightState(EBossInfoState NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakBossFight", "SetBossFightState");

	Params::OakBossFight_SetBossFightState Parms{};

	Parms.NewState = NewState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakBossFight.SetTrueBossModeEnabled
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakBossFight::SetTrueBossModeEnabled(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakBossFight", "SetTrueBossModeEnabled");

	Params::OakBossFight_SetTrueBossModeEnabled Parms{};

	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakBossFight.GetBossFightState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EBossInfoState                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EBossInfoState AOakBossFight::GetBossFightState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakBossFight", "GetBossFightState");

	Params::OakBossFight_GetBossFightState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakBossFight.GetBossReplayIO
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AOakInteractiveObject*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AOakInteractiveObject* AOakBossFight::GetBossReplayIO() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakBossFight", "GetBossReplayIO");

	Params::OakBossFight_GetBossReplayIO Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakBossFight.GetPlayersInArena
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class AOakCharacter*>*           OutPlayers                                             (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AOakBossFight::GetPlayersInArena(TArray<class AOakCharacter*>* OutPlayers) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakBossFight", "GetPlayersInArena");

	Params::OakBossFight_GetPlayersInArena Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutPlayers != nullptr)
		*OutPlayers = std::move(Parms.OutPlayers);
}


// Function OakGame.OakBossFight.GetPOAActor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APoAActor*                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class APoAActor* AOakBossFight::GetPOAActor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakBossFight", "GetPOAActor");

	Params::OakBossFight_GetPOAActor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakBossFight.GetTextFromUICharacterName
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// FGbxDefPtrProperty_                     UIName                                                 (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FText                       ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

const class FText AOakBossFight::GetTextFromUICharacterName(FGbxDefPtrProperty_ UIName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakBossFight", "GetTextFromUICharacterName");

	Params::OakBossFight_GetTextFromUICharacterName Parms{};

	Parms.UIName = UIName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakBossFight.IsBossFightMissionDriven
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const bool                              ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const bool AOakBossFight::IsBossFightMissionDriven() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakBossFight", "IsBossFightMissionDriven");

	Params::OakBossFight_IsBossFightMissionDriven Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakBossStatics.GetTextFromUICharacterName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// FGbxDefPtrProperty_                     UIName                                                 (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UOakBossStatics::GetTextFromUICharacterName(FGbxDefPtrProperty_ UIName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakBossStatics", "GetTextFromUICharacterName");

	Params::OakBossStatics_GetTextFromUICharacterName Parms{};

	Parms.UIName = UIName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakBossStatics.HasFightBeenCompleted
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AOakBossFight*                    BossFightActor                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOakBossStatics::HasFightBeenCompleted(class AOakBossFight* BossFightActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakBossStatics", "HasFightBeenCompleted");

	Params::OakBossStatics_HasFightBeenCompleted Parms{};

	Parms.BossFightActor = BossFightActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakBossStatics.SetAllBossesDimmed
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Boss                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDimmed                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakBossStatics::SetAllBossesDimmed(class AActor* Boss, bool bDimmed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakBossStatics", "SetAllBossesDimmed");

	Params::OakBossStatics_SetAllBossesDimmed Parms{};

	Parms.Boss = Boss;
	Parms.bDimmed = bDimmed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakBossStatics.SetAllBossesInvulnerable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Boss                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInvulnerable                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakBossStatics::SetAllBossesInvulnerable(class AActor* Boss, bool bInvulnerable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakBossStatics", "SetAllBossesInvulnerable");

	Params::OakBossStatics_SetAllBossesInvulnerable Parms{};

	Parms.Boss = Boss;
	Parms.bInvulnerable = bInvulnerable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakBossStatics.SetBossBarEnabled
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Boss                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AOakBossFight*                    BossFightInfo                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakBossStatics::SetBossBarEnabled(class AActor* Boss, class AOakBossFight* BossFightInfo, bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakBossStatics", "SetBossBarEnabled");

	Params::OakBossStatics_SetBossBarEnabled Parms{};

	Parms.Boss = Boss;
	Parms.BossFightInfo = BossFightInfo;
	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakBossStatics.SetBossDimmed
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Boss                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDimmed                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakBossStatics::SetBossDimmed(class AActor* Boss, bool bDimmed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakBossStatics", "SetBossDimmed");

	Params::OakBossStatics_SetBossDimmed Parms{};

	Parms.Boss = Boss;
	Parms.bDimmed = bDimmed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakBossStatics.SetBossInvulnerable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Boss                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInvulnerable                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakBossStatics::SetBossInvulnerable(class AActor* Boss, bool bInvulnerable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakBossStatics", "SetBossInvulnerable");

	Params::OakBossStatics_SetBossInvulnerable Parms{};

	Parms.Boss = Boss;
	Parms.bInvulnerable = bInvulnerable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakBossStatics.ShakeEvent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Boss                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakBossStatics::ShakeEvent(class AActor* Boss)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakBossStatics", "ShakeEvent");

	Params::OakBossStatics_ShakeEvent Parms{};

	Parms.Boss = Boss;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakBossStatics.StartBossFightTracking
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Boss                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakBossStatics::StartBossFightTracking(class AActor* Boss)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakBossStatics", "StartBossFightTracking");

	Params::OakBossStatics_StartBossFightTracking Parms{};

	Parms.Boss = Boss;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakBossStatics.StopBossFightTracking
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Boss                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakBossStatics::StopBossFightTracking(class AActor* Boss)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakBossStatics", "StopBossFightTracking");

	Params::OakBossStatics_StopBossFightTracking Parms{};

	Parms.Boss = Boss;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakBossStatics.GetPlayersInArena
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AOakBossFight*                    BossFightInfo                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AOakCharacter*>            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AOakCharacter*> UOakBossStatics::GetPlayersInArena(class AOakBossFight* BossFightInfo) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakBossStatics", "GetPlayersInArena");

	Params::OakBossStatics_GetPlayersInArena Parms{};

	Parms.BossFightInfo = BossFightInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakBoundary.AddNewWarningVolume
// (Final, Native, Protected)

void AOakBoundary::AddNewWarningVolume()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakBoundary", "AddNewWarningVolume");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakBoundary.GetWarningIntensityForCharacter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class APlayerController*          OakChar                                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AOakBoundary::GetWarningIntensityForCharacter(const class APlayerController* OakChar)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakBoundary", "GetWarningIntensityForCharacter");

	Params::OakBoundary_GetWarningIntensityForCharacter Parms{};

	Parms.OakChar = OakChar;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakBoundary.NetMulticast_PlayKillEffects
// (Net, Native, Event, NetMulticast, Public, HasDefaults)
// Parameters:
// const struct FVector&                   TargetLocation                                         (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakBoundary::NetMulticast_PlayKillEffects(const struct FVector& TargetLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakBoundary", "NetMulticast_PlayKillEffects");

	Params::OakBoundary_NetMulticast_PlayKillEffects Parms{};

	Parms.TargetLocation = std::move(TargetLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakBoundary.PlayKillEffects
// (Event, Public, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// const struct FVector&                   TargetLocation                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakBoundary::PlayKillEffects(const struct FVector& TargetLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakBoundary", "PlayKillEffects");

	Params::OakBoundary_PlayKillEffects Parms{};

	Parms.TargetLocation = std::move(TargetLocation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakBoundary.ValidateBoundaryVolumes
// (Final, Native, Protected)

void AOakBoundary::ValidateBoundaryVolumes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakBoundary", "ValidateBoundaryVolumes");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakChallengeBlueprintLibrary.IncrementChallengeForAllPlayers
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          OwnerContext                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const FGameDataHandleProperty_          ChallengeToIncrement                                   (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   IncrementAmount                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakChallengeBlueprintLibrary::IncrementChallengeForAllPlayers(class UObject* OwnerContext, const FGameDataHandleProperty_ ChallengeToIncrement, int32 IncrementAmount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakChallengeBlueprintLibrary", "IncrementChallengeForAllPlayers");

	Params::OakChallengeBlueprintLibrary_IncrementChallengeForAllPlayers Parms{};

	Parms.OwnerContext = OwnerContext;
	Parms.ChallengeToIncrement = ChallengeToIncrement;
	Parms.IncrementAmount = IncrementAmount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakChallengeBlueprintLibrary.IncrementChallengeForPlayer
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          OwnerContext                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AOakPlayerController*             OakPC                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const FGameDataHandleProperty_          ChallengeToIncrement                                   (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   IncrementAmount                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakChallengeBlueprintLibrary::IncrementChallengeForPlayer(class UObject* OwnerContext, class AOakPlayerController* OakPC, const FGameDataHandleProperty_ ChallengeToIncrement, int32 IncrementAmount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakChallengeBlueprintLibrary", "IncrementChallengeForPlayer");

	Params::OakChallengeBlueprintLibrary_IncrementChallengeForPlayer Parms{};

	Parms.OwnerContext = OwnerContext;
	Parms.OakPC = OakPC;
	Parms.ChallengeToIncrement = ChallengeToIncrement;
	Parms.IncrementAmount = IncrementAmount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakChallengeBlueprintLibrary.IsChallengeCompleteForPlayer
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AOakPlayerController*             OakPC                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const FGameDataHandleProperty_          challenge                                              (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOakChallengeBlueprintLibrary::IsChallengeCompleteForPlayer(class AOakPlayerController* OakPC, const FGameDataHandleProperty_ challenge)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakChallengeBlueprintLibrary", "IsChallengeCompleteForPlayer");

	Params::OakChallengeBlueprintLibrary_IsChallengeCompleteForPlayer Parms{};

	Parms.OakPC = OakPC;
	Parms.challenge = challenge;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakChallengeCollectibleScript.CompleteCollectibleChallenge
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AOakPlayerController*             User                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakChallengeCollectibleScript::CompleteCollectibleChallenge(class AOakPlayerController* User)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakChallengeCollectibleScript", "CompleteCollectibleChallenge");

	Params::OakChallengeCollectibleScript_CompleteCollectibleChallenge Parms{};

	Parms.User = User;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakChallengeCollectibleScript.GetCollectibleChallenge
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// FGameDataHandleProperty_                ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

FGameDataHandleProperty_ UOakChallengeCollectibleScript::GetCollectibleChallenge()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakChallengeCollectibleScript", "GetCollectibleChallenge");

	Params::OakChallengeCollectibleScript_GetCollectibleChallenge Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakChallengeCollectibleScript.OnEridiumChallengeUpdated
// (Event, Public, BlueprintEvent)

void UOakChallengeCollectibleScript::OnEridiumChallengeUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakChallengeCollectibleScript", "OnEridiumChallengeUpdated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OakGame.OakChallengeCollectibleScript.OnFinishedLoading
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bIsComplete                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakChallengeCollectibleScript::OnFinishedLoading(bool bIsComplete)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakChallengeCollectibleScript", "OnFinishedLoading");

	Params::OakChallengeCollectibleScript_OnFinishedLoading Parms{};

	Parms.bIsComplete = bIsComplete;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakChallengeCollectibleScript.PlayEchoLogDataForAllPlayers
// (Final, Native, Public, BlueprintCallable)

void UOakChallengeCollectibleScript::PlayEchoLogDataForAllPlayers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakChallengeCollectibleScript", "PlayEchoLogDataForAllPlayers");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakChallengeCollectibleScript.PlayNextEridiumLogForAllPlayers
// (Final, Native, Public, BlueprintCallable)

void UOakChallengeCollectibleScript::PlayNextEridiumLogForAllPlayers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakChallengeCollectibleScript", "PlayNextEridiumLogForAllPlayers");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakChallengeCollectibleScript.PlayNextEridiumLogForPlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AOakPlayerController*             OakPC                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakChallengeCollectibleScript::PlayNextEridiumLogForPlayer(class AOakPlayerController* OakPC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakChallengeCollectibleScript", "PlayNextEridiumLogForPlayer");

	Params::OakChallengeCollectibleScript_PlayNextEridiumLogForPlayer Parms{};

	Parms.OakPC = OakPC;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakChallengeCollectibleScript.SetCollectibleChallenge
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// FGameDataHandleProperty_*               InCollectibleChallenge                                 (Parm, OutParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakChallengeCollectibleScript::SetCollectibleChallenge(FGameDataHandleProperty_* InCollectibleChallenge)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakChallengeCollectibleScript", "SetCollectibleChallenge");

	Params::OakChallengeCollectibleScript_SetCollectibleChallenge Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (InCollectibleChallenge != nullptr)
		*InCollectibleChallenge = Parms.InCollectibleChallenge;
}


// Function OakGame.OakIntrinsicElementStatics.BindEventToIntrinsicElementChanged
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          OwnerContext                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(const EOakElementalType NewElement)>Delegate                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakIntrinsicElementStatics::BindEventToIntrinsicElementChanged(class UObject* OwnerContext, TDelegate<void(const EOakElementalType NewElement)> Delegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakIntrinsicElementStatics", "BindEventToIntrinsicElementChanged");

	Params::OakIntrinsicElementStatics_BindEventToIntrinsicElementChanged Parms{};

	Parms.OwnerContext = OwnerContext;
	Parms.Delegate = Delegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakIntrinsicElementStatics.GetDamageElementalType
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// FGameDataHandleProperty_                DamageDef                                              (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EOakElementalType                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EOakElementalType UOakIntrinsicElementStatics::GetDamageElementalType(FGameDataHandleProperty_ DamageDef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakIntrinsicElementStatics", "GetDamageElementalType");

	Params::OakIntrinsicElementStatics_GetDamageElementalType Parms{};

	Parms.DamageDef = DamageDef;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakIntrinsicElementStatics.GetElementalDamageType
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EOakElementalType                       type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGameDataHandleProperty_                ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

FGameDataHandleProperty_ UOakIntrinsicElementStatics::GetElementalDamageType(EOakElementalType type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakIntrinsicElementStatics", "GetElementalDamageType");

	Params::OakIntrinsicElementStatics_GetElementalDamageType Parms{};

	Parms.type = type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakIntrinsicElementStatics.GetIntrinsicElement
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          OwnerContext                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EOakElementalType                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EOakElementalType UOakIntrinsicElementStatics::GetIntrinsicElement(class UObject* OwnerContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakIntrinsicElementStatics", "GetIntrinsicElement");

	Params::OakIntrinsicElementStatics_GetIntrinsicElement Parms{};

	Parms.OwnerContext = OwnerContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakIntrinsicElementStatics.GetIntrinsicElementDamageType
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          OwnerContext                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGameDataHandleProperty_                ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

FGameDataHandleProperty_ UOakIntrinsicElementStatics::GetIntrinsicElementDamageType(class UObject* OwnerContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakIntrinsicElementStatics", "GetIntrinsicElementDamageType");

	Params::OakIntrinsicElementStatics_GetIntrinsicElementDamageType Parms{};

	Parms.OwnerContext = OwnerContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakIntrinsicElementStatics.IsInitialIntrinsicElementRandom
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          OwnerContext                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOakIntrinsicElementStatics::IsInitialIntrinsicElementRandom(class UObject* OwnerContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakIntrinsicElementStatics", "IsInitialIntrinsicElementRandom");

	Params::OakIntrinsicElementStatics_IsInitialIntrinsicElementRandom Parms{};

	Parms.OwnerContext = OwnerContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakIntrinsicElementStatics.SetExplosiveBarrelBackwardsCompatibility
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          OwnerContext                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EOakElementalType                       Element                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bRandomize                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakIntrinsicElementStatics::SetExplosiveBarrelBackwardsCompatibility(class UObject* OwnerContext, EOakElementalType Element, bool bRandomize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakIntrinsicElementStatics", "SetExplosiveBarrelBackwardsCompatibility");

	Params::OakIntrinsicElementStatics_SetExplosiveBarrelBackwardsCompatibility Parms{};

	Parms.OwnerContext = OwnerContext;
	Parms.Element = Element;
	Parms.bRandomize = bRandomize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakIntrinsicElementStatics.SetIntrinsicElement
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          OwnerContext                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EOakElementalType                       Element                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOakIntrinsicElementStatics::SetIntrinsicElement(class UObject* OwnerContext, EOakElementalType Element)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakIntrinsicElementStatics", "SetIntrinsicElement");

	Params::OakIntrinsicElementStatics_SetIntrinsicElement Parms{};

	Parms.OwnerContext = OwnerContext;
	Parms.Element = Element;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakIntrinsicElementStatics.SetIntrinsicElementAffinity
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          OwnerContext                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EDamageAffinity                         Affinity                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOakIntrinsicElementStatics::SetIntrinsicElementAffinity(class UObject* OwnerContext, EDamageAffinity Affinity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakIntrinsicElementStatics", "SetIntrinsicElementAffinity");

	Params::OakIntrinsicElementStatics_SetIntrinsicElementAffinity Parms{};

	Parms.OwnerContext = OwnerContext;
	Parms.Affinity = Affinity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakCharacterAnimInstance.OnFinishedConfirmationTransition
// (Final, Native, Private, BlueprintCallable)

void UOakCharacterAnimInstance::OnFinishedConfirmationTransition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacterAnimInstance", "OnFinishedConfirmationTransition");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacterAnimInstance.OnWeaponChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// const class AWeapon*                    NewWeapon                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class AWeapon*                    PrevWeapon                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakCharacterAnimInstance::OnWeaponChanged(const class AWeapon* NewWeapon, const class AWeapon* PrevWeapon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacterAnimInstance", "OnWeaponChanged");

	Params::OakCharacterAnimInstance_OnWeaponChanged Parms{};

	Parms.NewWeapon = NewWeapon;
	Parms.PrevWeapon = PrevWeapon;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakCharacterAnimInstance.GetWeaponPose
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool*                                   bValidIndex                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SlotIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FOakWeaponPose             ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

const struct FOakWeaponPose UOakCharacterAnimInstance::GetWeaponPose(bool* bValidIndex, int32 SlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacterAnimInstance", "GetWeaponPose");

	Params::OakCharacterAnimInstance_GetWeaponPose Parms{};

	Parms.SlotIndex = SlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bValidIndex != nullptr)
		*bValidIndex = Parms.bValidIndex;

	return Parms.ReturnValue;
}


// Function OakGame.OakCharacterFunctionLibrary.AddReplicatedAttachedParticle
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UFXSystemAsset*                   EmitterTemplate                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<struct FGbxParticleParameter>&EmitterParameters                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class USceneComponent*                  AttachToComponent                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             AttachPointName                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Location                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FRotator&                  Rotation                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// const struct FVector&                   scale                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFXSystemComponent*               ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFXSystemComponent* UOakCharacterFunctionLibrary::AddReplicatedAttachedParticle(class UFXSystemAsset* EmitterTemplate, const TArray<struct FGbxParticleParameter>& EmitterParameters, class USceneComponent* AttachToComponent, class FName AttachPointName, const struct FVector& Location, const struct FRotator& Rotation, const struct FVector& scale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakCharacterFunctionLibrary", "AddReplicatedAttachedParticle");

	Params::OakCharacterFunctionLibrary_AddReplicatedAttachedParticle Parms{};

	Parms.EmitterTemplate = EmitterTemplate;
	Parms.EmitterParameters = std::move(EmitterParameters);
	Parms.AttachToComponent = AttachToComponent;
	Parms.AttachPointName = AttachPointName;
	Parms.Location = std::move(Location);
	Parms.Rotation = std::move(Rotation);
	Parms.scale = std::move(scale);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakCharacterFunctionLibrary.BranchOnPlayerCharacter
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EYesNoResult*                           Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakCharacterFunctionLibrary::BranchOnPlayerCharacter(class AActor* InActor, EYesNoResult* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakCharacterFunctionLibrary", "BranchOnPlayerCharacter");

	Params::OakCharacterFunctionLibrary_BranchOnPlayerCharacter Parms{};

	Parms.InActor = InActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function OakGame.OakCharacterFunctionLibrary.EquipItem
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AActor*                           Character                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FOakInventoryItemSelectionData&item                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const bool                              bRemoveExistingItem                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             ActiveWeaponSlot                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakCharacterFunctionLibrary::EquipItem(class AActor* Character, const struct FOakInventoryItemSelectionData& item, const bool bRemoveExistingItem, const int32 ActiveWeaponSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakCharacterFunctionLibrary", "EquipItem");

	Params::OakCharacterFunctionLibrary_EquipItem Parms{};

	Parms.Character = Character;
	Parms.item = std::move(item);
	Parms.bRemoveExistingItem = bRemoveExistingItem;
	Parms.ActiveWeaponSlot = ActiveWeaponSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacterFunctionLibrary.GetLastGroundSlamEndedDetails
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGroundSlamEndedDetails          ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FGroundSlamEndedDetails UOakCharacterFunctionLibrary::GetLastGroundSlamEndedDetails(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakCharacterFunctionLibrary", "GetLastGroundSlamEndedDetails");

	Params::OakCharacterFunctionLibrary_GetLastGroundSlamEndedDetails Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakCharacterFunctionLibrary.IsCharacterGliding
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOakCharacterFunctionLibrary::IsCharacterGliding(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakCharacterFunctionLibrary", "IsCharacterGliding");

	Params::OakCharacterFunctionLibrary_IsCharacterGliding Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakCharacterFunctionLibrary.MeleeCloseInOnTarget
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AActor*                           InstigatorActor                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TargetActor                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ClosingTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const FGameDataHandleProperty_&         MeleeDefinition                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakCharacterFunctionLibrary::MeleeCloseInOnTarget(class AActor* InstigatorActor, class AActor* TargetActor, float ClosingTime, const FGameDataHandleProperty_& MeleeDefinition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakCharacterFunctionLibrary", "MeleeCloseInOnTarget");

	Params::OakCharacterFunctionLibrary_MeleeCloseInOnTarget Parms{};

	Parms.InstigatorActor = InstigatorActor;
	Parms.TargetActor = TargetActor;
	Parms.ClosingTime = ClosingTime;
	Parms.MeleeDefinition = MeleeDefinition;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacterFunctionLibrary.PerformMeleeWithDefinition
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InstigatorActor                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TargetActor                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     MeleeDefinition                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Flags_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOakCharacterFunctionLibrary::PerformMeleeWithDefinition(class AActor* InstigatorActor, class AActor* TargetActor, FGbxDefPtrProperty_ MeleeDefinition, int32 Flags_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakCharacterFunctionLibrary", "PerformMeleeWithDefinition");

	Params::OakCharacterFunctionLibrary_PerformMeleeWithDefinition Parms{};

	Parms.InstigatorActor = InstigatorActor;
	Parms.TargetActor = TargetActor;
	Parms.MeleeDefinition = MeleeDefinition;
	Parms.Flags_0 = Flags_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakCharacterFunctionLibrary.SetActionSkillsLocked
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Character                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bLocked                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    reason                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakCharacterFunctionLibrary::SetActionSkillsLocked(class AActor* Character, bool bLocked, const class FString& reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakCharacterFunctionLibrary", "SetActionSkillsLocked");

	Params::OakCharacterFunctionLibrary_SetActionSkillsLocked Parms{};

	Parms.Character = Character;
	Parms.bLocked = bLocked;
	Parms.reason = std::move(reason);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacterFunctionLibrary.SetMovementModesLocked
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Character                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bLocked                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    reason                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   TypesToChange                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakCharacterFunctionLibrary::SetMovementModesLocked(class AActor* Character, bool bLocked, const class FString& reason, int32 TypesToChange)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakCharacterFunctionLibrary", "SetMovementModesLocked");

	Params::OakCharacterFunctionLibrary_SetMovementModesLocked Parms{};

	Parms.Character = Character;
	Parms.bLocked = bLocked;
	Parms.reason = std::move(reason);
	Parms.TypesToChange = TypesToChange;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacterFunctionLibrary.SetUseOverheadNameplateEnabled
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AOakCharacter*                    Character                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakCharacterFunctionLibrary::SetUseOverheadNameplateEnabled(class AOakCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakCharacterFunctionLibrary", "SetUseOverheadNameplateEnabled");

	Params::OakCharacterFunctionLibrary_SetUseOverheadNameplateEnabled Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacterFunctionLibrary.UnequipItem
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Character                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             ItemEquipSlot                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bRemoveFromInventory                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakCharacterFunctionLibrary::UnequipItem(class AActor* Character, const int32 ItemEquipSlot, const bool bRemoveFromInventory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakCharacterFunctionLibrary", "UnequipItem");

	Params::OakCharacterFunctionLibrary_UnequipItem Parms{};

	Parms.Character = Character;
	Parms.ItemEquipSlot = ItemEquipSlot;
	Parms.bRemoveFromInventory = bRemoveFromInventory;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacterFunctionLibrary.UnEquipItems
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Character                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<int32>&                    ItemEquipSlots                                         (ConstParm, Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// const bool                              bRemoveFromInventory                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakCharacterFunctionLibrary::UnEquipItems(class AActor* Character, const TArray<int32>& ItemEquipSlots, const bool bRemoveFromInventory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakCharacterFunctionLibrary", "UnEquipItems");

	Params::OakCharacterFunctionLibrary_UnEquipItems Parms{};

	Parms.Character = Character;
	Parms.ItemEquipSlots = std::move(ItemEquipSlots);
	Parms.bRemoveFromInventory = bRemoveFromInventory;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacterMovementComponent.ClientOnVaultPowerDepleted
// (Final, Net, Native, Event, Private, NetClient)

void UOakCharacterMovementComponent::ClientOnVaultPowerDepleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacterMovementComponent", "ClientOnVaultPowerDepleted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacterMovementComponent.ClientOnVaultPowerNotDepleted
// (Final, Net, Native, Event, Private, NetClient)

void UOakCharacterMovementComponent::ClientOnVaultPowerNotDepleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacterMovementComponent", "ClientOnVaultPowerNotDepleted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacterMovementComponent.OnRep_bIsGliding
// (Final, Native, Private)

void UOakCharacterMovementComponent::OnRep_bIsGliding()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacterMovementComponent", "OnRep_bIsGliding");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacterMovementComponent.OnVaultPowerDepleted
// (Final, Native, Public)

void UOakCharacterMovementComponent::OnVaultPowerDepleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacterMovementComponent", "OnVaultPowerDepleted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacterMovementComponent.OnVaultPowerNotDepleted
// (Final, Native, Public)

void UOakCharacterMovementComponent::OnVaultPowerNotDepleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacterMovementComponent", "OnVaultPowerNotDepleted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacterMovementComponent.SetWantsToLadderSlide
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bNewWantsToLadderSlide                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakCharacterMovementComponent::SetWantsToLadderSlide(bool bNewWantsToLadderSlide)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacterMovementComponent", "SetWantsToLadderSlide");

	Params::OakCharacterMovementComponent_SetWantsToLadderSlide Parms{};

	Parms.bNewWantsToLadderSlide = bNewWantsToLadderSlide;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCharacterMovementComponent.GetLastGroundSlamEndedDetails
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGroundSlamEndedDetails    ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

const struct FGroundSlamEndedDetails UOakCharacterMovementComponent::GetLastGroundSlamEndedDetails() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacterMovementComponent", "GetLastGroundSlamEndedDetails");

	Params::OakCharacterMovementComponent_GetLastGroundSlamEndedDetails Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakCharacterMovementComponent.IsPerformingUpwardLadderJump
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOakCharacterMovementComponent::IsPerformingUpwardLadderJump() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacterMovementComponent", "IsPerformingUpwardLadderJump");

	Params::OakCharacterMovementComponent_IsPerformingUpwardLadderJump Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakCharacterMovementComponent.IsSlidingDownLadder
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOakCharacterMovementComponent::IsSlidingDownLadder() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCharacterMovementComponent", "IsSlidingDownLadder");

	Params::OakCharacterMovementComponent_IsSlidingDownLadder Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakCineCameraActor.SetPlayerCharacterOffsetAlpha
// (Final, Native, Public)
// Parameters:
// float                                   NewPlayerCharacterOffsetAlpha                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakCineCameraActor::SetPlayerCharacterOffsetAlpha(float NewPlayerCharacterOffsetAlpha)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCineCameraActor", "SetPlayerCharacterOffsetAlpha");

	Params::OakCineCameraActor_SetPlayerCharacterOffsetAlpha Parms{};

	Parms.NewPlayerCharacterOffsetAlpha = NewPlayerCharacterOffsetAlpha;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakInventoryStatics.AddOvershield
// (Final, Native, Static, Public)
// Parameters:
// class UObject*                          OwnerContext                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Amount                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakInventoryStatics::AddOvershield(class UObject* OwnerContext, float Amount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakInventoryStatics", "AddOvershield");

	Params::OakInventoryStatics_AddOvershield Parms{};

	Parms.OwnerContext = OwnerContext;
	Parms.Amount = Amount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakInventoryStatics.AddOvershieldToOakCharacter
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AOakCharacter*                    TargetActor                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Amount                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakInventoryStatics::AddOvershieldToOakCharacter(class AOakCharacter* TargetActor, float Amount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakInventoryStatics", "AddOvershieldToOakCharacter");

	Params::OakInventoryStatics_AddOvershieldToOakCharacter Parms{};

	Parms.TargetActor = TargetActor;
	Parms.Amount = Amount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakInventoryStatics.BlockCharacterHealth
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AOakCharacter*                    TargetActor                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakInventoryStatics::BlockCharacterHealth(class AOakCharacter* TargetActor, float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakInventoryStatics", "BlockCharacterHealth");

	Params::OakInventoryStatics_BlockCharacterHealth Parms{};

	Parms.TargetActor = TargetActor;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakInventoryStatics.CreateMatchingItem
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           ContextActor                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FInventorySelectionCriteria&Criteria                                               (ConstParm, Parm, NativeAccessSpecifierPublic)
// class Ainventory*                       SourceItem                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SourceOptions                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FInventorySelectionCriteria&FallbackCriteria                                       (ConstParm, Parm, NativeAccessSpecifierPublic)
// struct FInventoryIdentity               ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FInventoryIdentity UOakInventoryStatics::CreateMatchingItem(class AActor* ContextActor, const struct FInventorySelectionCriteria& Criteria, class Ainventory* SourceItem, int32 SourceOptions, const struct FInventorySelectionCriteria& FallbackCriteria)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakInventoryStatics", "CreateMatchingItem");

	Params::OakInventoryStatics_CreateMatchingItem Parms{};

	Parms.ContextActor = ContextActor;
	Parms.Criteria = std::move(Criteria);
	Parms.SourceItem = SourceItem;
	Parms.SourceOptions = SourceOptions;
	Parms.FallbackCriteria = std::move(FallbackCriteria);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakInventoryStatics.DrainResourcePool
// (Final, Native, Static, Public)
// Parameters:
// class UObject*                          OwnerContext                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ResourceName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Percentage                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MinPercentage                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakInventoryStatics::DrainResourcePool(class UObject* OwnerContext, class FName ResourceName, float Percentage, float MinPercentage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakInventoryStatics", "DrainResourcePool");

	Params::OakInventoryStatics_DrainResourcePool Parms{};

	Parms.OwnerContext = OwnerContext;
	Parms.ResourceName = ResourceName;
	Parms.Percentage = Percentage;
	Parms.MinPercentage = MinPercentage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakInventoryStatics.DrainShieldArmorSegment
// (Final, Native, Static, Public)
// Parameters:
// class UObject*                          OwnerContext                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Percentage                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bWholeSegmentsOnly                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ProtectionTime                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bExternalDamage                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakInventoryStatics::DrainShieldArmorSegment(class UObject* OwnerContext, float Percentage, bool bWholeSegmentsOnly, float ProtectionTime, bool bExternalDamage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakInventoryStatics", "DrainShieldArmorSegment");

	Params::OakInventoryStatics_DrainShieldArmorSegment Parms{};

	Parms.OwnerContext = OwnerContext;
	Parms.Percentage = Percentage;
	Parms.bWholeSegmentsOnly = bWholeSegmentsOnly;
	Parms.ProtectionTime = ProtectionTime;
	Parms.bExternalDamage = bExternalDamage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakInventoryStatics.EmptyContainer
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AOakPlayerController*             PlayerController                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     Container                                              (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakInventoryStatics::EmptyContainer(class AOakPlayerController* PlayerController, FGbxDefPtrProperty_ Container)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakInventoryStatics", "EmptyContainer");

	Params::OakInventoryStatics_EmptyContainer Parms{};

	Parms.PlayerController = PlayerController;
	Parms.Container = Container;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakInventoryStatics.GetNumItemsInContainer
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContext                                           (Parm, ZeroConstructor, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class AOakPlayerController*       PlayerController                                       (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ContainerType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UOakInventoryStatics::GetNumItemsInContainer(class UObject* WorldContext, const class AOakPlayerController* PlayerController, class FName ContainerType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakInventoryStatics", "GetNumItemsInContainer");

	Params::OakInventoryStatics_GetNumItemsInContainer Parms{};

	Parms.WorldContext = WorldContext;
	Parms.PlayerController = PlayerController;
	Parms.ContainerType = ContainerType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakInventoryStatics.GetRepairKit
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                           User                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ARepairKit*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ARepairKit* UOakInventoryStatics::GetRepairKit(class AActor* User)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakInventoryStatics", "GetRepairKit");

	Params::OakInventoryStatics_GetRepairKit Parms{};

	Parms.User = User;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakInventoryStatics.GetShield
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                           ShieldUser                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AShield*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AShield* UOakInventoryStatics::GetShield(class AActor* ShieldUser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakInventoryStatics", "GetShield");

	Params::OakInventoryStatics_GetShield Parms{};

	Parms.ShieldUser = ShieldUser;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakInventoryStatics.GetTotalValueItemsInContainer
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AOakPlayerController*             PlayerController                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     Container                                              (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UOakInventoryStatics::GetTotalValueItemsInContainer(class AOakPlayerController* PlayerController, FGbxDefPtrProperty_ Container)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakInventoryStatics", "GetTotalValueItemsInContainer");

	Params::OakInventoryStatics_GetTotalValueItemsInContainer Parms{};

	Parms.PlayerController = PlayerController;
	Parms.Container = Container;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakInventoryStatics.LatentOpenItemContainers
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AOakPlayerController*             PlayerController                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Container1Type                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Container2Type                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EInventoryTransactionType               TransactionType                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TransactionTag                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EItemContainerMenuButton*               Exec                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UOakInventoryStatics::LatentOpenItemContainers(class AOakPlayerController* PlayerController, class FName Container1Type, class FName Container2Type, EInventoryTransactionType TransactionType, class FName TransactionTag, EItemContainerMenuButton* Exec, const struct FLatentActionInfo& LatentInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakInventoryStatics", "LatentOpenItemContainers");

	Params::OakInventoryStatics_LatentOpenItemContainers Parms{};

	Parms.PlayerController = PlayerController;
	Parms.Container1Type = Container1Type;
	Parms.Container2Type = Container2Type;
	Parms.TransactionType = TransactionType;
	Parms.TransactionTag = TransactionTag;
	Parms.LatentInfo = std::move(LatentInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Exec != nullptr)
		*Exec = Parms.Exec;
}


// Function OakGame.OakInventoryStatics.OpenInventoryContainers
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AOakPlayerController*             PlayerController                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Container1Type                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Container2Type                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EInventoryTransactionType               TransactionType                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TransactionTag                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakInventoryStatics::OpenInventoryContainers(class AOakPlayerController* PlayerController, class FName Container1Type, class FName Container2Type, EInventoryTransactionType TransactionType, class FName TransactionTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakInventoryStatics", "OpenInventoryContainers");

	Params::OakInventoryStatics_OpenInventoryContainers Parms{};

	Parms.PlayerController = PlayerController;
	Parms.Container1Type = Container1Type;
	Parms.Container2Type = Container2Type;
	Parms.TransactionType = TransactionType;
	Parms.TransactionTag = TransactionTag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakInventoryStatics.OpenItemContainer
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AOakPlayerController*             PlayerController                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ContainerType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EInventoryTransactionType               TransactionType                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TransactionTag                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakInventoryStatics::OpenItemContainer(class AOakPlayerController* PlayerController, class FName ContainerType, EInventoryTransactionType TransactionType, class FName TransactionTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakInventoryStatics", "OpenItemContainer");

	Params::OakInventoryStatics_OpenItemContainer Parms{};

	Parms.PlayerController = PlayerController;
	Parms.ContainerType = ContainerType;
	Parms.TransactionType = TransactionType;
	Parms.TransactionTag = TransactionTag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakInventoryStatics.PickUpArmorSegment
// (Final, Native, Static, Public)
// Parameters:
// class UObject*                          OwnerContext                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ResourceName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Percentage                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bWholeSegmentsOnly                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakInventoryStatics::PickUpArmorSegment(class UObject* OwnerContext, class FName ResourceName, float Percentage, bool bWholeSegmentsOnly)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakInventoryStatics", "PickUpArmorSegment");

	Params::OakInventoryStatics_PickUpArmorSegment Parms{};

	Parms.OwnerContext = OwnerContext;
	Parms.ResourceName = ResourceName;
	Parms.Percentage = Percentage;
	Parms.bWholeSegmentsOnly = bWholeSegmentsOnly;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakInventoryStatics.PickUpHealth
// (Final, Native, Static, Public)
// Parameters:
// class UObject*                          OwnerContext                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             HealthAttribute                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakInventoryStatics::PickUpHealth(class UObject* OwnerContext, class FName HealthAttribute)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakInventoryStatics", "PickUpHealth");

	Params::OakInventoryStatics_PickUpHealth Parms{};

	Parms.OwnerContext = OwnerContext;
	Parms.HealthAttribute = HealthAttribute;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakInventoryStatics.ReduceRepairKitCooldown
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           ContextActor                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERepairKitCooldownReductionMethod       Method                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakInventoryStatics::ReduceRepairKitCooldown(class AActor* ContextActor, ERepairKitCooldownReductionMethod Method, float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakInventoryStatics", "ReduceRepairKitCooldown");

	Params::OakInventoryStatics_ReduceRepairKitCooldown Parms{};

	Parms.ContextActor = ContextActor;
	Parms.Method = Method;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakInventoryStatics.RefreshOvershield
// (Final, Native, Static, Public)
// Parameters:
// class UObject*                          OwnerContext                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakInventoryStatics::RefreshOvershield(class UObject* OwnerContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakInventoryStatics", "RefreshOvershield");

	Params::OakInventoryStatics_RefreshOvershield Parms{};

	Parms.OwnerContext = OwnerContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakInventoryStatics.RefreshOvershieldToOakCharacter
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AOakCharacter*                    TargetActor                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakInventoryStatics::RefreshOvershieldToOakCharacter(class AOakCharacter* TargetActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakInventoryStatics", "RefreshOvershieldToOakCharacter");

	Params::OakInventoryStatics_RefreshOvershieldToOakCharacter Parms{};

	Parms.TargetActor = TargetActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakInventoryStatics.RegenShieldToMatchPlayerHealth
// (Final, Native, Static, Public)
// Parameters:
// class UObject*                          OwnerContext                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    AwardOvershieldIfShieldIsMoreThanHealth                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakInventoryStatics::RegenShieldToMatchPlayerHealth(class UObject* OwnerContext, bool AwardOvershieldIfShieldIsMoreThanHealth)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakInventoryStatics", "RegenShieldToMatchPlayerHealth");

	Params::OakInventoryStatics_RegenShieldToMatchPlayerHealth Parms{};

	Parms.OwnerContext = OwnerContext;
	Parms.AwardOvershieldIfShieldIsMoreThanHealth = AwardOvershieldIfShieldIsMoreThanHealth;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakInventoryStatics.RemoveOvershield
// (Final, Native, Static, Public)
// Parameters:
// class UObject*                          OwnerContext                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Amount                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakInventoryStatics::RemoveOvershield(class UObject* OwnerContext, float Amount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakInventoryStatics", "RemoveOvershield");

	Params::OakInventoryStatics_RemoveOvershield Parms{};

	Parms.OwnerContext = OwnerContext;
	Parms.Amount = Amount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakInventoryStatics.RemoveOvershieldToOakCharacter
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AOakCharacter*                    TargetActor                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Amount                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakInventoryStatics::RemoveOvershieldToOakCharacter(class AOakCharacter* TargetActor, float Amount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakInventoryStatics", "RemoveOvershieldToOakCharacter");

	Params::OakInventoryStatics_RemoveOvershieldToOakCharacter Parms{};

	Parms.TargetActor = TargetActor;
	Parms.Amount = Amount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakInventoryStatics.SpawnInventoryFromCharacter
// (Final, Native, Static, Public)
// Parameters:
// class UObject*                          OwnerContext                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    InventoryType                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    InventoryComp                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InstancingPolicy                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bOwnerOnly                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           owner                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakInventoryStatics::SpawnInventoryFromCharacter(class UObject* OwnerContext, const class FString& InventoryType, const class FString& InventoryComp, int32 InstancingPolicy, bool bOwnerOnly, class AActor* owner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakInventoryStatics", "SpawnInventoryFromCharacter");

	Params::OakInventoryStatics_SpawnInventoryFromCharacter Parms{};

	Parms.OwnerContext = OwnerContext;
	Parms.InventoryType = std::move(InventoryType);
	Parms.InventoryComp = std::move(InventoryComp);
	Parms.InstancingPolicy = InstancingPolicy;
	Parms.bOwnerOnly = bOwnerOnly;
	Parms.owner = owner;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakInventoryStatics.SpillOutItemsInContainer
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AOakPlayerController*             PlayerController                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ContainerType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           ActorToSpawnFrom                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGameDataHandleProperty_                SpawnPattern                                           (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SpawnSocketName                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakInventoryStatics::SpillOutItemsInContainer(class AOakPlayerController* PlayerController, class FName ContainerType, class AActor* ActorToSpawnFrom, FGameDataHandleProperty_ SpawnPattern, class FName SpawnSocketName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakInventoryStatics", "SpillOutItemsInContainer");

	Params::OakInventoryStatics_SpillOutItemsInContainer Parms{};

	Parms.PlayerController = PlayerController;
	Parms.ContainerType = ContainerType;
	Parms.ActorToSpawnFrom = ActorToSpawnFrom;
	Parms.SpawnPattern = SpawnPattern;
	Parms.SpawnSocketName = SpawnSocketName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakInventoryStatics.UnblockCharacterHealth
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AOakCharacter*                    TargetActor                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakInventoryStatics::UnblockCharacterHealth(class AOakCharacter* TargetActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakInventoryStatics", "UnblockCharacterHealth");

	Params::OakInventoryStatics_UnblockCharacterHealth Parms{};

	Parms.TargetActor = TargetActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocustGas.Absorb
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           TargetAbsorbing                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakLocustGas::Absorb(class AActor* TargetAbsorbing)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocustGas", "Absorb");

	Params::OakLocustGas_Absorb Parms{};

	Parms.TargetAbsorbing = TargetAbsorbing;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocustGas.IsAbsorbing
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AOakLocustGas::IsAbsorbing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocustGas", "IsAbsorbing");

	Params::OakLocustGas_IsAbsorbing Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocustGas.OnPatrolPointReached
// (Final, Native, Public)
// Parameters:
// class AActor*                           target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakLocustGas::OnPatrolPointReached(class AActor* target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocustGas", "OnPatrolPointReached");

	Params::OakLocustGas_OnPatrolPointReached Parms{};

	Parms.target = target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocustGas.OnTargetAbsorbingReached
// (Final, Native, Public)
// Parameters:
// class AActor*                           target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakLocustGas::OnTargetAbsorbingReached(class AActor* target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocustGas", "OnTargetAbsorbingReached");

	Params::OakLocustGas_OnTargetAbsorbingReached Parms{};

	Parms.target = target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocustGas.SetPatrolState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bIsEnable                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakLocustGas::SetPatrolState(bool bIsEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocustGas", "SetPatrolState");

	Params::OakLocustGas_SetPatrolState Parms{};

	Parms.bIsEnable = bIsEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCinematicStage.ClearCamera
// (Final, Native, Public, BlueprintCallable)

void AOakCinematicStage::ClearCamera()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCinematicStage", "ClearCamera");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCinematicStage.ClientsCallStageEvent
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// const class FName&                      InEventName                                            (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakCinematicStage::ClientsCallStageEvent(const class FName& InEventName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCinematicStage", "ClientsCallStageEvent");

	Params::OakCinematicStage_ClientsCallStageEvent Parms{};

	Parms.InEventName = InEventName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCinematicStage.DetachActors
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bRestorePositions                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakCinematicStage::DetachActors(bool bRestorePositions)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCinematicStage", "DetachActors");

	Params::OakCinematicStage_DetachActors Parms{};

	Parms.bRestorePositions = bRestorePositions;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCinematicStage.OnRep_CurrentCamera
// (Final, Native, Private)

void AOakCinematicStage::OnRep_CurrentCamera()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCinematicStage", "OnRep_CurrentCamera");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCinematicStage.OnRep_FactsConduit
// (Final, Native, Protected)

void AOakCinematicStage::OnRep_FactsConduit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCinematicStage", "OnRep_FactsConduit");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCinematicStage.PositionNPCs
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<struct FOakCinematicStageSpawnPointToNPC>&InNPCsToPosition                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AOakCinematicStage::PositionNPCs(const TArray<struct FOakCinematicStageSpawnPointToNPC>& InNPCsToPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCinematicStage", "PositionNPCs");

	Params::OakCinematicStage_PositionNPCs Parms{};

	Parms.InNPCsToPosition = std::move(InNPCsToPosition);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCinematicStage.PositionPlayers
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EOakCinematicStagePositionType          InPositionType                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakCinematicStage::PositionPlayers(EOakCinematicStagePositionType InPositionType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCinematicStage", "PositionPlayers");

	Params::OakCinematicStage_PositionPlayers Parms{};

	Parms.InPositionType = InPositionType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCinematicStage.SetCameraByIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InActiveIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakCinematicStage::SetCameraByIndex(int32 InActiveIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCinematicStage", "SetCameraByIndex");

	Params::OakCinematicStage_SetCameraByIndex Parms{};

	Parms.InActiveIndex = InActiveIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCinematicStage.SetCameraByName
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FName&                      InCameraName                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakCinematicStage::SetCameraByName(const class FName& InCameraName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCinematicStage", "SetCameraByName");

	Params::OakCinematicStage_SetCameraByName Parms{};

	Parms.InCameraName = InCameraName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCinematicStage.GetCameraByIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UOakCinematicStageCameraComponent*ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UOakCinematicStageCameraComponent* AOakCinematicStage::GetCameraByIndex(int32 Index_0) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCinematicStage", "GetCameraByIndex");

	Params::OakCinematicStage_GetCameraByIndex Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakCinematicStageScript.GetCameraByIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UOakCinematicStageCameraComponent*ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UOakCinematicStageCameraComponent* UOakCinematicStageScript::GetCameraByIndex(int32 Index_0) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCinematicStageScript", "GetCameraByIndex");

	Params::OakCinematicStageScript_GetCameraByIndex Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakCodedVendingMachineScript.OnPasswordAccepted
// (Event, Public, BlueprintEvent)
// Parameters:
// class AOakPlayerController*             OakPC                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakCodedVendingMachineScript::OnPasswordAccepted(class AOakPlayerController* OakPC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCodedVendingMachineScript", "OnPasswordAccepted");

	Params::OakCodedVendingMachineScript_OnPasswordAccepted Parms{};

	Parms.OakPC = OakPC;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakCodedVendingMachineScript.OnPasswordDenied
// (Event, Public, BlueprintEvent)
// Parameters:
// class AOakPlayerController*             OakPC                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakCodedVendingMachineScript::OnPasswordDenied(class AOakPlayerController* OakPC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCodedVendingMachineScript", "OnPasswordDenied");

	Params::OakCodedVendingMachineScript_OnPasswordDenied Parms{};

	Parms.OakPC = OakPC;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakCreditsSlide.SetVariableTexture
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InVariableName                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture*                         Texture                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakCreditsSlide::SetVariableTexture(class FName InVariableName, class UTexture* Texture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCreditsSlide", "SetVariableTexture");

	Params::OakCreditsSlide_SetVariableTexture Parms{};

	Parms.InVariableName = InVariableName;
	Parms.Texture = Texture;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakCreditsSlide.GetNiagaraComponent
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class UNiagaraComponent*                ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UNiagaraComponent* AOakCreditsSlide::GetNiagaraComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCreditsSlide", "GetNiagaraComponent");

	Params::OakCreditsSlide_GetNiagaraComponent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function OakGame.OakCreditsSlide.GetSlideTexture
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTexture*                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture* AOakCreditsSlide::GetSlideTexture() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakCreditsSlide", "GetSlideTexture");

	Params::OakCreditsSlide_GetSlideTexture Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakMapViewerRegionMeshComponent.UpdateOpacity
// (Final, Native, Public)
// Parameters:
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakMapViewerRegionMeshComponent::UpdateOpacity(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakMapViewerRegionMeshComponent", "UpdateOpacity");

	Params::OakMapViewerRegionMeshComponent_UpdateOpacity Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakDamageStatics.ClearDamageAffinities
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Damageable                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              Tag                                                    (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakDamageStatics::ClearDamageAffinities(class AActor* Damageable, const struct FGameplayTag& Tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakDamageStatics", "ClearDamageAffinities");

	Params::OakDamageStatics_ClearDamageAffinities Parms{};

	Parms.Damageable = Damageable;
	Parms.Tag = std::move(Tag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakDamageStatics.ClearDamageAffinity
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Damageable                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGameDataHandleProperty_                definition                                             (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakDamageStatics::ClearDamageAffinity(class AActor* Damageable, FGameDataHandleProperty_ definition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakDamageStatics", "ClearDamageAffinity");

	Params::OakDamageStatics_ClearDamageAffinity Parms{};

	Parms.Damageable = Damageable;
	Parms.definition = definition;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakDamageStatics.ClearElementalAffinity
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Damageable                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EOakElementalType                       Elemental                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakDamageStatics::ClearElementalAffinity(class AActor* Damageable, EOakElementalType Elemental)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakDamageStatics", "ClearElementalAffinity");

	Params::OakDamageStatics_ClearElementalAffinity Parms{};

	Parms.Damageable = Damageable;
	Parms.Elemental = Elemental;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakDamageStatics.RegisterShotModifier
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           DamageCauser                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGameDataHandleProperty_                definition                                             (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          ContextOverride                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          ModifierOwner                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakDamageStatics::RegisterShotModifier(class AActor* DamageCauser, FGameDataHandleProperty_ definition, class UObject* ContextOverride, class UObject* ModifierOwner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakDamageStatics", "RegisterShotModifier");

	Params::OakDamageStatics_RegisterShotModifier Parms{};

	Parms.DamageCauser = DamageCauser;
	Parms.definition = definition;
	Parms.ContextOverride = ContextOverride;
	Parms.ModifierOwner = ModifierOwner;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakDamageStatics.SetDamageAffinity
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Damageable                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGameDataHandleProperty_                definition                                             (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EDamageAffinity                         Affinity                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakDamageStatics::SetDamageAffinity(class AActor* Damageable, FGameDataHandleProperty_ definition, EDamageAffinity Affinity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakDamageStatics", "SetDamageAffinity");

	Params::OakDamageStatics_SetDamageAffinity Parms{};

	Parms.Damageable = Damageable;
	Parms.definition = definition;
	Parms.Affinity = Affinity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakDamageStatics.SetElementalAffinity
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Damageable                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EOakElementalType                       Elemental                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EDamageAffinity                         Affinity                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bClearAll                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakDamageStatics::SetElementalAffinity(class AActor* Damageable, EOakElementalType Elemental, EDamageAffinity Affinity, bool bClearAll)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakDamageStatics", "SetElementalAffinity");

	Params::OakDamageStatics_SetElementalAffinity Parms{};

	Parms.Damageable = Damageable;
	Parms.Elemental = Elemental;
	Parms.Affinity = Affinity;
	Parms.bClearAll = bClearAll;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakDamageStatics.SetGodLock
// (Final, Native, Static, Public)
// Parameters:
// class UObject*                          OwnerContext                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakDamageStatics::SetGodLock(class UObject* OwnerContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakDamageStatics", "SetGodLock");

	Params::OakDamageStatics_SetGodLock Parms{};

	Parms.OwnerContext = OwnerContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakDamageStatics.SpawnNovaBlastOnEnemiesInRadius
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                           DamageCauser                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Location                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Radius                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGameDataHandleProperty_                DamageDef                                              (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakDamageStatics::SpawnNovaBlastOnEnemiesInRadius(class AActor* DamageCauser, const struct FVector& Location, float Radius, FGameDataHandleProperty_ DamageDef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakDamageStatics", "SpawnNovaBlastOnEnemiesInRadius");

	Params::OakDamageStatics_SpawnNovaBlastOnEnemiesInRadius Parms{};

	Parms.DamageCauser = DamageCauser;
	Parms.Location = std::move(Location);
	Parms.Radius = Radius;
	Parms.DamageDef = DamageDef;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakDamageStatics.SubscribeToAutomaticSecondWindEvent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          OwnerContext                                           (Parm, ZeroConstructor, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void()>                       Delegate                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakDamageStatics::SubscribeToAutomaticSecondWindEvent(class UObject* OwnerContext, TDelegate<void()> Delegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakDamageStatics", "SubscribeToAutomaticSecondWindEvent");

	Params::OakDamageStatics_SubscribeToAutomaticSecondWindEvent Parms{};

	Parms.OwnerContext = OwnerContext;
	Parms.Delegate = Delegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakDamageStatics.UnregisterShotModifier
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           DamageCauser                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGameDataHandleProperty_                definition                                             (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          ModifierOwner                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakDamageStatics::UnregisterShotModifier(class AActor* DamageCauser, FGameDataHandleProperty_ definition, class UObject* ModifierOwner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakDamageStatics", "UnregisterShotModifier");

	Params::OakDamageStatics_UnregisterShotModifier Parms{};

	Parms.DamageCauser = DamageCauser;
	Parms.definition = definition;
	Parms.ModifierOwner = ModifierOwner;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakDamageStatics.UnSetGodLock
// (Final, Native, Static, Public)
// Parameters:
// class UObject*                          OwnerContext                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakDamageStatics::UnSetGodLock(class UObject* OwnerContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakDamageStatics", "UnSetGodLock");

	Params::OakDamageStatics_UnSetGodLock Parms{};

	Parms.OwnerContext = OwnerContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakDamageStatics.UnsubscribeFromAutomaticSecondWindEvent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          OwnerContext                                           (Parm, ZeroConstructor, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void()>                       Delegate                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakDamageStatics::UnsubscribeFromAutomaticSecondWindEvent(class UObject* OwnerContext, TDelegate<void()> Delegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakDamageStatics", "UnsubscribeFromAutomaticSecondWindEvent");

	Params::OakDamageStatics_UnsubscribeFromAutomaticSecondWindEvent Parms{};

	Parms.OwnerContext = OwnerContext;
	Parms.Delegate = Delegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakEcho4Statics.CanEcho4BeInterrupted
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AOakCharacter*                    DroneOwner                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOakEcho4Statics::CanEcho4BeInterrupted(class AOakCharacter* DroneOwner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakEcho4Statics", "CanEcho4BeInterrupted");

	Params::OakEcho4Statics_CanEcho4BeInterrupted Parms{};

	Parms.DroneOwner = DroneOwner;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakEcho4Statics.CanEcho4Deploy
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AOakCharacter*                    DroneOwner                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOakEcho4Statics::CanEcho4Deploy(class AOakCharacter* DroneOwner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakEcho4Statics", "CanEcho4Deploy");

	Params::OakEcho4Statics_CanEcho4Deploy Parms{};

	Parms.DroneOwner = DroneOwner;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakEcho4Statics.DeployEcho4AtLocationLatent
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector&                   Location                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Echo4DeployCooldown                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AOakCharacter*                    DroneOwner                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AOakDrone**                       projectile                                             (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    bUseOverrideRotation                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FRotator&                  OverrideRotation                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void UOakEcho4Statics::DeployEcho4AtLocationLatent(const struct FVector& Location, float Echo4DeployCooldown, class AOakCharacter* DroneOwner, class AOakDrone** projectile, const struct FLatentActionInfo& LatentInfo, bool bUseOverrideRotation, const struct FRotator& OverrideRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakEcho4Statics", "DeployEcho4AtLocationLatent");

	Params::OakEcho4Statics_DeployEcho4AtLocationLatent Parms{};

	Parms.Location = std::move(Location);
	Parms.Echo4DeployCooldown = Echo4DeployCooldown;
	Parms.DroneOwner = DroneOwner;
	Parms.LatentInfo = std::move(LatentInfo);
	Parms.bUseOverrideRotation = bUseOverrideRotation;
	Parms.OverrideRotation = std::move(OverrideRotation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (projectile != nullptr)
		*projectile = Parms.projectile;
}


// Function OakGame.OakEcho4Statics.DeployEcho4Latent
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FGbxRelativeLocation&      LocationOptions                                        (Parm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   Echo4DeployCooldown                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AOakCharacter*                    DroneOwner                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AOakDrone**                       projectile                                             (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    bUseOverrideRotation                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FRotator&                  OverrideRotation                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// class AActor*                           OverrideActor                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakEcho4Statics::DeployEcho4Latent(const struct FGbxRelativeLocation& LocationOptions, float Echo4DeployCooldown, class AOakCharacter* DroneOwner, class AOakDrone** projectile, const struct FLatentActionInfo& LatentInfo, bool bUseOverrideRotation, const struct FRotator& OverrideRotation, class AActor* OverrideActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakEcho4Statics", "DeployEcho4Latent");

	Params::OakEcho4Statics_DeployEcho4Latent Parms{};

	Parms.LocationOptions = std::move(LocationOptions);
	Parms.Echo4DeployCooldown = Echo4DeployCooldown;
	Parms.DroneOwner = DroneOwner;
	Parms.LatentInfo = std::move(LatentInfo);
	Parms.bUseOverrideRotation = bUseOverrideRotation;
	Parms.OverrideRotation = std::move(OverrideRotation);
	Parms.OverrideActor = OverrideActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (projectile != nullptr)
		*projectile = Parms.projectile;
}


// Function OakGame.OakEcho4Statics.DeployEcho4WithDefLatent
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// FGbxDefPtrProperty_                     DroneDef                                               (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGbxRelativeLocation&      LocationOptions                                        (Parm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   Echo4DeployCooldown                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AOakCharacter*                    DroneOwner                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AOakDrone**                       projectile                                             (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    bUseOverrideRotation                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FRotator&                  OverrideRotation                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// class AActor*                           OverrideActor                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakEcho4Statics::DeployEcho4WithDefLatent(FGbxDefPtrProperty_ DroneDef, const struct FGbxRelativeLocation& LocationOptions, float Echo4DeployCooldown, class AOakCharacter* DroneOwner, class AOakDrone** projectile, const struct FLatentActionInfo& LatentInfo, bool bUseOverrideRotation, const struct FRotator& OverrideRotation, class AActor* OverrideActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakEcho4Statics", "DeployEcho4WithDefLatent");

	Params::OakEcho4Statics_DeployEcho4WithDefLatent Parms{};

	Parms.DroneDef = DroneDef;
	Parms.LocationOptions = std::move(LocationOptions);
	Parms.Echo4DeployCooldown = Echo4DeployCooldown;
	Parms.DroneOwner = DroneOwner;
	Parms.LatentInfo = std::move(LatentInfo);
	Parms.bUseOverrideRotation = bUseOverrideRotation;
	Parms.OverrideRotation = std::move(OverrideRotation);
	Parms.OverrideActor = OverrideActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (projectile != nullptr)
		*projectile = Parms.projectile;
}


// Function OakGame.OakEcho4Statics.FlyToActor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AOakDrone*                        OakDrone                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           MoveActor                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DroneSpeed                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DroneAccelerationTime                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   StopFlyAtTargetDisance                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakEcho4Statics::FlyToActor(class AOakDrone* OakDrone, class AActor* MoveActor, float DroneSpeed, float DroneAccelerationTime, float StopFlyAtTargetDisance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakEcho4Statics", "FlyToActor");

	Params::OakEcho4Statics_FlyToActor Parms{};

	Parms.OakDrone = OakDrone;
	Parms.MoveActor = MoveActor;
	Parms.DroneSpeed = DroneSpeed;
	Parms.DroneAccelerationTime = DroneAccelerationTime;
	Parms.StopFlyAtTargetDisance = StopFlyAtTargetDisance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakEcho4Statics.FlyToLocation
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AOakDrone*                        OakDrone                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   MoveLocation                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DroneSpeed                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DroneAccelerationTime                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   StopFlyAtTargetDisance                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakEcho4Statics::FlyToLocation(class AOakDrone* OakDrone, const struct FVector& MoveLocation, float DroneSpeed, float DroneAccelerationTime, float StopFlyAtTargetDisance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakEcho4Statics", "FlyToLocation");

	Params::OakEcho4Statics_FlyToLocation Parms{};

	Parms.OakDrone = OakDrone;
	Parms.MoveLocation = std::move(MoveLocation);
	Parms.DroneSpeed = DroneSpeed;
	Parms.DroneAccelerationTime = DroneAccelerationTime;
	Parms.StopFlyAtTargetDisance = StopFlyAtTargetDisance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakEcho4Statics.GetEcho4ActorScript
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AOakDrone*                        OakDrone                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UOakActorScript_Echo4*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UOakActorScript_Echo4* UOakEcho4Statics::GetEcho4ActorScript(class AOakDrone* OakDrone)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakEcho4Statics", "GetEcho4ActorScript");

	Params::OakEcho4Statics_GetEcho4ActorScript Parms{};

	Parms.OakDrone = OakDrone;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakEcho4Statics.GetEcho4Drone
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AOakCharacter*                    DroneOwner                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AOakDrone*                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AOakDrone* UOakEcho4Statics::GetEcho4Drone(class AOakCharacter* DroneOwner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakEcho4Statics", "GetEcho4Drone");

	Params::OakEcho4Statics_GetEcho4Drone Parms{};

	Parms.DroneOwner = DroneOwner;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakEcho4Statics.IsEcho4Deployed
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AOakCharacter*                    DroneOwner                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOakEcho4Statics::IsEcho4Deployed(class AOakCharacter* DroneOwner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakEcho4Statics", "IsEcho4Deployed");

	Params::OakEcho4Statics_IsEcho4Deployed Parms{};

	Parms.DroneOwner = DroneOwner;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakEcho4Statics.NotifyEchoLocationAnimFinished
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AOakDrone*                        OakDrone                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakEcho4Statics::NotifyEchoLocationAnimFinished(class AOakDrone* OakDrone)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakEcho4Statics", "NotifyEchoLocationAnimFinished");

	Params::OakEcho4Statics_NotifyEchoLocationAnimFinished Parms{};

	Parms.OakDrone = OakDrone;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakEcho4Statics.RetrieveEcho4
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AOakCharacter*                    DroneOwner                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakEcho4Statics::RetrieveEcho4(class AOakCharacter* DroneOwner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakEcho4Statics", "RetrieveEcho4");

	Params::OakEcho4Statics_RetrieveEcho4 Parms{};

	Parms.DroneOwner = DroneOwner;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakEcho4Statics.SetEcho4DeploymentLocked
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AOakCharacter*                    DroneOwner                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InLock                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakEcho4Statics::SetEcho4DeploymentLocked(class AOakCharacter* DroneOwner, bool InLock)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakEcho4Statics", "SetEcho4DeploymentLocked");

	Params::OakEcho4Statics_SetEcho4DeploymentLocked Parms{};

	Parms.DroneOwner = DroneOwner;
	Parms.InLock = InLock;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakEcho4Statics.WasWaypointPathFound
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                           DroneOrOwner                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOakEcho4Statics::WasWaypointPathFound(class AActor* DroneOrOwner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakEcho4Statics", "WasWaypointPathFound");

	Params::OakEcho4Statics_WasWaypointPathFound Parms{};

	Parms.DroneOrOwner = DroneOrOwner;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakEcho4Statics.WasWaypointPathFoundLatent
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AActor*                           DroneOrOwner                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UOakEcho4Statics::WasWaypointPathFoundLatent(class AActor* DroneOrOwner, bool* Result, const struct FLatentActionInfo& LatentInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakEcho4Statics", "WasWaypointPathFoundLatent");

	Params::OakEcho4Statics_WasWaypointPathFoundLatent Parms{};

	Parms.DroneOrOwner = DroneOrOwner;
	Parms.LatentInfo = std::move(LatentInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function OakGame.OakEchoLogFunctionLibrary.BindEventToEchoLogAcquiredChanged
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          ContextObject                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TDelegate<void()>&                InDelegate                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakEchoLogFunctionLibrary::BindEventToEchoLogAcquiredChanged(class UObject* ContextObject, const TDelegate<void()>& InDelegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakEchoLogFunctionLibrary", "BindEventToEchoLogAcquiredChanged");

	Params::OakEchoLogFunctionLibrary_BindEventToEchoLogAcquiredChanged Parms{};

	Parms.ContextObject = ContextObject;
	Parms.InDelegate = InDelegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakEchoLogFunctionLibrary.DoesPlayerHaveEchoLog
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AActor*                           ContextActor                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const FGbxDefPtrProperty_&              InEchoLog                                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOakEchoLogFunctionLibrary::DoesPlayerHaveEchoLog(class AActor* ContextActor, const FGbxDefPtrProperty_& InEchoLog)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakEchoLogFunctionLibrary", "DoesPlayerHaveEchoLog");

	Params::OakEchoLogFunctionLibrary_DoesPlayerHaveEchoLog Parms{};

	Parms.ContextActor = ContextActor;
	Parms.InEchoLog = InEchoLog;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakEchoLogFunctionLibrary.EndEchoLogFlight
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           EchoLogActor                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakEchoLogFunctionLibrary::EndEchoLogFlight(class AActor* EchoLogActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakEchoLogFunctionLibrary", "EndEchoLogFlight");

	Params::OakEchoLogFunctionLibrary_EndEchoLogFlight Parms{};

	Parms.EchoLogActor = EchoLogActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakEchoLogFunctionLibrary.FlyEchoLogToActor
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           EchoLogActor                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TargetActor                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TargetSocket                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakEchoLogFunctionLibrary::FlyEchoLogToActor(class AActor* EchoLogActor, class AActor* TargetActor, class FName TargetSocket)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakEchoLogFunctionLibrary", "FlyEchoLogToActor");

	Params::OakEchoLogFunctionLibrary_FlyEchoLogToActor Parms{};

	Parms.EchoLogActor = EchoLogActor;
	Parms.TargetActor = TargetActor;
	Parms.TargetSocket = TargetSocket;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakEchoLogFunctionLibrary.GetEchoLogForActor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

FGbxDefPtrProperty_ UOakEchoLogFunctionLibrary::GetEchoLogForActor(class AActor* InActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakEchoLogFunctionLibrary", "GetEchoLogForActor");

	Params::OakEchoLogFunctionLibrary_GetEchoLogForActor Parms{};

	Parms.InActor = InActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakEchoLogFunctionLibrary.GiveEchoLog
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AActor*                           ContextActor                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const FGbxDefPtrProperty_&              InEchoLog                                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bGiveToAllPlayers                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakEchoLogFunctionLibrary::GiveEchoLog(class AActor* ContextActor, const FGbxDefPtrProperty_& InEchoLog, bool bGiveToAllPlayers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakEchoLogFunctionLibrary", "GiveEchoLog");

	Params::OakEchoLogFunctionLibrary_GiveEchoLog Parms{};

	Parms.ContextActor = ContextActor;
	Parms.InEchoLog = InEchoLog;
	Parms.bGiveToAllPlayers = bGiveToAllPlayers;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakEchoLogFunctionLibrary.InteractWithEchoLog
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           ContextActor                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           EchoLogActor                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bNoPlayback                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakEchoLogFunctionLibrary::InteractWithEchoLog(class AActor* ContextActor, class AActor* EchoLogActor, bool bNoPlayback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakEchoLogFunctionLibrary", "InteractWithEchoLog");

	Params::OakEchoLogFunctionLibrary_InteractWithEchoLog Parms{};

	Parms.ContextActor = ContextActor;
	Parms.EchoLogActor = EchoLogActor;
	Parms.bNoPlayback = bNoPlayback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakEchoLogFunctionLibrary.IsEchoLogIOAcquired
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           EchoLogActor                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EOakEchoLogPlayerQueryType              PlayerType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOakEchoLogFunctionLibrary::IsEchoLogIOAcquired(class AActor* EchoLogActor, EOakEchoLogPlayerQueryType PlayerType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakEchoLogFunctionLibrary", "IsEchoLogIOAcquired");

	Params::OakEchoLogFunctionLibrary_IsEchoLogIOAcquired Parms{};

	Parms.EchoLogActor = EchoLogActor;
	Parms.PlayerType = PlayerType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakEchoLogFunctionLibrary.PlayEchoLog
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AActor*                           ContextActor                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const FGbxDefPtrProperty_&              InEchoLog                                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bPlayForAllPlayers                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakEchoLogFunctionLibrary::PlayEchoLog(class AActor* ContextActor, const FGbxDefPtrProperty_& InEchoLog, bool bPlayForAllPlayers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakEchoLogFunctionLibrary", "PlayEchoLog");

	Params::OakEchoLogFunctionLibrary_PlayEchoLog Parms{};

	Parms.ContextActor = ContextActor;
	Parms.InEchoLog = InEchoLog;
	Parms.bPlayForAllPlayers = bPlayForAllPlayers;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakEchoLogFunctionLibrary.SetEchoLogAsViewed
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AActor*                           ContextActor                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const FGbxDefPtrProperty_&              InEchoLog                                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bViewed                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakEchoLogFunctionLibrary::SetEchoLogAsViewed(class AActor* ContextActor, const FGbxDefPtrProperty_& InEchoLog, bool bViewed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakEchoLogFunctionLibrary", "SetEchoLogAsViewed");

	Params::OakEchoLogFunctionLibrary_SetEchoLogAsViewed Parms{};

	Parms.ContextActor = ContextActor;
	Parms.InEchoLog = InEchoLog;
	Parms.bViewed = bViewed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakEchoLogFunctionLibrary.UnbindEventToEchoLogAcquiredChanged
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          ContextObject                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakEchoLogFunctionLibrary::UnbindEventToEchoLogAcquiredChanged(class UObject* ContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakEchoLogFunctionLibrary", "UnbindEventToEchoLogAcquiredChanged");

	Params::OakEchoLogFunctionLibrary_UnbindEventToEchoLogAcquiredChanged Parms{};

	Parms.ContextObject = ContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIScript_TitleScreen.PressedStart
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_TitleScreen::PressedStart(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_TitleScreen", "PressedStart");

	Params::OakUIScript_TitleScreen_PressedStart Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_TitleScreen.SplashIntro
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_TitleScreen::SplashIntro(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_TitleScreen", "SplashIntro");

	Params::OakUIScript_TitleScreen_SplashIntro Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_TitleScreen.SplashTransition
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_TitleScreen::SplashTransition(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_TitleScreen", "SplashTransition");

	Params::OakUIScript_TitleScreen_SplashTransition Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakOrderRewindStatics.CanStart
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          OwnerContext                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOakOrderRewindStatics::CanStart(class UObject* OwnerContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakOrderRewindStatics", "CanStart");

	Params::OakOrderRewindStatics_CanStart Parms{};

	Parms.OwnerContext = OwnerContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakOrderRewindStatics.IsActive
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          OwnerContext                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOakOrderRewindStatics::IsActive(class UObject* OwnerContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakOrderRewindStatics", "IsActive");

	Params::OakOrderRewindStatics_IsActive Parms{};

	Parms.OwnerContext = OwnerContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakOrderRewindStatics.Start
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          OwnerContext                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InIdealDuration                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakOrderRewindStatics::Start(class UObject* OwnerContext, float InIdealDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakOrderRewindStatics", "Start");

	Params::OakOrderRewindStatics_Start Parms{};

	Parms.OwnerContext = OwnerContext;
	Parms.InIdealDuration = InIdealDuration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakOrderRewindStatics.Stop
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          OwnerContext                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakOrderRewindStatics::Stop(class UObject* OwnerContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakOrderRewindStatics", "Stop");

	Params::OakOrderRewindStatics_Stop Parms{};

	Parms.OwnerContext = OwnerContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerState.BP_SetExperienceLevel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const FGbxDefPtrProperty_               ExperienceDef                                          (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ExperienceLevel                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakPlayerState::BP_SetExperienceLevel(const FGbxDefPtrProperty_ ExperienceDef, int32 ExperienceLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerState", "BP_SetExperienceLevel");

	Params::OakPlayerState_BP_SetExperienceLevel Parms{};

	Parms.ExperienceDef = ExperienceDef;
	Parms.ExperienceLevel = ExperienceLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerState.BP_UnlockExperienceType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const FGbxDefPtrProperty_               ExperienceDef                                          (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakPlayerState::BP_UnlockExperienceType(const FGbxDefPtrProperty_ ExperienceDef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerState", "BP_UnlockExperienceType");

	Params::OakPlayerState_BP_UnlockExperienceType Parms{};

	Parms.ExperienceDef = ExperienceDef;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerState.ClearPrototypeToastMessage
// (Final, Native, Public, BlueprintCallable)

void AOakPlayerState::ClearPrototypeToastMessage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerState", "ClearPrototypeToastMessage");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerState.GetGenericProperty
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FName&                      Name_0                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString*                          Value                                                  (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AOakPlayerState::GetGenericProperty(const class FName& Name_0, class FString* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerState", "GetGenericProperty");

	Params::OakPlayerState_GetGenericProperty Parms{};

	Parms.Name_0 = Name_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Value != nullptr)
		*Value = std::move(Parms.Value);

	return Parms.ReturnValue;
}


// Function OakGame.OakPlayerState.NotifyWatchedGenericPropertyDelta
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const class FName&                      Name_0                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Value                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakPlayerState::NotifyWatchedGenericPropertyDelta(const class FName& Name_0, const class FString& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerState", "NotifyWatchedGenericPropertyDelta");

	Params::OakPlayerState_NotifyWatchedGenericPropertyDelta Parms{};

	Parms.Name_0 = Name_0;
	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerState.OnOakPawnSet
// (Final, Native, Protected)
// Parameters:
// class APlayerState*                     player                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APawn*                            NewPawn                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APawn*                            OldPawn                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakPlayerState::OnOakPawnSet(class APlayerState* player, class APawn* NewPawn, class APawn* OldPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerState", "OnOakPawnSet");

	Params::OakPlayerState_OnOakPawnSet Parms{};

	Parms.player = player;
	Parms.NewPawn = NewPawn;
	Parms.OldPawn = OldPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerState.OnRep_BackpackItems
// (Final, Native, Protected)

void AOakPlayerState::OnRep_BackpackItems()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerState", "OnRep_BackpackItems");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerState.OnRep_BankItems
// (Final, Native, Protected)

void AOakPlayerState::OnRep_BankItems()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerState", "OnRep_BankItems");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerState.OnRep_BuddyIndex
// (Final, Native, Protected)

void AOakPlayerState::OnRep_BuddyIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerState", "OnRep_BuddyIndex");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerState.OnRep_ChallengeCompletion
// (Final, Native, Public)

void AOakPlayerState::OnRep_ChallengeCompletion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerState", "OnRep_ChallengeCompletion");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerState.OnRep_CurrentCharacterSelectPhase
// (Final, Native, Protected)

void AOakPlayerState::OnRep_CurrentCharacterSelectPhase()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerState", "OnRep_CurrentCharacterSelectPhase");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerState.OnRep_DiscoveryPinningState
// (Final, Native, Private)

void AOakPlayerState::OnRep_DiscoveryPinningState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerState", "OnRep_DiscoveryPinningState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerState.OnRep_ExperienceState
// (Final, Native, Protected)

void AOakPlayerState::OnRep_ExperienceState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerState", "OnRep_ExperienceState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerState.OnRep_GenericProperties
// (Final, Native, Public)

void AOakPlayerState::OnRep_GenericProperties()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerState", "OnRep_GenericProperties");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerState.OnRep_IsBusyInMenu
// (Final, Native, Private)

void AOakPlayerState::OnRep_IsBusyInMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerState", "OnRep_IsBusyInMenu");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerState.OnRep_PlayerDifficulty
// (Final, Native, Protected)

void AOakPlayerState::OnRep_PlayerDifficulty()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerState", "OnRep_PlayerDifficulty");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerState.OnRep_TravelStatus
// (Final, Native, Protected)

void AOakPlayerState::OnRep_TravelStatus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerState", "OnRep_TravelStatus");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerState.RemoveGenericPropertyWatch
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FName&                      Name_0                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakPlayerState::RemoveGenericPropertyWatch(const class FName& Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerState", "RemoveGenericPropertyWatch");

	Params::OakPlayerState_RemoveGenericPropertyWatch Parms{};

	Parms.Name_0 = Name_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerState.Server_CreateDiscoveryPin
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// const struct FGbxDiscoveryPinningPinData&InPinData                                              (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)

void AOakPlayerState::Server_CreateDiscoveryPin(const struct FGbxDiscoveryPinningPinData& InPinData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerState", "Server_CreateDiscoveryPin");

	Params::OakPlayerState_Server_CreateDiscoveryPin Parms{};

	Parms.InPinData = std::move(InPinData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerState.Server_RemoveAllDiscoveryPins
// (Net, NetReliable, Native, Event, Public, NetServer)

void AOakPlayerState::Server_RemoveAllDiscoveryPins()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerState", "Server_RemoveAllDiscoveryPins");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerState.Server_RemoveDiscoveryPin
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// EGbxDiscoveryPinType                    InPinType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InPinIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakPlayerState::Server_RemoveDiscoveryPin(EGbxDiscoveryPinType InPinType, int32 InPinIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerState", "Server_RemoveDiscoveryPin");

	Params::OakPlayerState_Server_RemoveDiscoveryPin Parms{};

	Parms.InPinType = InPinType;
	Parms.InPinIndex = InPinIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerState.ServerEnteredWorldRegion
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// const FGameDataHandleProperty_&         region                                                 (ConstParm, Parm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bNewDiscovery                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakPlayerState::ServerEnteredWorldRegion(const FGameDataHandleProperty_& region, bool bNewDiscovery)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerState", "ServerEnteredWorldRegion");

	Params::OakPlayerState_ServerEnteredWorldRegion Parms{};

	Parms.region = region;
	Parms.bNewDiscovery = bNewDiscovery;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerState.ServerSetCurrentCharacterSelectPhase
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// ECharacterSelectPhase                   NewCurrentCharacterSelectPhase                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakPlayerState::ServerSetCurrentCharacterSelectPhase(ECharacterSelectPhase NewCurrentCharacterSelectPhase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerState", "ServerSetCurrentCharacterSelectPhase");

	Params::OakPlayerState_ServerSetCurrentCharacterSelectPhase Parms{};

	Parms.NewCurrentCharacterSelectPhase = NewCurrentCharacterSelectPhase;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerState.ServerSetGbxActorParts
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// const class FName&                      ActorType                                              (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    SerialNumberStr                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakPlayerState::ServerSetGbxActorParts(const class FName& ActorType, const class FString& SerialNumberStr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerState", "ServerSetGbxActorParts");

	Params::OakPlayerState_ServerSetGbxActorParts Parms{};

	Parms.ActorType = ActorType;
	Parms.SerialNumberStr = std::move(SerialNumberStr);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerState.ServerSetPlayerBusyInMenu
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                                    InIsBusy                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakPlayerState::ServerSetPlayerBusyInMenu(bool InIsBusy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerState", "ServerSetPlayerBusyInMenu");

	Params::OakPlayerState_ServerSetPlayerBusyInMenu Parms{};

	Parms.InIsBusy = InIsBusy;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerState.ServerSetPlayerProfileDifficulty
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// uint8                                   NewDifficulty                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakPlayerState::ServerSetPlayerProfileDifficulty(uint8 NewDifficulty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerState", "ServerSetPlayerProfileDifficulty");

	Params::OakPlayerState_ServerSetPlayerProfileDifficulty Parms{};

	Parms.NewDifficulty = NewDifficulty;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerState.ServerSetTravelStatus
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// EPlayerTravelStatus                     NewStatus                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakPlayerState::ServerSetTravelStatus(EPlayerTravelStatus NewStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerState", "ServerSetTravelStatus");

	Params::OakPlayerState_ServerSetTravelStatus Parms{};

	Parms.NewStatus = NewStatus;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerState.SetGenericProperty
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FName&                      Name_0                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Value                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakPlayerState::SetGenericProperty(const class FName& Name_0, const class FString& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerState", "SetGenericProperty");

	Params::OakPlayerState_SetGenericProperty Parms{};

	Parms.Name_0 = Name_0;
	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerState.SetGenericPropertyWatch
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FName&                      Name_0                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakPlayerState::SetGenericPropertyWatch(const class FName& Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerState", "SetGenericPropertyWatch");

	Params::OakPlayerState_SetGenericPropertyWatch Parms{};

	Parms.Name_0 = Name_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerState.SetPrototypeToastMessage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Header                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Message                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Style                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakPlayerState::SetPrototypeToastMessage(const class FString& Header, const class FString& Message, const class FString& Style, float Duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerState", "SetPrototypeToastMessage");

	Params::OakPlayerState_SetPrototypeToastMessage Parms{};

	Parms.Header = std::move(Header);
	Parms.Message = std::move(Message);
	Parms.Style = std::move(Style);
	Parms.Duration = Duration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerState.BP_GetExperienceLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const FGbxDefPtrProperty_               ExperienceDef                                          (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AOakPlayerState::BP_GetExperienceLevel(const FGbxDefPtrProperty_ ExperienceDef) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerState", "BP_GetExperienceLevel");

	Params::OakPlayerState_BP_GetExperienceLevel Parms{};

	Parms.ExperienceDef = ExperienceDef;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakPlayerState.GetTotalPlaytimeSeconds
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AOakPlayerState::GetTotalPlaytimeSeconds() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakPlayerState", "GetTotalPlaytimeSeconds");

	Params::OakPlayerState_GetTotalPlaytimeSeconds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakUIScript_ResourceMeter.NotEnoughFuelError
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_ResourceMeter::NotEnoughFuelError(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_ResourceMeter", "NotEnoughFuelError");

	Params::OakUIScript_ResourceMeter_NotEnoughFuelError Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakLostLootMachine.EndParticleOverride
// (Final, Native, Public, BlueprintCallable)

void AOakLostLootMachine::EndParticleOverride()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLostLootMachine", "EndParticleOverride");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLostLootMachine.GetFilledSlots
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AOakPlayerController*             OakPC                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AOakLostLootMachine::GetFilledSlots(class AOakPlayerController* OakPC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLostLootMachine", "GetFilledSlots");

	Params::OakLostLootMachine_GetFilledSlots Parms{};

	Parms.OakPC = OakPC;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLostLootMachine.GetMaxSlots
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AOakPlayerController*             OakPC                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AOakLostLootMachine::GetMaxSlots(class AOakPlayerController* OakPC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLostLootMachine", "GetMaxSlots");

	Params::OakLostLootMachine_GetMaxSlots Parms{};

	Parms.OakPC = OakPC;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLostLootMachine.OverrideAllParticlePresentations
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bShowParticle                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakLostLootMachine::OverrideAllParticlePresentations(bool bShowParticle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLostLootMachine", "OverrideAllParticlePresentations");

	Params::OakLostLootMachine_OverrideAllParticlePresentations Parms{};

	Parms.bShowParticle = bShowParticle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLostLootMachine.UpdateParticlePresentations
// (Final, Native, Public, BlueprintCallable)

void AOakLostLootMachine::UpdateParticlePresentations()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLostLootMachine", "UpdateParticlePresentations");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakEridiumEncasingFunctionLibrary.GetEridiumEncasing
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UEridiumEncasingComponent*        ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UEridiumEncasingComponent* UOakEridiumEncasingFunctionLibrary::GetEridiumEncasing(class AActor* InActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakEridiumEncasingFunctionLibrary", "GetEridiumEncasing");

	Params::OakEridiumEncasingFunctionLibrary_GetEridiumEncasing Parms{};

	Parms.InActor = InActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakExperienceStatics.AwardKillExperienceToParty
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           ContextActor                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AOakPlayerController*             OptionalKiller                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakExperienceStatics::AwardKillExperienceToParty(class AActor* ContextActor, class AOakPlayerController* OptionalKiller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakExperienceStatics", "AwardKillExperienceToParty");

	Params::OakExperienceStatics_AwardKillExperienceToParty Parms{};

	Parms.ContextActor = ContextActor;
	Parms.OptionalKiller = OptionalKiller;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakFactionFunctionLibrary.GiveFactionReputation
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          OwnerContext                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGameDataHandleProperty_                Faction                                                (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Amount                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakFactionFunctionLibrary::GiveFactionReputation(class UObject* OwnerContext, FGameDataHandleProperty_ Faction, int32 Amount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakFactionFunctionLibrary", "GiveFactionReputation");

	Params::OakFactionFunctionLibrary_GiveFactionReputation Parms{};

	Parms.OwnerContext = OwnerContext;
	Parms.Faction = Faction;
	Parms.Amount = Amount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakFactionFunctionLibrary.GiveFactionReputationToParty
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContext                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGameDataHandleProperty_                Faction                                                (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Amount                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakFactionFunctionLibrary::GiveFactionReputationToParty(class UObject* WorldContext, FGameDataHandleProperty_ Faction, int32 Amount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakFactionFunctionLibrary", "GiveFactionReputationToParty");

	Params::OakFactionFunctionLibrary_GiveFactionReputationToParty Parms{};

	Parms.WorldContext = WorldContext;
	Parms.Faction = Faction;
	Parms.Amount = Amount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakSingularity.OnEnteringSingularityZone
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFromSweep                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHitResult&                SweepResult                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AOakSingularity::OnEnteringSingularityZone(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakSingularity", "OnEnteringSingularityZone");

	Params::OakSingularity_OnEnteringSingularityZone Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakSingularity.OnExitingSingularityZone
// (Final, Native, Protected)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakSingularity::OnExitingSingularityZone(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakSingularity", "OnExitingSingularityZone");

	Params::OakSingularity_OnExitingSingularityZone Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakSkillManagerStatics.Detangle
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AOakCharacter*                    target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakSkillManagerStatics::Detangle(class AOakCharacter* target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakSkillManagerStatics", "Detangle");

	Params::OakSkillManagerStatics_Detangle Parms{};

	Parms.target = target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakSkillManagerStatics.Entangle
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AOakCharacter*                    target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakSkillManagerStatics::Entangle(class AOakCharacter* target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakSkillManagerStatics", "Entangle");

	Params::OakSkillManagerStatics_Entangle Parms{};

	Parms.target = target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakSkillManagerStatics.ForEachEntangled
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContext                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AOakCharacter*                    Ignore                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(class AOakCharacter* target)>func                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakSkillManagerStatics::ForEachEntangled(class UObject* WorldContext, class AOakCharacter* Ignore, TDelegate<void(class AOakCharacter* target)> func)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakSkillManagerStatics", "ForEachEntangled");

	Params::OakSkillManagerStatics_ForEachEntangled Parms{};

	Parms.WorldContext = WorldContext;
	Parms.Ignore = Ignore;
	Parms.func = func;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakSkillManagerStatics.GetEntangledNum
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContext                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UOakSkillManagerStatics::GetEntangledNum(class UObject* WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakSkillManagerStatics", "GetEntangledNum");

	Params::OakSkillManagerStatics_GetEntangledNum Parms{};

	Parms.WorldContext = WorldContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakStatusEffectContainerStatics.OnTechDeathStarted
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AActor*                           Context                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTechDeathCoordinatorData& TechData                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UOakStatusEffectContainerStatics::OnTechDeathStarted(class AActor* Context, const struct FTechDeathCoordinatorData& TechData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakStatusEffectContainerStatics", "OnTechDeathStarted");

	Params::OakStatusEffectContainerStatics_OnTechDeathStarted Parms{};

	Parms.Context = Context;
	Parms.TechData = std::move(TechData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakStatusEffectContainerStatics.SetCryoSlowLocked
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Context                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bLocked                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             reason                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakStatusEffectContainerStatics::SetCryoSlowLocked(class AActor* Context, bool bLocked, class FName reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakStatusEffectContainerStatics", "SetCryoSlowLocked");

	Params::OakStatusEffectContainerStatics_SetCryoSlowLocked Parms{};

	Parms.Context = Context;
	Parms.bLocked = bLocked;
	Parms.reason = reason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakGameMode.RequestTravelViaLink
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FName&                      LinkName                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AGbxPlayerController*             Controller                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bImmediate                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AOakGameMode::RequestTravelViaLink(const class FName& LinkName, class AGbxPlayerController* Controller, bool bImmediate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakGameMode", "RequestTravelViaLink");

	Params::OakGameMode_RequestTravelViaLink Parms{};

	Parms.LinkName = LinkName;
	Parms.Controller = Controller;
	Parms.bImmediate = bImmediate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakSkillStatics.FireKillSkillEvent
// (Final, Native, Static, Private, HasDefaults, BlueprintCallable)
// Parameters:
// class AOakCharacter*                    target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           KilledTarget                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Location                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   damage                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakSkillStatics::FireKillSkillEvent(class AOakCharacter* target, class AActor* KilledTarget, const struct FVector& Location, float damage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakSkillStatics", "FireKillSkillEvent");

	Params::OakSkillStatics_FireKillSkillEvent Parms{};

	Parms.target = target;
	Parms.KilledTarget = KilledTarget;
	Parms.Location = std::move(Location);
	Parms.damage = damage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakSpawnPointPreviewComponent.GetPreviewDecoStateOptions
// (Final, Native, Private, HasOutParams)
// Parameters:
// TArray<class FName>*                    OutOptions                                             (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UOakSpawnPointPreviewComponent::GetPreviewDecoStateOptions(TArray<class FName>* OutOptions)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakSpawnPointPreviewComponent", "GetPreviewDecoStateOptions");

	Params::OakSpawnPointPreviewComponent_GetPreviewDecoStateOptions Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutOptions != nullptr)
		*OutOptions = std::move(Parms.OutOptions);
}


// Function OakGame.OakGameState.Net_EndActorFlight
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class AActor*                           FlightActor                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakGameState::Net_EndActorFlight(class AActor* FlightActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakGameState", "Net_EndActorFlight");

	Params::OakGameState_Net_EndActorFlight Parms{};

	Parms.FlightActor = FlightActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakGameState.Net_FlyActorToActor
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// const FGbxDefPtrProperty_&              FlightConfig                                           (ConstParm, Parm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           FlightActor                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TargetActor                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakGameState::Net_FlyActorToActor(const FGbxDefPtrProperty_& FlightConfig, class AActor* FlightActor, class AActor* TargetActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakGameState", "Net_FlyActorToActor");

	Params::OakGameState_Net_FlyActorToActor Parms{};

	Parms.FlightConfig = FlightConfig;
	Parms.FlightActor = FlightActor;
	Parms.TargetActor = TargetActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakGameState.OnPlayerEnteredRegion
// (Native, Protected, HasOutParams)
// Parameters:
// class AOakPlayerState*                  PlayerState                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const FGameDataHandleProperty_&         region                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bNewlyDiscovered                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakGameState::OnPlayerEnteredRegion(class AOakPlayerState* PlayerState, const FGameDataHandleProperty_& region, bool bNewlyDiscovered)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakGameState", "OnPlayerEnteredRegion");

	Params::OakGameState_OnPlayerEnteredRegion Parms{};

	Parms.PlayerState = PlayerState;
	Parms.region = region;
	Parms.bNewlyDiscovered = bNewlyDiscovered;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakGameState.OnRep_DiscoveryReplicationData
// (Final, Native, Private)

void AOakGameState::OnRep_DiscoveryReplicationData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakGameState", "OnRep_DiscoveryReplicationData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakGameState.OnRep_EffectiveExpSyncLevel
// (Final, Native, Protected)

void AOakGameState::OnRep_EffectiveExpSyncLevel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakGameState", "OnRep_EffectiveExpSyncLevel");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakGameState.OnRep_NewGameState
// (Final, Native, Protected)

void AOakGameState::OnRep_NewGameState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakGameState", "OnRep_NewGameState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakGameState.OnRep_PlayingCustomCutsceneMovie
// (Final, Native, Protected)

void AOakGameState::OnRep_PlayingCustomCutsceneMovie()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakGameState", "OnRep_PlayingCustomCutsceneMovie");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakGameState.OnRep_ServerFinishedPostPrologueIntro
// (Final, Native, Protected)

void AOakGameState::OnRep_ServerFinishedPostPrologueIntro()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakGameState", "OnRep_ServerFinishedPostPrologueIntro");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakGameState.OnRep_StartGameTimer
// (Final, Native, Protected)

void AOakGameState::OnRep_StartGameTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakGameState", "OnRep_StartGameTimer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakGameState.BroadcastOakLog
// (Net, NetReliable, Native, Event, NetMulticast, Public, Const)
// Parameters:
// const class FString&                    ToLog                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDisplayOnScreen                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakGameState::BroadcastOakLog(const class FString& ToLog, bool bDisplayOnScreen) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakGameState", "BroadcastOakLog");

	Params::OakGameState_BroadcastOakLog Parms{};

	Parms.ToLog = std::move(ToLog);
	Parms.bDisplayOnScreen = bDisplayOnScreen;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakGlideModifierComponent.OnActorEnteredGlideModifierVolume
// (Final, Native, Public)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakGlideModifierComponent::OnActorEnteredGlideModifierVolume(class AActor* Actor, class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakGlideModifierComponent", "OnActorEnteredGlideModifierVolume");

	Params::OakGlideModifierComponent_OnActorEnteredGlideModifierVolume Parms{};

	Parms.Actor = Actor;
	Parms.OtherActor = OtherActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakGlideModifierComponent.OnActorExitedGlideModifierVolume
// (Final, Native, Public)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakGlideModifierComponent::OnActorExitedGlideModifierVolume(class AActor* Actor, class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakGlideModifierComponent", "OnActorExitedGlideModifierVolume");

	Params::OakGlideModifierComponent_OnActorExitedGlideModifierVolume Parms{};

	Parms.Actor = Actor;
	Parms.OtherActor = OtherActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakHitReactionBlueprintLibrary.AIScriptedDeath
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           AIActor                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FForceSelection&           force                                                  (Parm, NoDestructor, NativeAccessSpecifierPublic)
// EDeathHitReaction                       Death                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EOakElementalType                       Element                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   LocalDirection                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakHitReactionBlueprintLibrary::AIScriptedDeath(class AActor* AIActor, const struct FForceSelection& force, EDeathHitReaction Death, EOakElementalType Element, float LocalDirection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakHitReactionBlueprintLibrary", "AIScriptedDeath");

	Params::OakHitReactionBlueprintLibrary_AIScriptedDeath Parms{};

	Parms.AIActor = AIActor;
	Parms.force = std::move(force);
	Parms.Death = Death;
	Parms.Element = Element;
	Parms.LocalDirection = LocalDirection;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakHitReactionBlueprintLibrary.AIScriptedHitDeath
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           AIActor                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EDeathHitAnim                           DeathAnim                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              DeathFX                                                (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FForceSelection&           force                                                  (Parm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   LocalDirection                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   LaunchPitch                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bOverrideGlobalMinPitchAngle                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakHitReactionBlueprintLibrary::AIScriptedHitDeath(class AActor* AIActor, EDeathHitAnim DeathAnim, const struct FGameplayTag& DeathFX, const struct FForceSelection& force, float LocalDirection, float LaunchPitch, bool bOverrideGlobalMinPitchAngle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakHitReactionBlueprintLibrary", "AIScriptedHitDeath");

	Params::OakHitReactionBlueprintLibrary_AIScriptedHitDeath Parms{};

	Parms.AIActor = AIActor;
	Parms.DeathAnim = DeathAnim;
	Parms.DeathFX = std::move(DeathFX);
	Parms.force = std::move(force);
	Parms.LocalDirection = LocalDirection;
	Parms.LaunchPitch = LaunchPitch;
	Parms.bOverrideGlobalMinPitchAngle = bOverrideGlobalMinPitchAngle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakHitReactionBlueprintLibrary.AIScriptedHitDeathCustom
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           AIActor                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGbxTrick*                        DeathAnim                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGbxTrick*                        DeathFX                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FForceSelection&           force                                                  (Parm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   LocalDirection                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bPauseAnimAtEnd                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   LaunchPitch                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bOverrideGlobalMinPitchAngle                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakHitReactionBlueprintLibrary::AIScriptedHitDeathCustom(class AActor* AIActor, class UGbxTrick* DeathAnim, class UGbxTrick* DeathFX, const struct FForceSelection& force, float LocalDirection, bool bPauseAnimAtEnd, float LaunchPitch, bool bOverrideGlobalMinPitchAngle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakHitReactionBlueprintLibrary", "AIScriptedHitDeathCustom");

	Params::OakHitReactionBlueprintLibrary_AIScriptedHitDeathCustom Parms{};

	Parms.AIActor = AIActor;
	Parms.DeathAnim = DeathAnim;
	Parms.DeathFX = DeathFX;
	Parms.force = std::move(force);
	Parms.LocalDirection = LocalDirection;
	Parms.bPauseAnimAtEnd = bPauseAnimAtEnd;
	Parms.LaunchPitch = LaunchPitch;
	Parms.bOverrideGlobalMinPitchAngle = bOverrideGlobalMinPitchAngle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakHitReactionBlueprintLibrary.AIScriptedHitReaction
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           AIActor                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FForceSelection&           force                                                  (Parm, NoDestructor, NativeAccessSpecifierPublic)
// ELiveHitReaction                        HitReaction                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   LocalDirection                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSkipConditions                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   LaunchPitch                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bOverrideGlobalMinPitchAngle                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakHitReactionBlueprintLibrary::AIScriptedHitReaction(class AActor* AIActor, const struct FForceSelection& force, ELiveHitReaction HitReaction, float LocalDirection, bool bSkipConditions, float LaunchPitch, bool bOverrideGlobalMinPitchAngle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakHitReactionBlueprintLibrary", "AIScriptedHitReaction");

	Params::OakHitReactionBlueprintLibrary_AIScriptedHitReaction Parms{};

	Parms.AIActor = AIActor;
	Parms.force = std::move(force);
	Parms.HitReaction = HitReaction;
	Parms.LocalDirection = LocalDirection;
	Parms.bSkipConditions = bSkipConditions;
	Parms.LaunchPitch = LaunchPitch;
	Parms.bOverrideGlobalMinPitchAngle = bOverrideGlobalMinPitchAngle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakHitReactionBlueprintLibrary.AIScriptedHitReactionFromLocation
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                           AIActor                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FForceSelection&           force                                                  (Parm, NoDestructor, NativeAccessSpecifierPublic)
// ELiveHitReaction                        HitReaction                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   Location                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSkipConditions                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInvert                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   LaunchPitch                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bOverrideGlobalMinPitchAngle                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakHitReactionBlueprintLibrary::AIScriptedHitReactionFromLocation(class AActor* AIActor, const struct FForceSelection& force, ELiveHitReaction HitReaction, const struct FVector& Location, bool bSkipConditions, bool bInvert, float LaunchPitch, bool bOverrideGlobalMinPitchAngle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakHitReactionBlueprintLibrary", "AIScriptedHitReactionFromLocation");

	Params::OakHitReactionBlueprintLibrary_AIScriptedHitReactionFromLocation Parms{};

	Parms.AIActor = AIActor;
	Parms.force = std::move(force);
	Parms.HitReaction = HitReaction;
	Parms.Location = std::move(Location);
	Parms.bSkipConditions = bSkipConditions;
	Parms.bInvert = bInvert;
	Parms.LaunchPitch = LaunchPitch;
	Parms.bOverrideGlobalMinPitchAngle = bOverrideGlobalMinPitchAngle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakHitReactionBlueprintLibrary.BreakOakLiveHitReactionInfo
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FOakLiveHitReactionInfo&   Info                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// ELiveHitReaction*                       ReactionType                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  damage                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  force                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float*                                  LocalDirection                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor**                          Causer                                                 (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGameDataHandleProperty_*               DamageType                                             (Parm, OutParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDamageSourceContainer*          DamageSources                                          (Parm, OutParm, NativeAccessSpecifierPublic)

void UOakHitReactionBlueprintLibrary::BreakOakLiveHitReactionInfo(const struct FOakLiveHitReactionInfo& Info, ELiveHitReaction* ReactionType, float* damage, float* force, float* LocalDirection, class AActor** Causer, FGameDataHandleProperty_* DamageType, struct FDamageSourceContainer* DamageSources)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakHitReactionBlueprintLibrary", "BreakOakLiveHitReactionInfo");

	Params::OakHitReactionBlueprintLibrary_BreakOakLiveHitReactionInfo Parms{};

	Parms.Info = std::move(Info);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ReactionType != nullptr)
		*ReactionType = Parms.ReactionType;

	if (damage != nullptr)
		*damage = Parms.damage;

	if (force != nullptr)
		*force = Parms.force;

	if (LocalDirection != nullptr)
		*LocalDirection = Parms.LocalDirection;

	if (Causer != nullptr)
		*Causer = Parms.Causer;

	if (DamageType != nullptr)
		*DamageType = Parms.DamageType;

	if (DamageSources != nullptr)
		*DamageSources = std::move(Parms.DamageSources);
}


// Function OakGame.OakHitReactionBlueprintLibrary.LockDeathOverride
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           AIActor                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EDeathHitAnim                           DeathAnim                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             reason                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Block                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakHitReactionBlueprintLibrary::LockDeathOverride(class AActor* AIActor, EDeathHitAnim DeathAnim, class FName reason, bool Block)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakHitReactionBlueprintLibrary", "LockDeathOverride");

	Params::OakHitReactionBlueprintLibrary_LockDeathOverride Parms{};

	Parms.AIActor = AIActor;
	Parms.DeathAnim = DeathAnim;
	Parms.reason = reason;
	Parms.Block = Block;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakHitReactionBlueprintLibrary.LockHitReactions
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           AIActor                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ELockedHitReaction                      type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             reason                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Block                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakHitReactionBlueprintLibrary::LockHitReactions(class AActor* AIActor, ELockedHitReaction type, class FName reason, bool Block)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakHitReactionBlueprintLibrary", "LockHitReactions");

	Params::OakHitReactionBlueprintLibrary_LockHitReactions Parms{};

	Parms.AIActor = AIActor;
	Parms.type = type;
	Parms.reason = reason;
	Parms.Block = Block;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakIntrinsicElement.OnIntrinsicElementChanedBP
// (Event, Public, BlueprintEvent)
// Parameters:
// const EOakElementalType                 NewElement                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IOakIntrinsicElement::OnIntrinsicElementChanedBP(const EOakElementalType NewElement)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("OakIntrinsicElement", "OnIntrinsicElementChanedBP");

	Params::OakIntrinsicElement_OnIntrinsicElementChanedBP Parms{};

	Parms.NewElement = NewElement;

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function OakGame.OakIntrinsicElement.OnOwnerElementChanged
// (Native, Public)
// Parameters:
// const EOakElementalType                 NewElement                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IOakIntrinsicElement::OnOwnerElementChanged(const EOakElementalType NewElement)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("OakIntrinsicElement", "OnOwnerElementChanged");

	Params::OakIntrinsicElement_OnOwnerElementChanged Parms{};

	Parms.NewElement = NewElement;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.VaultCardsManager.Server_PurchaseCosmetic
// (Final, Net, NetReliable, Native, Event, Private, NetServer)
// Parameters:
// FGbxDefPtrProperty_                     VaultCard                                              (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CosmeticIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UVaultCardsManager::Server_PurchaseCosmetic(FGbxDefPtrProperty_ VaultCard, int32 CosmeticIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VaultCardsManager", "Server_PurchaseCosmetic");

	Params::VaultCardsManager_Server_PurchaseCosmetic Parms{};

	Parms.VaultCard = VaultCard;
	Parms.CosmeticIndex = CosmeticIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.VaultCardsManager.Server_PurchaseInventoryItem
// (Final, Net, NetReliable, Native, Event, Private, NetServer)
// Parameters:
// FGbxDefPtrProperty_                     VaultCard                                              (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InvItemName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UVaultCardsManager::Server_PurchaseInventoryItem(FGbxDefPtrProperty_ VaultCard, class FName InvItemName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VaultCardsManager", "Server_PurchaseInventoryItem");

	Params::VaultCardsManager_Server_PurchaseInventoryItem Parms{};

	Parms.VaultCard = VaultCard;
	Parms.InvItemName = InvItemName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.WeaponBehavior_Charge.OnRep_ChargeState
// (Final, Native, Protected)
// Parameters:
// uint8                                   PrevChargeState                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWeaponBehavior_Charge::OnRep_ChargeState(uint8 PrevChargeState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WeaponBehavior_Charge", "OnRep_ChargeState");

	Params::WeaponBehavior_Charge_OnRep_ChargeState Parms{};

	Parms.PrevChargeState = PrevChargeState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.ResetAllHUDTutorials
// (Final, Native, Public)

void UOakLocalPlayer::ResetAllHUDTutorials()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "ResetAllHUDTutorials");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.ResetAllMenuTutorialSequences
// (Final, Native, Public)

void UOakLocalPlayer::ResetAllMenuTutorialSequences()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "ResetAllMenuTutorialSequences");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetAudioLanguage
// (Final, Native, Public)
// Parameters:
// const class FString&                    InAudioLanguage                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetAudioLanguage(const class FString& InAudioLanguage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetAudioLanguage");

	Params::OakLocalPlayer_SetAudioLanguage Parms{};

	Parms.InAudioLanguage = std::move(InAudioLanguage);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetAudioPreset
// (Final, Native, Public)
// Parameters:
// EAudioPresetMode                        Mode                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetAudioPreset(EAudioPresetMode Mode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetAudioPreset");

	Params::OakLocalPlayer_SetAudioPreset Parms{};

	Parms.Mode = Mode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetBossMusicTrim
// (Final, Native, Public)
// Parameters:
// float                                   InNewValue                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetBossMusicTrim(float InNewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetBossMusicTrim");

	Params::OakLocalPlayer_SetBossMusicTrim Parms{};

	Parms.InNewValue = InNewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetCameraHeadBobMultiplier
// (Final, Native, Public)
// Parameters:
// float                                   InCameraHeadBobMultiplier                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetCameraHeadBobMultiplier(float InCameraHeadBobMultiplier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetCameraHeadBobMultiplier");

	Params::OakLocalPlayer_SetCameraHeadBobMultiplier Parms{};

	Parms.InCameraHeadBobMultiplier = InCameraHeadBobMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetCanMantleWithForward
// (Final, Native, Public)
// Parameters:
// bool                                    bInCanMantleWithForward                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetCanMantleWithForward(bool bInCanMantleWithForward)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetCanMantleWithForward");

	Params::OakLocalPlayer_SetCanMantleWithForward Parms{};

	Parms.bInCanMantleWithForward = bInCanMantleWithForward;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetCensorContent
// (Final, Native, Public)
// Parameters:
// bool                                    bInCensorContent                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetCensorContent(bool bInCensorContent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetCensorContent");

	Params::OakLocalPlayer_SetCensorContent Parms{};

	Parms.bInCensorContent = bInCensorContent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetCharacterSwitchPromptsEnabled
// (Final, Native, Public)
// Parameters:
// bool                                    bInCharacterSwitchPromptsEnabled                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetCharacterSwitchPromptsEnabled(bool bInCharacterSwitchPromptsEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetCharacterSwitchPromptsEnabled");

	Params::OakLocalPlayer_SetCharacterSwitchPromptsEnabled Parms{};

	Parms.bInCharacterSwitchPromptsEnabled = bInCharacterSwitchPromptsEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetCinematicMusicVolume
// (Final, Native, Public)
// Parameters:
// float                                   InNewValue                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetCinematicMusicVolume(float InNewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetCinematicMusicVolume");

	Params::OakLocalPlayer_SetCinematicMusicVolume Parms{};

	Parms.InNewValue = InNewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetClaptrapVolume
// (Final, Native, Public)
// Parameters:
// float                                   InNewValue                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetClaptrapVolume(float InNewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetClaptrapVolume");

	Params::OakLocalPlayer_SetClaptrapVolume Parms{};

	Parms.InNewValue = InNewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetColorBlindMode
// (Final, Native, Public)
// Parameters:
// EColorBlindMode                         InColorBlindMode                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetColorBlindMode(EColorBlindMode InColorBlindMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetColorBlindMode");

	Params::OakLocalPlayer_SetColorBlindMode Parms{};

	Parms.InColorBlindMode = InColorBlindMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetCombatVoiceVolume
// (Final, Native, Public)
// Parameters:
// float                                   InNewValue                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetCombatVoiceVolume(float InNewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetCombatVoiceVolume");

	Params::OakLocalPlayer_SetCombatVoiceVolume Parms{};

	Parms.InNewValue = InNewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetCompassVerticalIndicatorConfig
// (Final, Native, Public)
// Parameters:
// int32                                   InConfig                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetCompassVerticalIndicatorConfig(int32 InConfig)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetCompassVerticalIndicatorConfig");

	Params::OakLocalPlayer_SetCompassVerticalIndicatorConfig Parms{};

	Parms.InConfig = InConfig;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetControllerADSSnap
// (Final, Native, Public)
// Parameters:
// bool                                    bInControllerADSSnap                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetControllerADSSnap(bool bInControllerADSSnap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetControllerADSSnap");

	Params::OakLocalPlayer_SetControllerADSSnap Parms{};

	Parms.bInControllerADSSnap = bInControllerADSSnap;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetControllerAimAssistEnabled
// (Final, Native, Public)
// Parameters:
// bool                                    bInControllerAimAssistEnabled                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetControllerAimAssistEnabled(bool bInControllerAimAssistEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetControllerAimAssistEnabled");

	Params::OakLocalPlayer_SetControllerAimAssistEnabled Parms{};

	Parms.bInControllerAimAssistEnabled = bInControllerAimAssistEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetCrosshairEnemyColor
// (Final, Native, Public, HasOutParams, HasDefaults)
// Parameters:
// const struct FLinearColor&              InEnemyColor                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetCrosshairEnemyColor(const struct FLinearColor& InEnemyColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetCrosshairEnemyColor");

	Params::OakLocalPlayer_SetCrosshairEnemyColor Parms{};

	Parms.InEnemyColor = std::move(InEnemyColor);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetCrosshairFriendlyColor
// (Final, Native, Public, HasOutParams, HasDefaults)
// Parameters:
// const struct FLinearColor&              InFriendlyColor                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetCrosshairFriendlyColor(const struct FLinearColor& InFriendlyColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetCrosshairFriendlyColor");

	Params::OakLocalPlayer_SetCrosshairFriendlyColor Parms{};

	Parms.InFriendlyColor = std::move(InFriendlyColor);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetCrosshairNeutralColor
// (Final, Native, Public, HasOutParams, HasDefaults)
// Parameters:
// const struct FLinearColor&              InNeutralColor                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetCrosshairNeutralColor(const struct FLinearColor& InNeutralColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetCrosshairNeutralColor");

	Params::OakLocalPlayer_SetCrosshairNeutralColor Parms{};

	Parms.InNeutralColor = std::move(InNeutralColor);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetCrosshairPosition
// (Final, Native, Public)
// Parameters:
// int32                                   InCrosshairPosition                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetCrosshairPosition(int32 InCrosshairPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetCrosshairPosition");

	Params::OakLocalPlayer_SetCrosshairPosition Parms{};

	Parms.InCrosshairPosition = InCrosshairPosition;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetCursorFriction
// (Final, Native, Public)
// Parameters:
// float                                   InCursorFriction                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetCursorFriction(float InCursorFriction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetCursorFriction");

	Params::OakLocalPlayer_SetCursorFriction Parms{};

	Parms.InCursorFriction = InCursorFriction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetCursorMaxIdleTime
// (Final, Native, Public)
// Parameters:
// float                                   InCursorMaxIdleTime                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetCursorMaxIdleTime(float InCursorMaxIdleTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetCursorMaxIdleTime");

	Params::OakLocalPlayer_SetCursorMaxIdleTime Parms{};

	Parms.InCursorMaxIdleTime = InCursorMaxIdleTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetCursorSensitivity
// (Final, Native, Public)
// Parameters:
// float                                   InCursorSensitivity                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetCursorSensitivity(float InCursorSensitivity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetCursorSensitivity");

	Params::OakLocalPlayer_SetCursorSensitivity Parms{};

	Parms.InCursorSensitivity = InCursorSensitivity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetCursorShowIdleFlash
// (Final, Native, Public)
// Parameters:
// bool                                    bInCursorShowIdleFlash                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetCursorShowIdleFlash(bool bInCursorShowIdleFlash)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetCursorShowIdleFlash");

	Params::OakLocalPlayer_SetCursorShowIdleFlash Parms{};

	Parms.bInCursorShowIdleFlash = bInCursorShowIdleFlash;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetCursorXAxisInvert
// (Final, Native, Public)
// Parameters:
// bool                                    bInCursorXAxisInvert                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetCursorXAxisInvert(bool bInCursorXAxisInvert)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetCursorXAxisInvert");

	Params::OakLocalPlayer_SetCursorXAxisInvert Parms{};

	Parms.bInCursorXAxisInvert = bInCursorXAxisInvert;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetCursorYAxisInvert
// (Final, Native, Public)
// Parameters:
// bool                                    bInCursorYAxisInvert                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetCursorYAxisInvert(bool bInCursorYAxisInvert)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetCursorYAxisInvert");

	Params::OakLocalPlayer_SetCursorYAxisInvert Parms{};

	Parms.bInCursorYAxisInvert = bInCursorYAxisInvert;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetDashEnabled
// (Final, Native, Public)
// Parameters:
// bool                                    bInEnableDash                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetDashEnabled(bool bInEnableDash)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetDashEnabled");

	Params::OakLocalPlayer_SetDashEnabled Parms{};

	Parms.bInEnableDash = bInEnableDash;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetDisplayDamageNumbers
// (Final, Native, Public)
// Parameters:
// bool                                    bEnabled                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetDisplayDamageNumbers(bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetDisplayDamageNumbers");

	Params::OakLocalPlayer_SetDisplayDamageNumbers Parms{};

	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetEchoPathVisibilityDurationType
// (Final, Native, Public)
// Parameters:
// uint32                                  InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetEchoPathVisibilityDurationType(uint32 InType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetEchoPathVisibilityDurationType");

	Params::OakLocalPlayer_SetEchoPathVisibilityDurationType Parms{};

	Parms.InType = InType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetEnableJcmsControl
// (Final, Exec, Native, Public)
// Parameters:
// EEnableJcmsControl                      InEnable                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetEnableJcmsControl(EEnableJcmsControl InEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetEnableJcmsControl");

	Params::OakLocalPlayer_SetEnableJcmsControl Parms{};

	Parms.InEnable = InEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetEQMode
// (Final, Native, Public)
// Parameters:
// EAudioEQMode                            Mode                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetEQMode(EAudioEQMode Mode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetEQMode");

	Params::OakLocalPlayer_SetEQMode Parms{};

	Parms.Mode = Mode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetExplosionsTrim
// (Final, Native, Public)
// Parameters:
// float                                   InNewValue                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetExplosionsTrim(float InNewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetExplosionsTrim");

	Params::OakLocalPlayer_SetExplosionsTrim Parms{};

	Parms.InNewValue = InNewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetFavoriteFriendsNotificationsEnabled
// (Final, Native, Public)
// Parameters:
// bool                                    bEnabled                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetFavoriteFriendsNotificationsEnabled(bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetFavoriteFriendsNotificationsEnabled");

	Params::OakLocalPlayer_SetFavoriteFriendsNotificationsEnabled Parms{};

	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetForceMono
// (Final, Native, Public)
// Parameters:
// bool                                    bIsMono                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetForceMono(bool bIsMono)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetForceMono");

	Params::OakLocalPlayer_SetForceMono Parms{};

	Parms.bIsMono = bIsMono;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetFriendSyncEnabled
// (Final, Native, Public)
// Parameters:
// bool                                    bInFriendSyncEnabled                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetFriendSyncEnabled(bool bInFriendSyncEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetFriendSyncEnabled");

	Params::OakLocalPlayer_SetFriendSyncEnabled Parms{};

	Parms.bInFriendSyncEnabled = bInFriendSyncEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetGameMusicVolume
// (Final, Native, Public)
// Parameters:
// float                                   InNewValue                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetGameMusicVolume(float InNewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetGameMusicVolume");

	Params::OakLocalPlayer_SetGameMusicVolume Parms{};

	Parms.InNewValue = InNewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetGrapplePitchCorrection
// (Final, Native, Public)
// Parameters:
// bool                                    bInGrapplePitchCorrection                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetGrapplePitchCorrection(bool bInGrapplePitchCorrection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetGrapplePitchCorrection");

	Params::OakLocalPlayer_SetGrapplePitchCorrection Parms{};

	Parms.bInGrapplePitchCorrection = bInGrapplePitchCorrection;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetHasSeenHUDTutorial
// (Final, Native, Public, HasOutParams, HasDefaults)
// Parameters:
// const struct FSName&                    InHUDTutorial                                          (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetHasSeenHUDTutorial(const struct FSName& InHUDTutorial)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetHasSeenHUDTutorial");

	Params::OakLocalPlayer_SetHasSeenHUDTutorial Parms{};

	Parms.InHUDTutorial = std::move(InHUDTutorial);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetHasSeenMenuTutorialSequence
// (Final, Native, Public, HasOutParams)
// Parameters:
// const class FName&                      InMenuTutorial                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetHasSeenMenuTutorialSequence(const class FName& InMenuTutorial)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetHasSeenMenuTutorialSequence");

	Params::OakLocalPlayer_SetHasSeenMenuTutorialSequence Parms{};

	Parms.InMenuTutorial = InMenuTutorial;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetHidePromotionalContentEnabled
// (Final, Native, Public)
// Parameters:
// bool                                    bEnabled                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetHidePromotionalContentEnabled(bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetHidePromotionalContentEnabled");

	Params::OakLocalPlayer_SetHidePromotionalContentEnabled Parms{};

	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetHighContrastCrosshairActive
// (Final, Native, Public)
// Parameters:
// bool                                    bInHighContrastCrosshairActive                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetHighContrastCrosshairActive(bool bInHighContrastCrosshairActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetHighContrastCrosshairActive");

	Params::OakLocalPlayer_SetHighContrastCrosshairActive Parms{};

	Parms.bInHighContrastCrosshairActive = bInHighContrastCrosshairActive;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetHighContrastHUDActive
// (Final, Native, Public)
// Parameters:
// bool                                    bInHighContrastHUDActive                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetHighContrastHUDActive(bool bInHighContrastHUDActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetHighContrastHUDActive");

	Params::OakLocalPlayer_SetHighContrastHUDActive Parms{};

	Parms.bInHighContrastHUDActive = bInHighContrastHUDActive;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetHorizontalADSSensitivity
// (Final, Native, Public)
// Parameters:
// float                                   InHorizontalADSSensitivity                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetHorizontalADSSensitivity(float InHorizontalADSSensitivity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetHorizontalADSSensitivity");

	Params::OakLocalPlayer_SetHorizontalADSSensitivity Parms{};

	Parms.InHorizontalADSSensitivity = InHorizontalADSSensitivity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetHorizontalJcmsADSSensitivity
// (Final, Exec, Native, Public)
// Parameters:
// float                                   InHorizontalADSSensitivity                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetHorizontalJcmsADSSensitivity(float InHorizontalADSSensitivity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetHorizontalJcmsADSSensitivity");

	Params::OakLocalPlayer_SetHorizontalJcmsADSSensitivity Parms{};

	Parms.InHorizontalADSSensitivity = InHorizontalADSSensitivity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetHorizontalJcmsLookSensitivity
// (Final, Exec, Native, Public)
// Parameters:
// float                                   InHorizontalLookSensitivity                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetHorizontalJcmsLookSensitivity(float InHorizontalLookSensitivity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetHorizontalJcmsLookSensitivity");

	Params::OakLocalPlayer_SetHorizontalJcmsLookSensitivity Parms{};

	Parms.InHorizontalLookSensitivity = InHorizontalLookSensitivity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetHorizontalLookSensitivity
// (Final, Native, Public)
// Parameters:
// float                                   InHorizontalLookSensitivity                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetHorizontalLookSensitivity(float InHorizontalLookSensitivity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetHorizontalLookSensitivity");

	Params::OakLocalPlayer_SetHorizontalLookSensitivity Parms{};

	Parms.InHorizontalLookSensitivity = InHorizontalLookSensitivity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetHorizontalMotionControlsADSSensitivity
// (Final, Exec, Native, Public)
// Parameters:
// float                                   InHorizontalADSSensitivity                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetHorizontalMotionControlsADSSensitivity(float InHorizontalADSSensitivity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetHorizontalMotionControlsADSSensitivity");

	Params::OakLocalPlayer_SetHorizontalMotionControlsADSSensitivity Parms{};

	Parms.InHorizontalADSSensitivity = InHorizontalADSSensitivity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetHorizontalMotionControlsLookSensitivity
// (Final, Exec, Native, Public)
// Parameters:
// float                                   InHorizontalLookSensitivity                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetHorizontalMotionControlsLookSensitivity(float InHorizontalLookSensitivity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetHorizontalMotionControlsLookSensitivity");

	Params::OakLocalPlayer_SetHorizontalMotionControlsLookSensitivity Parms{};

	Parms.InHorizontalLookSensitivity = InHorizontalLookSensitivity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetHorizontalSafeAreaRatio
// (Final, Native, Public)
// Parameters:
// float                                   InHorizontalSafeAreaRatio                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetHorizontalSafeAreaRatio(float InHorizontalSafeAreaRatio)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetHorizontalSafeAreaRatio");

	Params::OakLocalPlayer_SetHorizontalSafeAreaRatio Parms{};

	Parms.InHorizontalSafeAreaRatio = InHorizontalSafeAreaRatio;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetHUDFontScaling
// (Final, Native, Public)
// Parameters:
// int32                                   InFontScaling                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetHUDFontScaling(int32 InFontScaling)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetHUDFontScaling");

	Params::OakLocalPlayer_SetHUDFontScaling Parms{};

	Parms.InFontScaling = InFontScaling;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetHUDTutorialsEnabled
// (Final, Native, Public)
// Parameters:
// bool                                    bHUDTutorialsEnabled                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetHUDTutorialsEnabled(bool bHUDTutorialsEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetHUDTutorialsEnabled");

	Params::OakLocalPlayer_SetHUDTutorialsEnabled Parms{};

	Parms.bHUDTutorialsEnabled = bHUDTutorialsEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetIncomingDamageTrim
// (Final, Native, Public)
// Parameters:
// float                                   InNewValue                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetIncomingDamageTrim(float InNewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetIncomingDamageTrim");

	Params::OakLocalPlayer_SetIncomingDamageTrim Parms{};

	Parms.InNewValue = InNewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetIsControllerAimRecenteringEnabled
// (Final, Native, Public)
// Parameters:
// bool                                    bInControllerAimRecenteringEnabled                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetIsControllerAimRecenteringEnabled(bool bInControllerAimRecenteringEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetIsControllerAimRecenteringEnabled");

	Params::OakLocalPlayer_SetIsControllerAimRecenteringEnabled Parms{};

	Parms.bInControllerAimRecenteringEnabled = bInControllerAimRecenteringEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetLeftStickAxialDeadZoneInner
// (Final, Native, Public)
// Parameters:
// float                                   InLeftStickAxialDeadZoneInner                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetLeftStickAxialDeadZoneInner(float InLeftStickAxialDeadZoneInner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetLeftStickAxialDeadZoneInner");

	Params::OakLocalPlayer_SetLeftStickAxialDeadZoneInner Parms{};

	Parms.InLeftStickAxialDeadZoneInner = InLeftStickAxialDeadZoneInner;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetLeftStickAxialDeadZoneOuter
// (Final, Native, Public)
// Parameters:
// float                                   InLeftStickAxialDeadZoneOuter                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetLeftStickAxialDeadZoneOuter(float InLeftStickAxialDeadZoneOuter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetLeftStickAxialDeadZoneOuter");

	Params::OakLocalPlayer_SetLeftStickAxialDeadZoneOuter Parms{};

	Parms.InLeftStickAxialDeadZoneOuter = InLeftStickAxialDeadZoneOuter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetLeftStickRadialDeadZoneInner
// (Final, Native, Public)
// Parameters:
// float                                   InLeftStickRadialDeadZoneInner                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetLeftStickRadialDeadZoneInner(float InLeftStickRadialDeadZoneInner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetLeftStickRadialDeadZoneInner");

	Params::OakLocalPlayer_SetLeftStickRadialDeadZoneInner Parms{};

	Parms.InLeftStickRadialDeadZoneInner = InLeftStickRadialDeadZoneInner;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetLeftStickRadialDeadZoneOuter
// (Final, Native, Public)
// Parameters:
// float                                   InLeftStickRadialDeadZoneOuter                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetLeftStickRadialDeadZoneOuter(float InLeftStickRadialDeadZoneOuter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetLeftStickRadialDeadZoneOuter");

	Params::OakLocalPlayer_SetLeftStickRadialDeadZoneOuter Parms{};

	Parms.InLeftStickRadialDeadZoneOuter = InLeftStickRadialDeadZoneOuter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetLookXAxisInvert_Gamepad
// (Final, Native, Public)
// Parameters:
// bool                                    bInLookXAxisInvert_Gamepad                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetLookXAxisInvert_Gamepad(bool bInLookXAxisInvert_Gamepad)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetLookXAxisInvert_Gamepad");

	Params::OakLocalPlayer_SetLookXAxisInvert_Gamepad Parms{};

	Parms.bInLookXAxisInvert_Gamepad = bInLookXAxisInvert_Gamepad;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetLookXAxisInvert_KBM
// (Final, Native, Public)
// Parameters:
// bool                                    bInLookXAxisInvert_KBM                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetLookXAxisInvert_KBM(bool bInLookXAxisInvert_KBM)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetLookXAxisInvert_KBM");

	Params::OakLocalPlayer_SetLookXAxisInvert_KBM Parms{};

	Parms.bInLookXAxisInvert_KBM = bInLookXAxisInvert_KBM;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetLookYAxisInvert_Gamepad
// (Final, Native, Public)
// Parameters:
// bool                                    bInLookYAxisInvert_Gamepad                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetLookYAxisInvert_Gamepad(bool bInLookYAxisInvert_Gamepad)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetLookYAxisInvert_Gamepad");

	Params::OakLocalPlayer_SetLookYAxisInvert_Gamepad Parms{};

	Parms.bInLookYAxisInvert_Gamepad = bInLookYAxisInvert_Gamepad;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetLookYAxisInvert_KBM
// (Final, Native, Public)
// Parameters:
// bool                                    bInLookYAxisInvert_KBM                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetLookYAxisInvert_KBM(bool bInLookYAxisInvert_KBM)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetLookYAxisInvert_KBM");

	Params::OakLocalPlayer_SetLookYAxisInvert_KBM Parms{};

	Parms.bInLookYAxisInvert_KBM = bInLookYAxisInvert_KBM;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetMapViewerZoomSpeed
// (Final, Native, Public)
// Parameters:
// float                                   InNewValue                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetMapViewerZoomSpeed(float InNewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetMapViewerZoomSpeed");

	Params::OakLocalPlayer_SetMapViewerZoomSpeed Parms{};

	Parms.InNewValue = InNewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetMenuFontScaling
// (Final, Native, Public)
// Parameters:
// int32                                   InFontScaling                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetMenuFontScaling(int32 InFontScaling)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetMenuFontScaling");

	Params::OakLocalPlayer_SetMenuFontScaling Parms{};

	Parms.InFontScaling = InFontScaling;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetMenuMusicVolume
// (Final, Native, Public)
// Parameters:
// float                                   InNewValue                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetMenuMusicVolume(float InNewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetMenuMusicVolume");

	Params::OakLocalPlayer_SetMenuMusicVolume Parms{};

	Parms.InNewValue = InNewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetMenuTutorialsEnabled
// (Final, Native, Public)
// Parameters:
// bool                                    bMenuTutorialsEnabled                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetMenuTutorialsEnabled(bool bMenuTutorialsEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetMenuTutorialsEnabled");

	Params::OakLocalPlayer_SetMenuTutorialsEnabled Parms{};

	Parms.bMenuTutorialsEnabled = bMenuTutorialsEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetMotionControlsSetting
// (Final, Exec, Native, Public)
// Parameters:
// EMotionControlsSetting                  SettingIn                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetMotionControlsSetting(EMotionControlsSetting SettingIn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetMotionControlsSetting");

	Params::OakLocalPlayer_SetMotionControlsSetting Parms{};

	Parms.SettingIn = SettingIn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetMouseADSSnap
// (Final, Native, Public)
// Parameters:
// bool                                    bInMouseADSSnap                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetMouseADSSnap(bool bInMouseADSSnap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetMouseADSSnap");

	Params::OakLocalPlayer_SetMouseADSSnap Parms{};

	Parms.bInMouseADSSnap = bInMouseADSSnap;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetMoveXAxisInvert_Gamepad
// (Final, Native, Public)
// Parameters:
// bool                                    bInMoveXAxisInvert_Gamepad                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetMoveXAxisInvert_Gamepad(bool bInMoveXAxisInvert_Gamepad)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetMoveXAxisInvert_Gamepad");

	Params::OakLocalPlayer_SetMoveXAxisInvert_Gamepad Parms{};

	Parms.bInMoveXAxisInvert_Gamepad = bInMoveXAxisInvert_Gamepad;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetMoveXAxisInvert_KBM
// (Final, Native, Public)
// Parameters:
// bool                                    bInMoveXAxisInvert_KBM                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetMoveXAxisInvert_KBM(bool bInMoveXAxisInvert_KBM)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetMoveXAxisInvert_KBM");

	Params::OakLocalPlayer_SetMoveXAxisInvert_KBM Parms{};

	Parms.bInMoveXAxisInvert_KBM = bInMoveXAxisInvert_KBM;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetMoveYAxisInvert_Gamepad
// (Final, Native, Public)
// Parameters:
// bool                                    bInMoveYAxisInvert_Gamepad                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetMoveYAxisInvert_Gamepad(bool bInMoveYAxisInvert_Gamepad)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetMoveYAxisInvert_Gamepad");

	Params::OakLocalPlayer_SetMoveYAxisInvert_Gamepad Parms{};

	Parms.bInMoveYAxisInvert_Gamepad = bInMoveYAxisInvert_Gamepad;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetMoveYAxisInvert_KBM
// (Final, Native, Public)
// Parameters:
// bool                                    bInMoveYAxisInvert_KBM                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetMoveYAxisInvert_KBM(bool bInMoveYAxisInvert_KBM)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetMoveYAxisInvert_KBM");

	Params::OakLocalPlayer_SetMoveYAxisInvert_KBM Parms{};

	Parms.bInMoveYAxisInvert_KBM = bInMoveYAxisInvert_KBM;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetOnFootGamepadStickPreset
// (Final, Native, Public)
// Parameters:
// const class FString&                    InOnFootGamepadStickPreset                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetOnFootGamepadStickPreset(const class FString& InOnFootGamepadStickPreset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetOnFootGamepadStickPreset");

	Params::OakLocalPlayer_SetOnFootGamepadStickPreset Parms{};

	Parms.InOnFootGamepadStickPreset = std::move(InOnFootGamepadStickPreset);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetOutgoingDamageTrim
// (Final, Native, Public)
// Parameters:
// float                                   InNewValue                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetOutgoingDamageTrim(float InNewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetOutgoingDamageTrim");

	Params::OakLocalPlayer_SetOutgoingDamageTrim Parms{};

	Parms.InNewValue = InNewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetPlayerCalloutsTrim
// (Final, Native, Public)
// Parameters:
// float                                   InNewValue                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetPlayerCalloutsTrim(float InNewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetPlayerCalloutsTrim");

	Params::OakLocalPlayer_SetPlayerCalloutsTrim Parms{};

	Parms.InNewValue = InNewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetPlayerEffortsTrim
// (Final, Native, Public)
// Parameters:
// float                                   InNewValue                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetPlayerEffortsTrim(float InNewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetPlayerEffortsTrim");

	Params::OakLocalPlayer_SetPlayerEffortsTrim Parms{};

	Parms.InNewValue = InNewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetPlayerIdleLinesTrim
// (Final, Native, Public)
// Parameters:
// float                                   InNewValue                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetPlayerIdleLinesTrim(float InNewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetPlayerIdleLinesTrim");

	Params::OakLocalPlayer_SetPlayerIdleLinesTrim Parms{};

	Parms.InNewValue = InNewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetPlayerVoiceVolume
// (Final, Native, Public)
// Parameters:
// float                                   InNewValue                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetPlayerVoiceVolume(float InNewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetPlayerVoiceVolume");

	Params::OakLocalPlayer_SetPlayerVoiceVolume Parms{};

	Parms.InNewValue = InNewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetPlayerWeaponTrim
// (Final, Native, Public)
// Parameters:
// float                                   InNewValue                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetPlayerWeaponTrim(float InNewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetPlayerWeaponTrim");

	Params::OakLocalPlayer_SetPlayerWeaponTrim Parms{};

	Parms.InNewValue = InNewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetProfanityFilterEnabled
// (Final, Native, Public)
// Parameters:
// bool                                    bEnabled                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetProfanityFilterEnabled(bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetProfanityFilterEnabled");

	Params::OakLocalPlayer_SetProfanityFilterEnabled Parms{};

	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetPushToTalkEnabled
// (Final, Native, Public)
// Parameters:
// bool                                    bInPushToTalkEnabled                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetPushToTalkEnabled(bool bInPushToTalkEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetPushToTalkEnabled");

	Params::OakLocalPlayer_SetPushToTalkEnabled Parms{};

	Parms.bInPushToTalkEnabled = bInPushToTalkEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetRadarDisplayMode
// (Final, Native, Public)
// Parameters:
// int32                                   InRadarDisplayMode                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetRadarDisplayMode(int32 InRadarDisplayMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetRadarDisplayMode");

	Params::OakLocalPlayer_SetRadarDisplayMode Parms{};

	Parms.InRadarDisplayMode = InRadarDisplayMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetRightStickAxialDeadZoneInner
// (Final, Native, Public)
// Parameters:
// float                                   InRightStickAxialDeadZoneInner                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetRightStickAxialDeadZoneInner(float InRightStickAxialDeadZoneInner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetRightStickAxialDeadZoneInner");

	Params::OakLocalPlayer_SetRightStickAxialDeadZoneInner Parms{};

	Parms.InRightStickAxialDeadZoneInner = InRightStickAxialDeadZoneInner;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetRightStickAxialDeadZoneOuter
// (Final, Native, Public)
// Parameters:
// float                                   InRightStickAxialDeadZoneOuter                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetRightStickAxialDeadZoneOuter(float InRightStickAxialDeadZoneOuter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetRightStickAxialDeadZoneOuter");

	Params::OakLocalPlayer_SetRightStickAxialDeadZoneOuter Parms{};

	Parms.InRightStickAxialDeadZoneOuter = InRightStickAxialDeadZoneOuter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetRightStickRadialDeadZoneInner
// (Final, Native, Public)
// Parameters:
// float                                   InRightStickRadialDeadZoneInner                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetRightStickRadialDeadZoneInner(float InRightStickRadialDeadZoneInner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetRightStickRadialDeadZoneInner");

	Params::OakLocalPlayer_SetRightStickRadialDeadZoneInner Parms{};

	Parms.InRightStickRadialDeadZoneInner = InRightStickRadialDeadZoneInner;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetRightStickRadialDeadZoneOuter
// (Final, Native, Public)
// Parameters:
// float                                   InRightStickRadialDeadZoneOuter                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetRightStickRadialDeadZoneOuter(float InRightStickRadialDeadZoneOuter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetRightStickRadialDeadZoneOuter");

	Params::OakLocalPlayer_SetRightStickRadialDeadZoneOuter Parms{};

	Parms.InRightStickRadialDeadZoneOuter = InRightStickRadialDeadZoneOuter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetShiftProfileVisibility
// (Final, Native, Public)
// Parameters:
// bool                                    bInProfileVisibility                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetShiftProfileVisibility(bool bInProfileVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetShiftProfileVisibility");

	Params::OakLocalPlayer_SetShiftProfileVisibility Parms{};

	Parms.bInProfileVisibility = bInProfileVisibility;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetStreamerModeLocalEnabled
// (Final, Native, Public)
// Parameters:
// bool                                    bEnabled                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetStreamerModeLocalEnabled(bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetStreamerModeLocalEnabled");

	Params::OakLocalPlayer_SetStreamerModeLocalEnabled Parms{};

	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetStreamerModeRemoteEnabled
// (Final, Native, Public)
// Parameters:
// bool                                    bEnabled                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetStreamerModeRemoteEnabled(bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetStreamerModeRemoteEnabled");

	Params::OakLocalPlayer_SetStreamerModeRemoteEnabled Parms{};

	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetSubtitleBackgroundColor
// (Final, Native, Public, HasOutParams, HasDefaults)
// Parameters:
// const struct FLinearColor&              InSubtitleBackgroundColor                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetSubtitleBackgroundColor(const struct FLinearColor& InSubtitleBackgroundColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetSubtitleBackgroundColor");

	Params::OakLocalPlayer_SetSubtitleBackgroundColor Parms{};

	Parms.InSubtitleBackgroundColor = std::move(InSubtitleBackgroundColor);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetSubtitleBackgroundEnabled
// (Final, Native, Public)
// Parameters:
// bool                                    bInSubtitleBackgroundEnabled                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetSubtitleBackgroundEnabled(bool bInSubtitleBackgroundEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetSubtitleBackgroundEnabled");

	Params::OakLocalPlayer_SetSubtitleBackgroundEnabled Parms{};

	Parms.bInSubtitleBackgroundEnabled = bInSubtitleBackgroundEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetSubtitleBackgroundOpacity
// (Final, Native, Public)
// Parameters:
// int32                                   InSubtitleBackgroundOpacity                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetSubtitleBackgroundOpacity(int32 InSubtitleBackgroundOpacity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetSubtitleBackgroundOpacity");

	Params::OakLocalPlayer_SetSubtitleBackgroundOpacity Parms{};

	Parms.InSubtitleBackgroundOpacity = InSubtitleBackgroundOpacity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetSubtitleColor
// (Final, Native, Public, HasOutParams, HasDefaults)
// Parameters:
// const struct FLinearColor&              InSubtitleColor                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetSubtitleColor(const struct FLinearColor& InSubtitleColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetSubtitleColor");

	Params::OakLocalPlayer_SetSubtitleColor Parms{};

	Parms.InSubtitleColor = std::move(InSubtitleColor);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetSubtitlesEnabled
// (Final, Native, Public)
// Parameters:
// bool                                    bInSubtitlesEnabled                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetSubtitlesEnabled(bool bInSubtitlesEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetSubtitlesEnabled");

	Params::OakLocalPlayer_SetSubtitlesEnabled Parms{};

	Parms.bInSubtitlesEnabled = bInSubtitlesEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetSubtitleSpeakerColor
// (Final, Native, Public, HasOutParams, HasDefaults)
// Parameters:
// const struct FLinearColor&              InSpeakerColor                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetSubtitleSpeakerColor(const struct FLinearColor& InSpeakerColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetSubtitleSpeakerColor");

	Params::OakLocalPlayer_SetSubtitleSpeakerColor Parms{};

	Parms.InSpeakerColor = std::move(InSpeakerColor);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetSubtitleSpeakerEnabled
// (Final, Native, Public)
// Parameters:
// bool                                    bInSubtitleSpeakerEnabled                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetSubtitleSpeakerEnabled(bool bInSubtitleSpeakerEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetSubtitleSpeakerEnabled");

	Params::OakLocalPlayer_SetSubtitleSpeakerEnabled Parms{};

	Parms.bInSubtitleSpeakerEnabled = bInSubtitleSpeakerEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetSubtitleTextOpacity
// (Final, Native, Public)
// Parameters:
// float                                   bInSubtitleTextOpacity                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetSubtitleTextOpacity(float bInSubtitleTextOpacity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetSubtitleTextOpacity");

	Params::OakLocalPlayer_SetSubtitleTextOpacity Parms{};

	Parms.bInSubtitleTextOpacity = bInSubtitleTextOpacity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetSubtitleTextSize
// (Final, Native, Public)
// Parameters:
// int32                                   InSubtitleTextSize                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetSubtitleTextSize(int32 InSubtitleTextSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetSubtitleTextSize");

	Params::OakLocalPlayer_SetSubtitleTextSize Parms{};

	Parms.InSubtitleTextSize = InSubtitleTextSize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetTextChatEnabled
// (Final, Native, Public)
// Parameters:
// bool                                    bInTextChatEnabled                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetTextChatEnabled(bool bInTextChatEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetTextChatEnabled");

	Params::OakLocalPlayer_SetTextChatEnabled Parms{};

	Parms.bInTextChatEnabled = bInTextChatEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetToggleCrouch
// (Final, Native, Public)
// Parameters:
// bool                                    bInToggleCrouch                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetToggleCrouch(bool bInToggleCrouch)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetToggleCrouch");

	Params::OakLocalPlayer_SetToggleCrouch Parms{};

	Parms.bInToggleCrouch = bInToggleCrouch;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetToggleSprint
// (Final, Native, Public)
// Parameters:
// bool                                    bInToggleSprint                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetToggleSprint(bool bInToggleSprint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetToggleSprint");

	Params::OakLocalPlayer_SetToggleSprint Parms{};

	Parms.bInToggleSprint = bInToggleSprint;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetToggleZoom
// (Final, Native, Public)
// Parameters:
// bool                                    bInToggleZoom                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetToggleZoom(bool bInToggleZoom)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetToggleZoom");

	Params::OakLocalPlayer_SetToggleZoom Parms{};

	Parms.bInToggleZoom = bInToggleZoom;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetUITrim
// (Final, Native, Public)
// Parameters:
// float                                   InNewValue                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetUITrim(float InNewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetUITrim");

	Params::OakLocalPlayer_SetUITrim Parms{};

	Parms.InNewValue = InNewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetUseBoldSubtitlesEnabled
// (Final, Native, Public)
// Parameters:
// bool                                    bInUseBoldSubtitles                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetUseBoldSubtitlesEnabled(bool bInUseBoldSubtitles)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetUseBoldSubtitlesEnabled");

	Params::OakLocalPlayer_SetUseBoldSubtitlesEnabled Parms{};

	Parms.bInUseBoldSubtitles = bInUseBoldSubtitles;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetUseControllerSpeaker
// (Final, Native, Public)
// Parameters:
// bool                                    bShouldUse                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetUseControllerSpeaker(bool bShouldUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetUseControllerSpeaker");

	Params::OakLocalPlayer_SetUseControllerSpeaker Parms{};

	Parms.bShouldUse = bShouldUse;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetUseToggleGlideGamepad
// (Final, Native, Public)
// Parameters:
// bool                                    bInUseToggleGlideGamepad                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetUseToggleGlideGamepad(bool bInUseToggleGlideGamepad)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetUseToggleGlideGamepad");

	Params::OakLocalPlayer_SetUseToggleGlideGamepad Parms{};

	Parms.bInUseToggleGlideGamepad = bInUseToggleGlideGamepad;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetUseToggleGlideKBM
// (Final, Native, Public)
// Parameters:
// bool                                    bInUseToggleGlideKBM                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetUseToggleGlideKBM(bool bInUseToggleGlideKBM)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetUseToggleGlideKBM");

	Params::OakLocalPlayer_SetUseToggleGlideKBM Parms{};

	Parms.bInUseToggleGlideKBM = bInUseToggleGlideKBM;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetVehicleFOV
// (Final, Native, Public)
// Parameters:
// float                                   InVehicleFOV                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetVehicleFOV(float InVehicleFOV)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetVehicleFOV");

	Params::OakLocalPlayer_SetVehicleFOV Parms{};

	Parms.InVehicleFOV = InVehicleFOV;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetVehicleGamepadStickPreset
// (Final, Native, Public)
// Parameters:
// const class FString&                    InVehicleGamepadStickPreset                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetVehicleGamepadStickPreset(const class FString& InVehicleGamepadStickPreset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetVehicleGamepadStickPreset");

	Params::OakLocalPlayer_SetVehicleGamepadStickPreset Parms{};

	Parms.InVehicleGamepadStickPreset = std::move(InVehicleGamepadStickPreset);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetVerticalADSSensitivity
// (Final, Native, Public)
// Parameters:
// float                                   InVerticalADSSensitivity                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetVerticalADSSensitivity(float InVerticalADSSensitivity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetVerticalADSSensitivity");

	Params::OakLocalPlayer_SetVerticalADSSensitivity Parms{};

	Parms.InVerticalADSSensitivity = InVerticalADSSensitivity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetVerticalJcmsADSSensitivity
// (Final, Exec, Native, Public)
// Parameters:
// float                                   InVerticalADSSensitivity                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetVerticalJcmsADSSensitivity(float InVerticalADSSensitivity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetVerticalJcmsADSSensitivity");

	Params::OakLocalPlayer_SetVerticalJcmsADSSensitivity Parms{};

	Parms.InVerticalADSSensitivity = InVerticalADSSensitivity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetVerticalJcmsLookSensitivity
// (Final, Exec, Native, Public)
// Parameters:
// float                                   InVerticalLookSensitivity                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetVerticalJcmsLookSensitivity(float InVerticalLookSensitivity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetVerticalJcmsLookSensitivity");

	Params::OakLocalPlayer_SetVerticalJcmsLookSensitivity Parms{};

	Parms.InVerticalLookSensitivity = InVerticalLookSensitivity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetVerticalLookSensitivity
// (Final, Native, Public)
// Parameters:
// float                                   InVerticalLookSensitivity                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetVerticalLookSensitivity(float InVerticalLookSensitivity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetVerticalLookSensitivity");

	Params::OakLocalPlayer_SetVerticalLookSensitivity Parms{};

	Parms.InVerticalLookSensitivity = InVerticalLookSensitivity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetVerticalMotionControlsADSSensitivity
// (Final, Exec, Native, Public)
// Parameters:
// float                                   InVerticalADSSensitivity                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetVerticalMotionControlsADSSensitivity(float InVerticalADSSensitivity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetVerticalMotionControlsADSSensitivity");

	Params::OakLocalPlayer_SetVerticalMotionControlsADSSensitivity Parms{};

	Parms.InVerticalADSSensitivity = InVerticalADSSensitivity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetVerticalMotionControlsLookSensitivity
// (Final, Exec, Native, Public)
// Parameters:
// float                                   InVerticalLookSensitivity                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetVerticalMotionControlsLookSensitivity(float InVerticalLookSensitivity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetVerticalMotionControlsLookSensitivity");

	Params::OakLocalPlayer_SetVerticalMotionControlsLookSensitivity Parms{};

	Parms.InVerticalLookSensitivity = InVerticalLookSensitivity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetVerticalSafeAreaRatio
// (Final, Native, Public)
// Parameters:
// float                                   InVerticalSafeAreaRatio                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetVerticalSafeAreaRatio(float InVerticalSafeAreaRatio)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetVerticalSafeAreaRatio");

	Params::OakLocalPlayer_SetVerticalSafeAreaRatio Parms{};

	Parms.InVerticalSafeAreaRatio = InVerticalSafeAreaRatio;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetVoiceChatEnabled
// (Final, Native, Public)
// Parameters:
// bool                                    bInVoiceChatEnabled                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetVoiceChatEnabled(bool bInVoiceChatEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetVoiceChatEnabled");

	Params::OakLocalPlayer_SetVoiceChatEnabled Parms{};

	Parms.bInVoiceChatEnabled = bInVoiceChatEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetVoiceChatVolume
// (Final, Native, Public)
// Parameters:
// float                                   InVoiceChatVolume                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetVoiceChatVolume(float InVoiceChatVolume)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetVoiceChatVolume");

	Params::OakLocalPlayer_SetVoiceChatVolume Parms{};

	Parms.InVoiceChatVolume = InVoiceChatVolume;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.GetAudioLanguage
// (Final, Native, Public, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UOakLocalPlayer::GetAudioLanguage() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetAudioLanguage");

	Params::OakLocalPlayer_GetAudioLanguage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.GetCameraHeadBobMultiplier
// (Final, Native, Public, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UOakLocalPlayer::GetCameraHeadBobMultiplier() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetCameraHeadBobMultiplier");

	Params::OakLocalPlayer_GetCameraHeadBobMultiplier Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.GetCanMantleWithForward
// (Final, Native, Public, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOakLocalPlayer::GetCanMantleWithForward() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetCanMantleWithForward");

	Params::OakLocalPlayer_GetCanMantleWithForward Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.GetCensorContent
// (Final, Native, Public, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOakLocalPlayer::GetCensorContent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetCensorContent");

	Params::OakLocalPlayer_GetCensorContent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.GetCharacterSwitchPromptsEnabled
// (Final, Native, Public, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOakLocalPlayer::GetCharacterSwitchPromptsEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetCharacterSwitchPromptsEnabled");

	Params::OakLocalPlayer_GetCharacterSwitchPromptsEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.GetColorBlindMode
// (Final, Native, Public, Const)
// Parameters:
// EColorBlindMode                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EColorBlindMode UOakLocalPlayer::GetColorBlindMode() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetColorBlindMode");

	Params::OakLocalPlayer_GetColorBlindMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.GetCompassVerticalIndicatorConfig
// (Final, Native, Public, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UOakLocalPlayer::GetCompassVerticalIndicatorConfig() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetCompassVerticalIndicatorConfig");

	Params::OakLocalPlayer_GetCompassVerticalIndicatorConfig Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.GetControllerADSSnap
// (Final, Native, Public, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOakLocalPlayer::GetControllerADSSnap() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetControllerADSSnap");

	Params::OakLocalPlayer_GetControllerADSSnap Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.GetControllerAimAssistEnabled
// (Final, Native, Public, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOakLocalPlayer::GetControllerAimAssistEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetControllerAimAssistEnabled");

	Params::OakLocalPlayer_GetControllerAimAssistEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.GetCrosshairEnemyColor
// (Final, Native, Public, HasDefaults, Const)
// Parameters:
// struct FLinearColor                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FLinearColor UOakLocalPlayer::GetCrosshairEnemyColor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetCrosshairEnemyColor");

	Params::OakLocalPlayer_GetCrosshairEnemyColor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.GetCrosshairFriendlyColor
// (Final, Native, Public, HasDefaults, Const)
// Parameters:
// struct FLinearColor                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FLinearColor UOakLocalPlayer::GetCrosshairFriendlyColor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetCrosshairFriendlyColor");

	Params::OakLocalPlayer_GetCrosshairFriendlyColor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.GetCrosshairNeutralColor
// (Final, Native, Public, HasDefaults, Const)
// Parameters:
// struct FLinearColor                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FLinearColor UOakLocalPlayer::GetCrosshairNeutralColor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetCrosshairNeutralColor");

	Params::OakLocalPlayer_GetCrosshairNeutralColor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.GetCrosshairPosition
// (Final, Native, Public, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UOakLocalPlayer::GetCrosshairPosition() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetCrosshairPosition");

	Params::OakLocalPlayer_GetCrosshairPosition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.GetCursorFriction
// (Final, Native, Public, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UOakLocalPlayer::GetCursorFriction() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetCursorFriction");

	Params::OakLocalPlayer_GetCursorFriction Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.GetCursorMaxIdleTime
// (Final, Native, Public, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UOakLocalPlayer::GetCursorMaxIdleTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetCursorMaxIdleTime");

	Params::OakLocalPlayer_GetCursorMaxIdleTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.GetCursorSensitivity
// (Final, Native, Public, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UOakLocalPlayer::GetCursorSensitivity() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetCursorSensitivity");

	Params::OakLocalPlayer_GetCursorSensitivity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.GetCursorShowIdleFlash
// (Final, Native, Public, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOakLocalPlayer::GetCursorShowIdleFlash() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetCursorShowIdleFlash");

	Params::OakLocalPlayer_GetCursorShowIdleFlash Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.GetCursorXAxisInvert
// (Final, Native, Public, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOakLocalPlayer::GetCursorXAxisInvert() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetCursorXAxisInvert");

	Params::OakLocalPlayer_GetCursorXAxisInvert Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.GetCursorYAxisInvert
// (Final, Native, Public, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOakLocalPlayer::GetCursorYAxisInvert() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetCursorYAxisInvert");

	Params::OakLocalPlayer_GetCursorYAxisInvert Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.GetDashEnabled
// (Final, Native, Public, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOakLocalPlayer::GetDashEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetDashEnabled");

	Params::OakLocalPlayer_GetDashEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.GetDisplayDamageNumbers
// (Final, Native, Public, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOakLocalPlayer::GetDisplayDamageNumbers() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetDisplayDamageNumbers");

	Params::OakLocalPlayer_GetDisplayDamageNumbers Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.GetEnableJcmsControl
// (Final, Exec, Native, Public, Const)
// Parameters:
// EEnableJcmsControl                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EEnableJcmsControl UOakLocalPlayer::GetEnableJcmsControl() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetEnableJcmsControl");

	Params::OakLocalPlayer_GetEnableJcmsControl Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.GetFavoriteFriendsNotificationsEnabled
// (Final, Native, Public, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOakLocalPlayer::GetFavoriteFriendsNotificationsEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetFavoriteFriendsNotificationsEnabled");

	Params::OakLocalPlayer_GetFavoriteFriendsNotificationsEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.GetFriendSyncEnabled
// (Final, Native, Public, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOakLocalPlayer::GetFriendSyncEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetFriendSyncEnabled");

	Params::OakLocalPlayer_GetFriendSyncEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.GetGrapplePitchCorrection
// (Final, Native, Public, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOakLocalPlayer::GetGrapplePitchCorrection() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetGrapplePitchCorrection");

	Params::OakLocalPlayer_GetGrapplePitchCorrection Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.GetHasSeenHUDTutorial
// (Final, Native, Public, HasOutParams, HasDefaults, Const)
// Parameters:
// const struct FSName&                    InHUDTutorial                                          (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOakLocalPlayer::GetHasSeenHUDTutorial(const struct FSName& InHUDTutorial) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetHasSeenHUDTutorial");

	Params::OakLocalPlayer_GetHasSeenHUDTutorial Parms{};

	Parms.InHUDTutorial = std::move(InHUDTutorial);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.GetHasSeenMenuTutorialSequence
// (Final, Native, Public, HasOutParams, Const)
// Parameters:
// const class FName&                      InMenuTutorial                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOakLocalPlayer::GetHasSeenMenuTutorialSequence(const class FName& InMenuTutorial) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetHasSeenMenuTutorialSequence");

	Params::OakLocalPlayer_GetHasSeenMenuTutorialSequence Parms{};

	Parms.InMenuTutorial = InMenuTutorial;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.GetHidePromotionalContentEnabled
// (Final, Native, Public, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOakLocalPlayer::GetHidePromotionalContentEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetHidePromotionalContentEnabled");

	Params::OakLocalPlayer_GetHidePromotionalContentEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.GetHighContrastCrosshairActive
// (Final, Native, Public, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOakLocalPlayer::GetHighContrastCrosshairActive() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetHighContrastCrosshairActive");

	Params::OakLocalPlayer_GetHighContrastCrosshairActive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.GetHighContrastHUDActive
// (Final, Native, Public, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOakLocalPlayer::GetHighContrastHUDActive() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetHighContrastHUDActive");

	Params::OakLocalPlayer_GetHighContrastHUDActive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.GetHorizontalADSSensitivity
// (Final, Native, Public, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UOakLocalPlayer::GetHorizontalADSSensitivity() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetHorizontalADSSensitivity");

	Params::OakLocalPlayer_GetHorizontalADSSensitivity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.GetHorizontalJcmsADSSensitivity
// (Final, Exec, Native, Public, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UOakLocalPlayer::GetHorizontalJcmsADSSensitivity() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetHorizontalJcmsADSSensitivity");

	Params::OakLocalPlayer_GetHorizontalJcmsADSSensitivity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.GetHorizontalJcmsLookSensitivity
// (Final, Exec, Native, Public, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UOakLocalPlayer::GetHorizontalJcmsLookSensitivity() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetHorizontalJcmsLookSensitivity");

	Params::OakLocalPlayer_GetHorizontalJcmsLookSensitivity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.GetHorizontalLookSensitivity
// (Final, Native, Public, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UOakLocalPlayer::GetHorizontalLookSensitivity() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetHorizontalLookSensitivity");

	Params::OakLocalPlayer_GetHorizontalLookSensitivity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.GetHorizontalMotionControlsADSSensitivity
// (Final, Exec, Native, Public, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UOakLocalPlayer::GetHorizontalMotionControlsADSSensitivity() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetHorizontalMotionControlsADSSensitivity");

	Params::OakLocalPlayer_GetHorizontalMotionControlsADSSensitivity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.GetHorizontalMotionControlsLookSensitivity
// (Final, Exec, Native, Public, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UOakLocalPlayer::GetHorizontalMotionControlsLookSensitivity() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetHorizontalMotionControlsLookSensitivity");

	Params::OakLocalPlayer_GetHorizontalMotionControlsLookSensitivity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.GetHorizontalSafeAreaRatio
// (Final, Native, Public, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UOakLocalPlayer::GetHorizontalSafeAreaRatio() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetHorizontalSafeAreaRatio");

	Params::OakLocalPlayer_GetHorizontalSafeAreaRatio Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.GetHUDFontScaling
// (Final, Native, Public, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UOakLocalPlayer::GetHUDFontScaling() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetHUDFontScaling");

	Params::OakLocalPlayer_GetHUDFontScaling Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.GetHUDTutorialsEnabled
// (Final, Native, Public, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOakLocalPlayer::GetHUDTutorialsEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetHUDTutorialsEnabled");

	Params::OakLocalPlayer_GetHUDTutorialsEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.GetIsControllerAimRecenteringEnabled
// (Final, Native, Public, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOakLocalPlayer::GetIsControllerAimRecenteringEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetIsControllerAimRecenteringEnabled");

	Params::OakLocalPlayer_GetIsControllerAimRecenteringEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.GetLeftStickAxialDeadZoneInner
// (Final, Native, Public, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UOakLocalPlayer::GetLeftStickAxialDeadZoneInner() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetLeftStickAxialDeadZoneInner");

	Params::OakLocalPlayer_GetLeftStickAxialDeadZoneInner Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.GetLeftStickAxialDeadZoneOuter
// (Final, Native, Public, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UOakLocalPlayer::GetLeftStickAxialDeadZoneOuter() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetLeftStickAxialDeadZoneOuter");

	Params::OakLocalPlayer_GetLeftStickAxialDeadZoneOuter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.GetLeftStickRadialDeadZoneInner
// (Final, Native, Public, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UOakLocalPlayer::GetLeftStickRadialDeadZoneInner() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetLeftStickRadialDeadZoneInner");

	Params::OakLocalPlayer_GetLeftStickRadialDeadZoneInner Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.GetLeftStickRadialDeadZoneOuter
// (Final, Native, Public, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UOakLocalPlayer::GetLeftStickRadialDeadZoneOuter() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetLeftStickRadialDeadZoneOuter");

	Params::OakLocalPlayer_GetLeftStickRadialDeadZoneOuter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.GetLookXAxisInvert_Gamepad
// (Final, Native, Public, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOakLocalPlayer::GetLookXAxisInvert_Gamepad() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetLookXAxisInvert_Gamepad");

	Params::OakLocalPlayer_GetLookXAxisInvert_Gamepad Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.GetLookXAxisInvert_KBM
// (Final, Native, Public, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOakLocalPlayer::GetLookXAxisInvert_KBM() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetLookXAxisInvert_KBM");

	Params::OakLocalPlayer_GetLookXAxisInvert_KBM Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.GetLookYAxisInvert_Gamepad
// (Final, Native, Public, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOakLocalPlayer::GetLookYAxisInvert_Gamepad() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetLookYAxisInvert_Gamepad");

	Params::OakLocalPlayer_GetLookYAxisInvert_Gamepad Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.GetLookYAxisInvert_KBM
// (Final, Native, Public, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOakLocalPlayer::GetLookYAxisInvert_KBM() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetLookYAxisInvert_KBM");

	Params::OakLocalPlayer_GetLookYAxisInvert_KBM Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.GetMapViewerZoomSpeed
// (Final, Native, Public, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UOakLocalPlayer::GetMapViewerZoomSpeed() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetMapViewerZoomSpeed");

	Params::OakLocalPlayer_GetMapViewerZoomSpeed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.GetMatchmakingAutoRegionSelectEnabled
// (Final, Native, Public, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOakLocalPlayer::GetMatchmakingAutoRegionSelectEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetMatchmakingAutoRegionSelectEnabled");

	Params::OakLocalPlayer_GetMatchmakingAutoRegionSelectEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.GetMatchmakingRegionPreferences
// (Final, Native, Public, Const)
// Parameters:
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UOakLocalPlayer::GetMatchmakingRegionPreferences() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetMatchmakingRegionPreferences");

	Params::OakLocalPlayer_GetMatchmakingRegionPreferences Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.GetMenuFontScaling
// (Final, Native, Public, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UOakLocalPlayer::GetMenuFontScaling() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetMenuFontScaling");

	Params::OakLocalPlayer_GetMenuFontScaling Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.GetMenuTutorialsEnabled
// (Final, Native, Public, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOakLocalPlayer::GetMenuTutorialsEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetMenuTutorialsEnabled");

	Params::OakLocalPlayer_GetMenuTutorialsEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.GetMotionControlsSetting
// (Final, Exec, Native, Public, Const)
// Parameters:
// EMotionControlsSetting                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EMotionControlsSetting UOakLocalPlayer::GetMotionControlsSetting() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetMotionControlsSetting");

	Params::OakLocalPlayer_GetMotionControlsSetting Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.GetMouseADSSnap
// (Final, Native, Public, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOakLocalPlayer::GetMouseADSSnap() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetMouseADSSnap");

	Params::OakLocalPlayer_GetMouseADSSnap Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.GetMoveXAxisInvert_Gamepad
// (Final, Native, Public, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOakLocalPlayer::GetMoveXAxisInvert_Gamepad() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetMoveXAxisInvert_Gamepad");

	Params::OakLocalPlayer_GetMoveXAxisInvert_Gamepad Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.GetMoveXAxisInvert_KBM
// (Final, Native, Public, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOakLocalPlayer::GetMoveXAxisInvert_KBM() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetMoveXAxisInvert_KBM");

	Params::OakLocalPlayer_GetMoveXAxisInvert_KBM Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.GetMoveYAxisInvert_Gamepad
// (Final, Native, Public, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOakLocalPlayer::GetMoveYAxisInvert_Gamepad() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetMoveYAxisInvert_Gamepad");

	Params::OakLocalPlayer_GetMoveYAxisInvert_Gamepad Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.GetMoveYAxisInvert_KBM
// (Final, Native, Public, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOakLocalPlayer::GetMoveYAxisInvert_KBM() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetMoveYAxisInvert_KBM");

	Params::OakLocalPlayer_GetMoveYAxisInvert_KBM Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.GetOnFootGamepadStickPreset
// (Final, Native, Public, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UOakLocalPlayer::GetOnFootGamepadStickPreset() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetOnFootGamepadStickPreset");

	Params::OakLocalPlayer_GetOnFootGamepadStickPreset Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.GetProfanityFilterEnabled
// (Final, Native, Public, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOakLocalPlayer::GetProfanityFilterEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetProfanityFilterEnabled");

	Params::OakLocalPlayer_GetProfanityFilterEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.GetPushToTalkEnabled
// (Final, Native, Public, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOakLocalPlayer::GetPushToTalkEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetPushToTalkEnabled");

	Params::OakLocalPlayer_GetPushToTalkEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.GetRadarDisplayMode
// (Final, Native, Public, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UOakLocalPlayer::GetRadarDisplayMode() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetRadarDisplayMode");

	Params::OakLocalPlayer_GetRadarDisplayMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.GetRightStickAxialDeadZoneInner
// (Final, Native, Public, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UOakLocalPlayer::GetRightStickAxialDeadZoneInner() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetRightStickAxialDeadZoneInner");

	Params::OakLocalPlayer_GetRightStickAxialDeadZoneInner Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.GetRightStickAxialDeadZoneOuter
// (Final, Native, Public, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UOakLocalPlayer::GetRightStickAxialDeadZoneOuter() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetRightStickAxialDeadZoneOuter");

	Params::OakLocalPlayer_GetRightStickAxialDeadZoneOuter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.GetRightStickRadialDeadZoneInner
// (Final, Native, Public, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UOakLocalPlayer::GetRightStickRadialDeadZoneInner() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetRightStickRadialDeadZoneInner");

	Params::OakLocalPlayer_GetRightStickRadialDeadZoneInner Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.GetRightStickRadialDeadZoneOuter
// (Final, Native, Public, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UOakLocalPlayer::GetRightStickRadialDeadZoneOuter() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetRightStickRadialDeadZoneOuter");

	Params::OakLocalPlayer_GetRightStickRadialDeadZoneOuter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.GetShiftProfileVisibility
// (Final, Native, Public, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOakLocalPlayer::GetShiftProfileVisibility() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetShiftProfileVisibility");

	Params::OakLocalPlayer_GetShiftProfileVisibility Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.GetStreamerModeLocalEnabled
// (Final, Native, Public, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOakLocalPlayer::GetStreamerModeLocalEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetStreamerModeLocalEnabled");

	Params::OakLocalPlayer_GetStreamerModeLocalEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.GetStreamerModeRemoteEnabled
// (Final, Native, Public, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOakLocalPlayer::GetStreamerModeRemoteEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetStreamerModeRemoteEnabled");

	Params::OakLocalPlayer_GetStreamerModeRemoteEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.GetSubtitleBackgroundColor
// (Final, Native, Public, HasDefaults, Const)
// Parameters:
// struct FLinearColor                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FLinearColor UOakLocalPlayer::GetSubtitleBackgroundColor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetSubtitleBackgroundColor");

	Params::OakLocalPlayer_GetSubtitleBackgroundColor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.GetSubtitleBackgroundEnabled
// (Final, Native, Public, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOakLocalPlayer::GetSubtitleBackgroundEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetSubtitleBackgroundEnabled");

	Params::OakLocalPlayer_GetSubtitleBackgroundEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.GetSubtitleBackgroundOpacity
// (Final, Native, Public, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UOakLocalPlayer::GetSubtitleBackgroundOpacity() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetSubtitleBackgroundOpacity");

	Params::OakLocalPlayer_GetSubtitleBackgroundOpacity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.GetSubtitleColor
// (Final, Native, Public, HasDefaults, Const)
// Parameters:
// struct FLinearColor                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FLinearColor UOakLocalPlayer::GetSubtitleColor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetSubtitleColor");

	Params::OakLocalPlayer_GetSubtitleColor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.GetSubtitlesEnabled
// (Final, Native, Public, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOakLocalPlayer::GetSubtitlesEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetSubtitlesEnabled");

	Params::OakLocalPlayer_GetSubtitlesEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.GetSubtitleSpeakerColor
// (Final, Native, Public, HasDefaults, Const)
// Parameters:
// struct FLinearColor                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FLinearColor UOakLocalPlayer::GetSubtitleSpeakerColor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetSubtitleSpeakerColor");

	Params::OakLocalPlayer_GetSubtitleSpeakerColor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.GetSubtitlesSpeakerEnabled
// (Final, Native, Public, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOakLocalPlayer::GetSubtitlesSpeakerEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetSubtitlesSpeakerEnabled");

	Params::OakLocalPlayer_GetSubtitlesSpeakerEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.GetSubtitleTextOpacity
// (Final, Native, Public, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UOakLocalPlayer::GetSubtitleTextOpacity() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetSubtitleTextOpacity");

	Params::OakLocalPlayer_GetSubtitleTextOpacity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.GetSubtitleTextSize
// (Final, Native, Public, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UOakLocalPlayer::GetSubtitleTextSize() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetSubtitleTextSize");

	Params::OakLocalPlayer_GetSubtitleTextSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.GetTextChatEnabled
// (Final, Native, Public, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOakLocalPlayer::GetTextChatEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetTextChatEnabled");

	Params::OakLocalPlayer_GetTextChatEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.GetToggleCrouch
// (Final, Native, Public, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOakLocalPlayer::GetToggleCrouch() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetToggleCrouch");

	Params::OakLocalPlayer_GetToggleCrouch Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.GetToggleSprint
// (Final, Native, Public, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOakLocalPlayer::GetToggleSprint() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetToggleSprint");

	Params::OakLocalPlayer_GetToggleSprint Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.GetToggleZoom
// (Final, Native, Public, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOakLocalPlayer::GetToggleZoom() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetToggleZoom");

	Params::OakLocalPlayer_GetToggleZoom Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.GetUseBoldSubtitlesEnabled
// (Final, Native, Public, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOakLocalPlayer::GetUseBoldSubtitlesEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetUseBoldSubtitlesEnabled");

	Params::OakLocalPlayer_GetUseBoldSubtitlesEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.GetUseToggleGlideGamepad
// (Final, Native, Public, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOakLocalPlayer::GetUseToggleGlideGamepad() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetUseToggleGlideGamepad");

	Params::OakLocalPlayer_GetUseToggleGlideGamepad Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.GetUseToggleGlideKBM
// (Final, Native, Public, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOakLocalPlayer::GetUseToggleGlideKBM() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetUseToggleGlideKBM");

	Params::OakLocalPlayer_GetUseToggleGlideKBM Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.GetVehicleFOV
// (Final, Native, Public, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UOakLocalPlayer::GetVehicleFOV() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetVehicleFOV");

	Params::OakLocalPlayer_GetVehicleFOV Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.GetVehicleGamepadStickPreset
// (Final, Native, Public, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UOakLocalPlayer::GetVehicleGamepadStickPreset() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetVehicleGamepadStickPreset");

	Params::OakLocalPlayer_GetVehicleGamepadStickPreset Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.GetVerticalADSSensitivity
// (Final, Native, Public, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UOakLocalPlayer::GetVerticalADSSensitivity() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetVerticalADSSensitivity");

	Params::OakLocalPlayer_GetVerticalADSSensitivity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.GetVerticalJcmsADSSensitivity
// (Final, Exec, Native, Public, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UOakLocalPlayer::GetVerticalJcmsADSSensitivity() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetVerticalJcmsADSSensitivity");

	Params::OakLocalPlayer_GetVerticalJcmsADSSensitivity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.GetVerticalJcmsLookSensitivity
// (Final, Exec, Native, Public, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UOakLocalPlayer::GetVerticalJcmsLookSensitivity() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetVerticalJcmsLookSensitivity");

	Params::OakLocalPlayer_GetVerticalJcmsLookSensitivity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.GetVerticalLookSensitivity
// (Final, Native, Public, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UOakLocalPlayer::GetVerticalLookSensitivity() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetVerticalLookSensitivity");

	Params::OakLocalPlayer_GetVerticalLookSensitivity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.GetVerticalMotionControlsADSSensitivity
// (Final, Exec, Native, Public, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UOakLocalPlayer::GetVerticalMotionControlsADSSensitivity() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetVerticalMotionControlsADSSensitivity");

	Params::OakLocalPlayer_GetVerticalMotionControlsADSSensitivity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.GetVerticalMotionControlsLookSensitivity
// (Final, Exec, Native, Public, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UOakLocalPlayer::GetVerticalMotionControlsLookSensitivity() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetVerticalMotionControlsLookSensitivity");

	Params::OakLocalPlayer_GetVerticalMotionControlsLookSensitivity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.GetVerticalSafeAreaRatio
// (Final, Native, Public, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UOakLocalPlayer::GetVerticalSafeAreaRatio() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetVerticalSafeAreaRatio");

	Params::OakLocalPlayer_GetVerticalSafeAreaRatio Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.GetVoiceChatEnabled
// (Final, Native, Public, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOakLocalPlayer::GetVoiceChatEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetVoiceChatEnabled");

	Params::OakLocalPlayer_GetVoiceChatEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.GetVoiceChatVolume
// (Final, Native, Public, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UOakLocalPlayer::GetVoiceChatVolume() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "GetVoiceChatVolume");

	Params::OakLocalPlayer_GetVoiceChatVolume Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocalPlayer.SetMatchmakingAutoRegionSelectEnabled
// (Final, Native, Public, Const)
// Parameters:
// bool                                    bEnabled                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetMatchmakingAutoRegionSelectEnabled(bool bEnabled) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetMatchmakingAutoRegionSelectEnabled");

	Params::OakLocalPlayer_SetMatchmakingAutoRegionSelectEnabled Parms{};

	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocalPlayer.SetMatchmakingRegionPreferences
// (Final, Native, Public, HasOutParams, Const)
// Parameters:
// const TArray<class FString>&            MatchmakingRegions                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UOakLocalPlayer::SetMatchmakingRegionPreferences(const TArray<class FString>& MatchmakingRegions) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakLocalPlayer", "SetMatchmakingRegionPreferences");

	Params::OakLocalPlayer_SetMatchmakingRegionPreferences Parms{};

	Parms.MatchmakingRegions = std::move(MatchmakingRegions);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakLocustGasBlueprintFunctionLibrary.GetAllLocustGas
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<class AOakLocustGas*>            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AOakLocustGas*> UOakLocustGasBlueprintFunctionLibrary::GetAllLocustGas()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakLocustGasBlueprintFunctionLibrary", "GetAllLocustGas");

	Params::OakLocustGasBlueprintFunctionLibrary_GetAllLocustGas Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakLocustGasBlueprintFunctionLibrary.GetLocustGas
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   Amount                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AOakLocustGas*>            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AOakLocustGas*> UOakLocustGasBlueprintFunctionLibrary::GetLocustGas(int32 Amount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakLocustGasBlueprintFunctionLibrary", "GetLocustGas");

	Params::OakLocustGasBlueprintFunctionLibrary_GetLocustGas Parms{};

	Parms.Amount = Amount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakWeaponPoseStatics.BreakOakWeaponPose
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FOakWeaponPose&            Pose                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// class UAnimSequence**                   GripPose                                               (Parm, OutParm, ZeroConstructor, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimSequence**                   ForegripPose                                           (Parm, OutParm, ZeroConstructor, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimSequence**                   AlternateGrip                                          (Parm, OutParm, ZeroConstructor, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimSequence**                   BodyPose                                               (Parm, OutParm, ZeroConstructor, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimSequence**                   SecondaryBodyPose                                      (Parm, OutParm, ZeroConstructor, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimSequence**                   AdsRefPose                                             (Parm, OutParm, ZeroConstructor, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimSequence**                   AdsPose                                                (Parm, OutParm, ZeroConstructor, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimSequence**                   SecondaryAdsPose                                       (Parm, OutParm, ZeroConstructor, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimSequence**                   AdsEnter                                               (Parm, OutParm, ZeroConstructor, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimSequence**                   AdsExit                                                (Parm, OutParm, ZeroConstructor, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimSequence**                   WeaponGripPose                                         (Parm, OutParm, ZeroConstructor, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimSequence**                   WeaponForegripPose                                     (Parm, OutParm, ZeroConstructor, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName*                            GripIkBone                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName*                            ForegripIkBone                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakWeaponPoseStatics::BreakOakWeaponPose(const struct FOakWeaponPose& Pose, class UAnimSequence** GripPose, class UAnimSequence** ForegripPose, class UAnimSequence** AlternateGrip, class UAnimSequence** BodyPose, class UAnimSequence** SecondaryBodyPose, class UAnimSequence** AdsRefPose, class UAnimSequence** AdsPose, class UAnimSequence** SecondaryAdsPose, class UAnimSequence** AdsEnter, class UAnimSequence** AdsExit, class UAnimSequence** WeaponGripPose, class UAnimSequence** WeaponForegripPose, class FName* GripIkBone, class FName* ForegripIkBone)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakWeaponPoseStatics", "BreakOakWeaponPose");

	Params::OakWeaponPoseStatics_BreakOakWeaponPose Parms{};

	Parms.Pose = std::move(Pose);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (GripPose != nullptr)
		*GripPose = Parms.GripPose;

	if (ForegripPose != nullptr)
		*ForegripPose = Parms.ForegripPose;

	if (AlternateGrip != nullptr)
		*AlternateGrip = Parms.AlternateGrip;

	if (BodyPose != nullptr)
		*BodyPose = Parms.BodyPose;

	if (SecondaryBodyPose != nullptr)
		*SecondaryBodyPose = Parms.SecondaryBodyPose;

	if (AdsRefPose != nullptr)
		*AdsRefPose = Parms.AdsRefPose;

	if (AdsPose != nullptr)
		*AdsPose = Parms.AdsPose;

	if (SecondaryAdsPose != nullptr)
		*SecondaryAdsPose = Parms.SecondaryAdsPose;

	if (AdsEnter != nullptr)
		*AdsEnter = Parms.AdsEnter;

	if (AdsExit != nullptr)
		*AdsExit = Parms.AdsExit;

	if (WeaponGripPose != nullptr)
		*WeaponGripPose = Parms.WeaponGripPose;

	if (WeaponForegripPose != nullptr)
		*WeaponForegripPose = Parms.WeaponForegripPose;

	if (GripIkBone != nullptr)
		*GripIkBone = Parms.GripIkBone;

	if (ForegripIkBone != nullptr)
		*ForegripIkBone = Parms.ForegripIkBone;
}


// Function OakGame.OakMainMenuCameraComponent.GetFocusedCharacterNames
// (Final, Native, Public, HasOutParams, Const)
// Parameters:
// TArray<class FName>*                    OutNames                                               (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UOakMainMenuCameraComponent::GetFocusedCharacterNames(TArray<class FName>* OutNames) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakMainMenuCameraComponent", "GetFocusedCharacterNames");

	Params::OakMainMenuCameraComponent_GetFocusedCharacterNames Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutNames != nullptr)
		*OutNames = std::move(Parms.OutNames);
}


// Function OakGame.OakNavFormationeStatics.GetAllSetupNames
// (Final, Native, Static, Public, HasOutParams)
// Parameters:
// class UObject*                          OuterObject                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FName>*                    OutNames                                               (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UOakNavFormationeStatics::GetAllSetupNames(class UObject* OuterObject, TArray<class FName>* OutNames)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakNavFormationeStatics", "GetAllSetupNames");

	Params::OakNavFormationeStatics_GetAllSetupNames Parms{};

	Parms.OuterObject = OuterObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutNames != nullptr)
		*OutNames = std::move(Parms.OutNames);
}


// Function OakGame.OakUIScript_WeaponWheel.Closing
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_WeaponWheel::Closing(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_WeaponWheel", "Closing");

	Params::OakUIScript_WeaponWheel_Closing Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_WeaponWheel.Highlighting
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_WeaponWheel::Highlighting(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_WeaponWheel", "Highlighting");

	Params::OakUIScript_WeaponWheel_Highlighting Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_WeaponWheel.Opening
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_WeaponWheel::Opening(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_WeaponWheel", "Opening");

	Params::OakUIScript_WeaponWheel_Opening Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakPlayerPuppetStatics.IsPuppeted
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOakPlayerPuppetStatics::IsPuppeted(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakPlayerPuppetStatics", "IsPuppeted");

	Params::OakPlayerPuppetStatics_IsPuppeted Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakPlayerPuppetStatics.PuppetIt
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           player                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           puppet                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakPlayerPuppetStatics::PuppetIt(class AActor* player, class AActor* puppet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakPlayerPuppetStatics", "PuppetIt");

	Params::OakPlayerPuppetStatics_PuppetIt Parms{};

	Parms.player = player;
	Parms.puppet = puppet;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakPlayerPuppetStatics.Unpuppet
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakPlayerPuppetStatics::Unpuppet(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakPlayerPuppetStatics", "Unpuppet");

	Params::OakPlayerPuppetStatics_Unpuppet Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.WeaponBehavior_Repair.OnAttached
// (Final, Native, Protected)

void UWeaponBehavior_Repair::OnAttached()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WeaponBehavior_Repair", "OnAttached");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.WeaponBehavior_Repair.OnBegunPlay
// (Final, Native, Protected)

void UWeaponBehavior_Repair::OnBegunPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WeaponBehavior_Repair", "OnBegunPlay");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.WeaponBehavior_Repair.OnDetached
// (Final, Native, Protected)

void UWeaponBehavior_Repair::OnDetached()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WeaponBehavior_Repair", "OnDetached");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.WeaponBehavior_Repair.OnMaxShotsToBreakChanged
// (Final, Native, Protected)
// Parameters:
// float                                   OldValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWeaponBehavior_Repair::OnMaxShotsToBreakChanged(float OldValue, float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WeaponBehavior_Repair", "OnMaxShotsToBreakChanged");

	Params::WeaponBehavior_Repair_OnMaxShotsToBreakChanged Parms{};

	Parms.OldValue = OldValue;
	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.WeaponBehavior_Repair.OnMinShotsToBreakChanged
// (Final, Native, Protected)
// Parameters:
// float                                   OldValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWeaponBehavior_Repair::OnMinShotsToBreakChanged(float OldValue, float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WeaponBehavior_Repair", "OnMinShotsToBreakChanged");

	Params::WeaponBehavior_Repair_OnMinShotsToBreakChanged Parms{};

	Parms.OldValue = OldValue;
	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.WeaponBehavior_Repair.OnRep_ClientRepairState
// (Final, Native, Protected)

void UWeaponBehavior_Repair::OnRep_ClientRepairState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WeaponBehavior_Repair", "OnRep_ClientRepairState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.WeaponBehavior_Repair.OnRep_NumShotsToBreak
// (Final, Native, Private)

void UWeaponBehavior_Repair::OnRep_NumShotsToBreak()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WeaponBehavior_Repair", "OnRep_NumShotsToBreak");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.WeaponBehavior_Repair.OnUsed
// (Final, Native, Protected)

void UWeaponBehavior_Repair::OnUsed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WeaponBehavior_Repair", "OnUsed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakSkillUtils.AddEntanglement
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          owner                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakSkillUtils::AddEntanglement(class UObject* owner, class AActor* target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakSkillUtils", "AddEntanglement");

	Params::OakSkillUtils_AddEntanglement Parms{};

	Parms.owner = owner;
	Parms.target = target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakSkillUtils.BranchOnPassiveSkillActive
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UGbxSkillScript*                  Context                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     SkillDef                                               (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESkillStateScriptExec*                  Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakSkillUtils::BranchOnPassiveSkillActive(class UGbxSkillScript* Context, FGbxDefPtrProperty_ SkillDef, ESkillStateScriptExec* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakSkillUtils", "BranchOnPassiveSkillActive");

	Params::OakSkillUtils_BranchOnPassiveSkillActive Parms{};

	Parms.Context = Context;
	Parms.SkillDef = SkillDef;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function OakGame.OakSkillUtils.GrantShieldToPossessionTarget
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Siren                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakSkillUtils::GrantShieldToPossessionTarget(class AActor* Siren, class AActor* target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakSkillUtils", "GrantShieldToPossessionTarget");

	Params::OakSkillUtils_GrantShieldToPossessionTarget Parms{};

	Parms.Siren = Siren;
	Parms.target = target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakSkillUtils.IsPassiveSkillActive
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UGbxSkillScript*                  Context                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     SkillDef                                               (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOakSkillUtils::IsPassiveSkillActive(class UGbxSkillScript* Context, FGbxDefPtrProperty_ SkillDef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakSkillUtils", "IsPassiveSkillActive");

	Params::OakSkillUtils_IsPassiveSkillActive Parms{};

	Parms.Context = Context;
	Parms.SkillDef = SkillDef;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakSkillUtils.PreparePossessionPools
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGameDataHandleProperty_                HealthType                                             (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGameDataHandleProperty_                HealthPool                                             (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakSkillUtils::PreparePossessionPools(class AActor* target, FGameDataHandleProperty_ HealthType, FGameDataHandleProperty_ HealthPool)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakSkillUtils", "PreparePossessionPools");

	Params::OakSkillUtils_PreparePossessionPools Parms{};

	Parms.target = target;
	Parms.HealthType = HealthType;
	Parms.HealthPool = HealthPool;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakSkillUtils.QueryStasisTargetFor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           owner                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EStasisOpQueryResult                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EStasisOpQueryResult UOakSkillUtils::QueryStasisTargetFor(class AActor* owner, class AActor* target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakSkillUtils", "QueryStasisTargetFor");

	Params::OakSkillUtils_QueryStasisTargetFor Parms{};

	Parms.owner = owner;
	Parms.target = target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakSkillUtils.ResolvePlayerController
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Context                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AOakPlayerController*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AOakPlayerController* UOakSkillUtils::ResolvePlayerController(class AActor* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakSkillUtils", "ResolvePlayerController");

	Params::OakSkillUtils_ResolvePlayerController Parms{};

	Parms.Context = Context;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakSkillUtils.StartStasis
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FStartStasisArgs&          Args                                                   (Parm, NativeAccessSpecifierPublic)
// EStasisOpResult*                        Exec                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UOakSkillUtils::StartStasis(class UObject* WorldContextObject, const struct FStartStasisArgs& Args, EStasisOpResult* Exec, const struct FLatentActionInfo& LatentInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakSkillUtils", "StartStasis");

	Params::OakSkillUtils_StartStasis Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Args = std::move(Args);
	Parms.LatentInfo = std::move(LatentInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Exec != nullptr)
		*Exec = Parms.Exec;
}


// Function OakGame.OakStatusEffectsStatics.FreezeEnemy
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AOakCharacter*                    target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Source                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APawn*                            instigator                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DOT                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakStatusEffectsStatics::FreezeEnemy(class AOakCharacter* target, float Duration, class AActor* Source, class APawn* instigator, float DOT)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakStatusEffectsStatics", "FreezeEnemy");

	Params::OakStatusEffectsStatics_FreezeEnemy Parms{};

	Parms.target = target;
	Parms.Duration = Duration;
	Parms.Source = Source;
	Parms.instigator = instigator;
	Parms.DOT = DOT;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakThroughCollisionHandler.EnableThroughCollisionModifiers
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bEnabled                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakThroughCollisionHandler::EnableThroughCollisionModifiers(bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakThroughCollisionHandler", "EnableThroughCollisionModifiers");

	Params::OakThroughCollisionHandler_EnableThroughCollisionModifiers Parms{};

	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIScript_EchoUpgrades.InsufficientPoints
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_EchoUpgrades::InsufficientPoints(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_EchoUpgrades", "InsufficientPoints");

	Params::OakUIScript_EchoUpgrades_InsufficientPoints Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_EchoUpgrades.StartTutorial
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_EchoUpgrades::StartTutorial(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_EchoUpgrades", "StartTutorial");

	Params::OakUIScript_EchoUpgrades_StartTutorial Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_EchoUpgrades.Upgraded
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_EchoUpgrades::Upgraded(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_EchoUpgrades", "Upgraded");

	Params::OakUIScript_EchoUpgrades_Upgraded Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_ItemInspect.InspectNewItem
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_ItemInspect::InspectNewItem(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_ItemInspect", "InspectNewItem");

	Params::OakUIScript_ItemInspect_InspectNewItem Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_MenuBase.ElementClicked
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_MenuBase::ElementClicked(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_MenuBase", "ElementClicked");

	Params::OakUIScript_MenuBase_ElementClicked Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_MenuBase.ElementFocused
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_MenuBase::ElementFocused(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_MenuBase", "ElementFocused");

	Params::OakUIScript_MenuBase_ElementFocused Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_MenuBase.ElementUnfocused
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_MenuBase::ElementUnfocused(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_MenuBase", "ElementUnfocused");

	Params::OakUIScript_MenuBase_ElementUnfocused Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_MenuBase.EscapeInput
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_MenuBase::EscapeInput(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_MenuBase", "EscapeInput");

	Params::OakUIScript_MenuBase_EscapeInput Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_MenuBase.MenuClose
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_MenuBase::MenuClose(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_MenuBase", "MenuClose");

	Params::OakUIScript_MenuBase_MenuClose Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_MenuBase.MenuOpen
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_MenuBase::MenuOpen(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_MenuBase", "MenuOpen");

	Params::OakUIScript_MenuBase_MenuOpen Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_MenuBase.ScrollDown
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_MenuBase::ScrollDown(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_MenuBase", "ScrollDown");

	Params::OakUIScript_MenuBase_ScrollDown Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_MenuBase.ScrollUp
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_MenuBase::ScrollUp(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_MenuBase", "ScrollUp");

	Params::OakUIScript_MenuBase_ScrollUp Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakTraitStatics.ApplyTrait
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          Context                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     TraitDef                                               (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bOverrideImmunities                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOakTraitStatics::ApplyTrait(class UObject* Context, FGbxDefPtrProperty_ TraitDef, bool bOverrideImmunities)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakTraitStatics", "ApplyTrait");

	Params::OakTraitStatics_ApplyTrait Parms{};

	Parms.Context = Context;
	Parms.TraitDef = TraitDef;
	Parms.bOverrideImmunities = bOverrideImmunities;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakTraitStatics.HasTrait
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const class UObject*                    Context                                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     TraitDef                                               (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOakTraitStatics::HasTrait(const class UObject* Context, FGbxDefPtrProperty_ TraitDef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakTraitStatics", "HasTrait");

	Params::OakTraitStatics_HasTrait Parms{};

	Parms.Context = Context;
	Parms.TraitDef = TraitDef;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakTraitStatics.RemoveAllTraits
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          Context                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakTraitStatics::RemoveAllTraits(class UObject* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakTraitStatics", "RemoveAllTraits");

	Params::OakTraitStatics_RemoveAllTraits Parms{};

	Parms.Context = Context;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakTraitStatics.RemoveTrait
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          Context                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     TraitDef                                               (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOakTraitStatics::RemoveTrait(class UObject* Context, FGbxDefPtrProperty_ TraitDef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakTraitStatics", "RemoveTrait");

	Params::OakTraitStatics_RemoveTrait Parms{};

	Parms.Context = Context;
	Parms.TraitDef = TraitDef;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakUIScript_MissionTracker.HideObjectives
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_MissionTracker::HideObjectives(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_MissionTracker", "HideObjectives");

	Params::OakUIScript_MissionTracker_HideObjectives Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_MissionTracker.missioncompleted
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_MissionTracker::missioncompleted(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_MissionTracker", "missioncompleted");

	Params::OakUIScript_MissionTracker_missioncompleted Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_MissionTracker.MissionFailed
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_MissionTracker::MissionFailed(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_MissionTracker", "MissionFailed");

	Params::OakUIScript_MissionTracker_MissionFailed Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_MissionTracker.ObjectiveCompleted
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_MissionTracker::ObjectiveCompleted(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_MissionTracker", "ObjectiveCompleted");

	Params::OakUIScript_MissionTracker_ObjectiveCompleted Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_MissionTracker.ObjectiveFailed
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_MissionTracker::ObjectiveFailed(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_MissionTracker", "ObjectiveFailed");

	Params::OakUIScript_MissionTracker_ObjectiveFailed Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_MissionTracker.ShowObjectives
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_MissionTracker::ShowObjectives(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_MissionTracker", "ShowObjectives");

	Params::OakUIScript_MissionTracker_ShowObjectives Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.RepairKit.BroadcastEffect
// (Net, Native, Event, NetMulticast, Protected)
// Parameters:
// class FName                             EffectID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          AdditionalContext                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARepairKit::BroadcastEffect(class FName EffectID, class UObject* AdditionalContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RepairKit", "BroadcastEffect");

	Params::RepairKit_BroadcastEffect Parms{};

	Parms.EffectID = EffectID;
	Parms.AdditionalContext = AdditionalContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.RepairKit.PlayReplicatedEffect
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class FName                             EffectID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          AdditionalContext                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARepairKit::PlayReplicatedEffect(class FName EffectID, class UObject* AdditionalContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RepairKit", "PlayReplicatedEffect");

	Params::RepairKit_PlayReplicatedEffect Parms{};

	Parms.EffectID = EffectID;
	Parms.AdditionalContext = AdditionalContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIBlueprintHelperLibrary.StartMenuTutorialSequence
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     MenuTutorialSequenceDef                                (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    DebugName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIBlueprintHelperLibrary::StartMenuTutorialSequence(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, FGbxDefPtrProperty_ MenuTutorialSequenceDef, const class FString& DebugName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakUIBlueprintHelperLibrary", "StartMenuTutorialSequence");

	Params::OakUIBlueprintHelperLibrary_StartMenuTutorialSequence Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.MenuTutorialSequenceDef = MenuTutorialSequenceDef;
	Parms.DebugName = std::move(DebugName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.Shield.GetCapacity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AShield::GetCapacity() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Shield", "GetCapacity");

	Params::Shield_GetCapacity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.Shield.GetNumSegments
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AShield::GetNumSegments() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Shield", "GetNumSegments");

	Params::Shield_GetNumSegments Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.Shield.GetRegenDelay
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AShield::GetRegenDelay() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Shield", "GetRegenDelay");

	Params::Shield_GetRegenDelay Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.Shield.GetRegenRate
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AShield::GetRegenRate() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Shield", "GetRegenRate");

	Params::Shield_GetRegenRate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.Shield.K2_GetDamageType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// FGameDataHandleProperty_                ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

FGameDataHandleProperty_ AShield::K2_GetDamageType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Shield", "K2_GetDamageType");

	Params::Shield_K2_GetDamageType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.Shield.K2_GetHealthSystem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EShieldHealthSystem                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EShieldHealthSystem AShield::K2_GetHealthSystem() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Shield", "K2_GetHealthSystem");

	Params::Shield_K2_GetHealthSystem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakUIDataCollector_BossBar.OnBossesChanged
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FOakBossState&             PrevBossState                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UOakUIDataCollector_BossBar::OnBossesChanged(const struct FOakBossState& PrevBossState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_BossBar", "OnBossesChanged");

	Params::OakUIDataCollector_BossBar_OnBossesChanged Parms{};

	Parms.PrevBossState = std::move(PrevBossState);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_BossBar.OnBossShakeEvent
// (Final, Native, Protected)

void UOakUIDataCollector_BossBar::OnBossShakeEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_BossBar", "OnBossShakeEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_BossBar.OnDisplayNameChanged
// (Final, Native, Protected)

void UOakUIDataCollector_BossBar::OnDisplayNameChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_BossBar", "OnDisplayNameChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_BossBar.OnIntrinsicElementChanged
// (Final, Native, Protected)
// Parameters:
// const EOakElementalType                 NewElement                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIDataCollector_BossBar::OnIntrinsicElementChanged(const EOakElementalType NewElement)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_BossBar", "OnIntrinsicElementChanged");

	Params::OakUIDataCollector_BossBar_OnIntrinsicElementChanged Parms{};

	Parms.NewElement = NewElement;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_BossBar.OnVHEIconChanged
// (Final, Native, Protected)
// Parameters:
// const class AOakCharacter*              TargetCharacter                                        (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIDataCollector_BossBar::OnVHEIconChanged(const class AOakCharacter* TargetCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_BossBar", "OnVHEIconChanged");

	Params::OakUIDataCollector_BossBar_OnVHEIconChanged Parms{};

	Parms.TargetCharacter = TargetCharacter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_BossBar.UpdateBoss
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FOakBossState&             PrevBossState                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UOakUIDataCollector_BossBar::UpdateBoss(const struct FOakBossState& PrevBossState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_BossBar", "UpdateBoss");

	Params::OakUIDataCollector_BossBar_UpdateBoss Parms{};

	Parms.PrevBossState = std::move(PrevBossState);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_BossBar.OnBossDimmedStateUpdated
// (Final, Native, Protected, Const)
// Parameters:
// class AActor*                           Boss                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsStateActive                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIDataCollector_BossBar::OnBossDimmedStateUpdated(class AActor* Boss, bool bIsStateActive) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_BossBar", "OnBossDimmedStateUpdated");

	Params::OakUIDataCollector_BossBar_OnBossDimmedStateUpdated Parms{};

	Parms.Boss = Boss;
	Parms.bIsStateActive = bIsStateActive;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_BossBar.OnBossInvulnerabilityStateUpdated
// (Final, Native, Protected, Const)
// Parameters:
// class AActor*                           Boss                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsStateActive                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIDataCollector_BossBar::OnBossInvulnerabilityStateUpdated(class AActor* Boss, bool bIsStateActive) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_BossBar", "OnBossInvulnerabilityStateUpdated");

	Params::OakUIDataCollector_BossBar_OnBossInvulnerabilityStateUpdated Parms{};

	Parms.Boss = Boss;
	Parms.bIsStateActive = bIsStateActive;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_BuddyInfo.AddBuddy
// (Native, Protected)
// Parameters:
// class AOakCharacter*                    Character                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APlayerState*                     PlayerState                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIDataCollector_BuddyInfo::AddBuddy(class AOakCharacter* Character, class APlayerState* PlayerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_BuddyInfo", "AddBuddy");

	Params::OakUIDataCollector_BuddyInfo_AddBuddy Parms{};

	Parms.Character = Character;
	Parms.PlayerState = PlayerState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_BuddyInfo.OnBeingRevivedStarted
// (Final, Native, Protected)
// Parameters:
// bool                                    bIsAuthority                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsLocal                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AOakCharacter*                    Character                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class APlayerState*               PlayerState                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIDataCollector_BuddyInfo::OnBeingRevivedStarted(bool bIsAuthority, bool bIsLocal, class AOakCharacter* Character, const class APlayerState* PlayerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_BuddyInfo", "OnBeingRevivedStarted");

	Params::OakUIDataCollector_BuddyInfo_OnBeingRevivedStarted Parms{};

	Parms.bIsAuthority = bIsAuthority;
	Parms.bIsLocal = bIsLocal;
	Parms.Character = Character;
	Parms.PlayerState = PlayerState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_BuddyInfo.OnBeingRevivedStopped
// (Final, Native, Protected)
// Parameters:
// bool                                    bIsAuthority                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsLocal                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsSuccessful                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AOakCharacter*                    Character                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class APlayerState*               PlayerState                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIDataCollector_BuddyInfo::OnBeingRevivedStopped(bool bIsAuthority, bool bIsLocal, bool bIsSuccessful, class AOakCharacter* Character, const class APlayerState* PlayerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_BuddyInfo", "OnBeingRevivedStopped");

	Params::OakUIDataCollector_BuddyInfo_OnBeingRevivedStopped Parms{};

	Parms.bIsAuthority = bIsAuthority;
	Parms.bIsLocal = bIsLocal;
	Parms.bIsSuccessful = bIsSuccessful;
	Parms.Character = Character;
	Parms.PlayerState = PlayerState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_BuddyInfo.OnBuddyLevelUp
// (Final, Native, Protected)
// Parameters:
// class AOakCharacter*                    Character                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIDataCollector_BuddyInfo::OnBuddyLevelUp(class AOakCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_BuddyInfo", "OnBuddyLevelUp");

	Params::OakUIDataCollector_BuddyInfo_OnBuddyLevelUp Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_BuddyInfo.OnDowned
// (Final, Native, Protected)
// Parameters:
// bool                                    bIsAuthority                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsLocal                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AOakCharacter*                    Character                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIDataCollector_BuddyInfo::OnDowned(bool bIsAuthority, bool bIsLocal, class AOakCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_BuddyInfo", "OnDowned");

	Params::OakUIDataCollector_BuddyInfo_OnDowned Parms{};

	Parms.bIsAuthority = bIsAuthority;
	Parms.bIsLocal = bIsLocal;
	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_BuddyInfo.OnDownedEnded
// (Final, Native, Protected)
// Parameters:
// bool                                    bIsAuthority                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsLocal                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EExitDownStateReason                    reason                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AOakCharacter*                    Character                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIDataCollector_BuddyInfo::OnDownedEnded(bool bIsAuthority, bool bIsLocal, EExitDownStateReason reason, class AOakCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_BuddyInfo", "OnDownedEnded");

	Params::OakUIDataCollector_BuddyInfo_OnDownedEnded Parms{};

	Parms.bIsAuthority = bIsAuthority;
	Parms.bIsLocal = bIsLocal;
	Parms.reason = reason;
	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_BuddyInfo.OnPlayerConnected
// (Native, Protected)
// Parameters:
// class APlayerState*                     ConnectedPlayer                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIDataCollector_BuddyInfo::OnPlayerConnected(class APlayerState* ConnectedPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_BuddyInfo", "OnPlayerConnected");

	Params::OakUIDataCollector_BuddyInfo_OnPlayerConnected Parms{};

	Parms.ConnectedPlayer = ConnectedPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_BuddyInfo.OnPlayerDisconnected
// (Native, Protected)
// Parameters:
// class APlayerState*                     DisconnectedPlayer                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIDataCollector_BuddyInfo::OnPlayerDisconnected(class APlayerState* DisconnectedPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_BuddyInfo", "OnPlayerDisconnected");

	Params::OakUIDataCollector_BuddyInfo_OnPlayerDisconnected Parms{};

	Parms.DisconnectedPlayer = DisconnectedPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_BuddyInfo.OnRespawn
// (Final, Native, Protected)
// Parameters:
// bool                                    bIsAuthority                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsLocal                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AOakCharacter*                    Character                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIDataCollector_BuddyInfo::OnRespawn(bool bIsAuthority, bool bIsLocal, class AOakCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_BuddyInfo", "OnRespawn");

	Params::OakUIDataCollector_BuddyInfo_OnRespawn Parms{};

	Parms.bIsAuthority = bIsAuthority;
	Parms.bIsLocal = bIsLocal;
	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_CelebNotifMessage.OnDownedEnded
// (Final, Native, Protected)
// Parameters:
// bool                                    bIsAuthority                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsLocal                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EExitDownStateReason                    reason                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIDataCollector_CelebNotifMessage::OnDownedEnded(bool bIsAuthority, bool bIsLocal, EExitDownStateReason reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_CelebNotifMessage", "OnDownedEnded");

	Params::OakUIDataCollector_CelebNotifMessage_OnDownedEnded Parms{};

	Parms.bIsAuthority = bIsAuthority;
	Parms.bIsLocal = bIsLocal;
	Parms.reason = reason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_CelebNotifMessage.OnOakCharacterChanged
// (Final, Native, Protected)

void UOakUIDataCollector_CelebNotifMessage::OnOakCharacterChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_CelebNotifMessage", "OnOakCharacterChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_CharacterInfo.OnControllerChanged
// (Final, Native, Protected)
// Parameters:
// class APawn*                            Pawn                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*                      OldController                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*                      NewController                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIDataCollector_CharacterInfo::OnControllerChanged(class APawn* Pawn, class AController* OldController, class AController* NewController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_CharacterInfo", "OnControllerChanged");

	Params::OakUIDataCollector_CharacterInfo_OnControllerChanged Parms{};

	Parms.Pawn = Pawn;
	Parms.OldController = OldController;
	Parms.NewController = NewController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_CharacterInfo.OnStartSprinting
// (Final, Native, Protected)

void UOakUIDataCollector_CharacterInfo::OnStartSprinting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_CharacterInfo", "OnStartSprinting");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_CharacterInfo.OnStopSprinting
// (Final, Native, Protected)

void UOakUIDataCollector_CharacterInfo::OnStopSprinting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_CharacterInfo", "OnStopSprinting");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_CharacterInfo.OnUXNameChanged
// (Final, Native, Protected)

void UOakUIDataCollector_CharacterInfo::OnUXNameChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_CharacterInfo", "OnUXNameChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_CharacterSelect.OnFocusedCharacterFactHandleChanged
// (Final, Native, Private)
// Parameters:
// bool                                    bBindNew                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIDataCollector_CharacterSelect::OnFocusedCharacterFactHandleChanged(bool bBindNew)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_CharacterSelect", "OnFocusedCharacterFactHandleChanged");

	Params::OakUIDataCollector_CharacterSelect_OnFocusedCharacterFactHandleChanged Parms{};

	Parms.bBindNew = bBindNew;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_CharacterVitals.ToggleSirenHealthBarTint
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AOakCharacter*                    OakPlayerCharacter                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bApplySirenTint                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIDataCollector_CharacterVitals::ToggleSirenHealthBarTint(class AOakCharacter* OakPlayerCharacter, bool bApplySirenTint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakUIDataCollector_CharacterVitals", "ToggleSirenHealthBarTint");

	Params::OakUIDataCollector_CharacterVitals_ToggleSirenHealthBarTint Parms{};

	Parms.OakPlayerCharacter = OakPlayerCharacter;
	Parms.bApplySirenTint = bApplySirenTint;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_CharacterVitals.OnNewResourcePoolAdded
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FGameResourcePoolReference*      ResourcePoolRef                                        (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)

void UOakUIDataCollector_CharacterVitals::OnNewResourcePoolAdded(struct FGameResourcePoolReference* ResourcePoolRef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_CharacterVitals", "OnNewResourcePoolAdded");

	Params::OakUIDataCollector_CharacterVitals_OnNewResourcePoolAdded Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResourcePoolRef != nullptr)
		*ResourcePoolRef = std::move(Parms.ResourcePoolRef);
}


// Function OakGame.OakUIDataCollector_CharacterVitals.OnRepairChargeUpdated
// (Final, Native, Protected)

void UOakUIDataCollector_CharacterVitals::OnRepairChargeUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_CharacterVitals", "OnRepairChargeUpdated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_CharacterVitals.OnRepairStateChanged
// (Final, Native, Protected)
// Parameters:
// ERepairKitState                         NewState                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIDataCollector_CharacterVitals::OnRepairStateChanged(ERepairKitState NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_CharacterVitals", "OnRepairStateChanged");

	Params::OakUIDataCollector_CharacterVitals_OnRepairStateChanged Parms{};

	Parms.NewState = NewState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_CharacterVitals.OnResourcePoolMinMaxChanged
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FGameResourcePoolReference*      ResourcePoolRef                                        (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   MinValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MaxValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIDataCollector_CharacterVitals::OnResourcePoolMinMaxChanged(struct FGameResourcePoolReference* ResourcePoolRef, float MinValue, float MaxValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_CharacterVitals", "OnResourcePoolMinMaxChanged");

	Params::OakUIDataCollector_CharacterVitals_OnResourcePoolMinMaxChanged Parms{};

	Parms.MinValue = MinValue;
	Parms.MaxValue = MaxValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResourcePoolRef != nullptr)
		*ResourcePoolRef = std::move(Parms.ResourcePoolRef);
}


// Function OakGame.OakUIDataCollector_CharacterVitals.OnResourcePoolValueChanged
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FGameResourcePoolReference*      ResourcePoolRef                                        (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIDataCollector_CharacterVitals::OnResourcePoolValueChanged(struct FGameResourcePoolReference* ResourcePoolRef, float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_CharacterVitals", "OnResourcePoolValueChanged");

	Params::OakUIDataCollector_CharacterVitals_OnResourcePoolValueChanged Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResourcePoolRef != nullptr)
		*ResourcePoolRef = std::move(Parms.ResourcePoolRef);
}


// Function OakGame.OakUIDataCollector_CharacterVitals.OnResourcePoolSegmentCountChanged
// (Final, Native, Protected, HasOutParams, Const)
// Parameters:
// struct FGameResourcePoolReference*      ResourcePoolRef                                        (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   Segments                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIDataCollector_CharacterVitals::OnResourcePoolSegmentCountChanged(struct FGameResourcePoolReference* ResourcePoolRef, int32 Segments) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_CharacterVitals", "OnResourcePoolSegmentCountChanged");

	Params::OakUIDataCollector_CharacterVitals_OnResourcePoolSegmentCountChanged Parms{};

	Parms.Segments = Segments;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResourcePoolRef != nullptr)
		*ResourcePoolRef = std::move(Parms.ResourcePoolRef);
}


// Function OakGame.OakUIDataCollector_Customization.OnCharacterRenameComplete
// (Final, Native, Protected)
// Parameters:
// const class FString&                    InputText                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAccepted                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIDataCollector_Customization::OnCharacterRenameComplete(const class FString& InputText, bool bAccepted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_Customization", "OnCharacterRenameComplete");

	Params::OakUIDataCollector_Customization_OnCharacterRenameComplete Parms{};

	Parms.InputText = std::move(InputText);
	Parms.bAccepted = bAccepted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_DownState.OnBeingRevivedStopped
// (Final, Native, Protected)
// Parameters:
// bool                                    bIsAuthority                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsLocal                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsSuccessful                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIDataCollector_DownState::OnBeingRevivedStopped(bool bIsAuthority, bool bIsLocal, bool bIsSuccessful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_DownState", "OnBeingRevivedStopped");

	Params::OakUIDataCollector_DownState_OnBeingRevivedStopped Parms{};

	Parms.bIsAuthority = bIsAuthority;
	Parms.bIsLocal = bIsLocal;
	Parms.bIsSuccessful = bIsSuccessful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_DownState.OnDowned
// (Final, Native, Protected)
// Parameters:
// bool                                    bIsAuthority                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsLocal                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIDataCollector_DownState::OnDowned(bool bIsAuthority, bool bIsLocal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_DownState", "OnDowned");

	Params::OakUIDataCollector_DownState_OnDowned Parms{};

	Parms.bIsAuthority = bIsAuthority;
	Parms.bIsLocal = bIsLocal;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_DownState.OnDownedEnded
// (Final, Native, Protected)
// Parameters:
// bool                                    bIsAuthority                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsLocal                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EExitDownStateReason                    reason                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIDataCollector_DownState::OnDownedEnded(bool bIsAuthority, bool bIsLocal, EExitDownStateReason reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_DownState", "OnDownedEnded");

	Params::OakUIDataCollector_DownState_OnDownedEnded Parms{};

	Parms.bIsAuthority = bIsAuthority;
	Parms.bIsLocal = bIsLocal;
	Parms.reason = reason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_DownState.OnOakCharacterChanged
// (Final, Native, Protected)

void UOakUIDataCollector_DownState::OnOakCharacterChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_DownState", "OnOakCharacterChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_DownState.OnRespawning
// (Final, Native, Protected)
// Parameters:
// bool                                    bIsAuthority                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsLocal                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIDataCollector_DownState::OnRespawning(bool bIsAuthority, bool bIsLocal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_DownState", "OnRespawning");

	Params::OakUIDataCollector_DownState_OnRespawning Parms{};

	Parms.bIsAuthority = bIsAuthority;
	Parms.bIsLocal = bIsLocal;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_DownState.OnReviversChanged
// (Final, Native, Protected)
// Parameters:
// int32                                   NumRevivers                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIDataCollector_DownState::OnReviversChanged(int32 NumRevivers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_DownState", "OnReviversChanged");

	Params::OakUIDataCollector_DownState_OnReviversChanged Parms{};

	Parms.NumRevivers = NumRevivers;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_DownState.OnRevivingStarted
// (Final, Native, Protected)
// Parameters:
// bool                                    bIsAuthority                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsLocal                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           ActorBeingRevived                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIDataCollector_DownState::OnRevivingStarted(bool bIsAuthority, bool bIsLocal, class AActor* ActorBeingRevived)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_DownState", "OnRevivingStarted");

	Params::OakUIDataCollector_DownState_OnRevivingStarted Parms{};

	Parms.bIsAuthority = bIsAuthority;
	Parms.bIsLocal = bIsLocal;
	Parms.ActorBeingRevived = ActorBeingRevived;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_DownState.OnRevivingStopped
// (Final, Native, Protected)
// Parameters:
// bool                                    bIsAuthority                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsLocal                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsSuccessful                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIDataCollector_DownState::OnRevivingStopped(bool bIsAuthority, bool bIsLocal, bool bIsSuccessful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_DownState", "OnRevivingStopped");

	Params::OakUIDataCollector_DownState_OnRevivingStopped Parms{};

	Parms.bIsAuthority = bIsAuthority;
	Parms.bIsLocal = bIsLocal;
	Parms.bIsSuccessful = bIsSuccessful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_Echo_Portrait.CloseEcho
// (Final, Native, Protected)

void UOakUIDataCollector_Echo_Portrait::CloseEcho()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_Echo_Portrait", "CloseEcho");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_Echo_Portrait.OnEchoEnded
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FEchoInfo&                 EchoInfo                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bCompleted                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIDataCollector_Echo_Portrait::OnEchoEnded(const struct FEchoInfo& EchoInfo, bool bCompleted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_Echo_Portrait", "OnEchoEnded");

	Params::OakUIDataCollector_Echo_Portrait_OnEchoEnded Parms{};

	Parms.EchoInfo = std::move(EchoInfo);
	Parms.bCompleted = bCompleted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_Echo_Portrait.OnEchoStarted
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FEchoInfo&                 EchoInfo                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bIsNewEcho                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIDataCollector_Echo_Portrait::OnEchoStarted(const struct FEchoInfo& EchoInfo, bool bIsNewEcho)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_Echo_Portrait", "OnEchoStarted");

	Params::OakUIDataCollector_Echo_Portrait_OnEchoStarted Parms{};

	Parms.EchoInfo = std::move(EchoInfo);
	Parms.bIsNewEcho = bIsNewEcho;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_EquippedAmmo.OnSwitchedMode
// (Final, Native, Protected)

void UOakUIDataCollector_EquippedAmmo::OnSwitchedMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_EquippedAmmo", "OnSwitchedMode");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_EquippedAmmo.OnWeaponChanged
// (Final, Native, Protected)
// Parameters:
// class AWeapon*                          NewWeapon                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AWeapon*                          OldWeapon                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIDataCollector_EquippedAmmo::OnWeaponChanged(class AWeapon* NewWeapon, class AWeapon* OldWeapon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_EquippedAmmo", "OnWeaponChanged");

	Params::OakUIDataCollector_EquippedAmmo_OnWeaponChanged Parms{};

	Parms.NewWeapon = NewWeapon;
	Parms.OldWeapon = OldWeapon;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_EquippedGadget.ClearGadgetCooldownDelegates
// (Final, Native, Private)

void UOakUIDataCollector_EquippedGadget::ClearGadgetCooldownDelegates()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_EquippedGadget", "ClearGadgetCooldownDelegates");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_EquippedGadget.OnCantUseGadget
// (Final, Native, Private)

void UOakUIDataCollector_EquippedGadget::OnCantUseGadget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_EquippedGadget", "OnCantUseGadget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_EquippedGadget.OnGadgetCooldownCurrentValueChanged
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FGameResourcePoolReference*      ResourcePoolRef                                        (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIDataCollector_EquippedGadget::OnGadgetCooldownCurrentValueChanged(struct FGameResourcePoolReference* ResourcePoolRef, float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_EquippedGadget", "OnGadgetCooldownCurrentValueChanged");

	Params::OakUIDataCollector_EquippedGadget_OnGadgetCooldownCurrentValueChanged Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResourcePoolRef != nullptr)
		*ResourcePoolRef = std::move(Parms.ResourcePoolRef);
}


// Function OakGame.OakUIDataCollector_EquippedGadget.OnGadgetCooldownResourceNowDepleted
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FGameResourcePoolReference*      ResourcePoolRef                                        (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)

void UOakUIDataCollector_EquippedGadget::OnGadgetCooldownResourceNowDepleted(struct FGameResourcePoolReference* ResourcePoolRef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_EquippedGadget", "OnGadgetCooldownResourceNowDepleted");

	Params::OakUIDataCollector_EquippedGadget_OnGadgetCooldownResourceNowDepleted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResourcePoolRef != nullptr)
		*ResourcePoolRef = std::move(Parms.ResourcePoolRef);
}


// Function OakGame.OakUIDataCollector_EquippedGadget.OnGadgetUsed
// (Final, Native, Private)

void UOakUIDataCollector_EquippedGadget::OnGadgetUsed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_EquippedGadget", "OnGadgetUsed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_EquippedGadget.OnHeavyWeaponAmmoChanged
// (Final, Native, Private)

void UOakUIDataCollector_EquippedGadget::OnHeavyWeaponAmmoChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_EquippedGadget", "OnHeavyWeaponAmmoChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_EquippedGadget.OnPossessPawnChanged
// (Final, Native, Private)
// Parameters:
// class APawn*                            OldPawn                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APawn*                            NewPawn                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIDataCollector_EquippedGadget::OnPossessPawnChanged(class APawn* OldPawn, class APawn* NewPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_EquippedGadget", "OnPossessPawnChanged");

	Params::OakUIDataCollector_EquippedGadget_OnPossessPawnChanged Parms{};

	Parms.OldPawn = OldPawn;
	Parms.NewPawn = NewPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_EquippedGadget.OnWeaponChanged
// (Final, Native, Private)
// Parameters:
// class AWeapon*                          NewWeapon                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AWeapon*                          OldWeapon                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIDataCollector_EquippedGadget::OnWeaponChanged(class AWeapon* NewWeapon, class AWeapon* OldWeapon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_EquippedGadget", "OnWeaponChanged");

	Params::OakUIDataCollector_EquippedGadget_OnWeaponChanged Parms{};

	Parms.NewWeapon = NewWeapon;
	Parms.OldWeapon = OldWeapon;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_EquippedGadget.SetGadgetCooldownDelegates
// (Final, Native, Private)

void UOakUIDataCollector_EquippedGadget::SetGadgetCooldownDelegates()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_EquippedGadget", "SetGadgetCooldownDelegates");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIScript_CelebratoryNotifications.AcceptContract
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_CelebratoryNotifications::AcceptContract(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_CelebratoryNotifications", "AcceptContract");

	Params::OakUIScript_CelebratoryNotifications_AcceptContract Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_CelebratoryNotifications.AcceptMission
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_CelebratoryNotifications::AcceptMission(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_CelebratoryNotifications", "AcceptMission");

	Params::OakUIScript_CelebratoryNotifications_AcceptMission Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_CelebratoryNotifications.ActivateMayhemMode
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_CelebratoryNotifications::ActivateMayhemMode(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_CelebratoryNotifications", "ActivateMayhemMode");

	Params::OakUIScript_CelebratoryNotifications_ActivateMayhemMode Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_CelebratoryNotifications.ActivityComplete
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_CelebratoryNotifications::ActivityComplete(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_CelebratoryNotifications", "ActivityComplete");

	Params::OakUIScript_CelebratoryNotifications_ActivityComplete Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_CelebratoryNotifications.ActivityDiscovered
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_CelebratoryNotifications::ActivityDiscovered(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_CelebratoryNotifications", "ActivityDiscovered");

	Params::OakUIScript_CelebratoryNotifications_ActivityDiscovered Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_CelebratoryNotifications.CollectibleFound
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_CelebratoryNotifications::CollectibleFound(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_CelebratoryNotifications", "CollectibleFound");

	Params::OakUIScript_CelebratoryNotifications_CollectibleFound Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_CelebratoryNotifications.CompleteChallenge
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_CelebratoryNotifications::CompleteChallenge(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_CelebratoryNotifications", "CompleteChallenge");

	Params::OakUIScript_CelebratoryNotifications_CompleteChallenge Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_CelebratoryNotifications.CompleteContract
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_CelebratoryNotifications::CompleteContract(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_CelebratoryNotifications", "CompleteContract");

	Params::OakUIScript_CelebratoryNotifications_CompleteContract Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_CelebratoryNotifications.CompleteMission
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_CelebratoryNotifications::CompleteMission(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_CelebratoryNotifications", "CompleteMission");

	Params::OakUIScript_CelebratoryNotifications_CompleteMission Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_CelebratoryNotifications.DeactivateMayhemMode
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_CelebratoryNotifications::DeactivateMayhemMode(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_CelebratoryNotifications", "DeactivateMayhemMode");

	Params::OakUIScript_CelebratoryNotifications_DeactivateMayhemMode Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_CelebratoryNotifications.DiscoverLocation
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_CelebratoryNotifications::DiscoverLocation(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_CelebratoryNotifications", "DiscoverLocation");

	Params::OakUIScript_CelebratoryNotifications_DiscoverLocation Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_CelebratoryNotifications.EnterLocation
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_CelebratoryNotifications::EnterLocation(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_CelebratoryNotifications", "EnterLocation");

	Params::OakUIScript_CelebratoryNotifications_EnterLocation Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_CelebratoryNotifications.NotifyLevelUp
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_CelebratoryNotifications::NotifyLevelUp(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_CelebratoryNotifications", "NotifyLevelUp");

	Params::OakUIScript_CelebratoryNotifications_NotifyLevelUp Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_CelebratoryNotifications.NotifyReachLevel2
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_CelebratoryNotifications::NotifyReachLevel2(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_CelebratoryNotifications", "NotifyReachLevel2");

	Params::OakUIScript_CelebratoryNotifications_NotifyReachLevel2 Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_CelebratoryNotifications.PressButtonPrompt
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_CelebratoryNotifications::PressButtonPrompt(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_CelebratoryNotifications", "PressButtonPrompt");

	Params::OakUIScript_CelebratoryNotifications_PressButtonPrompt Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_CelebratoryNotifications.TrackContract
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_CelebratoryNotifications::TrackContract(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_CelebratoryNotifications", "TrackContract");

	Params::OakUIScript_CelebratoryNotifications_TrackContract Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_CelebratoryNotifications.TrackMission
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_CelebratoryNotifications::TrackMission(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_CelebratoryNotifications", "TrackMission");

	Params::OakUIScript_CelebratoryNotifications_TrackMission Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_CelebratoryNotifications.UnlockChallenge
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_CelebratoryNotifications::UnlockChallenge(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_CelebratoryNotifications", "UnlockChallenge");

	Params::OakUIScript_CelebratoryNotifications_UnlockChallenge Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_CelebratoryNotifications.UnlockMode
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_CelebratoryNotifications::UnlockMode(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_CelebratoryNotifications", "UnlockMode");

	Params::OakUIScript_CelebratoryNotifications_UnlockMode Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIDataCollector_GrapplePoint.OnGrapple
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGrappleableTarget&        target                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UOakUIDataCollector_GrapplePoint::OnGrapple(class AActor* OtherActor, const struct FGrappleableTarget& target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_GrapplePoint", "OnGrapple");

	Params::OakUIDataCollector_GrapplePoint_OnGrapple Parms{};

	Parms.OtherActor = OtherActor;
	Parms.target = std::move(target);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_GrapplePoint.OnGrappleEnded
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGrappleableTarget&        target                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UOakUIDataCollector_GrapplePoint::OnGrappleEnded(class AActor* OtherActor, const struct FGrappleableTarget& target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_GrapplePoint", "OnGrappleEnded");

	Params::OakUIDataCollector_GrapplePoint_OnGrappleEnded Parms{};

	Parms.OtherActor = OtherActor;
	Parms.target = std::move(target);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_HealthShield.OnPossessPawnChanged
// (Final, Native, Protected)
// Parameters:
// class APawn*                            OldPawn                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APawn*                            NewPawn                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIDataCollector_HealthShield::OnPossessPawnChanged(class APawn* OldPawn, class APawn* NewPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_HealthShield", "OnPossessPawnChanged");

	Params::OakUIDataCollector_HealthShield_OnPossessPawnChanged Parms{};

	Parms.OldPawn = OldPawn;
	Parms.NewPawn = NewPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakWeaponStatics.AbsorbAmmoToCurrentCharacterWeapon
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          OwnerContext                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Amount                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAsPercent                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAllowForHeavyWeapons                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakWeaponStatics::AbsorbAmmoToCurrentCharacterWeapon(class UObject* OwnerContext, int32 Amount, bool bAsPercent, bool bAllowForHeavyWeapons)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakWeaponStatics", "AbsorbAmmoToCurrentCharacterWeapon");

	Params::OakWeaponStatics_AbsorbAmmoToCurrentCharacterWeapon Parms{};

	Parms.OwnerContext = OwnerContext;
	Parms.Amount = Amount;
	Parms.bAsPercent = bAsPercent;
	Parms.bAllowForHeavyWeapons = bAllowForHeavyWeapons;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakWeaponStatics.GetCurrentElementalType
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AWeapon*                          Weapon                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EOakElementalType                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EOakElementalType UOakWeaponStatics::GetCurrentElementalType(class AWeapon* Weapon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakWeaponStatics", "GetCurrentElementalType");

	Params::OakWeaponStatics_GetCurrentElementalType Parms{};

	Parms.Weapon = Weapon;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakWeaponStatics.GetElementalType
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AWeapon*                          Weapon                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   UseMode                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EOakElementalType                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EOakElementalType UOakWeaponStatics::GetElementalType(class AWeapon* Weapon, uint8 UseMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakWeaponStatics", "GetElementalType");

	Params::OakWeaponStatics_GetElementalType Parms{};

	Parms.Weapon = Weapon;
	Parms.UseMode = UseMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakWeaponStatics.GetWeaponDefinitionOverrideTags
// (Final, Native, Static, Protected, HasOutParams)
// Parameters:
// TArray<class FName>*                    OutNames                                               (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UOakWeaponStatics::GetWeaponDefinitionOverrideTags(TArray<class FName>* OutNames)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakWeaponStatics", "GetWeaponDefinitionOverrideTags");

	Params::OakWeaponStatics_GetWeaponDefinitionOverrideTags Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutNames != nullptr)
		*OutNames = std::move(Parms.OutNames);
}


// Function OakGame.OakWeaponStatics.GiveAmmoToCurrentCharacterWeapon
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          OwnerContext                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Amount                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bLoaded                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAsPercent                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAllowForHeavyWeapons                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakWeaponStatics::GiveAmmoToCurrentCharacterWeapon(class UObject* OwnerContext, int32 Amount, bool bLoaded, bool bAsPercent, bool bAllowForHeavyWeapons)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakWeaponStatics", "GiveAmmoToCurrentCharacterWeapon");

	Params::OakWeaponStatics_GiveAmmoToCurrentCharacterWeapon Parms{};

	Parms.OwnerContext = OwnerContext;
	Parms.Amount = Amount;
	Parms.bLoaded = bLoaded;
	Parms.bAsPercent = bAsPercent;
	Parms.bAllowForHeavyWeapons = bAllowForHeavyWeapons;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakWeaponStatics.RefillAmmoForCurrentCharacterWeapon
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          OwnerContext                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Amount                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAsPercent                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakWeaponStatics::RefillAmmoForCurrentCharacterWeapon(class UObject* OwnerContext, int32 Amount, bool bAsPercent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakWeaponStatics", "RefillAmmoForCurrentCharacterWeapon");

	Params::OakWeaponStatics_RefillAmmoForCurrentCharacterWeapon Parms{};

	Parms.OwnerContext = OwnerContext;
	Parms.Amount = Amount;
	Parms.bAsPercent = bAsPercent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakWeaponStatics.ReloadAllWeapons
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          OwnerContext                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bActiveWeaponIncluded                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakWeaponStatics::ReloadAllWeapons(class UObject* OwnerContext, bool bActiveWeaponIncluded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakWeaponStatics", "ReloadAllWeapons");

	Params::OakWeaponStatics_ReloadAllWeapons Parms{};

	Parms.OwnerContext = OwnerContext;
	Parms.bActiveWeaponIncluded = bActiveWeaponIncluded;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakWeaponStatics.ThrowEquippedWeapon
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           WeaponUser                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   actions                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   slot                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DamageOverride                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DamageRadiusOverride                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   LifetimeOverride                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakWeaponStatics::ThrowEquippedWeapon(class AActor* WeaponUser, int32 actions, uint8 slot, float DamageOverride, float DamageRadiusOverride, float LifetimeOverride)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakWeaponStatics", "ThrowEquippedWeapon");

	Params::OakWeaponStatics_ThrowEquippedWeapon Parms{};

	Parms.WeaponUser = WeaponUser;
	Parms.actions = actions;
	Parms.slot = slot;
	Parms.DamageOverride = DamageOverride;
	Parms.DamageRadiusOverride = DamageRadiusOverride;
	Parms.LifetimeOverride = LifetimeOverride;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_InGameMessage.OnOakCharacterChanged
// (Final, Native, Protected)

void UOakUIDataCollector_InGameMessage::OnOakCharacterChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_InGameMessage", "OnOakCharacterChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_InGameMessage.OnPrimaryCharacterChanged
// (Final, Native, Protected)
// Parameters:
// class AGbxPlayerController*             PlayerController                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ACharacter*                       OldCharacter                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ACharacter*                       NewCharacter                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIDataCollector_InGameMessage::OnPrimaryCharacterChanged(class AGbxPlayerController* PlayerController, class ACharacter* OldCharacter, class ACharacter* NewCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_InGameMessage", "OnPrimaryCharacterChanged");

	Params::OakUIDataCollector_InGameMessage_OnPrimaryCharacterChanged Parms{};

	Parms.PlayerController = PlayerController;
	Parms.OldCharacter = OldCharacter;
	Parms.NewCharacter = NewCharacter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_InGameMessage.OnRespawn
// (Final, Native, Protected)
// Parameters:
// bool                                    bIsAuthority                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsLocal                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIDataCollector_InGameMessage::OnRespawn(bool bIsAuthority, bool bIsLocal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_InGameMessage", "OnRespawn");

	Params::OakUIDataCollector_InGameMessage_OnRespawn Parms{};

	Parms.bIsAuthority = bIsAuthority;
	Parms.bIsLocal = bIsLocal;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_InGameMessage.OnTransportRetrieveRespawnFee
// (Final, Native, Protected)
// Parameters:
// bool                                    bIsAuthority                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsLocal                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bStarted                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIDataCollector_InGameMessage::OnTransportRetrieveRespawnFee(bool bIsAuthority, bool bIsLocal, bool bStarted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_InGameMessage", "OnTransportRetrieveRespawnFee");

	Params::OakUIDataCollector_InGameMessage_OnTransportRetrieveRespawnFee Parms{};

	Parms.bIsAuthority = bIsAuthority;
	Parms.bIsLocal = bIsLocal;
	Parms.bStarted = bStarted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_ItemCard.OnControllerChanged
// (Final, Native, Protected)
// Parameters:
// class APawn*                            Pawn                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*                      OldController                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*                      NewController                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIDataCollector_ItemCard::OnControllerChanged(class APawn* Pawn, class AController* OldController, class AController* NewController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_ItemCard", "OnControllerChanged");

	Params::OakUIDataCollector_ItemCard_OnControllerChanged Parms{};

	Parms.Pawn = Pawn;
	Parms.OldController = OldController;
	Parms.NewController = NewController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_ItemCard.OnFirmwareChanged
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const class FName&                      FirmwareIdent                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIDataCollector_ItemCard::OnFirmwareChanged(const class FName& FirmwareIdent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_ItemCard", "OnFirmwareChanged");

	Params::OakUIDataCollector_ItemCard_OnFirmwareChanged Parms{};

	Parms.FirmwareIdent = FirmwareIdent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_ItemCard.OnWeaponChanged
// (Final, Native, Protected)
// Parameters:
// class AWeapon*                          NewWeapon                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AWeapon*                          OldWeapon                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIDataCollector_ItemCard::OnWeaponChanged(class AWeapon* NewWeapon, class AWeapon* OldWeapon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_ItemCard", "OnWeaponChanged");

	Params::OakUIDataCollector_ItemCard_OnWeaponChanged Parms{};

	Parms.NewWeapon = NewWeapon;
	Parms.OldWeapon = OldWeapon;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_LoadCharacter.OnDelayedFocus
// (Final, Native, Protected)

void UOakUIDataCollector_LoadCharacter::OnDelayedFocus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_LoadCharacter", "OnDelayedFocus");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_LootFeed.OnPossessPawnChanged
// (Final, Native, Protected)
// Parameters:
// class APawn*                            OldPawn                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APawn*                            NewPawn                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIDataCollector_LootFeed::OnPossessPawnChanged(class APawn* OldPawn, class APawn* NewPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_LootFeed", "OnPossessPawnChanged");

	Params::OakUIDataCollector_LootFeed_OnPossessPawnChanged Parms{};

	Parms.OldPawn = OldPawn;
	Parms.NewPawn = NewPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_Nameplate.OnDisplayNameChanged
// (Final, Native, Protected)

void UOakUIDataCollector_Nameplate::OnDisplayNameChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_Nameplate", "OnDisplayNameChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_Nameplate.OnExperienceLevelChanged
// (Final, Native, Protected)

void UOakUIDataCollector_Nameplate::OnExperienceLevelChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_Nameplate", "OnExperienceLevelChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_Nameplate.OnIntrinsicElementChanged
// (Final, Native, Protected)
// Parameters:
// const EOakElementalType                 NewElement                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIDataCollector_Nameplate::OnIntrinsicElementChanged(const EOakElementalType NewElement)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_Nameplate", "OnIntrinsicElementChanged");

	Params::OakUIDataCollector_Nameplate_OnIntrinsicElementChanged Parms{};

	Parms.NewElement = NewElement;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_Nameplate.OnPossessPawnChanged
// (Final, Native, Protected)
// Parameters:
// class APawn*                            OldPawn                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APawn*                            NewPawn                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIDataCollector_Nameplate::OnPossessPawnChanged(class APawn* OldPawn, class APawn* NewPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_Nameplate", "OnPossessPawnChanged");

	Params::OakUIDataCollector_Nameplate_OnPossessPawnChanged Parms{};

	Parms.OldPawn = OldPawn;
	Parms.NewPawn = NewPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_Nameplate.OnBossDimmedStateUpdated
// (Final, Native, Protected, Const)
// Parameters:
// class AActor*                           Boss                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsStateActive                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIDataCollector_Nameplate::OnBossDimmedStateUpdated(class AActor* Boss, bool bIsStateActive) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_Nameplate", "OnBossDimmedStateUpdated");

	Params::OakUIDataCollector_Nameplate_OnBossDimmedStateUpdated Parms{};

	Parms.Boss = Boss;
	Parms.bIsStateActive = bIsStateActive;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_Nameplate.OnBossInvulnerabilityStateUpdated
// (Final, Native, Protected, Const)
// Parameters:
// class AActor*                           Boss                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsStateActive                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIDataCollector_Nameplate::OnBossInvulnerabilityStateUpdated(class AActor* Boss, bool bIsStateActive) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_Nameplate", "OnBossInvulnerabilityStateUpdated");

	Params::OakUIDataCollector_Nameplate_OnBossInvulnerabilityStateUpdated Parms{};

	Parms.Boss = Boss;
	Parms.bIsStateActive = bIsStateActive;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_Nameplate.OnVHEIconChanged
// (Final, Native, Protected, Const)
// Parameters:
// const class AOakCharacter*              TargetCharacter                                        (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIDataCollector_Nameplate::OnVHEIconChanged(const class AOakCharacter* TargetCharacter) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_Nameplate", "OnVHEIconChanged");

	Params::OakUIDataCollector_Nameplate_OnVHEIconChanged Parms{};

	Parms.TargetCharacter = TargetCharacter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_Options.OnEnhancedInputSettingsApplied
// (Final, Native, Protected)

void UOakUIDataCollector_Options::OnEnhancedInputSettingsApplied()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_Options", "OnEnhancedInputSettingsApplied");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_Options.OnRestoreOptionsChoiceMade
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const class FName&                      ChoiceNameId                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             ControllerId                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIDataCollector_Options::OnRestoreOptionsChoiceMade(const class FName& ChoiceNameId, const int32 ControllerId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_Options", "OnRestoreOptionsChoiceMade");

	Params::OakUIDataCollector_Options_OnRestoreOptionsChoiceMade Parms{};

	Parms.ChoiceNameId = ChoiceNameId;
	Parms.ControllerId = ControllerId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_OverheadNP.OnBeingRevivedStarted
// (Final, Native, Protected)
// Parameters:
// bool                                    bIsAuthority                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsLocal                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIDataCollector_OverheadNP::OnBeingRevivedStarted(bool bIsAuthority, bool bIsLocal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_OverheadNP", "OnBeingRevivedStarted");

	Params::OakUIDataCollector_OverheadNP_OnBeingRevivedStarted Parms{};

	Parms.bIsAuthority = bIsAuthority;
	Parms.bIsLocal = bIsLocal;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_OverheadNP.OnBeingRevivedStopped
// (Final, Native, Protected)
// Parameters:
// bool                                    bIsAuthority                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsLocal                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsSuccessful                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIDataCollector_OverheadNP::OnBeingRevivedStopped(bool bIsAuthority, bool bIsLocal, bool bIsSuccessful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_OverheadNP", "OnBeingRevivedStopped");

	Params::OakUIDataCollector_OverheadNP_OnBeingRevivedStopped Parms{};

	Parms.bIsAuthority = bIsAuthority;
	Parms.bIsLocal = bIsLocal;
	Parms.bIsSuccessful = bIsSuccessful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_OverheadNP.OnCharacterUXNameChanged
// (Final, Native, Protected)

void UOakUIDataCollector_OverheadNP::OnCharacterUXNameChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_OverheadNP", "OnCharacterUXNameChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_OverheadNP.OnDownedEnded
// (Final, Native, Protected)
// Parameters:
// bool                                    bIsAuthority                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsLocal                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EExitDownStateReason                    reason                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIDataCollector_OverheadNP::OnDownedEnded(bool bIsAuthority, bool bIsLocal, EExitDownStateReason reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_OverheadNP", "OnDownedEnded");

	Params::OakUIDataCollector_OverheadNP_OnDownedEnded Parms{};

	Parms.bIsAuthority = bIsAuthority;
	Parms.bIsLocal = bIsLocal;
	Parms.reason = reason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_OverheadNP.OnDeath
// (Final, Native, Protected, Const)

void UOakUIDataCollector_OverheadNP::OnDeath() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_OverheadNP", "OnDeath");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_OverheadNP.OnDowned
// (Final, Native, Protected, Const)
// Parameters:
// bool                                    bIsAuthority                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsLocal                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIDataCollector_OverheadNP::OnDowned(bool bIsAuthority, bool bIsLocal) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_OverheadNP", "OnDowned");

	Params::OakUIDataCollector_OverheadNP_OnDowned Parms{};

	Parms.bIsAuthority = bIsAuthority;
	Parms.bIsLocal = bIsLocal;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_OverheadNP.OnRespawn
// (Final, Native, Protected, Const)
// Parameters:
// bool                                    bIsAuthority                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsLocal                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIDataCollector_OverheadNP::OnRespawn(bool bIsAuthority, bool bIsLocal) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_OverheadNP", "OnRespawn");

	Params::OakUIDataCollector_OverheadNP_OnRespawn Parms{};

	Parms.bIsAuthority = bIsAuthority;
	Parms.bIsLocal = bIsLocal;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_PassiveBar.OnIconCountChange
// (Final, Native, Protected)
// Parameters:
// const int32                             Count                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIDataCollector_PassiveBar::OnIconCountChange(const int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_PassiveBar", "OnIconCountChange");

	Params::OakUIDataCollector_PassiveBar_OnIconCountChange Parms{};

	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_PassiveBar.OnIconUpdated
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FOakPassiveHUDIconItem&    PassiveIcon                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UOakUIDataCollector_PassiveBar::OnIconUpdated(const struct FOakPassiveHUDIconItem& PassiveIcon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_PassiveBar", "OnIconUpdated");

	Params::OakUIDataCollector_PassiveBar_OnIconUpdated Parms{};

	Parms.PassiveIcon = std::move(PassiveIcon);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_PlayerControllerInfo.OnVehicleCanSummonStatusUpdateInterval
// (Final, Native, Protected)

void UOakUIDataCollector_PlayerControllerInfo::OnVehicleCanSummonStatusUpdateInterval()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_PlayerControllerInfo", "OnVehicleCanSummonStatusUpdateInterval");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_PlayerGroup.OnPossessPawnChanged
// (Final, Native, Protected)
// Parameters:
// class APawn*                            OldPawn                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APawn*                            NewPawn                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIDataCollector_PlayerGroup::OnPossessPawnChanged(class APawn* OldPawn, class APawn* NewPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_PlayerGroup", "OnPossessPawnChanged");

	Params::OakUIDataCollector_PlayerGroup_OnPossessPawnChanged Parms{};

	Parms.OldPawn = OldPawn;
	Parms.NewPawn = NewPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_Progression.OnOakCharacterChanged
// (Final, Native, Private)

void UOakUIDataCollector_Progression::OnOakCharacterChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_Progression", "OnOakCharacterChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_ResourceMeter.OnMoveRejected
// (Final, Native, Protected)
// Parameters:
// EOakCharacterMovementRejectableMove     MovementType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EOakCharacterMovementMoveRejectionReasonRejectionReason                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIDataCollector_ResourceMeter::OnMoveRejected(EOakCharacterMovementRejectableMove MovementType, EOakCharacterMovementMoveRejectionReason RejectionReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_ResourceMeter", "OnMoveRejected");

	Params::OakUIDataCollector_ResourceMeter_OnMoveRejected Parms{};

	Parms.MovementType = MovementType;
	Parms.RejectionReason = RejectionReason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_ResourceMeter.OnNewResourcePoolAdded
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FGameResourcePoolReference*      ResourcePoolRef                                        (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)

void UOakUIDataCollector_ResourceMeter::OnNewResourcePoolAdded(struct FGameResourcePoolReference* ResourcePoolRef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_ResourceMeter", "OnNewResourcePoolAdded");

	Params::OakUIDataCollector_ResourceMeter_OnNewResourcePoolAdded Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResourcePoolRef != nullptr)
		*ResourcePoolRef = std::move(Parms.ResourcePoolRef);
}


// Function OakGame.OakUIDataCollector_ResourceMeter.OnOakCharacterChanged
// (Final, Native, Protected)

void UOakUIDataCollector_ResourceMeter::OnOakCharacterChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_ResourceMeter", "OnOakCharacterChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_ResourceMeter.OnResourcePoolMinMaxChanged
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FGameResourcePoolReference*      ResourcePoolRef                                        (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   MinValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MaxValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIDataCollector_ResourceMeter::OnResourcePoolMinMaxChanged(struct FGameResourcePoolReference* ResourcePoolRef, float MinValue, float MaxValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_ResourceMeter", "OnResourcePoolMinMaxChanged");

	Params::OakUIDataCollector_ResourceMeter_OnResourcePoolMinMaxChanged Parms{};

	Parms.MinValue = MinValue;
	Parms.MaxValue = MaxValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResourcePoolRef != nullptr)
		*ResourcePoolRef = std::move(Parms.ResourcePoolRef);
}


// Function OakGame.OakUIDataCollector_ResourceMeter.OnResourcePoolValueChanged
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FGameResourcePoolReference*      ResourcePoolRef                                        (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIDataCollector_ResourceMeter::OnResourcePoolValueChanged(struct FGameResourcePoolReference* ResourcePoolRef, float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_ResourceMeter", "OnResourcePoolValueChanged");

	Params::OakUIDataCollector_ResourceMeter_OnResourcePoolValueChanged Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResourcePoolRef != nullptr)
		*ResourcePoolRef = std::move(Parms.ResourcePoolRef);
}


// Function OakGame.TerminalGadget.RegisterTerminal
// (Final, Native, Protected)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATerminalGadget::RegisterTerminal(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TerminalGadget", "RegisterTerminal");

	Params::TerminalGadget_RegisterTerminal Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_TravelNotification.HideUI
// (Final, Native, Protected)

void UOakUIDataCollector_TravelNotification::HideUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_TravelNotification", "HideUI");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_TravelNotification.OnPlayerConnected
// (Final, Native, Protected)
// Parameters:
// class APlayerState*                     ConnectedPlayer                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIDataCollector_TravelNotification::OnPlayerConnected(class APlayerState* ConnectedPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_TravelNotification", "OnPlayerConnected");

	Params::OakUIDataCollector_TravelNotification_OnPlayerConnected Parms{};

	Parms.ConnectedPlayer = ConnectedPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_TravelNotification.OnPlayerDisconnected
// (Final, Native, Protected)
// Parameters:
// class APlayerState*                     DisconnectedPlayer                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIDataCollector_TravelNotification::OnPlayerDisconnected(class APlayerState* DisconnectedPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_TravelNotification", "OnPlayerDisconnected");

	Params::OakUIDataCollector_TravelNotification_OnPlayerDisconnected Parms{};

	Parms.DisconnectedPlayer = DisconnectedPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.TurretGadget.ProjectileDestroyed
// (Final, Native, Protected)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATurretGadget::ProjectileDestroyed(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TurretGadget", "ProjectileDestroyed");

	Params::TurretGadget_ProjectileDestroyed Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.TurretGadget.RegisterTurret
// (Final, Native, Protected)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATurretGadget::RegisterTurret(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TurretGadget", "RegisterTurret");

	Params::TurretGadget_RegisterTurret Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.TurretGadget.UnregisterTurret
// (Final, Native, Protected)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATurretGadget::UnregisterTurret(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TurretGadget", "UnregisterTurret");

	Params::TurretGadget_UnregisterTurret Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_VaultTracker.ChangeRadiusDistance
// (Final, Native, Protected)
// Parameters:
// class AOakPlayerController*             OakPC                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NewRadius                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIDataCollector_VaultTracker::ChangeRadiusDistance(class AOakPlayerController* OakPC, int32 NewRadius)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_VaultTracker", "ChangeRadiusDistance");

	Params::OakUIDataCollector_VaultTracker_ChangeRadiusDistance Parms{};

	Parms.OakPC = OakPC;
	Parms.NewRadius = NewRadius;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_VaultTracker.ChangeTrackerActivated
// (Final, Native, Protected)
// Parameters:
// class AOakPlayerController*             OakPC                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Activated                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIDataCollector_VaultTracker::ChangeTrackerActivated(class AOakPlayerController* OakPC, bool Activated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_VaultTracker", "ChangeTrackerActivated");

	Params::OakUIDataCollector_VaultTracker_ChangeTrackerActivated Parms{};

	Parms.OakPC = OakPC;
	Parms.Activated = Activated;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_VaultTracker.TrackedObjectChanged
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class AOakPlayerController*             OakPC                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FOakTrackerData&           data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UOakUIDataCollector_VaultTracker::TrackedObjectChanged(class AOakPlayerController* OakPC, const struct FOakTrackerData& data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_VaultTracker", "TrackedObjectChanged");

	Params::OakUIDataCollector_VaultTracker_TrackedObjectChanged Parms{};

	Parms.OakPC = OakPC;
	Parms.data = std::move(data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_VaultTracker.TrackedObjectDiscovered
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class AOakPlayerController*             OakPC                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FOakTrackerData&           data                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UOakUIDataCollector_VaultTracker::TrackedObjectDiscovered(class AOakPlayerController* OakPC, const struct FOakTrackerData& data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_VaultTracker", "TrackedObjectDiscovered");

	Params::OakUIDataCollector_VaultTracker_TrackedObjectDiscovered Parms{};

	Parms.OakPC = OakPC;
	Parms.data = std::move(data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_VehicleInfo.OnPossessPawnChanged
// (Final, Native, Protected)
// Parameters:
// class APawn*                            OldPawn                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APawn*                            NewPawn                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIDataCollector_VehicleInfo::OnPossessPawnChanged(class APawn* OldPawn, class APawn* NewPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_VehicleInfo", "OnPossessPawnChanged");

	Params::OakUIDataCollector_VehicleInfo_OnPossessPawnChanged Parms{};

	Parms.OldPawn = OldPawn;
	Parms.NewPawn = NewPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_VehicleInfo.OnResourcePoolMinMaxChanged
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FGameResourcePoolReference*      ResourcePoolRef                                        (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   MinValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MaxValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIDataCollector_VehicleInfo::OnResourcePoolMinMaxChanged(struct FGameResourcePoolReference* ResourcePoolRef, float MinValue, float MaxValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_VehicleInfo", "OnResourcePoolMinMaxChanged");

	Params::OakUIDataCollector_VehicleInfo_OnResourcePoolMinMaxChanged Parms{};

	Parms.MinValue = MinValue;
	Parms.MaxValue = MaxValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResourcePoolRef != nullptr)
		*ResourcePoolRef = std::move(Parms.ResourcePoolRef);
}


// Function OakGame.OakUIDataCollector_VehicleInfo.OnResourcePoolValueChanged
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FGameResourcePoolReference*      ResourcePoolRef                                        (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIDataCollector_VehicleInfo::OnResourcePoolValueChanged(struct FGameResourcePoolReference* ResourcePoolRef, float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_VehicleInfo", "OnResourcePoolValueChanged");

	Params::OakUIDataCollector_VehicleInfo_OnResourcePoolValueChanged Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResourcePoolRef != nullptr)
		*ResourcePoolRef = std::move(Parms.ResourcePoolRef);
}


// Function OakGame.OakUIDataCollector_VehicleInfo.UpdateWeaponIndex
// (Final, Native, Protected)

void UOakUIDataCollector_VehicleInfo::UpdateWeaponIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_VehicleInfo", "UpdateWeaponIndex");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_VehicleVitals.OnControllerChanged
// (Final, Native, Protected)
// Parameters:
// class APawn*                            Pawn                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*                      OldController                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*                      NewController                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIDataCollector_VehicleVitals::OnControllerChanged(class APawn* Pawn, class AController* OldController, class AController* NewController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_VehicleVitals", "OnControllerChanged");

	Params::OakUIDataCollector_VehicleVitals_OnControllerChanged Parms{};

	Parms.Pawn = Pawn;
	Parms.OldController = OldController;
	Parms.NewController = NewController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_VehicleVitals.OnHealthStateTypeChanged
// (Final, Native, Protected)

void UOakUIDataCollector_VehicleVitals::OnHealthStateTypeChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_VehicleVitals", "OnHealthStateTypeChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_VehicleVitals.OnNewResourcePoolAdded
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FGameResourcePoolReference*      ResourcePoolRef                                        (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)

void UOakUIDataCollector_VehicleVitals::OnNewResourcePoolAdded(struct FGameResourcePoolReference* ResourcePoolRef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_VehicleVitals", "OnNewResourcePoolAdded");

	Params::OakUIDataCollector_VehicleVitals_OnNewResourcePoolAdded Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResourcePoolRef != nullptr)
		*ResourcePoolRef = std::move(Parms.ResourcePoolRef);
}


// Function OakGame.OakUIDataCollector_VehicleVitals.OnResourcePoolMinMaxChanged
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FGameResourcePoolReference*      ResourcePoolRef                                        (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   MinValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MaxValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIDataCollector_VehicleVitals::OnResourcePoolMinMaxChanged(struct FGameResourcePoolReference* ResourcePoolRef, float MinValue, float MaxValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_VehicleVitals", "OnResourcePoolMinMaxChanged");

	Params::OakUIDataCollector_VehicleVitals_OnResourcePoolMinMaxChanged Parms{};

	Parms.MinValue = MinValue;
	Parms.MaxValue = MaxValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResourcePoolRef != nullptr)
		*ResourcePoolRef = std::move(Parms.ResourcePoolRef);
}


// Function OakGame.OakUIDataCollector_VehicleVitals.OnResourcePoolSegmentCountChanged
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FGameResourcePoolReference*      ResourcePoolRef                                        (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   Segments                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIDataCollector_VehicleVitals::OnResourcePoolSegmentCountChanged(struct FGameResourcePoolReference* ResourcePoolRef, int32 Segments)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_VehicleVitals", "OnResourcePoolSegmentCountChanged");

	Params::OakUIDataCollector_VehicleVitals_OnResourcePoolSegmentCountChanged Parms{};

	Parms.Segments = Segments;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResourcePoolRef != nullptr)
		*ResourcePoolRef = std::move(Parms.ResourcePoolRef);
}


// Function OakGame.OakUIDataCollector_VehicleVitals.OnResourcePoolValueChanged
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FGameResourcePoolReference*      ResourcePoolRef                                        (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIDataCollector_VehicleVitals::OnResourcePoolValueChanged(struct FGameResourcePoolReference* ResourcePoolRef, float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_VehicleVitals", "OnResourcePoolValueChanged");

	Params::OakUIDataCollector_VehicleVitals_OnResourcePoolValueChanged Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResourcePoolRef != nullptr)
		*ResourcePoolRef = std::move(Parms.ResourcePoolRef);
}


// Function OakGame.OakUIDataCollector_Weapon.OnControllerChanged
// (Final, Native, Protected)
// Parameters:
// class APawn*                            Pawn                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*                      OldController                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*                      NewController                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIDataCollector_Weapon::OnControllerChanged(class APawn* Pawn, class AController* OldController, class AController* NewController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_Weapon", "OnControllerChanged");

	Params::OakUIDataCollector_Weapon_OnControllerChanged Parms{};

	Parms.Pawn = Pawn;
	Parms.OldController = OldController;
	Parms.NewController = NewController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_Weapon.OnModeSwitched
// (Final, Native, Protected)

void UOakUIDataCollector_Weapon::OnModeSwitched()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_Weapon", "OnModeSwitched");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_Weapon.OnResourcePoolMinMaxChanged
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FGameResourcePoolReference*      ResourcePoolRef                                        (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   MinValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MaxValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIDataCollector_Weapon::OnResourcePoolMinMaxChanged(struct FGameResourcePoolReference* ResourcePoolRef, float MinValue, float MaxValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_Weapon", "OnResourcePoolMinMaxChanged");

	Params::OakUIDataCollector_Weapon_OnResourcePoolMinMaxChanged Parms{};

	Parms.MinValue = MinValue;
	Parms.MaxValue = MaxValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResourcePoolRef != nullptr)
		*ResourcePoolRef = std::move(Parms.ResourcePoolRef);
}


// Function OakGame.OakUIDataCollector_Weapon.OnResourcePoolValueChanged
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FGameResourcePoolReference*      ResourcePoolRef                                        (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIDataCollector_Weapon::OnResourcePoolValueChanged(struct FGameResourcePoolReference* ResourcePoolRef, float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_Weapon", "OnResourcePoolValueChanged");

	Params::OakUIDataCollector_Weapon_OnResourcePoolValueChanged Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResourcePoolRef != nullptr)
		*ResourcePoolRef = std::move(Parms.ResourcePoolRef);
}


// Function OakGame.OakUIDataCollector_Weapon.OnVehicleDrivenChanged
// (Final, Native, Protected)
// Parameters:
// class AOakVehicle*                      CurrentVehicle                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIDataCollector_Weapon::OnVehicleDrivenChanged(class AOakVehicle* CurrentVehicle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_Weapon", "OnVehicleDrivenChanged");

	Params::OakUIDataCollector_Weapon_OnVehicleDrivenChanged Parms{};

	Parms.CurrentVehicle = CurrentVehicle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_Weapon.OnWeaponEquipped
// (Final, Native, Protected)
// Parameters:
// class AWeapon*                          EventWeapon                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIDataCollector_Weapon::OnWeaponEquipped(class AWeapon* EventWeapon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_Weapon", "OnWeaponEquipped");

	Params::OakUIDataCollector_Weapon_OnWeaponEquipped Parms{};

	Parms.EventWeapon = EventWeapon;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_Weapon.OnWeaponPutDown
// (Final, Native, Protected)
// Parameters:
// class AWeapon*                          EventWeapon                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIDataCollector_Weapon::OnWeaponPutDown(class AWeapon* EventWeapon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_Weapon", "OnWeaponPutDown");

	Params::OakUIDataCollector_Weapon_OnWeaponPutDown Parms{};

	Parms.EventWeapon = EventWeapon;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_Weapon.OnWeaponTargetLockChanged
// (Final, Native, Protected)
// Parameters:
// class AWeapon*                          EventWeapon                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bLockedOn                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIDataCollector_Weapon::OnWeaponTargetLockChanged(class AWeapon* EventWeapon, bool bLockedOn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_Weapon", "OnWeaponTargetLockChanged");

	Params::OakUIDataCollector_Weapon_OnWeaponTargetLockChanged Parms{};

	Parms.EventWeapon = EventWeapon;
	Parms.bLockedOn = bLockedOn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_Weapon.OnZoomedOut
// (Final, Native, Protected)

void UOakUIDataCollector_Weapon::OnZoomedOut()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_Weapon", "OnZoomedOut");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_Weapon.OnZoomInChange
// (Final, Native, Protected)
// Parameters:
// uint8                                   InLevel                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIDataCollector_Weapon::OnZoomInChange(uint8 InLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_Weapon", "OnZoomInChange");

	Params::OakUIDataCollector_Weapon_OnZoomInChange Parms{};

	Parms.InLevel = InLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_WeaponStatus.OnHeatChanged
// (Final, Native, Protected)
// Parameters:
// float                                   Heat                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIDataCollector_WeaponStatus::OnHeatChanged(float Heat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_WeaponStatus", "OnHeatChanged");

	Params::OakUIDataCollector_WeaponStatus_OnHeatChanged Parms{};

	Parms.Heat = Heat;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_WeaponStatus.OnOverheatChanged
// (Final, Native, Protected)
// Parameters:
// bool                                    bIsOverheated                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIDataCollector_WeaponStatus::OnOverheatChanged(bool bIsOverheated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_WeaponStatus", "OnOverheatChanged");

	Params::OakUIDataCollector_WeaponStatus_OnOverheatChanged Parms{};

	Parms.bIsOverheated = bIsOverheated;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_WeaponStatus.OnReloadEnded
// (Final, Native, Protected)
// Parameters:
// class AWeapon*                          EventWeapon                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bCompleted                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIDataCollector_WeaponStatus::OnReloadEnded(class AWeapon* EventWeapon, bool bCompleted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_WeaponStatus", "OnReloadEnded");

	Params::OakUIDataCollector_WeaponStatus_OnReloadEnded Parms{};

	Parms.EventWeapon = EventWeapon;
	Parms.bCompleted = bCompleted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_WeaponStatus.OnReloadStarted
// (Final, Native, Protected)
// Parameters:
// class AWeapon*                          EventWeapon                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAutoReload                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIDataCollector_WeaponStatus::OnReloadStarted(class AWeapon* EventWeapon, bool bAutoReload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_WeaponStatus", "OnReloadStarted");

	Params::OakUIDataCollector_WeaponStatus_OnReloadStarted Parms{};

	Parms.EventWeapon = EventWeapon;
	Parms.bAutoReload = bAutoReload;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_WeaponStatus.OnStartSwitchingModes
// (Final, Native, Protected)

void UOakUIDataCollector_WeaponStatus::OnStartSwitchingModes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_WeaponStatus", "OnStartSwitchingModes");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_WeaponStatus.OnSwitchedMode
// (Final, Native, Protected)

void UOakUIDataCollector_WeaponStatus::OnSwitchedMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_WeaponStatus", "OnSwitchedMode");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_WeaponStatus.OnWeaponChanged
// (Final, Native, Protected)
// Parameters:
// class AWeapon*                          NewWeapon                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AWeapon*                          OldWeapon                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIDataCollector_WeaponStatus::OnWeaponChanged(class AWeapon* NewWeapon, class AWeapon* OldWeapon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_WeaponStatus", "OnWeaponChanged");

	Params::OakUIDataCollector_WeaponStatus_OnWeaponChanged Parms{};

	Parms.NewWeapon = NewWeapon;
	Parms.OldWeapon = OldWeapon;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_WeaponStatus.OnWeaponChangeStarted
// (Final, Native, Protected)
// Parameters:
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EWeaponChangeOperationType              ChangeType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EWeaponType                             WeaponType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIDataCollector_WeaponStatus::OnWeaponChangeStarted(float Duration, EWeaponChangeOperationType ChangeType, EWeaponType WeaponType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_WeaponStatus", "OnWeaponChangeStarted");

	Params::OakUIDataCollector_WeaponStatus_OnWeaponChangeStarted Parms{};

	Parms.Duration = Duration;
	Parms.ChangeType = ChangeType;
	Parms.WeaponType = WeaponType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_WeaponStatus.OnWeaponSlotUnlocked
// (Final, Native, Protected)
// Parameters:
// int32                                   SlotIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             AllowedType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIDataCollector_WeaponStatus::OnWeaponSlotUnlocked(int32 SlotIndex, class FName AllowedType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_WeaponStatus", "OnWeaponSlotUnlocked");

	Params::OakUIDataCollector_WeaponStatus_OnWeaponSlotUnlocked Parms{};

	Parms.SlotIndex = SlotIndex;
	Parms.AllowedType = AllowedType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_WeaponStatus.InitWeaponSlots
// (Final, Native, Protected, Const)
// Parameters:
// class AOakCharacter*                    Character                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIDataCollector_WeaponStatus::InitWeaponSlots(class AOakCharacter* Character) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_WeaponStatus", "InitWeaponSlots");

	Params::OakUIDataCollector_WeaponStatus_InitWeaponSlots Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIDataCollector_WeaponStatus.OnWeaponChangeFinished
// (Final, Native, Protected, Const)

void UOakUIDataCollector_WeaponStatus::OnWeaponChangeFinished() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIDataCollector_WeaponStatus", "OnWeaponChangeFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIFunctionLibrary.FormatTime
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FTimespan&                 Timespan                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FText                       ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

const class FText UOakUIFunctionLibrary::FormatTime(const struct FTimespan& Timespan)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakUIFunctionLibrary", "FormatTime");

	Params::OakUIFunctionLibrary_FormatTime Parms{};

	Parms.Timespan = std::move(Timespan);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakUIFunctionLibrary.FormatTimeLeftFromDataTime
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FDateTime&                 Date                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   bOutIsDisplayingSeconds                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   bOutIsExpired                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FText                       ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

const class FText UOakUIFunctionLibrary::FormatTimeLeftFromDataTime(const struct FDateTime& Date, bool* bOutIsDisplayingSeconds, bool* bOutIsExpired)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakUIFunctionLibrary", "FormatTimeLeftFromDataTime");

	Params::OakUIFunctionLibrary_FormatTimeLeftFromDataTime Parms{};

	Parms.Date = std::move(Date);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bOutIsDisplayingSeconds != nullptr)
		*bOutIsDisplayingSeconds = Parms.bOutIsDisplayingSeconds;

	if (bOutIsExpired != nullptr)
		*bOutIsExpired = Parms.bOutIsExpired;

	return Parms.ReturnValue;
}


// Function OakGame.OakUIFunctionLibrary.FormatTimeLeftFromTimespan
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FTimespan&                 Timespan                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   bOutIsDisplayingSeconds                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   bOutIsExpired                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FText                       ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

const class FText UOakUIFunctionLibrary::FormatTimeLeftFromTimespan(const struct FTimespan& Timespan, bool* bOutIsDisplayingSeconds, bool* bOutIsExpired)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakUIFunctionLibrary", "FormatTimeLeftFromTimespan");

	Params::OakUIFunctionLibrary_FormatTimeLeftFromTimespan Parms{};

	Parms.Timespan = std::move(Timespan);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bOutIsDisplayingSeconds != nullptr)
		*bOutIsDisplayingSeconds = Parms.bOutIsDisplayingSeconds;

	if (bOutIsExpired != nullptr)
		*bOutIsExpired = Parms.bOutIsExpired;

	return Parms.ReturnValue;
}


// Function OakGame.OakUIFunctionLibrary.GetLocalizedText
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const FGbxDefPtrProperty_               DefPtr                                                 (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FText                       ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const class FText UOakUIFunctionLibrary::GetLocalizedText(const FGbxDefPtrProperty_ DefPtr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakUIFunctionLibrary", "GetLocalizedText");

	Params::OakUIFunctionLibrary_GetLocalizedText Parms{};

	Parms.DefPtr = DefPtr;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakUIFunctionLibrary.GetLocalizedTextFromName
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const class FName&                      Name_0                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FText                       ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

const class FText UOakUIFunctionLibrary::GetLocalizedTextFromName(const class FName& Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakUIFunctionLibrary", "GetLocalizedTextFromName");

	Params::OakUIFunctionLibrary_GetLocalizedTextFromName Parms{};

	Parms.Name_0 = Name_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakUIGameUserSettings.ApplyBestSettingsFromBenchmark
// (Final, Native, Public)
// Parameters:
// bool                                    RunBenchmark                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIGameUserSettings::ApplyBestSettingsFromBenchmark(bool RunBenchmark)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIGameUserSettings", "ApplyBestSettingsFromBenchmark");

	Params::OakUIGameUserSettings_ApplyBestSettingsFromBenchmark Parms{};

	Parms.RunBenchmark = RunBenchmark;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIGameUserSettings.DefineBestSettingsFromBenchmark
// (Final, Native, Public)

void UOakUIGameUserSettings::DefineBestSettingsFromBenchmark()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIGameUserSettings", "DefineBestSettingsFromBenchmark");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIHelpers_Capital.GetCapitalIcon
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// FGbxDefPtrProperty_                     Capital                                                (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftObjectPtr<class UTexture2D>        ReturnValue                                            (Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSoftObjectPtr<class UTexture2D> UOakUIHelpers_Capital::GetCapitalIcon(FGbxDefPtrProperty_ Capital)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakUIHelpers_Capital", "GetCapitalIcon");

	Params::OakUIHelpers_Capital_GetCapitalIcon Parms{};

	Parms.Capital = Capital;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakUIHelpers_Capital.GetCapitalIconFromName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             CapitalName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftObjectPtr<class UTexture2D>        ReturnValue                                            (Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSoftObjectPtr<class UTexture2D> UOakUIHelpers_Capital::GetCapitalIconFromName(class FName CapitalName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakUIHelpers_Capital", "GetCapitalIconFromName");

	Params::OakUIHelpers_Capital_GetCapitalIconFromName Parms{};

	Parms.CapitalName = CapitalName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakUIHelpers_Capital.GetCapitalMarkupBound
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// FGbxDefPtrProperty_                     Capital                                                (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UOakUIHelpers_Capital::GetCapitalMarkupBound(FGbxDefPtrProperty_ Capital)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakUIHelpers_Capital", "GetCapitalMarkupBound");

	Params::OakUIHelpers_Capital_GetCapitalMarkupBound Parms{};

	Parms.Capital = Capital;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakUIHelpers_Capital.GetCapitalMarkupBoundFromName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             CapitalName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UOakUIHelpers_Capital::GetCapitalMarkupBoundFromName(class FName CapitalName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakUIHelpers_Capital", "GetCapitalMarkupBoundFromName");

	Params::OakUIHelpers_Capital_GetCapitalMarkupBoundFromName Parms{};

	Parms.CapitalName = CapitalName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakUIHelpers_Capital.GetCurrencyCantAffordMarkupBound
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// FGbxDefPtrProperty_                     currency                                               (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UOakUIHelpers_Capital::GetCurrencyCantAffordMarkupBound(FGbxDefPtrProperty_ currency)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakUIHelpers_Capital", "GetCurrencyCantAffordMarkupBound");

	Params::OakUIHelpers_Capital_GetCurrencyCantAffordMarkupBound Parms{};

	Parms.currency = currency;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakUIHelpers_Capital.GetCurrencyCantAffordMarkupBoundFromName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             CurrencyName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UOakUIHelpers_Capital::GetCurrencyCantAffordMarkupBoundFromName(class FName CurrencyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakUIHelpers_Capital", "GetCurrencyCantAffordMarkupBoundFromName");

	Params::OakUIHelpers_Capital_GetCurrencyCantAffordMarkupBoundFromName Parms{};

	Parms.CurrencyName = CurrencyName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakUILabelWidgetComponent.SetText
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FText&                      Text                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UOakUILabelWidgetComponent::SetText(const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUILabelWidgetComponent", "SetText");

	Params::OakUILabelWidgetComponent_SetText Parms{};

	Parms.Text = std::move(Text);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUILabelWidgetComponent.SetWidgetVisible
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Visible                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUILabelWidgetComponent::SetWidgetVisible(bool Visible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUILabelWidgetComponent", "SetWidgetVisible");

	Params::OakUILabelWidgetComponent_SetWidgetVisible Parms{};

	Parms.Visible = Visible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakUIScript_Backpack.BackpackSlotFocused
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Backpack::BackpackSlotFocused(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Backpack", "BackpackSlotFocused");

	Params::OakUIScript_Backpack_BackpackSlotFocused Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Backpack.BackpackSlotUnfocused
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Backpack::BackpackSlotUnfocused(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Backpack", "BackpackSlotUnfocused");

	Params::OakUIScript_Backpack_BackpackSlotUnfocused Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Backpack.BuyItem
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Backpack::BuyItem(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Backpack", "BuyItem");

	Params::OakUIScript_Backpack_BuyItem Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Backpack.ClickAssaultRifle
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Backpack::ClickAssaultRifle(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Backpack", "ClickAssaultRifle");

	Params::OakUIScript_Backpack_ClickAssaultRifle Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Backpack.ClickClassMod
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Backpack::ClickClassMod(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Backpack", "ClickClassMod");

	Params::OakUIScript_Backpack_ClickClassMod Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Backpack.ClickEnhancement
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Backpack::ClickEnhancement(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Backpack", "ClickEnhancement");

	Params::OakUIScript_Backpack_ClickEnhancement Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Backpack.ClickGadget
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Backpack::ClickGadget(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Backpack", "ClickGadget");

	Params::OakUIScript_Backpack_ClickGadget Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Backpack.ClickGrenade
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Backpack::ClickGrenade(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Backpack", "ClickGrenade");

	Params::OakUIScript_Backpack_ClickGrenade Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Backpack.ClickHeavyWeapon
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Backpack::ClickHeavyWeapon(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Backpack", "ClickHeavyWeapon");

	Params::OakUIScript_Backpack_ClickHeavyWeapon Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Backpack.ClickPistol
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Backpack::ClickPistol(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Backpack", "ClickPistol");

	Params::OakUIScript_Backpack_ClickPistol Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Backpack.ClickRepKit
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Backpack::ClickRepKit(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Backpack", "ClickRepKit");

	Params::OakUIScript_Backpack_ClickRepKit Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Backpack.ClickShield
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Backpack::ClickShield(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Backpack", "ClickShield");

	Params::OakUIScript_Backpack_ClickShield Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Backpack.ClickShotgun
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Backpack::ClickShotgun(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Backpack", "ClickShotgun");

	Params::OakUIScript_Backpack_ClickShotgun Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Backpack.ClickSMG
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Backpack::ClickSMG(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Backpack", "ClickSMG");

	Params::OakUIScript_Backpack_ClickSMG Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Backpack.ClickSniper
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Backpack::ClickSniper(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Backpack", "ClickSniper");

	Params::OakUIScript_Backpack_ClickSniper Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Backpack.CloseBackpack
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Backpack::CloseBackpack(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Backpack", "CloseBackpack");

	Params::OakUIScript_Backpack_CloseBackpack Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Backpack.ClosePlayerStats
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Backpack::ClosePlayerStats(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Backpack", "ClosePlayerStats");

	Params::OakUIScript_Backpack_ClosePlayerStats Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Backpack.CloseRewardCenter
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Backpack::CloseRewardCenter(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Backpack", "CloseRewardCenter");

	Params::OakUIScript_Backpack_CloseRewardCenter Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Backpack.CompareStart
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Backpack::CompareStart(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Backpack", "CompareStart");

	Params::OakUIScript_Backpack_CompareStart Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Backpack.CompareStop
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Backpack::CompareStop(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Backpack", "CompareStop");

	Params::OakUIScript_Backpack_CompareStop Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Backpack.DropItem
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Backpack::DropItem(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Backpack", "DropItem");

	Params::OakUIScript_Backpack_DropItem Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Backpack.EquipAssaultRifle
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Backpack::EquipAssaultRifle(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Backpack", "EquipAssaultRifle");

	Params::OakUIScript_Backpack_EquipAssaultRifle Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Backpack.EquipClassMod
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Backpack::EquipClassMod(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Backpack", "EquipClassMod");

	Params::OakUIScript_Backpack_EquipClassMod Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Backpack.EquipEnhancement
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Backpack::EquipEnhancement(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Backpack", "EquipEnhancement");

	Params::OakUIScript_Backpack_EquipEnhancement Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Backpack.EquipGadget
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Backpack::EquipGadget(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Backpack", "EquipGadget");

	Params::OakUIScript_Backpack_EquipGadget Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Backpack.EquipGrenade
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Backpack::EquipGrenade(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Backpack", "EquipGrenade");

	Params::OakUIScript_Backpack_EquipGrenade Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Backpack.EquipHeavyWeapon
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Backpack::EquipHeavyWeapon(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Backpack", "EquipHeavyWeapon");

	Params::OakUIScript_Backpack_EquipHeavyWeapon Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Backpack.EquipItem
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Backpack::EquipItem(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Backpack", "EquipItem");

	Params::OakUIScript_Backpack_EquipItem Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Backpack.EquipPistol
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Backpack::EquipPistol(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Backpack", "EquipPistol");

	Params::OakUIScript_Backpack_EquipPistol Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Backpack.EquipRepKit
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Backpack::EquipRepKit(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Backpack", "EquipRepKit");

	Params::OakUIScript_Backpack_EquipRepKit Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Backpack.EquipShield
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Backpack::EquipShield(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Backpack", "EquipShield");

	Params::OakUIScript_Backpack_EquipShield Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Backpack.EquipShotgun
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Backpack::EquipShotgun(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Backpack", "EquipShotgun");

	Params::OakUIScript_Backpack_EquipShotgun Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Backpack.EquipSMG
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Backpack::EquipSMG(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Backpack", "EquipSMG");

	Params::OakUIScript_Backpack_EquipSMG Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Backpack.EquipSniper
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Backpack::EquipSniper(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Backpack", "EquipSniper");

	Params::OakUIScript_Backpack_EquipSniper Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Backpack.Error
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Backpack::Error(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Backpack", "Error");

	Params::OakUIScript_Backpack_Error Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Backpack.FirmwareTransferComplete
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Backpack::FirmwareTransferComplete(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Backpack", "FirmwareTransferComplete");

	Params::OakUIScript_Backpack_FirmwareTransferComplete Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Backpack.GearSlotFocused
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Backpack::GearSlotFocused(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Backpack", "GearSlotFocused");

	Params::OakUIScript_Backpack_GearSlotFocused Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Backpack.GearSlotUnfocused
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Backpack::GearSlotUnfocused(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Backpack", "GearSlotUnfocused");

	Params::OakUIScript_Backpack_GearSlotUnfocused Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Backpack.MarkItem
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Backpack::MarkItem(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Backpack", "MarkItem");

	Params::OakUIScript_Backpack_MarkItem Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Backpack.MarkItemBank
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Backpack::MarkItemBank(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Backpack", "MarkItemBank");

	Params::OakUIScript_Backpack_MarkItemBank Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Backpack.MarkItemFavorite
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Backpack::MarkItemFavorite(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Backpack", "MarkItemFavorite");

	Params::OakUIScript_Backpack_MarkItemFavorite Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Backpack.MarkItemTrash
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Backpack::MarkItemTrash(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Backpack", "MarkItemTrash");

	Params::OakUIScript_Backpack_MarkItemTrash Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Backpack.OpenBackpack
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Backpack::OpenBackpack(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Backpack", "OpenBackpack");

	Params::OakUIScript_Backpack_OpenBackpack Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Backpack.OpenLegendaryReward
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Backpack::OpenLegendaryReward(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Backpack", "OpenLegendaryReward");

	Params::OakUIScript_Backpack_OpenLegendaryReward Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Backpack.OpenPlayerStats
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Backpack::OpenPlayerStats(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Backpack", "OpenPlayerStats");

	Params::OakUIScript_Backpack_OpenPlayerStats Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Backpack.OpenReward
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Backpack::OpenReward(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Backpack", "OpenReward");

	Params::OakUIScript_Backpack_OpenReward Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Backpack.OpenRewardCenter
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Backpack::OpenRewardCenter(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Backpack", "OpenRewardCenter");

	Params::OakUIScript_Backpack_OpenRewardCenter Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Backpack.PutItemInTransferSlot
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Backpack::PutItemInTransferSlot(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Backpack", "PutItemInTransferSlot");

	Params::OakUIScript_Backpack_PutItemInTransferSlot Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Backpack.RemoveItemFromTransferSlot
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Backpack::RemoveItemFromTransferSlot(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Backpack", "RemoveItemFromTransferSlot");

	Params::OakUIScript_Backpack_RemoveItemFromTransferSlot Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Backpack.SellItem
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Backpack::SellItem(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Backpack", "SellItem");

	Params::OakUIScript_Backpack_SellItem Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Backpack.StartEchoLogsMenuTutorial
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Backpack::StartEchoLogsMenuTutorial(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Backpack", "StartEchoLogsMenuTutorial");

	Params::OakUIScript_Backpack_StartEchoLogsMenuTutorial Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Backpack.StartEquipMenuTutorial
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Backpack::StartEquipMenuTutorial(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Backpack", "StartEquipMenuTutorial");

	Params::OakUIScript_Backpack_StartEquipMenuTutorial Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Backpack.StartEquippedFirmwareTutorial
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Backpack::StartEquippedFirmwareTutorial(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Backpack", "StartEquippedFirmwareTutorial");

	Params::OakUIScript_Backpack_StartEquippedFirmwareTutorial Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Backpack.StartFirmwareTransferTutorial
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Backpack::StartFirmwareTransferTutorial(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Backpack", "StartFirmwareTransferTutorial");

	Params::OakUIScript_Backpack_StartFirmwareTransferTutorial Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Backpack.StartLostLootTutorial
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Backpack::StartLostLootTutorial(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Backpack", "StartLostLootTutorial");

	Params::OakUIScript_Backpack_StartLostLootTutorial Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Backpack.StartRewardCenterTutorial
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Backpack::StartRewardCenterTutorial(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Backpack", "StartRewardCenterTutorial");

	Params::OakUIScript_Backpack_StartRewardCenterTutorial Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Backpack.StartVendingMachineTutorial
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Backpack::StartVendingMachineTutorial(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Backpack", "StartVendingMachineTutorial");

	Params::OakUIScript_Backpack_StartVendingMachineTutorial Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Backpack.TakeItem
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Backpack::TakeItem(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Backpack", "TakeItem");

	Params::OakUIScript_Backpack_TakeItem Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Backpack.TrashItem
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Backpack::TrashItem(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Backpack", "TrashItem");

	Params::OakUIScript_Backpack_TrashItem Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Backpack.UnequipItem
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Backpack::UnequipItem(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Backpack", "UnequipItem");

	Params::OakUIScript_Backpack_UnequipItem Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Backpack.WeaponSlotFocused
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Backpack::WeaponSlotFocused(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Backpack", "WeaponSlotFocused");

	Params::OakUIScript_Backpack_WeaponSlotFocused Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Backpack.WeaponSlotUnfocused
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Backpack::WeaponSlotUnfocused(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Backpack", "WeaponSlotUnfocused");

	Params::OakUIScript_Backpack_WeaponSlotUnfocused Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Cursor.OnPulse
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Cursor::OnPulse(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Cursor", "OnPulse");

	Params::OakUIScript_Cursor_OnPulse Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_HudSkills.FailToUseGadget
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_HudSkills::FailToUseGadget(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_HudSkills", "FailToUseGadget");

	Params::OakUIScript_HudSkills_FailToUseGadget Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_HudSkills.FailToUsePrimarySkill
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_HudSkills::FailToUsePrimarySkill(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_HudSkills", "FailToUsePrimarySkill");

	Params::OakUIScript_HudSkills_FailToUsePrimarySkill Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_HudSkills.FailToUseSecondarySkill
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_HudSkills::FailToUseSecondarySkill(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_HudSkills", "FailToUseSecondarySkill");

	Params::OakUIScript_HudSkills_FailToUseSecondarySkill Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_HudSkills.GainChargeGadget
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_HudSkills::GainChargeGadget(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_HudSkills", "GainChargeGadget");

	Params::OakUIScript_HudSkills_GainChargeGadget Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_HudSkills.GainChargePrimarySkill
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_HudSkills::GainChargePrimarySkill(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_HudSkills", "GainChargePrimarySkill");

	Params::OakUIScript_HudSkills_GainChargePrimarySkill Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_HudSkills.GainChargeSecondarySkill
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_HudSkills::GainChargeSecondarySkill(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_HudSkills", "GainChargeSecondarySkill");

	Params::OakUIScript_HudSkills_GainChargeSecondarySkill Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_HudSkills.ReadyToUseGadgetGrenade
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_HudSkills::ReadyToUseGadgetGrenade(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_HudSkills", "ReadyToUseGadgetGrenade");

	Params::OakUIScript_HudSkills_ReadyToUseGadgetGrenade Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_HudSkills.ReadyToUseGadgetHeavyWeapon
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_HudSkills::ReadyToUseGadgetHeavyWeapon(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_HudSkills", "ReadyToUseGadgetHeavyWeapon");

	Params::OakUIScript_HudSkills_ReadyToUseGadgetHeavyWeapon Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_HudSkills.ReadyToUseGadgetOther
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_HudSkills::ReadyToUseGadgetOther(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_HudSkills", "ReadyToUseGadgetOther");

	Params::OakUIScript_HudSkills_ReadyToUseGadgetOther Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_HudSkills.ReadyToUsePrimarySkill
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_HudSkills::ReadyToUsePrimarySkill(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_HudSkills", "ReadyToUsePrimarySkill");

	Params::OakUIScript_HudSkills_ReadyToUsePrimarySkill Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_HudSkills.ReadyToUseSecondarySkill
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_HudSkills::ReadyToUseSecondarySkill(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_HudSkills", "ReadyToUseSecondarySkill");

	Params::OakUIScript_HudSkills_ReadyToUseSecondarySkill Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_HudSkills.StartReadyCountdownGadget
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_HudSkills::StartReadyCountdownGadget(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_HudSkills", "StartReadyCountdownGadget");

	Params::OakUIScript_HudSkills_StartReadyCountdownGadget Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_HudSkills.StartReadyCountdownPrimarySkill
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_HudSkills::StartReadyCountdownPrimarySkill(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_HudSkills", "StartReadyCountdownPrimarySkill");

	Params::OakUIScript_HudSkills_StartReadyCountdownPrimarySkill Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_HudSkills.StartReadyCountdownSecondarySkill
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_HudSkills::StartReadyCountdownSecondarySkill(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_HudSkills", "StartReadyCountdownSecondarySkill");

	Params::OakUIScript_HudSkills_StartReadyCountdownSecondarySkill Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_HudSkills.TickReadyCountdownOneGadget
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_HudSkills::TickReadyCountdownOneGadget(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_HudSkills", "TickReadyCountdownOneGadget");

	Params::OakUIScript_HudSkills_TickReadyCountdownOneGadget Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_HudSkills.TickReadyCountdownOnePrimarySkill
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_HudSkills::TickReadyCountdownOnePrimarySkill(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_HudSkills", "TickReadyCountdownOnePrimarySkill");

	Params::OakUIScript_HudSkills_TickReadyCountdownOnePrimarySkill Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_HudSkills.TickReadyCountdownOneSecondarySkill
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_HudSkills::TickReadyCountdownOneSecondarySkill(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_HudSkills", "TickReadyCountdownOneSecondarySkill");

	Params::OakUIScript_HudSkills_TickReadyCountdownOneSecondarySkill Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_HudSkills.TickReadyCountdownThreeGadget
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_HudSkills::TickReadyCountdownThreeGadget(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_HudSkills", "TickReadyCountdownThreeGadget");

	Params::OakUIScript_HudSkills_TickReadyCountdownThreeGadget Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_HudSkills.TickReadyCountdownThreePrimarySkill
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_HudSkills::TickReadyCountdownThreePrimarySkill(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_HudSkills", "TickReadyCountdownThreePrimarySkill");

	Params::OakUIScript_HudSkills_TickReadyCountdownThreePrimarySkill Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_HudSkills.TickReadyCountdownThreeSecondarySkill
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_HudSkills::TickReadyCountdownThreeSecondarySkill(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_HudSkills", "TickReadyCountdownThreeSecondarySkill");

	Params::OakUIScript_HudSkills_TickReadyCountdownThreeSecondarySkill Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_HudSkills.TickReadyCountdownTwoGadget
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_HudSkills::TickReadyCountdownTwoGadget(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_HudSkills", "TickReadyCountdownTwoGadget");

	Params::OakUIScript_HudSkills_TickReadyCountdownTwoGadget Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_HudSkills.TickReadyCountdownTwoPrimarySkill
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_HudSkills::TickReadyCountdownTwoPrimarySkill(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_HudSkills", "TickReadyCountdownTwoPrimarySkill");

	Params::OakUIScript_HudSkills_TickReadyCountdownTwoPrimarySkill Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_HudSkills.TickReadyCountdownTwoSecondarySkill
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_HudSkills::TickReadyCountdownTwoSecondarySkill(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_HudSkills", "TickReadyCountdownTwoSecondarySkill");

	Params::OakUIScript_HudSkills_TickReadyCountdownTwoSecondarySkill Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_HudSkills.UseGadget
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_HudSkills::UseGadget(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_HudSkills", "UseGadget");

	Params::OakUIScript_HudSkills_UseGadget Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_HudSkills.UsePrimarySkill
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_HudSkills::UsePrimarySkill(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_HudSkills", "UsePrimarySkill");

	Params::OakUIScript_HudSkills_UsePrimarySkill Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_HudSkills.UseSecondarySkill
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_HudSkills::UseSecondarySkill(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_HudSkills", "UseSecondarySkill");

	Params::OakUIScript_HudSkills_UseSecondarySkill Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_InGameMessage.DisplayGenericSlideOut
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_InGameMessage::DisplayGenericSlideOut(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_InGameMessage", "DisplayGenericSlideOut");

	Params::OakUIScript_InGameMessage_DisplayGenericSlideOut Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Lobby.ListCollapsed
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Lobby::ListCollapsed(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Lobby", "ListCollapsed");

	Params::OakUIScript_Lobby_ListCollapsed Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Lobby.ListExpanded
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Lobby::ListExpanded(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Lobby", "ListExpanded");

	Params::OakUIScript_Lobby_ListExpanded Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_LootFeed.AppearAmmo
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_LootFeed::AppearAmmo(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_LootFeed", "AppearAmmo");

	Params::OakUIScript_LootFeed_AppearAmmo Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_LootFeed.AppearCash
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_LootFeed::AppearCash(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_LootFeed", "AppearCash");

	Params::OakUIScript_LootFeed_AppearCash Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_LootFeed.AppearCommon
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_LootFeed::AppearCommon(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_LootFeed", "AppearCommon");

	Params::OakUIScript_LootFeed_AppearCommon Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_LootFeed.AppearDLC
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_LootFeed::AppearDLC(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_LootFeed", "AppearDLC");

	Params::OakUIScript_LootFeed_AppearDLC Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_LootFeed.AppearEpic
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_LootFeed::AppearEpic(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_LootFeed", "AppearEpic");

	Params::OakUIScript_LootFeed_AppearEpic Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_LootFeed.AppearEridium
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_LootFeed::AppearEridium(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_LootFeed", "AppearEridium");

	Params::OakUIScript_LootFeed_AppearEridium Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_LootFeed.AppearLegendary
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_LootFeed::AppearLegendary(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_LootFeed", "AppearLegendary");

	Params::OakUIScript_LootFeed_AppearLegendary Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_LootFeed.AppearMail
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_LootFeed::AppearMail(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_LootFeed", "AppearMail");

	Params::OakUIScript_LootFeed_AppearMail Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_LootFeed.AppearRare
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_LootFeed::AppearRare(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_LootFeed", "AppearRare");

	Params::OakUIScript_LootFeed_AppearRare Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_LootFeed.AppearUncommon
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_LootFeed::AppearUncommon(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_LootFeed", "AppearUncommon");

	Params::OakUIScript_LootFeed_AppearUncommon Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_LootFeed.CashLower
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_LootFeed::CashLower(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_LootFeed", "CashLower");

	Params::OakUIScript_LootFeed_CashLower Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_MissionAccept.MissionAccepted
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_MissionAccept::MissionAccepted(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_MissionAccept", "MissionAccepted");

	Params::OakUIScript_MissionAccept_MissionAccepted Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_MissionAccept.MissionAcceptedAndTracked
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_MissionAccept::MissionAcceptedAndTracked(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_MissionAccept", "MissionAcceptedAndTracked");

	Params::OakUIScript_MissionAccept_MissionAcceptedAndTracked Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_MissionAccept.MissionTracked
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_MissionAccept::MissionTracked(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_MissionAccept", "MissionTracked");

	Params::OakUIScript_MissionAccept_MissionTracked Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_MissionLog.StartMissionLogMenuTutorial
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_MissionLog::StartMissionLogMenuTutorial(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_MissionLog", "StartMissionLogMenuTutorial");

	Params::OakUIScript_MissionLog_StartMissionLogMenuTutorial Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_MissionLog.StartMissionReplayMenuTutorial
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_MissionLog::StartMissionReplayMenuTutorial(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_MissionLog", "StartMissionReplayMenuTutorial");

	Params::OakUIScript_MissionLog_StartMissionReplayMenuTutorial Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_MissionLog.TrackMission
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_MissionLog::TrackMission(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_MissionLog", "TrackMission");

	Params::OakUIScript_MissionLog_TrackMission Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Options.ResetDefault
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Options::ResetDefault(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Options", "ResetDefault");

	Params::OakUIScript_Options_ResetDefault Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Options.SafeAreaAdjustDown
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Options::SafeAreaAdjustDown(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Options", "SafeAreaAdjustDown");

	Params::OakUIScript_Options_SafeAreaAdjustDown Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Options.SafeAreaAdjustUp
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Options::SafeAreaAdjustUp(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Options", "SafeAreaAdjustUp");

	Params::OakUIScript_Options_SafeAreaAdjustUp Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_OutOfBounds.OutOfBounds
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_OutOfBounds::OutOfBounds(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_OutOfBounds", "OutOfBounds");

	Params::OakUIScript_OutOfBounds_OutOfBounds Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_OutOfBounds.Returning
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_OutOfBounds::Returning(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_OutOfBounds", "Returning");

	Params::OakUIScript_OutOfBounds_Returning Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_OutOfBounds.Suspense
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_OutOfBounds::Suspense(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_OutOfBounds", "Suspense");

	Params::OakUIScript_OutOfBounds_Suspense Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Skills.ActionSkillCooldown
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Skills::ActionSkillCooldown(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Skills", "ActionSkillCooldown");

	Params::OakUIScript_Skills_ActionSkillCooldown Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Skills.ChangeTreeOne
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Skills::ChangeTreeOne(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Skills", "ChangeTreeOne");

	Params::OakUIScript_Skills_ChangeTreeOne Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Skills.ChangeTreeThree
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Skills::ChangeTreeThree(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Skills", "ChangeTreeThree");

	Params::OakUIScript_Skills_ChangeTreeThree Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Skills.ChangeTreeTwo
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Skills::ChangeTreeTwo(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Skills", "ChangeTreeTwo");

	Params::OakUIScript_Skills_ChangeTreeTwo Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Skills.EquipActionSkill
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Skills::EquipActionSkill(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Skills", "EquipActionSkill");

	Params::OakUIScript_Skills_EquipActionSkill Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Skills.EquipAugment
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Skills::EquipAugment(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Skills", "EquipAugment");

	Params::OakUIScript_Skills_EquipAugment Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Skills.EquipCapstone
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Skills::EquipCapstone(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Skills", "EquipCapstone");

	Params::OakUIScript_Skills_EquipCapstone Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Skills.EquipSkill
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Skills::EquipSkill(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Skills", "EquipSkill");

	Params::OakUIScript_Skills_EquipSkill Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Skills.Focused
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Skills::Focused(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Skills", "Focused");

	Params::OakUIScript_Skills_Focused Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Skills.InactiveNode
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Skills::InactiveNode(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Skills", "InactiveNode");

	Params::OakUIScript_Skills_InactiveNode Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Skills.InsufficientPoints
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Skills::InsufficientPoints(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Skills", "InsufficientPoints");

	Params::OakUIScript_Skills_InsufficientPoints Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Skills.InvestPointFour
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Skills::InvestPointFour(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Skills", "InvestPointFour");

	Params::OakUIScript_Skills_InvestPointFour Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Skills.InvestPointMax
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Skills::InvestPointMax(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Skills", "InvestPointMax");

	Params::OakUIScript_Skills_InvestPointMax Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Skills.InvestPointOne
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Skills::InvestPointOne(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Skills", "InvestPointOne");

	Params::OakUIScript_Skills_InvestPointOne Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Skills.InvestPointThree
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Skills::InvestPointThree(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Skills", "InvestPointThree");

	Params::OakUIScript_Skills_InvestPointThree Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Skills.InvestPointTwo
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Skills::InvestPointTwo(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Skills", "InvestPointTwo");

	Params::OakUIScript_Skills_InvestPointTwo Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Skills.OpenPlayerStats
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Skills::OpenPlayerStats(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Skills", "OpenPlayerStats");

	Params::OakUIScript_Skills_OpenPlayerStats Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Skills.RemovePoint
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Skills::RemovePoint(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Skills", "RemovePoint");

	Params::OakUIScript_Skills_RemovePoint Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Skills.ResetPoints
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Skills::ResetPoints(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Skills", "ResetPoints");

	Params::OakUIScript_Skills_ResetPoints Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Skills.StartTutorialAugments
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Skills::StartTutorialAugments(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Skills", "StartTutorialAugments");

	Params::OakUIScript_Skills_StartTutorialAugments Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Skills.StartTutorialCapstones
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Skills::StartTutorialCapstones(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Skills", "StartTutorialCapstones");

	Params::OakUIScript_Skills_StartTutorialCapstones Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Skills.StartTutorialIntro
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Skills::StartTutorialIntro(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Skills", "StartTutorialIntro");

	Params::OakUIScript_Skills_StartTutorialIntro Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Skills.StartTutorialRespec
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Skills::StartTutorialRespec(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Skills", "StartTutorialRespec");

	Params::OakUIScript_Skills_StartTutorialRespec Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Skills.StartTutorialSkills
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Skills::StartTutorialSkills(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Skills", "StartTutorialSkills");

	Params::OakUIScript_Skills_StartTutorialSkills Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Skills.StartTutorialSpecializations
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Skills::StartTutorialSpecializations(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Skills", "StartTutorialSpecializations");

	Params::OakUIScript_Skills_StartTutorialSpecializations Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Skills.UnequipActionSkill
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Skills::UnequipActionSkill(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Skills", "UnequipActionSkill");

	Params::OakUIScript_Skills_UnequipActionSkill Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Skills.UnequipAugment
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Skills::UnequipAugment(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Skills", "UnequipAugment");

	Params::OakUIScript_Skills_UnequipAugment Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Skills.UnequipCapstone
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Skills::UnequipCapstone(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Skills", "UnequipCapstone");

	Params::OakUIScript_Skills_UnequipCapstone Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Skills.UnequipSkill
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Skills::UnequipSkill(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Skills", "UnequipSkill");

	Params::OakUIScript_Skills_UnequipSkill Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Skills.Unfocused
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Skills::Unfocused(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Skills", "Unfocused");

	Params::OakUIScript_Skills_Unfocused Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Skills.UnlockBranches
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Skills::UnlockBranches(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Skills", "UnlockBranches");

	Params::OakUIScript_Skills_UnlockBranches Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Skills.UnlockSkill
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Skills::UnlockSkill(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Skills", "UnlockSkill");

	Params::OakUIScript_Skills_UnlockSkill Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Skills.UnlockSlot
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Skills::UnlockSlot(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Skills", "UnlockSlot");

	Params::OakUIScript_Skills_UnlockSlot Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Skills.UnlockTier
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Skills::UnlockTier(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Skills", "UnlockTier");

	Params::OakUIScript_Skills_UnlockTier Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Social.FriendRequestReceived
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Social::FriendRequestReceived(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Social", "FriendRequestReceived");

	Params::OakUIScript_Social_FriendRequestReceived Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Social.PromotedToPartyLeader
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Social::PromotedToPartyLeader(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Social", "PromotedToPartyLeader");

	Params::OakUIScript_Social_PromotedToPartyLeader Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Social.SessionInviteReceived
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Social::SessionInviteReceived(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Social", "SessionInviteReceived");

	Params::OakUIScript_Social_SessionInviteReceived Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_StatusMenuNavBar.NavBackward
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_StatusMenuNavBar::NavBackward(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_StatusMenuNavBar", "NavBackward");

	Params::OakUIScript_StatusMenuNavBar_NavBackward Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_StatusMenuNavBar.NavEntered
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_StatusMenuNavBar::NavEntered(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_StatusMenuNavBar", "NavEntered");

	Params::OakUIScript_StatusMenuNavBar_NavEntered Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_StatusMenuNavBar.NavExited
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_StatusMenuNavBar::NavExited(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_StatusMenuNavBar", "NavExited");

	Params::OakUIScript_StatusMenuNavBar_NavExited Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_StatusMenuNavBar.NavForward
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_StatusMenuNavBar::NavForward(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_StatusMenuNavBar", "NavForward");

	Params::OakUIScript_StatusMenuNavBar_NavForward Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_StatusMenuNavBar.SubNavBackward
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_StatusMenuNavBar::SubNavBackward(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_StatusMenuNavBar", "SubNavBackward");

	Params::OakUIScript_StatusMenuNavBar_SubNavBackward Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_StatusMenuNavBar.SubNavEntered
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_StatusMenuNavBar::SubNavEntered(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_StatusMenuNavBar", "SubNavEntered");

	Params::OakUIScript_StatusMenuNavBar_SubNavEntered Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_StatusMenuNavBar.SubNavExited
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_StatusMenuNavBar::SubNavExited(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_StatusMenuNavBar", "SubNavExited");

	Params::OakUIScript_StatusMenuNavBar_SubNavExited Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_StatusMenuNavBar.SubNavForward
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_StatusMenuNavBar::SubNavForward(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_StatusMenuNavBar", "SubNavForward");

	Params::OakUIScript_StatusMenuNavBar_SubNavForward Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_TravelNotification.Countdown
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_TravelNotification::Countdown(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_TravelNotification", "Countdown");

	Params::OakUIScript_TravelNotification_Countdown Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_TravelNotification.ExitImmediatelyMissionReplay
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_TravelNotification::ExitImmediatelyMissionReplay(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_TravelNotification", "ExitImmediatelyMissionReplay");

	Params::OakUIScript_TravelNotification_ExitImmediatelyMissionReplay Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_TravelNotification.ToggleTravelStatus
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_TravelNotification::ToggleTravelStatus(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_TravelNotification", "ToggleTravelStatus");

	Params::OakUIScript_TravelNotification_ToggleTravelStatus Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Tutorial.DisplayTutorialSlideout
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Tutorial::DisplayTutorialSlideout(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Tutorial", "DisplayTutorialSlideout");

	Params::OakUIScript_Tutorial_DisplayTutorialSlideout Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Tutorial.ExpandedTutorialWaiting
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Tutorial::ExpandedTutorialWaiting(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Tutorial", "ExpandedTutorialWaiting");

	Params::OakUIScript_Tutorial_ExpandedTutorialWaiting Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Tutorial.OnExpandedTutorialClosed
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Tutorial::OnExpandedTutorialClosed(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Tutorial", "OnExpandedTutorialClosed");

	Params::OakUIScript_Tutorial_OnExpandedTutorialClosed Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_Tutorial.OnTutorialExpanded
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_Tutorial::OnTutorialExpanded(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_Tutorial", "OnTutorialExpanded");

	Params::OakUIScript_Tutorial_OnTutorialExpanded Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_VaultTracker.SearchPing
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_VaultTracker::SearchPing(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_VaultTracker", "SearchPing");

	Params::OakUIScript_VaultTracker_SearchPing Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_VaultTracker.SearchSuccess
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_VaultTracker::SearchSuccess(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_VaultTracker", "SearchSuccess");

	Params::OakUIScript_VaultTracker_SearchSuccess Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_VaultTracker.Switch
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_VaultTracker::Switch(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_VaultTracker", "Switch");

	Params::OakUIScript_VaultTracker_Switch Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.OakUIScript_VaultTracker.TrackerActivate
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     OwningWidgetDef                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector2D&                 position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakUIScript_VaultTracker::TrackerActivate(class UObject* WorldContextObject, FGbxDefPtrProperty_ OwningWidgetDef, const struct FVector2D& position) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakUIScript_VaultTracker", "TrackerActivate");

	Params::OakUIScript_VaultTracker_TrackerActivate Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OwningWidgetDef = OwningWidgetDef;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OakGame.NexusConfigStoreUISpecializations.GetAllProgressGraphGroupDefs
// (Final, Native, Static, Public, HasOutParams)
// Parameters:
// TArray<FGbxDefPtrProperty_>*            graphs                                                 (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UNexusConfigStoreUISpecializations::GetAllProgressGraphGroupDefs(TArray<FGbxDefPtrProperty_>* graphs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("NexusConfigStoreUISpecializations", "GetAllProgressGraphGroupDefs");

	Params::NexusConfigStoreUISpecializations_GetAllProgressGraphGroupDefs Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (graphs != nullptr)
		*graphs = std::move(Parms.graphs);
}


// Function OakGame.NexusConfigStoreUISpecializations.GetNodeNames
// (Final, Native, Static, Public, HasOutParams)
// Parameters:
// class UObject*                          EditObject                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     ProgressGraph                                          (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FName>*                    OutNames                                               (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UNexusConfigStoreUISpecializations::GetNodeNames(class UObject* EditObject, FGbxDefPtrProperty_ ProgressGraph, TArray<class FName>* OutNames)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("NexusConfigStoreUISpecializations", "GetNodeNames");

	Params::NexusConfigStoreUISpecializations_GetNodeNames Parms{};

	Parms.EditObject = EditObject;
	Parms.ProgressGraph = ProgressGraph;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutNames != nullptr)
		*OutNames = std::move(Parms.OutNames);
}


// Function OakGame.OakVehicleBlueprintLibrary.AssignHoverDriveEffectParameters
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// class UFXSystemComponent*               FXComponent                                            (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AOakVehicle*                      Vehicle                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakVehicleBlueprintLibrary::AssignHoverDriveEffectParameters(class UFXSystemComponent* FXComponent, class AOakVehicle* Vehicle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakVehicleBlueprintLibrary", "AssignHoverDriveEffectParameters");

	Params::OakVehicleBlueprintLibrary_AssignHoverDriveEffectParameters Parms{};

	Parms.FXComponent = FXComponent;
	Parms.Vehicle = Vehicle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakVehicleBlueprintLibrary.CanBoost
// (Final, Native, Static, Private, BlueprintCallable, BlueprintPure)
// Parameters:
// class AOakVehicle*                      Vehicle                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOakVehicleBlueprintLibrary::CanBoost(class AOakVehicle* Vehicle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakVehicleBlueprintLibrary", "CanBoost");

	Params::OakVehicleBlueprintLibrary_CanBoost Parms{};

	Parms.Vehicle = Vehicle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakVehicleBlueprintLibrary.GetAssociatedVehicle
// (Final, Native, Static, Private, HasOutParams, BlueprintCallable)
// Parameters:
// class AActor*                           Context                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EGetOakVehicleResult*                   Exec                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AOakVehicle*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AOakVehicle* UOakVehicleBlueprintLibrary::GetAssociatedVehicle(class AActor* Context, EGetOakVehicleResult* Exec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakVehicleBlueprintLibrary", "GetAssociatedVehicle");

	Params::OakVehicleBlueprintLibrary_GetAssociatedVehicle Parms{};

	Parms.Context = Context;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Exec != nullptr)
		*Exec = Parms.Exec;

	return Parms.ReturnValue;
}


// Function OakGame.OakVehicleBlueprintLibrary.GetHoverDriveEffectByName
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// class AOakVehicle*                      Vehicle                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             EffectName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFXSystemAsset*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFXSystemAsset* UOakVehicleBlueprintLibrary::GetHoverDriveEffectByName(class AOakVehicle* Vehicle, class FName EffectName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakVehicleBlueprintLibrary", "GetHoverDriveEffectByName");

	Params::OakVehicleBlueprintLibrary_GetHoverDriveEffectByName Parms{};

	Parms.Vehicle = Vehicle;
	Parms.EffectName = EffectName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakVehicleBlueprintLibrary.IsBoosting
// (Final, Native, Static, Private, BlueprintCallable, BlueprintPure)
// Parameters:
// class AOakVehicle*                      Vehicle                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOakVehicleBlueprintLibrary::IsBoosting(class AOakVehicle* Vehicle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakVehicleBlueprintLibrary", "IsBoosting");

	Params::OakVehicleBlueprintLibrary_IsBoosting Parms{};

	Parms.Vehicle = Vehicle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakVehicleBlueprintLibrary.ToggleBoost
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// class AOakVehicle*                      Vehicle                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bBoost                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakVehicleBlueprintLibrary::ToggleBoost(class AOakVehicle* Vehicle, bool bBoost)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakVehicleBlueprintLibrary", "ToggleBoost");

	Params::OakVehicleBlueprintLibrary_ToggleBoost Parms{};

	Parms.Vehicle = Vehicle;
	Parms.bBoost = bBoost;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakVendingMachine.ApplyCachedIOTDVisibility
// (Final, Native, Public, BlueprintCallable)

void AOakVendingMachine::ApplyCachedIOTDVisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakVendingMachine", "ApplyCachedIOTDVisibility");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakVendingMachine.ForceReshuffleItems
// (Final, Native, Public, BlueprintCallable)

void AOakVendingMachine::ForceReshuffleItems()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakVendingMachine", "ForceReshuffleItems");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakVendingMachine.GetIOTDForPlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AOakPlayerController*             OakPC                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AInventoryPickup*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AInventoryPickup* AOakVendingMachine::GetIOTDForPlayer(class AOakPlayerController* OakPC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakVendingMachine", "GetIOTDForPlayer");

	Params::OakVendingMachine_GetIOTDForPlayer Parms{};

	Parms.OakPC = OakPC;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakVendingMachine.KickPlayerOutOfMenu
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AOakPlayerController*             OakPC                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakVendingMachine::KickPlayerOutOfMenu(class AOakPlayerController* OakPC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakVendingMachine", "KickPlayerOutOfMenu");

	Params::OakVendingMachine_KickPlayerOutOfMenu Parms{};

	Parms.OakPC = OakPC;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakVendingMachine.OnRep_BuybackItems
// (Final, Native, Public)

void AOakVendingMachine::OnRep_BuybackItems()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakVendingMachine", "OnRep_BuybackItems");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakVendingMachine.OnRep_StoredInventories
// (Final, Native, Public)

void AOakVendingMachine::OnRep_StoredInventories()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakVendingMachine", "OnRep_StoredInventories");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakVendingMachine.SetCanShowIOTDParticle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakVendingMachine::SetCanShowIOTDParticle(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakVendingMachine", "SetCanShowIOTDParticle");

	Params::OakVendingMachine_SetCanShowIOTDParticle Parms{};

	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakVendingMachine.SwapShopDef
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// FGbxDefPtrProperty_                     NewShopDef                                             (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bShuffleAfterSwapping                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakVendingMachine::SwapShopDef(FGbxDefPtrProperty_ NewShopDef, bool bShuffleAfterSwapping)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakVendingMachine", "SwapShopDef");

	Params::OakVendingMachine_SwapShopDef Parms{};

	Parms.NewShopDef = NewShopDef;
	Parms.bShuffleAfterSwapping = bShuffleAfterSwapping;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakVendingMachine.UpdateIOTDVisibility
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool*                                   OutAreAnyPlayersOverlapping                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOakVendingMachine::UpdateIOTDVisibility(bool* OutAreAnyPlayersOverlapping)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakVendingMachine", "UpdateIOTDVisibility");

	Params::OakVendingMachine_UpdateIOTDVisibility Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutAreAnyPlayersOverlapping != nullptr)
		*OutAreAnyPlayersOverlapping = Parms.OutAreAnyPlayersOverlapping;
}


// Function OakGame.OakVendingMachine.QueueThumbnailRenders
// (Final, Native, Protected, BlueprintCallable, Const)

void AOakVendingMachine::QueueThumbnailRenders() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakVendingMachine", "QueueThumbnailRenders");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakVendorBlueprintLibrary.ForceAddLostLootItem
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           LootableActor                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FJunkId&                   JunkId                                                 (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakVendorBlueprintLibrary::ForceAddLostLootItem(class AActor* LootableActor, const struct FJunkId& JunkId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakVendorBlueprintLibrary", "ForceAddLostLootItem");

	Params::OakVendorBlueprintLibrary_ForceAddLostLootItem Parms{};

	Parms.LootableActor = LootableActor;
	Parms.JunkId = std::move(JunkId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakVendorBlueprintLibrary.HasHostFoundBMVMThisWeek
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           BMVM                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOakVendorBlueprintLibrary::HasHostFoundBMVMThisWeek(class AActor* BMVM)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OakVendorBlueprintLibrary", "HasHostFoundBMVMThisWeek");

	Params::OakVendorBlueprintLibrary_HasHostFoundBMVMThisWeek Parms{};

	Parms.BMVM = BMVM;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakWheeledVehicleMovementComponent.FreeBoostElapsed
// (Final, Native, Private)

void UOakWheeledVehicleMovementComponent::FreeBoostElapsed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakWheeledVehicleMovementComponent", "FreeBoostElapsed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakWheeledVehicleMovementComponent.OnBoostDepleted
// (Final, Native, Public)

void UOakWheeledVehicleMovementComponent::OnBoostDepleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakWheeledVehicleMovementComponent", "OnBoostDepleted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakWheeledVehicleMovementComponent.OnBoostFilled
// (Final, Native, Public)

void UOakWheeledVehicleMovementComponent::OnBoostFilled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakWheeledVehicleMovementComponent", "OnBoostFilled");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakWheeledVehicleMovementComponent.OnHit
// (Native, Public, HasOutParams, HasDefaults)
// Parameters:
// class AActor*                           SelfActor                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   NormalImpulse                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHitResult&                Hit                                                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UOakWheeledVehicleMovementComponent::OnHit(class AActor* SelfActor, class AActor* OtherActor, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakWheeledVehicleMovementComponent", "OnHit");

	Params::OakWheeledVehicleMovementComponent_OnHit Parms{};

	Parms.SelfActor = SelfActor;
	Parms.OtherActor = OtherActor;
	Parms.NormalImpulse = std::move(NormalImpulse);
	Parms.Hit = std::move(Hit);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakWheeledVehicleMovementComponent.OnPrimitiveBeginOverlap
// (Native, Public, HasOutParams)
// Parameters:
// class UPrimitiveComponent*              OverlappedComp                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFromSweep                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHitResult&                SweepResult                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UOakWheeledVehicleMovementComponent::OnPrimitiveBeginOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakWheeledVehicleMovementComponent", "OnPrimitiveBeginOverlap");

	Params::OakWheeledVehicleMovementComponent_OnPrimitiveBeginOverlap Parms{};

	Parms.OverlappedComp = OverlappedComp;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakWheeledVehicleMovementComponent.OnPrimitiveEndOverlap
// (Native, Public)
// Parameters:
// class UPrimitiveComponent*              OverlappedComp                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOakWheeledVehicleMovementComponent::OnPrimitiveEndOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakWheeledVehicleMovementComponent", "OnPrimitiveEndOverlap");

	Params::OakWheeledVehicleMovementComponent_OnPrimitiveEndOverlap Parms{};

	Parms.OverlappedComp = OverlappedComp;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakWheeledVehicleMovementComponent.PowerslideCooldownElapsed
// (Final, Native, Private)

void UOakWheeledVehicleMovementComponent::PowerslideCooldownElapsed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakWheeledVehicleMovementComponent", "PowerslideCooldownElapsed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.OakWheeledVehicleMovementComponent.GetAirTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UOakWheeledVehicleMovementComponent::GetAirTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakWheeledVehicleMovementComponent", "GetAirTime");

	Params::OakWheeledVehicleMovementComponent_GetAirTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakWheeledVehicleMovementComponent.GetGroundNormal
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UOakWheeledVehicleMovementComponent::GetGroundNormal() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakWheeledVehicleMovementComponent", "GetGroundNormal");

	Params::OakWheeledVehicleMovementComponent_GetGroundNormal Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakWheeledVehicleMovementComponent.GetGroundSpeed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UOakWheeledVehicleMovementComponent::GetGroundSpeed() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakWheeledVehicleMovementComponent", "GetGroundSpeed");

	Params::OakWheeledVehicleMovementComponent_GetGroundSpeed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakWheeledVehicleMovementComponent.GetGroundTraceResult
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FHitResult                       ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

struct FHitResult UOakWheeledVehicleMovementComponent::GetGroundTraceResult() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakWheeledVehicleMovementComponent", "GetGroundTraceResult");

	Params::OakWheeledVehicleMovementComponent_GetGroundTraceResult Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakWheeledVehicleMovementComponent.GetHoverVector
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UOakWheeledVehicleMovementComponent::GetHoverVector() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakWheeledVehicleMovementComponent", "GetHoverVector");

	Params::OakWheeledVehicleMovementComponent_GetHoverVector Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakWheeledVehicleMovementComponent.GetWorldVelocity
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UOakWheeledVehicleMovementComponent::GetWorldVelocity() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakWheeledVehicleMovementComponent", "GetWorldVelocity");

	Params::OakWheeledVehicleMovementComponent_GetWorldVelocity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.OakWheeledVehicleMovementComponent.IsBoosting
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOakWheeledVehicleMovementComponent::IsBoosting() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OakWheeledVehicleMovementComponent", "IsBoosting");

	Params::OakWheeledVehicleMovementComponent_IsBoosting Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OakGame.SiloBaseObject.OnBalloonReady
// (Final, Native, Protected, BlueprintCallable)

void ASiloBaseObject::OnBalloonReady()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SiloBaseObject", "OnBalloonReady");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.SiloBaseObject.OnPlayerProxySpawned
// (Final, Native, Protected)

void ASiloBaseObject::OnPlayerProxySpawned()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SiloBaseObject", "OnPlayerProxySpawned");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.SiloBaseObject.OnRep_Sliders
// (Final, Native, Protected)

void ASiloBaseObject::OnRep_Sliders()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SiloBaseObject", "OnRep_Sliders");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.StructuredInteractableFunctionLibrary.StartStructuredInteraction
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Interactable                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InteractionName                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APlayerController*                User                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStructuredInteractableFunctionLibrary::StartStructuredInteraction(class AActor* Interactable, class FName InteractionName, class APlayerController* User)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("StructuredInteractableFunctionLibrary", "StartStructuredInteraction");

	Params::StructuredInteractableFunctionLibrary_StartStructuredInteraction Parms{};

	Parms.Interactable = Interactable;
	Parms.InteractionName = InteractionName;
	Parms.User = User;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.WeaponBehavior_AmmoPool.OnMaxLoadedAmmoChanged
// (Final, Native, Protected)
// Parameters:
// float                                   OldValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWeaponBehavior_AmmoPool::OnMaxLoadedAmmoChanged(float OldValue, float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WeaponBehavior_AmmoPool", "OnMaxLoadedAmmoChanged");

	Params::WeaponBehavior_AmmoPool_OnMaxLoadedAmmoChanged Parms{};

	Parms.OldValue = OldValue;
	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.WeaponBehavior_AmmoPool.OnRep_ServerSyncedLoadedAmmo
// (Final, Native, Protected)

void UWeaponBehavior_AmmoPool::OnRep_ServerSyncedLoadedAmmo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WeaponBehavior_AmmoPool", "OnRep_ServerSyncedLoadedAmmo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.WeaponBehavior_AmmoPool.OnRep_SpareAmmo
// (Final, Native, Protected)

void UWeaponBehavior_AmmoPool::OnRep_SpareAmmo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WeaponBehavior_AmmoPool", "OnRep_SpareAmmo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.WeaponBehavior_AtlasLock.WeaponDetached
// (Final, Native, Protected)

void UWeaponBehavior_AtlasLock::WeaponDetached()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WeaponBehavior_AtlasLock", "WeaponDetached");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.WeaponBehavior_Borg.OnAttached
// (Final, Native, Protected)

void UWeaponBehavior_Borg::OnAttached()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WeaponBehavior_Borg", "OnAttached");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.WeaponBehavior_Borg.OnDetached
// (Final, Native, Protected)

void UWeaponBehavior_Borg::OnDetached()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WeaponBehavior_Borg", "OnDetached");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.WeaponBehavior_Borg.OnRep_Energy
// (Final, Native, Protected)

void UWeaponBehavior_Borg::OnRep_Energy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WeaponBehavior_Borg", "OnRep_Energy");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.WeaponBehavior_Borg.OnRep_Kills
// (Final, Native, Protected)

void UWeaponBehavior_Borg::OnRep_Kills()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WeaponBehavior_Borg", "OnRep_Kills");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.WeaponBehavior_Borg.RefreshAttributeEffects
// (Final, Native, Protected)

void UWeaponBehavior_Borg::RefreshAttributeEffects()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WeaponBehavior_Borg", "RefreshAttributeEffects");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.WeaponBehavior_Shield.OnActivationTrigger
// (Final, Native, Protected)

void UWeaponBehavior_Shield::OnActivationTrigger()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WeaponBehavior_Shield", "OnActivationTrigger");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.WeaponBehavior_Shield.OnAttached
// (Final, Native, Protected)

void UWeaponBehavior_Shield::OnAttached()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WeaponBehavior_Shield", "OnAttached");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.WeaponBehavior_Shield.OnDeactivationTrigger
// (Final, Native, Protected)

void UWeaponBehavior_Shield::OnDeactivationTrigger()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WeaponBehavior_Shield", "OnDeactivationTrigger");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.WeaponBehavior_Shield.OnDetached
// (Final, Native, Protected)

void UWeaponBehavior_Shield::OnDetached()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WeaponBehavior_Shield", "OnDetached");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.WeaponBehavior_Shield.OnRep_IsActive
// (Final, Native, Protected)
// Parameters:
// bool                                    bWasActive                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWeaponBehavior_Shield::OnRep_IsActive(bool bWasActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WeaponBehavior_Shield", "OnRep_IsActive");

	Params::WeaponBehavior_Shield_OnRep_IsActive Parms{};

	Parms.bWasActive = bWasActive;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.WeaponBehavior_Shield.OnRep_ShieldState
// (Final, Native, Protected)
// Parameters:
// EWeaponShieldState                      PreviousState                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWeaponBehavior_Shield::OnRep_ShieldState(EWeaponShieldState PreviousState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WeaponBehavior_Shield", "OnRep_ShieldState");

	Params::WeaponBehavior_Shield_OnRep_ShieldState Parms{};

	Parms.PreviousState = PreviousState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.WeaponBehavior_Shield.OnZoomingOut
// (Final, Native, Protected)
// Parameters:
// uint8                                   Level                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWeaponBehavior_Shield::OnZoomingOut(uint8 Level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WeaponBehavior_Shield", "OnZoomingOut");

	Params::WeaponBehavior_Shield_OnZoomingOut Parms{};

	Parms.Level = Level;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.WeaponBehavior_Shield.OnRep_TakeDamage
// (Final, Native, Protected, Const)

void UWeaponBehavior_Shield::OnRep_TakeDamage() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WeaponBehavior_Shield", "OnRep_TakeDamage");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.WeaponBehavior_Sight.StartInitSequence
// (Final, Native, Protected)
// Parameters:
// class AWeapon*                          Weapon                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWeaponBehavior_Sight::StartInitSequence(class AWeapon* Weapon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WeaponBehavior_Sight", "StartInitSequence");

	Params::WeaponBehavior_Sight_StartInitSequence Parms{};

	Parms.Weapon = Weapon;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.WeaponBehavior_Sight.WeaponAttached
// (Final, Native, Protected)

void UWeaponBehavior_Sight::WeaponAttached()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WeaponBehavior_Sight", "WeaponAttached");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.WeaponBehavior_Sight.WeaponDetached
// (Final, Native, Protected)

void UWeaponBehavior_Sight::WeaponDetached()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WeaponBehavior_Sight", "WeaponDetached");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.WeaponBehavior_StockReload.OnRep_ClientReloadState
// (Final, Native, Protected)

void UWeaponBehavior_StockReload::OnRep_ClientReloadState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WeaponBehavior_StockReload", "OnRep_ClientReloadState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OakGame.WeaponProjectile.OnRep_HomingMod
// (Final, Native, Protected)

void AWeaponProjectile::OnRep_HomingMod()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WeaponProjectile", "OnRep_HomingMod");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}

}

