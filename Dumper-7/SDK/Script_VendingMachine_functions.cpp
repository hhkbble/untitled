#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Script_VendingMachine

#include "Basic.hpp"

#include "Script_VendingMachine_classes.hpp"
#include "Script_VendingMachine_parameters.hpp"


namespace SDK
{

// Function Script_VendingMachine.Script_VendingMachine_C.Active__OnStateEnabled
// (BlueprintCallable, BlueprintEvent)

void UScript_VendingMachine_C::Active__OnStateEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_VendingMachine_C", "Active__OnStateEnabled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Script_VendingMachine.Script_VendingMachine_C.Echo4_Arrived
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AOakDrone*                        Echo4_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UScript_VendingMachine_C::Echo4_Arrived(class AOakDrone* Echo4_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_VendingMachine_C", "Echo4_Arrived");

	Params::Script_VendingMachine_C_Echo4_Arrived Parms{};

	Parms.Echo4_0 = Echo4_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Script_VendingMachine.Script_VendingMachine_C.Echo4_MoveTo
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           MoveTarget                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UScript_VendingMachine_C::Echo4_MoveTo(class AActor* MoveTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_VendingMachine_C", "Echo4_MoveTo");

	Params::Script_VendingMachine_C_Echo4_MoveTo Parms{};

	Parms.MoveTarget = MoveTarget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Script_VendingMachine.Script_VendingMachine_C.Echo4_SetOrientationMode
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    On_                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UScript_VendingMachine_C::Echo4_SetOrientationMode(bool On_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_VendingMachine_C", "Echo4_SetOrientationMode");

	Params::Script_VendingMachine_C_Echo4_SetOrientationMode Parms{};

	Parms.On_ = On_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Script_VendingMachine.Script_VendingMachine_C.Echo4_SkipRetrieve
// (Public, BlueprintCallable, BlueprintEvent)

void UScript_VendingMachine_C::Echo4_SkipRetrieve()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_VendingMachine_C", "Echo4_SkipRetrieve");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Script_VendingMachine.Script_VendingMachine_C.Echo4_Spawn
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Context                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// EGbxRelativeLocationType                Relative_Location_Type                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             Location_Option_Socket                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FGbxRelativeRotation&      Location_Options_Offset_Direction                      (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// double                                  Location_Options_Offset_Distance                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UScript_VendingMachine_C::Echo4_Spawn(class AActor* Context, EGbxRelativeLocationType Relative_Location_Type, class FName Location_Option_Socket, const struct FGbxRelativeRotation& Location_Options_Offset_Direction, double Location_Options_Offset_Distance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_VendingMachine_C", "Echo4_Spawn");

	Params::Script_VendingMachine_C_Echo4_Spawn Parms{};

	Parms.Context = Context;
	Parms.Relative_Location_Type = Relative_Location_Type;
	Parms.Location_Option_Socket = Location_Option_Socket;
	Parms.Location_Options_Offset_Direction = std::move(Location_Options_Offset_Direction);
	Parms.Location_Options_Offset_Distance = Location_Options_Offset_Distance;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Script_VendingMachine.Script_VendingMachine_C.Echo_Spawned
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AOakDrone*                        Echo4_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UScript_VendingMachine_C::Echo_Spawned(class AOakDrone* Echo4_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_VendingMachine_C", "Echo_Spawned");

	Params::Script_VendingMachine_C_Echo_Spawned Parms{};

	Parms.Echo4_0 = Echo4_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Script_VendingMachine.Script_VendingMachine_C.ExecuteUbergraph_Script_VendingMachine
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   entrypoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UScript_VendingMachine_C::ExecuteUbergraph_Script_VendingMachine(int32 entrypoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_VendingMachine_C", "ExecuteUbergraph_Script_VendingMachine");

	Params::Script_VendingMachine_C_ExecuteUbergraph_Script_VendingMachine Parms{};

	Parms.entrypoint = entrypoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Script_VendingMachine.Script_VendingMachine_C.GbxActorScriptEvt__OnActorBeginOverlap
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           OverlappedActor                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UScript_VendingMachine_C::GbxActorScriptEvt__OnActorBeginOverlap(class AActor* OverlappedActor, class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_VendingMachine_C", "GbxActorScriptEvt__OnActorBeginOverlap");

	Params::Script_VendingMachine_C_GbxActorScriptEvt__OnActorBeginOverlap Parms{};

	Parms.OverlappedActor = OverlappedActor;
	Parms.OtherActor = OtherActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Script_VendingMachine.Script_VendingMachine_C.GbxActorScriptEvt__OnActorEndOverlap
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           OverlappedActor                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UScript_VendingMachine_C::GbxActorScriptEvt__OnActorEndOverlap(class AActor* OverlappedActor, class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_VendingMachine_C", "GbxActorScriptEvt__OnActorEndOverlap");

	Params::Script_VendingMachine_C_GbxActorScriptEvt__OnActorEndOverlap Parms{};

	Parms.OverlappedActor = OverlappedActor;
	Parms.OtherActor = OtherActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Script_VendingMachine.Script_VendingMachine_C.GbxActorScriptEvt__OnBuyItem_ScriptEvent
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AOakPlayerController*             player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    bBuyback                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UScript_VendingMachine_C::GbxActorScriptEvt__OnBuyItem_ScriptEvent(class AOakPlayerController* player, bool bBuyback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_VendingMachine_C", "GbxActorScriptEvt__OnBuyItem_ScriptEvent");

	Params::Script_VendingMachine_C_GbxActorScriptEvt__OnBuyItem_ScriptEvent Parms{};

	Parms.player = player;
	Parms.bBuyback = bBuyback;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Script_VendingMachine.Script_VendingMachine_C.GbxActorScriptEvt__OnEcho4DeploymentReady
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AOakPlayerController*             OakPC                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UScript_VendingMachine_C::GbxActorScriptEvt__OnEcho4DeploymentReady(class AOakPlayerController* OakPC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_VendingMachine_C", "GbxActorScriptEvt__OnEcho4DeploymentReady");

	Params::Script_VendingMachine_C_GbxActorScriptEvt__OnEcho4DeploymentReady Parms{};

	Parms.OakPC = OakPC;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Script_VendingMachine.Script_VendingMachine_C.GbxActorScriptEvt__OnInsufficientFunds_ScriptEvent
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AOakPlayerController*             player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UScript_VendingMachine_C::GbxActorScriptEvt__OnInsufficientFunds_ScriptEvent(class AOakPlayerController* player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_VendingMachine_C", "GbxActorScriptEvt__OnInsufficientFunds_ScriptEvent");

	Params::Script_VendingMachine_C_GbxActorScriptEvt__OnInsufficientFunds_ScriptEvent Parms{};

	Parms.player = player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Script_VendingMachine.Script_VendingMachine_C.GbxActorScriptEvt__OnIOTDSpawned_ScriptEvent
// (BlueprintCallable, BlueprintEvent)

void UScript_VendingMachine_C::GbxActorScriptEvt__OnIOTDSpawned_ScriptEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_VendingMachine_C", "GbxActorScriptEvt__OnIOTDSpawned_ScriptEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Script_VendingMachine.Script_VendingMachine_C.GbxActorScriptEvt__OnProximityChanged_ScriptEvent
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bPlayersInProximity                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UScript_VendingMachine_C::GbxActorScriptEvt__OnProximityChanged_ScriptEvent(bool bPlayersInProximity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_VendingMachine_C", "GbxActorScriptEvt__OnProximityChanged_ScriptEvent");

	Params::Script_VendingMachine_C_GbxActorScriptEvt__OnProximityChanged_ScriptEvent Parms{};

	Parms.bPlayersInProximity = bPlayersInProximity;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Script_VendingMachine.Script_VendingMachine_C.GbxActorScriptEvt__OnRefillAmmo_ScriptEvent
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AOakPlayerController*             player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UScript_VendingMachine_C::GbxActorScriptEvt__OnRefillAmmo_ScriptEvent(class AOakPlayerController* player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_VendingMachine_C", "GbxActorScriptEvt__OnRefillAmmo_ScriptEvent");

	Params::Script_VendingMachine_C_GbxActorScriptEvt__OnRefillAmmo_ScriptEvent Parms{};

	Parms.player = player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Script_VendingMachine.Script_VendingMachine_C.GbxActorScriptEvt__OnSellAllJunk_ScriptEvent
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AOakPlayerController*             player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UScript_VendingMachine_C::GbxActorScriptEvt__OnSellAllJunk_ScriptEvent(class AOakPlayerController* player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_VendingMachine_C", "GbxActorScriptEvt__OnSellAllJunk_ScriptEvent");

	Params::Script_VendingMachine_C_GbxActorScriptEvt__OnSellAllJunk_ScriptEvent Parms{};

	Parms.player = player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Script_VendingMachine.Script_VendingMachine_C.GbxActorScriptEvt__OnSellItem_ScriptEvent
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AOakPlayerController*             player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UScript_VendingMachine_C::GbxActorScriptEvt__OnSellItem_ScriptEvent(class AOakPlayerController* player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_VendingMachine_C", "GbxActorScriptEvt__OnSellItem_ScriptEvent");

	Params::Script_VendingMachine_C_GbxActorScriptEvt__OnSellItem_ScriptEvent Parms{};

	Parms.player = player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Script_VendingMachine.Script_VendingMachine_C.GbxActorScriptEvt__OnShopShuffled_ScriptEvent
// (BlueprintCallable, BlueprintEvent)

void UScript_VendingMachine_C::GbxActorScriptEvt__OnShopShuffled_ScriptEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_VendingMachine_C", "GbxActorScriptEvt__OnShopShuffled_ScriptEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Script_VendingMachine.Script_VendingMachine_C.Inactive__OnStateEnabled
// (BlueprintCallable, BlueprintEvent)

void UScript_VendingMachine_C::Inactive__OnStateEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_VendingMachine_C", "Inactive__OnStateEnabled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Script_VendingMachine.Script_VendingMachine_C.InUse__OnStateDisabled
// (BlueprintCallable, BlueprintEvent)

void UScript_VendingMachine_C::InUse__OnStateDisabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_VendingMachine_C", "InUse__OnStateDisabled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Script_VendingMachine.Script_VendingMachine_C.InUse__OnStateEnabled
// (BlueprintCallable, BlueprintEvent)

void UScript_VendingMachine_C::InUse__OnStateEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_VendingMachine_C", "InUse__OnStateEnabled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Script_VendingMachine.Script_VendingMachine_C.OnBeginPlay
// (Event, Public, BlueprintEvent)

void UScript_VendingMachine_C::OnBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_VendingMachine_C", "OnBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Script_VendingMachine.Script_VendingMachine_C.OnVendBegin
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AOakPlayerController*             OakPC                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UScript_VendingMachine_C::OnVendBegin(class AOakPlayerController* OakPC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_VendingMachine_C", "OnVendBegin");

	Params::Script_VendingMachine_C_OnVendBegin Parms{};

	Parms.OakPC = OakPC;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Script_VendingMachine.Script_VendingMachine_C.OnVendEnd
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AOakPlayerController*             OakPC                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UScript_VendingMachine_C::OnVendEnd(class AOakPlayerController* OakPC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_VendingMachine_C", "OnVendEnd");

	Params::Script_VendingMachine_C_OnVendEnd Parms{};

	Parms.OakPC = OakPC;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Script_VendingMachine.Script_VendingMachine_C.PlayVO
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// Enum_IO_VendingMachine_MenuActions      VendingAction                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UScript_VendingMachine_C::PlayVO(Enum_IO_VendingMachine_MenuActions VendingAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_VendingMachine_C", "PlayVO");

	Params::Script_VendingMachine_C_PlayVO Parms{};

	Parms.VendingAction = VendingAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Script_VendingMachine.Script_VendingMachine_C.RetrieveE4
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  DelayBeforeDigistructingOut                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UScript_VendingMachine_C::RetrieveE4(double DelayBeforeDigistructingOut)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_VendingMachine_C", "RetrieveE4");

	Params::Script_VendingMachine_C_RetrieveE4 Parms{};

	Parms.DelayBeforeDigistructingOut = DelayBeforeDigistructingOut;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Script_VendingMachine.Script_VendingMachine_C.SpawnAndSetEcho4
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AOakCharacter*                    player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UScript_VendingMachine_C::SpawnAndSetEcho4(class AOakCharacter* player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_VendingMachine_C", "SpawnAndSetEcho4");

	Params::Script_VendingMachine_C_SpawnAndSetEcho4 Parms{};

	Parms.player = player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Script_VendingMachine.Script_VendingMachine_C.UpdateAnimState
// (BlueprintCallable, BlueprintEvent)

void UScript_VendingMachine_C::UpdateAnimState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_VendingMachine_C", "UpdateAnimState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Script_VendingMachine.Script_VendingMachine_C.UpdatePlayersUsingMachine
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AGbxCharacter*                    player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Remove                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UScript_VendingMachine_C::UpdatePlayersUsingMachine(class AGbxCharacter* player, bool Remove)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_VendingMachine_C", "UpdatePlayersUsingMachine");

	Params::Script_VendingMachine_C_UpdatePlayersUsingMachine Parms{};

	Parms.player = player;
	Parms.Remove = Remove;

	UObject::ProcessEvent(Func, &Parms);
}

}

