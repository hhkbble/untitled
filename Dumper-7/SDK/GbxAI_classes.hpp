#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GbxAI

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "GbxNav_classes.hpp"
#include "GbxAI_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "AIModule_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "GbxEngine_structs.hpp"
#include "GbxEngine_classes.hpp"
#include "GbxSpawn_structs.hpp"
#include "GbxSpawn_classes.hpp"


namespace SDK
{

// Class GbxAI.Cover
// 0x0078 (0x0408 - 0x0390)
class ACover : public AActor
{
public:
	TSoftObjectPtr<class UCoverSlotData>          DefaultCoverSlotType;                              // 0x0390(0x0028)(Config, GlobalConfig, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCoverSlotData*                         SlotType;                                          // 0x03B8(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         SlotInterval;                                      // 0x03C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         OverrideSlotInterval;                              // 0x03C4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bUseOverrideSlotInterval;                          // 0x03C8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3C9[0x3];                                      // 0x03C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TotalWidth;                                        // 0x03CC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UCoverSlotComponent*>            Slots;                                             // 0x03D0(0x0010)(Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPrivate)
	bool                                          bAutogenerated;                                    // 0x03E0(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3E1[0x27];                                     // 0x03E1(0x0027)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetCoverEnabled(bool bNewEnabled);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("Cover")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"Cover")
	}
	static class ACover* GetDefaultObj()
	{
		return GetDefaultObjImpl<ACover>();
	}
};
DUMPER7_ASSERTS_ACover;

// Class GbxAI.CoverAdjustParticipant
// 0x0000 (0x0000 - 0x0000)
class ICoverAdjustParticipant final
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CoverAdjustParticipant")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CoverAdjustParticipant")
	}
	static class ICoverAdjustParticipant* GetDefaultObj()
	{
		return GetDefaultObjImpl<ICoverAdjustParticipant>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_ICoverAdjustParticipant;

// Class GbxAI.CoverRootComponent
// 0x0000 (0x02B0 - 0x02B0)
class UCoverRootComponent final : public USceneComponent
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CoverRootComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CoverRootComponent")
	}
	static class UCoverRootComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCoverRootComponent>();
	}
};
DUMPER7_ASSERTS_UCoverRootComponent;

// Class GbxAI.CoverSlotComponent
// 0x00D0 (0x06F0 - 0x0620)
class UCoverSlotComponent : public UPrimitiveComponent
{
public:
	class UCoverSlotData*                         SlotType;                                          // 0x0620(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bEnabled;                                          // 0x0628(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bValid;                                            // 0x0629(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ECoverSlotHeight                              SlotHeight;                                        // 0x062A(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_62B[0x5];                                      // 0x062B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCoverSlotViewData>             Views;                                             // 0x0630(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FCoverSlotViewFailData>         FailedViews;                                       // 0x0640(0x0010)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPrivate)
	TArray<class UCoverSlotComponent*>            OverlappingSlots;                                  // 0x0650(0x0010)(Edit, ExportObject, ZeroConstructor, EditConst, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPrivate)
	class AActor*                                 CurrentUser;                                       // 0x0660(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_668[0x88];                                     // 0x0668(0x0088)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetEnabled(bool bNewEnabled);

	bool IsEnabled() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CoverSlotComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CoverSlotComponent")
	}
	static class UCoverSlotComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCoverSlotComponent>();
	}
};
DUMPER7_ASSERTS_UCoverSlotComponent;

// Class GbxAI.CoverSlotData
// 0x0080 (0x00B0 - 0x0030)
class UCoverSlotData final : public UDataAsset
{
public:
	float                                         SlotInterval;                                      // 0x0030(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SlotWidth;                                         // 0x0034(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SlotHeightLow;                                     // 0x0038(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SlotHeightHigh;                                    // 0x003C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOffGroundCover;                                   // 0x0040(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCoverLineOfSightParams                ExposedParams;                                     // 0x0044(0x0010)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bCheckExposure;                                    // 0x0054(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCoverAdjustParams                     AutoAdjustParams;                                  // 0x0058(0x0040)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	TArray<class UCoverViewData*>                 Views;                                             // 0x0098(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	struct FColor                                 ValidColor;                                        // 0x00A8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         NavSearchRadius;                                   // 0x00AC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CoverSlotData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CoverSlotData")
	}
	static class UCoverSlotData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCoverSlotData>();
	}
};
DUMPER7_ASSERTS_UCoverSlotData;

// Class GbxAI.GbxBrainTaskData
// 0x0008 (0x0058 - 0x0050)
class UGbxBrainTaskData : public UGbxGraphAsset
{
public:
	uint8                                         Pad_50[0x8];                                       // 0x0050(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxBrainTaskData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxBrainTaskData")
	}
	static class UGbxBrainTaskData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxBrainTaskData>();
	}
};
DUMPER7_ASSERTS_UGbxBrainTaskData;

// Class GbxAI.CoverStatics
// 0x0000 (0x0028 - 0x0028)
class UCoverStatics final : public UBlueprintFunctionLibrary
{
public:
	static void AIScriptedCover(class AActor* AIActor, class AActor* Cover, EGbxBrainExec* Exec, const struct FLatentActionInfo& LatentInfo);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CoverStatics")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CoverStatics")
	}
	static class UCoverStatics* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCoverStatics>();
	}
};
DUMPER7_ASSERTS_UCoverStatics;

// Class GbxAI.CoverStyleData
// 0x00E0 (0x0110 - 0x0030)
class UCoverStyleData final : public UDataAsset
{
public:
	ECoverStyleAnimType                           AnimType;                                          // 0x0030(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           StyleActionTag;                                    // 0x0034(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCoverViewData*                         View;                                              // 0x0040(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoClear, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseTicketSettings;                                // 0x0048(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAITicketUseData                    TicketSettings;                                    // 0x0050(0x00B8)(Edit, NativeAccessSpecifierPublic)
	bool                                          bAllowLookAts;                                     // 0x0108(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAllowAimOffsets;                                  // 0x0109(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bForceFiring;                                      // 0x010A(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFireExitCoverRequiresAnimation;                   // 0x010B(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bExitFromFiringPosition;                           // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_10D[0x3];                                      // 0x010D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CoverStyleData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CoverStyleData")
	}
	static class UCoverStyleData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCoverStyleData>();
	}
};
DUMPER7_ASSERTS_UCoverStyleData;

// Class GbxAI.GbxChildActorComponent
// 0x00A0 (0x0350 - 0x02B0)
#pragma pack(push, 0x1)
class alignas(0x10) UGbxChildActorComponent : public UChildActorBaseComponent
{
public:
	uint8                                         bAutoSpawnActor : 1;                               // 0x02A8(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bAutoDestroyActor : 1;                             // 0x02A8(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bDestroyExistingChildActorOnSpawn : 1;             // 0x02A8(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bSetChildActorOwner : 1;                           // 0x02A8(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bSetChildActorInstigator : 1;                      // 0x02A8(0x0001)(BitIndex: 0x04, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bDeferChildActorClassUpdate : 1;                   // 0x02A8(0x0001)(BitIndex: 0x05, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bClearChildActorReferenceToMeWhenChildActorIsDetached : 1; // 0x02A8(0x0001)(BitIndex: 0x06, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bClearReferenceToChildActorWhenChildActorIsDetached : 1; // 0x02A8(0x0001)(BitIndex: 0x07, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bApplyScalingOnSpawn : 1;                          // 0x02A9(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_2AA[0x6];                                      // 0x02AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	FGbxDefPtrProperty_                           GbxActorDef;                                       // 0x02B0(0x0018)(Edit, BlueprintVisible, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AActor*                                 ChildActor;                                        // 0x02C8(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, TextExportTransient, NonPIEDuplicateTransient, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AActor*                                 ReplicatedChildActor;                              // 0x02D0(0x0008)(Net, ZeroConstructor, Transient, RepNotify, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   ChildActorDefName;                                 // 0x02D8(0x0008)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EChildActorState                              ChildActorState;                                   // 0x02E0(0x0001)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2E1[0x7];                                      // 0x02E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGbxChildActorComponentReplicator*      Replicator;                                        // 0x02E8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2F0[0x18];                                     // 0x02F0(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class AActor* ChildActor)> OnChildActorSpawned;                    // 0x0308(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_318[0x30];                                     // 0x0318(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static void GetOrWaitForChildActor(class UGbxChildActorComponent* Component, class AActor** Child, const struct FLatentActionInfo& LatentInfo);

	void DespawnChildActor();
	void OnRep_ChildActorDefName();
	void OnRep_ChildActorState();
	void OnRep_ReplicatedChildActor();
	void SpawnChildActor();

	class AActor* GetChildActor() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxChildActorComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxChildActorComponent")
	}
	static class UGbxChildActorComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxChildActorComponent>();
	}
};
#pragma pack(pop)
DUMPER7_ASSERTS_UGbxChildActorComponent;

// Class GbxAI.GbxAIHeldActorComponent
// 0x0060 (0x03B0 - 0x0350)
#pragma pack(push, 0x1)
class alignas(0x10) UGbxAIHeldActorComponent : public UGbxChildActorComponent
{
public:
	bool                                          bDisableCollisionWhileHeld;                        // 0x0348(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_349[0x3];                                      // 0x0349(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Identifier;                                        // 0x034C(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_354[0x4];                                      // 0x0354(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              RequestingKey;                                     // 0x0358(0x0038)(Edit, Protected, NativeAccessSpecifierProtected)
	uint8                                         bHideHeldActorOnSpawn : 1;                         // 0x0390(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_391[0x17];                                     // 0x0391(0x0017)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnHeldActorSpawned(class AActor* NewHeldActor);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxAIHeldActorComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxAIHeldActorComponent")
	}
	static class UGbxAIHeldActorComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxAIHeldActorComponent>();
	}
};
#pragma pack(pop)
DUMPER7_ASSERTS_UGbxAIHeldActorComponent;

// Class GbxAI.CoverUser
// 0x0000 (0x0000 - 0x0000)
class ICoverUser final
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CoverUser")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CoverUser")
	}
	static class ICoverUser* GetDefaultObj()
	{
		return GetDefaultObjImpl<ICoverUser>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_ICoverUser;

// Class GbxAI.CoverUserData
// 0x00C8 (0x00F8 - 0x0030)
class UCoverUserData final : public UDataAsset
{
public:
	TArray<struct FCoverActionData>               actions;                                           // 0x0030(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FGbxParam                              DefaultIdleTime;                                   // 0x0040(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              DefaultFireTime;                                   // 0x0078(0x0038)(Edit, NativeAccessSpecifierPublic)
	float                                         WidthAdjustment_Idle;                              // 0x00B0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WidthAdjustment_Fire;                              // 0x00B4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   SlotName;                                          // 0x00B8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                          IdleHigh;                                          // 0x00C0(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                          IdleLow;                                           // 0x00C8(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                          ExitHigh;                                          // 0x00D0(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                          ExitLow;                                           // 0x00D8(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FCoverTransitionData>           EnterTransitions;                                  // 0x00E0(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bCanAbandonCoverImmediately;                       // 0x00F0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CoverUserData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CoverUserData")
	}
	static class UCoverUserData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCoverUserData>();
	}
};
DUMPER7_ASSERTS_UCoverUserData;

// Class GbxAI.CoverViewData
// 0x0050 (0x0080 - 0x0030)
class UCoverViewData final : public UDataAsset
{
public:
	ECoverSlotHeight                              SlotHeight;                                        // 0x0030(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                ViewOffset;                                        // 0x0038(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIdleView;                                         // 0x0050(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCoverLineOfSightParams                LineOfSightParams;                                 // 0x0054(0x0010)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	float                                         ForwardCheckDistance;                              // 0x0064(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                ForwardCheckExtent;                                // 0x0068(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CoverViewData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CoverViewData")
	}
	static class UCoverViewData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCoverViewData>();
	}
};
DUMPER7_ASSERTS_UCoverViewData;

// Class GbxAI.GbxAggroInterface
// 0x0000 (0x0000 - 0x0000)
class IGbxAggroInterface final
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxAggroInterface")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxAggroInterface")
	}
	static class IGbxAggroInterface* GetDefaultObj()
	{
		return GetDefaultObjImpl<IGbxAggroInterface>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_IGbxAggroInterface;

// Class GbxAI.GbxAttachableActor
// 0x0000 (0x0000 - 0x0000)
class IGbxAttachableActor final
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxAttachableActor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxAttachableActor")
	}
	static class IGbxAttachableActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<IGbxAttachableActor>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_IGbxAttachableActor;

// Class GbxAI.GbxAICharacter
// 0x07A0 (0x0FD0 - 0x0830)
class AGbxAICharacter : public AGbxNavCharacter
{
public:
	uint8                                         Pad_830[0x18];                                     // 0x0830(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class AActor* NewTarget)> TargetChangedEvent;                      // 0x0848(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_858[0x68];                                     // 0x0858(0x0068)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxTargetableState                    TargetableState;                                   // 0x08C0(0x01C8)(NativeAccessSpecifierPublic)
	struct FGbxTargeterState                      TargetingState;                                    // 0x0A88(0x0318)(NativeAccessSpecifierPublic)
	struct FGbxPerceiverState                     PerceiverState;                                    // 0x0DA0(0x0128)(NativeAccessSpecifierPublic)
	struct FGbxAggroState                         AggroState;                                        // 0x0EC8(0x0108)(NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxAICharacter")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxAICharacter")
	}
	static class AGbxAICharacter* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGbxAICharacter>();
	}
};
DUMPER7_ASSERTS_AGbxAICharacter;

// Class GbxAI.GbxAIDebugDataReplicator
// 0x0038 (0x03C8 - 0x0390)
class AGbxAIDebugDataReplicator final : public AActor
{
public:
	struct FGbxAIPerfStats                        AIPerfStats;                                       // 0x0390(0x0038)(Net, RepNotify, NoDestructor, NativeAccessSpecifierPublic)

public:
	void OnRep_AIPerfStats();
	void ServerSetClientListening(const class APlayerController* ClientPC, const bool bListening);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxAIDebugDataReplicator")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxAIDebugDataReplicator")
	}
	static class AGbxAIDebugDataReplicator* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGbxAIDebugDataReplicator>();
	}
};
DUMPER7_ASSERTS_AGbxAIDebugDataReplicator;

// Class GbxAI.GbxAIHeldActorFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UGbxAIHeldActorFunctionLibrary : public UBlueprintFunctionLibrary
{
public:
	static void AIHeldActor_Destroy(class AActor* AIActor, class FName ID, EGbxAIHeldFilterType FilterType);
	static void AIHeldActor_Drop(class AActor* AIActor, bool bRequestNewHeldActor, class FName ID, EGbxAIHeldFilterType FilterType, class AActor* InstigatorOverride);
	static TArray<class AActor*> AIHeldActor_GetActors(class AActor* AIActor, class FName ID, EGbxAIHeldFilterType FilterType);
	static void AIHeldActor_Hide(class AActor* AIActor, class FName ID, EGbxAIHeldFilterType FilterType);
	static void AIHeldActor_SetChildActorDef(class AActor* AIActor, FGameDataHandleProperty_ NewActorDef, class FName ID, EGbxAIHeldFilterType FilterType);
	static void AIHeldActor_Show(class AActor* AIActor, class FName ID, EGbxAIHeldFilterType FilterType);
	static void AIHeldActor_Spawn(class AActor* AIActor, class FName ID, EGbxAIHeldFilterType FilterType);
	static void AIHeldActor_ThrowAtActor(class AActor* AIActor, class AActor* target, const struct FGbxRelativeLocation& TargetOptions, const struct FTrajectoryOptions& TrajectoryOptions, bool bRequestNewHeldActor, bool bSpawnIfDoesNotExist, class FName ID, EGbxAIHeldFilterType FilterType);
	static void AIHeldActor_ThrowAtTarget(class AActor* AIActor, const struct FGbxRelativeLocation& TargetOptions, const struct FTrajectoryOptions& TrajectoryOptions, bool bRequestNewHeldActor, bool bSpawnIfDoesNotExist, class FName ID, EGbxAIHeldFilterType FilterType);
	static void AIHeldActor_ThrowHeldActorAtLocation(class AActor* AIActor, const struct FVector& ThrowAtLocation, const struct FTrajectoryOptions& TrajectoryOptions, bool bRequestNewHeldActor, bool bSpawnIfDoesNotExist, class FName ID, EGbxAIHeldFilterType FilterType);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxAIHeldActorFunctionLibrary")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxAIHeldActorFunctionLibrary")
	}
	static class UGbxAIHeldActorFunctionLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxAIHeldActorFunctionLibrary>();
	}
};
DUMPER7_ASSERTS_UGbxAIHeldActorFunctionLibrary;

// Class GbxAI.GbxAITicketData
// 0x0078 (0x00A8 - 0x0030)
class UGbxAITicketData final : public UDataAsset
{
public:
	struct FGbxParam                              MaxValue;                                          // 0x0030(0x0038)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGbxParam                              target;                                            // 0x0068(0x0038)(Edit, NativeAccessSpecifierPublic)
	bool                                          bPerTarget;                                        // 0x00A0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxAITicketData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxAITicketData")
	}
	static class UGbxAITicketData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxAITicketData>();
	}
};
DUMPER7_ASSERTS_UGbxAITicketData;

// Class GbxAI.GbxAttachableActorLibrary
// 0x0000 (0x0028 - 0x0028)
class UGbxAttachableActorLibrary final : public UBlueprintFunctionLibrary
{
public:
	static void AttachActorToActor(class AActor* ChildActor, class AActor* ParentActor, class FName SocketName, EAttachmentRule LocationRule, EAttachmentRule RotationRule, EAttachmentRule ScaleRule, bool bWeldSimulatedBodies);
	static void AttachActorToComponent(class AActor* ChildActor, class USceneComponent* Parent, class FName SocketName, EAttachmentRule LocationRule, EAttachmentRule RotationRule, EAttachmentRule ScaleRule, bool bWeldSimulatedBodies);
	static void DetachActor(class AActor* ChildActor, EDetachmentRule LocationRule, EDetachmentRule RotationRule, EDetachmentRule ScaleRule);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxAttachableActorLibrary")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxAttachableActorLibrary")
	}
	static class UGbxAttachableActorLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxAttachableActorLibrary>();
	}
};
DUMPER7_ASSERTS_UGbxAttachableActorLibrary;

// Class GbxAI.GbxBrainFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UGbxBrainFunctionLibrary final : public UBlueprintFunctionLibrary
{
public:
	static void AbortScriptedBrainTask(class AActor* AIActor, bool bStopImmediately);
	static void AIReplaceDefaultTask(class AActor* AIActor, class UGbxBrainTaskData* Task);
	static void AIResetDefaultTask(class AActor* AIActor);
	static void AIScriptedLook(class AActor* AIActor, class AActor* TargetActor, EGbxBrainExec* Exec, const struct FLatentActionInfo& LatentInfo);
	static void AIScriptedMove(class AActor* AIActor, class AActor* GoalActor, EGbxBrainExec* Exec, const struct FLatentActionInfo& LatentInfo);
	static void AIScriptedTask(class AActor* AIActor, class UGbxBrainTaskData* Task);
	static void AIScriptedTeleport(class AActor* AIActor, const struct FVector& GoalLocation, EGbxBrainExec* Exec, const struct FLatentActionInfo& LatentInfo);
	static void AIScriptedWait(class AActor* AIActor);
	static void LockThinking(class AActor* AIActor, class FName reason, bool Block, bool bAbort);
	static void UnlockThinking(class AActor* AIActor, class FName reason);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxBrainFunctionLibrary")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxBrainFunctionLibrary")
	}
	static class UGbxBrainFunctionLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxBrainFunctionLibrary>();
	}
};
DUMPER7_ASSERTS_UGbxBrainFunctionLibrary;

// Class GbxAI.GbxBrainTaskData_AITree
// 0x0000 (0x0058 - 0x0058)
class UGbxBrainTaskData_AITree final : public UGbxBrainTaskData
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxBrainTaskData_AITree")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxBrainTaskData_AITree")
	}
	static class UGbxBrainTaskData_AITree* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxBrainTaskData_AITree>();
	}
};
DUMPER7_ASSERTS_UGbxBrainTaskData_AITree;

// Class GbxAI.GbxBrainOwner
// 0x0000 (0x0000 - 0x0000)
class IGbxBrainOwner final
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxBrainOwner")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxBrainOwner")
	}
	static class IGbxBrainOwner* GetDefaultObj()
	{
		return GetDefaultObjImpl<IGbxBrainOwner>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_IGbxBrainOwner;

// Class GbxAI.GbxChildActorComponentReplicator
// 0x0020 (0x02D0 - 0x02B0)
class UGbxChildActorComponentReplicator final : public USceneComponent
{
public:
	class UGbxChildActorComponent*                TargetComponent;                                   // 0x02A8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                   TargetName;                                        // 0x02B0(0x0008)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AActor*                                 ReplicatedChildActor;                              // 0x02B8(0x0008)(Net, ZeroConstructor, Transient, RepNotify, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EChildActorState                              ChildActorState;                                   // 0x02C0(0x0001)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2C1[0x3];                                      // 0x02C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ChildActorDefName;                                 // 0x02C4(0x0008)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2CC[0x4];                                      // 0x02CC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnRep_ChildActorDefName();
	void OnRep_ChildActorState();
	void OnRep_ReplicatedChildActor();
	void OnRep_TargetName();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxChildActorComponentReplicator")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxChildActorComponentReplicator")
	}
	static class UGbxChildActorComponentReplicator* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxChildActorComponentReplicator>();
	}
};
DUMPER7_ASSERTS_UGbxChildActorComponentReplicator;

// Class GbxAI.GbxHeldActor
// 0x0000 (0x0000 - 0x0000)
class IGbxHeldActor final
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxHeldActor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxHeldActor")
	}
	static class IGbxHeldActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<IGbxHeldActor>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_IGbxHeldActor;

// Class GbxAI.GbxNavTest_Targeting
// 0x0120 (0x0520 - 0x0400)
class AGbxNavTest_Targeting final : public AGbxEngineTestActor
{
public:
	bool                                          bLastKnownLocTest;                                 // 0x0400(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_401[0x7];                                      // 0x0401(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASpawner*                               Spawner;                                           // 0x0408(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxTargetingTestAgentData             target;                                            // 0x0410(0x0070)(Edit, NativeAccessSpecifierPublic)
	struct FGbxTargetingTestAgentData             Perceiver;                                         // 0x0480(0x0070)(Edit, NativeAccessSpecifierPublic)
	class UGbxBrainTaskData*                      PerceiverTask;                                     // 0x04F0(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4F8[0x28];                                     // 0x04F8(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void StoreLastKnownLocation();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxNavTest_Targeting")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxNavTest_Targeting")
	}
	static class AGbxNavTest_Targeting* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGbxNavTest_Targeting>();
	}
};
DUMPER7_ASSERTS_AGbxNavTest_Targeting;

// Class GbxAI.GbxPerceiver
// 0x0000 (0x0000 - 0x0000)
class IGbxPerceiver final
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxPerceiver")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxPerceiver")
	}
	static class IGbxPerceiver* GetDefaultObj()
	{
		return GetDefaultObjImpl<IGbxPerceiver>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_IGbxPerceiver;

// Class GbxAI.GbxTargetable
// 0x0000 (0x0000 - 0x0000)
class IGbxTargetable final
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxTargetable")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxTargetable")
	}
	static class IGbxTargetable* GetDefaultObj()
	{
		return GetDefaultObjImpl<IGbxTargetable>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_IGbxTargetable;

// Class GbxAI.GbxTargeter
// 0x0000 (0x0000 - 0x0000)
class IGbxTargeter final
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxTargeter")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxTargeter")
	}
	static class IGbxTargeter* GetDefaultObj()
	{
		return GetDefaultObjImpl<IGbxTargeter>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_IGbxTargeter;

// Class GbxAI.GbxTargetingFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UGbxTargetingFunctionLibrary final : public UBlueprintFunctionLibrary
{
public:
	static void AIClearScriptedTarget(class AActor* AIActor);
	static class AActor* AIGetScriptedTarget(class AActor* AIActor);
	static void AIScriptedScoringBoost(class AActor* AIActor, EGbxTargetScoringBoost ScoringBoost);
	static void AISetScriptedTarget(class AActor* AIActor, class AActor* TargetActor, bool bApplyRestrictions);
	static void EveryoneForget(class AActor* Actor);
	static void ForgetTarget(class AActor* Actor, class AActor* target);
	static EGbxTargetScoringBoost GetAIScriptedScoringBoost(class AActor* AIActor);
	static bool GetBestTargetableSocket(class AActor* target, class AActor* Targeter, bool bUseViewRotation, class FName* SocketName, struct FVector* SocketLocation, class USceneComponent** Component);
	static class AActor* GetPrimaryTarget(class AActor* AIActor);
	static bool GetPrimaryTargetLocation(class AActor* AIActor, struct FVector* OutLocation);
	static void GetTarget(class AActor* AIActor, class AActor** PrimaryTarget, TArray<class AActor*>* TargetList);
	static TArray<class AActor*> GetTargetList(class AActor* AIActor);
	static bool GetTargetLocation(class AActor* Targeter, class AActor* target, struct FVector* OutLocation);
	static void LockPerceivability(class AActor* Actor, class FName reason, bool Block);
	static bool LockTarget(class AActor* Actor, class FName reason, bool Block);
	static void LockTargetability(class AActor* Actor, class FName reason, bool Block);
	static void LockTargetableByAI(class AActor* Actor, class FName reason, bool Block, bool bEveryoneForget);
	static void LockTargeting(class AActor* Actor, class FName reason, bool Block, bool bForget);
	static void RejoinAIGroup(class AActor* AIActor);
	static void SetInvisibleToAI(class AActor* Actor, class FName reason, bool bEnable);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxTargetingFunctionLibrary")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxTargetingFunctionLibrary")
	}
	static class UGbxTargetingFunctionLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxTargetingFunctionLibrary>();
	}
};
DUMPER7_ASSERTS_UGbxTargetingFunctionLibrary;

// Class GbxAI.GbxTeamFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UGbxTeamFunctionLibrary final : public UBlueprintFunctionLibrary
{
public:
	static ETeamAttitude GetAttitudeTowards(class AActor* Perceiver, class AActor* target);
	static class FString GetDisplayName(const struct FGbxTeamIdHandle& Team);
	static FGameDataHandleProperty_ GetTeam(class AActor* AIActor);
	static FGameDataHandleProperty_ GetTeamFromActorDef(FGameDataHandleProperty_ GbxActorDef);
	static struct FGbxTeamIdHandle GetTeamID(class AActor* Actor);
	static bool IsOnTeam(class AActor* AIActor, FGameDataHandleProperty_ Team);
	static bool IsSameTeamId(const struct FGbxTeamIdHandle& Team, const struct FGbxTeamIdHandle& OtherTeam);
	static void SetTeam(class AActor* AIActor, FGameDataHandleProperty_ Team);
	static void SetTeamCollisionChannelFrom(class AActor* Actor, class AActor* TeamActor);
	static void SetTeamID(class AActor* Actor, const struct FGbxTeamIdHandle& Team);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxTeamFunctionLibrary")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxTeamFunctionLibrary")
	}
	static class UGbxTeamFunctionLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxTeamFunctionLibrary>();
	}
};
DUMPER7_ASSERTS_UGbxTeamFunctionLibrary;

// Class GbxAI.GbxTeam
// 0x0000 (0x0000 - 0x0000)
class IGbxTeam final
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxTeam")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxTeam")
	}
	static class IGbxTeam* GetDefaultObj()
	{
		return GetDefaultObjImpl<IGbxTeam>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_IGbxTeam;

// Class GbxAI.GbxTerritory
// 0x0010 (0x03A0 - 0x0390)
class AGbxTerritory final : public AInfo
{
public:
	uint8                                         Pad_390[0x8];                                      // 0x0390(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UGbxTerritoryComponent*                 TerritoryComponent;                                // 0x0398(0x0008)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	class UGbxTerritoryComponent* GetTerritory() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxTerritory")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxTerritory")
	}
	static class AGbxTerritory* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGbxTerritory>();
	}
};
DUMPER7_ASSERTS_AGbxTerritory;

// Class GbxAI.GbxTerritoryComponent
// 0x03A0 (0x09C0 - 0x0620)
class UGbxTerritoryComponent : public UPrimitiveComponent
{
public:
	uint8                                         Pad_620[0x8];                                      // 0x0620(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxTerritorySettings                  settings;                                          // 0x0628(0x0378)(Edit, NativeAccessSpecifierPublic)
	uint8                                         Pad_9A0[0x8];                                      // 0x09A0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UGbxTerritoryComponent*>         LinkedTerritories;                                 // 0x09A8(0x0010)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPrivate)
	uint8                                         Pad_9B8[0x8];                                      // 0x09B8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxTerritoryComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxTerritoryComponent")
	}
	static class UGbxTerritoryComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxTerritoryComponent>();
	}
};
DUMPER7_ASSERTS_UGbxTerritoryComponent;

// Class GbxAI.GbxTerritoryProvider
// 0x0000 (0x0000 - 0x0000)
class IGbxTerritoryProvider final
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxTerritoryProvider")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxTerritoryProvider")
	}
	static class IGbxTerritoryProvider* GetDefaultObj()
	{
		return GetDefaultObjImpl<IGbxTerritoryProvider>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_IGbxTerritoryProvider;

// Class GbxAI.GbxTerritoryUser
// 0x0000 (0x0000 - 0x0000)
class IGbxTerritoryUser final
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxTerritoryUser")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxTerritoryUser")
	}
	static class IGbxTerritoryUser* GetDefaultObj()
	{
		return GetDefaultObjImpl<IGbxTerritoryUser>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_IGbxTerritoryUser;

// Class GbxAI.GpsBlueprintLibrary
// 0x0000 (0x0028 - 0x0028)
class UGpsBlueprintLibrary final : public UBlueprintFunctionLibrary
{
public:
	static struct FGpsQueryRunData MakeGpsQueryRunData(class UGpsQueryAsset* Query);
	static void RunGpsQueryActor(class UObject* WorldContextObject, class AActor* owner, const struct FGpsQueryRunData& QueryData, class AActor** Result, EGpsExec* Exec, const struct FLatentActionInfo& LatentInfo);
	static void RunGpsQueryActorList(class UObject* WorldContextObject, class AActor* owner, const struct FGpsQueryRunData& QueryData, TArray<class AActor*>* Result, EGpsExec* Exec, const struct FLatentActionInfo& LatentInfo, int32 NumResults);
	static void RunGpsQueryVector(class UObject* WorldContextObject, class AActor* owner, const struct FGpsQueryRunData& QueryData, struct FVector* Result, EGpsExec* Exec, const struct FLatentActionInfo& LatentInfo);
	static void RunGpsQueryVectorList(class UObject* WorldContextObject, class AActor* owner, const struct FGpsQueryRunData& QueryData, TArray<struct FVector>* Result, EGpsExec* Exec, const struct FLatentActionInfo& LatentInfo, int32 NumResults);
	static void SetGpsName(const struct FGpsQueryRunData& InData, struct FGpsQueryRunData* OutData, class FName QueryName);
	static void SetGpsParam_Actor(const struct FGpsQueryRunData& InData, struct FGpsQueryRunData* OutData, class FName ParamName, class AActor* Value);
	static void SetGpsParam_Float(const struct FGpsQueryRunData& InData, struct FGpsQueryRunData* OutData, class FName ParamName, float Value);
	static void SetGpsParam_Int(const struct FGpsQueryRunData& InData, struct FGpsQueryRunData* OutData, class FName ParamName, int32 Value);
	static void SetGpsParam_NumericRange(const struct FGpsQueryRunData& InData, struct FGpsQueryRunData* OutData, class FName ParamName, const struct FNumericRange& Value);
	static void SetGpsParam_Rotator(const struct FGpsQueryRunData& InData, struct FGpsQueryRunData* OutData, class FName ParamName, const struct FRotator& Value);
	static void SetGpsParam_Vector(const struct FGpsQueryRunData& InData, struct FGpsQueryRunData* OutData, class FName ParamName, const struct FVector& Value);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GpsBlueprintLibrary")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GpsBlueprintLibrary")
	}
	static class UGpsBlueprintLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGpsBlueprintLibrary>();
	}
};
DUMPER7_ASSERTS_UGpsBlueprintLibrary;

// Class GbxAI.GpsContext
// 0x0000 (0x0028 - 0x0028)
class UGpsContext : public UObject
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GpsContext")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GpsContext")
	}
	static class UGpsContext* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGpsContext>();
	}
};
DUMPER7_ASSERTS_UGpsContext;

// Class GbxAI.GpsContext_Attribute
// 0x0018 (0x0040 - 0x0028)
class UGpsContext_Attribute final : public UGpsContext
{
public:
	FGameDataHandleProperty_                      attribute;                                         // 0x0028(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GpsContext_Attribute")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GpsContext_Attribute")
	}
	static class UGpsContext_Attribute* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGpsContext_Attribute>();
	}
};
DUMPER7_ASSERTS_UGpsContext_Attribute;

// Class GbxAI.GpsContext_Blackboard
// 0x0010 (0x0038 - 0x0028)
class UGpsContext_Blackboard final : public UGpsContext
{
public:
	struct FGbxBlackboardEntryRef                 BlackboardKey;                                     // 0x0028(0x000C)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GpsContext_Blackboard")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GpsContext_Blackboard")
	}
	static class UGpsContext_Blackboard* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGpsContext_Blackboard>();
	}
};
DUMPER7_ASSERTS_UGpsContext_Blackboard;

// Class GbxAI.GpsContext_Target
// 0x0000 (0x0028 - 0x0028)
class UGpsContext_Target final : public UGpsContext
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GpsContext_Target")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GpsContext_Target")
	}
	static class UGpsContext_Target* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGpsContext_Target>();
	}
};
DUMPER7_ASSERTS_UGpsContext_Target;

// Class GbxAI.GpsContext_Territory
// 0x0008 (0x0030 - 0x0028)
class UGpsContext_Territory final : public UGpsContext
{
public:
	EGbxTerritoryArea                             Area;                                              // 0x0028(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EGpsContextTerritoryValue                     Value;                                             // 0x0029(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GpsContext_Territory")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GpsContext_Territory")
	}
	static class UGpsContext_Territory* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGpsContext_Territory>();
	}
};
DUMPER7_ASSERTS_UGpsContext_Territory;

// Class GbxAI.GpsQueryAsset
// 0x0008 (0x0058 - 0x0050)
class UGpsQueryAsset final : public UGbxGraphAsset
{
public:
	uint8                                         Pad_50[0x8];                                       // 0x0050(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GpsQueryAsset")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GpsQueryAsset")
	}
	static class UGpsQueryAsset* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGpsQueryAsset>();
	}
};
DUMPER7_ASSERTS_UGpsQueryAsset;

// Class GbxAI.GpsTestActor
// 0x0468 (0x07F8 - 0x0390)
class AGpsTestActor final : public AActor
{
public:
	uint8                                         Pad_390[0x28];                                     // 0x0390(0x0028)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxTargeterState                      TargeterState;                                     // 0x03B8(0x0318)(NativeAccessSpecifierPublic)
	struct FGbxPerceiverState                     PerceiverState;                                    // 0x06D0(0x0128)(NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GpsTestActor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GpsTestActor")
	}
	static class AGpsTestActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGpsTestActor>();
	}
};
DUMPER7_ASSERTS_AGpsTestActor;

// Class GbxAI.GpsTestComponent
// 0x0280 (0x08A0 - 0x0620)
class UGpsTestComponent final : public UPrimitiveComponent
{
public:
	uint8                                         Pad_620[0x20];                                     // 0x0620(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	class UGbxBrainTaskData*                      BrainGraph;                                        // 0x0640(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bGetQueryDataFromBrainGraph;                       // 0x0648(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_649[0x7];                                      // 0x0649(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 BrainGraphAspect;                                  // 0x0650(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGpsQueryRunData                       QueryData;                                         // 0x0660(0x01E0)(Edit, NativeAccessSpecifierPrivate)
	TMap<class FName, struct FGbxParam>           contexts;                                          // 0x0840(0x0050)(Edit, NativeAccessSpecifierPrivate)
	int32                                         GeneratorIdx;                                      // 0x0890(0x0004)(Edit, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bDebugGenerator;                                   // 0x0894(0x0001)(Edit, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_895[0x3];                                      // 0x0895(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TestIdx;                                           // 0x0898(0x0004)(Edit, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bDebugTest;                                        // 0x089C(0x0001)(Edit, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_89D[0x3];                                      // 0x089D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void RefreshContexts();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GpsTestComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GpsTestComponent")
	}
	static class UGpsTestComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGpsTestComponent>();
	}
};
DUMPER7_ASSERTS_UGpsTestComponent;

// Class GbxAI.GbxEffectAreaFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UGbxEffectAreaFunctionLibrary final : public UBlueprintFunctionLibrary
{
public:
	static void CreateEffectArea(class AActor* owner, bool bFollowOwner, const struct FVector& Center, float Radius, float HalfHeight, EGbxEffectAreaAffectType type);
	static void RemoveAllEffectAreas(class AActor* owner);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxEffectAreaFunctionLibrary")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxEffectAreaFunctionLibrary")
	}
	static class UGbxEffectAreaFunctionLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxEffectAreaFunctionLibrary>();
	}
};
DUMPER7_ASSERTS_UGbxEffectAreaFunctionLibrary;

// Class GbxAI.NexusConfigStoreSense
// 0x0000 (0x0390 - 0x0390)
class UNexusConfigStoreSense final : public UNexusConfigStoreBasic
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NexusConfigStoreSense")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NexusConfigStoreSense")
	}
	static class UNexusConfigStoreSense* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNexusConfigStoreSense>();
	}
};
DUMPER7_ASSERTS_UNexusConfigStoreSense;

// Class GbxAI.NexusConfigStoreTeam
// 0x0000 (0x0390 - 0x0390)
class UNexusConfigStoreTeam final : public UNexusConfigStoreBasic
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NexusConfigStoreTeam")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NexusConfigStoreTeam")
	}
	static class UNexusConfigStoreTeam* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNexusConfigStoreTeam>();
	}
};
DUMPER7_ASSERTS_UNexusConfigStoreTeam;

// Class GbxAI.SpawnEncounterEvent_Territory
// 0x0018 (0x0048 - 0x0030)
class USpawnEncounterEvent_Territory final : public USpawnEncounterEvent
{
public:
	TArray<struct FSpawnEncounterSpawnerRef>      Spawners;                                          // 0x0030(0x0010)(Edit, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	class AGbxTerritory*                          Territory;                                         // 0x0040(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SpawnEncounterEvent_Territory")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SpawnEncounterEvent_Territory")
	}
	static class USpawnEncounterEvent_Territory* GetDefaultObj()
	{
		return GetDefaultObjImpl<USpawnEncounterEvent_Territory>();
	}
};
DUMPER7_ASSERTS_USpawnEncounterEvent_Territory;

}

