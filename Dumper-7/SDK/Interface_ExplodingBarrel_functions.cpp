#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Interface_ExplodingBarrel

#include "Basic.hpp"

#include "Interface_ExplodingBarrel_classes.hpp"
#include "Interface_ExplodingBarrel_parameters.hpp"


namespace SDK
{

// Function Interface_ExplodingBarrel.Interface_ExplodingBarrel_C.Barrel_Damaged
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AOakInteractiveObject*            DamagedOakInteractiveObject                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FReceivedDamageDetails&    DamageDetails                                          (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)

void IInterface_ExplodingBarrel_C::Barrel_Damaged(class AOakInteractiveObject* DamagedOakInteractiveObject, const struct FReceivedDamageDetails& DamageDetails)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("Interface_ExplodingBarrel_C", "Barrel_Damaged");

	Params::Interface_ExplodingBarrel_C_Barrel_Damaged Parms{};

	Parms.DamagedOakInteractiveObject = DamagedOakInteractiveObject;
	Parms.DamageDetails = std::move(DamageDetails);

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function Interface_ExplodingBarrel.Interface_ExplodingBarrel_C.Barrel_Exploded
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AOakInteractiveObject*            ExplodedIOakInteractiveObject                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void IInterface_ExplodingBarrel_C::Barrel_Exploded(class AOakInteractiveObject* ExplodedIOakInteractiveObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("Interface_ExplodingBarrel_C", "Barrel_Exploded");

	Params::Interface_ExplodingBarrel_C_Barrel_Exploded Parms{};

	Parms.ExplodedIOakInteractiveObject = ExplodedIOakInteractiveObject;

	AsUObject()->ProcessEvent(Func, &Parms);
}

}

