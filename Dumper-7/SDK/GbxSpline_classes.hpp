#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GbxSpline

#include "Basic.hpp"

#include "Landscape_structs.hpp"
#include "Landscape_classes.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "GbxSpline_structs.hpp"
#include "DeveloperSettings_classes.hpp"


namespace SDK
{

// Class GbxSpline.GbxLandscapeSplineControlPoint
// 0x0008 (0x00E0 - 0x00D8)
class UGbxLandscapeSplineControlPoint final : public ULandscapeSplineControlPoint
{
public:
	uint8                                         Pad_D8[0x8];                                       // 0x00D8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxLandscapeSplineControlPoint")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxLandscapeSplineControlPoint")
	}
	static class UGbxLandscapeSplineControlPoint* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxLandscapeSplineControlPoint>();
	}
};
DUMPER7_ASSERTS_UGbxLandscapeSplineControlPoint;

// Class GbxSpline.GbxLandscapeSplineSegment
// 0x0008 (0x00D0 - 0x00C8)
class UGbxLandscapeSplineSegment final : public ULandscapeSplineSegment
{
public:
	uint8                                         Pad_C8[0x8];                                       // 0x00C8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxLandscapeSplineSegment")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxLandscapeSplineSegment")
	}
	static class UGbxLandscapeSplineSegment* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxLandscapeSplineSegment>();
	}
};
DUMPER7_ASSERTS_UGbxLandscapeSplineSegment;

// Class GbxSpline.GbxSpline
// 0x0008 (0x0398 - 0x0390)
class AGbxSpline final : public AActor
{
public:
	class UGbxSplineComponent*                    SplineComponent;                                   // 0x0390(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxSpline")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxSpline")
	}
	static class AGbxSpline* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGbxSpline>();
	}
};
DUMPER7_ASSERTS_AGbxSpline;

// Class GbxSpline.GbxSplineClutterRuleBase
// 0x0000 (0x0030 - 0x0030)
class UGbxSplineClutterRuleBase final : public UDataAsset
{
public:
	TArray<class UGbxSplineClutterEntry*> EvaluateRule(const TScriptInterface<class IGbxSplineSegment>& Segment) const;
	bool LandscapeAdjustmentHitFilter(const class UGbxSplineClutterEntry* Entry, const struct FHitResult& Hit) const;
	bool ObjectOverlapFilter(const class UGbxSplineClutterEntry* Entry, const class AActor* OverlappedActor, const class UPrimitiveComponent* OverlappedComponent) const;
	class UGbxSplineClutterObject* SelectClutter() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxSplineClutterRuleBase")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxSplineClutterRuleBase")
	}
	static class UGbxSplineClutterRuleBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxSplineClutterRuleBase>();
	}
};
DUMPER7_ASSERTS_UGbxSplineClutterRuleBase;

// Class GbxSpline.GbxSplineClutterRuleSet
// 0x0000 (0x0030 - 0x0030)
class UGbxSplineClutterRuleSet final : public UDataAsset
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxSplineClutterRuleSet")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxSplineClutterRuleSet")
	}
	static class UGbxSplineClutterRuleSet* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxSplineClutterRuleSet>();
	}
};
DUMPER7_ASSERTS_UGbxSplineClutterRuleSet;

// Class GbxSpline.GbxSplineClutterLayerConfig
// 0x0000 (0x0028 - 0x0028)
class UGbxSplineClutterLayerConfig final : public UObject
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxSplineClutterLayerConfig")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxSplineClutterLayerConfig")
	}
	static class UGbxSplineClutterLayerConfig* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxSplineClutterLayerConfig>();
	}
};
DUMPER7_ASSERTS_UGbxSplineClutterLayerConfig;

// Class GbxSpline.GbxSplineClutterConfig
// 0x0008 (0x0038 - 0x0030)
class UGbxSplineClutterConfig final : public UDataAsset
{
public:
	uint8                                         Pad_30[0x8];                                       // 0x0030(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxSplineClutterConfig")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxSplineClutterConfig")
	}
	static class UGbxSplineClutterConfig* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxSplineClutterConfig>();
	}
};
DUMPER7_ASSERTS_UGbxSplineClutterConfig;

// Class GbxSpline.GbxSplineClutterEntry
// 0x0000 (0x0028 - 0x0028)
class UGbxSplineClutterEntry final : public UObject
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxSplineClutterEntry")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxSplineClutterEntry")
	}
	static class UGbxSplineClutterEntry* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxSplineClutterEntry>();
	}
};
DUMPER7_ASSERTS_UGbxSplineClutterEntry;

// Class GbxSpline.GbxSplineClutterLibrary
// 0x0000 (0x0028 - 0x0028)
class UGbxSplineClutterLibrary final : public UBlueprintFunctionLibrary
{
public:
	static bool AreParamsValid(const struct FGbxSplineClutterEntryCreationParams& params);
	static struct FGbxSplineClutterBasisPoints ComputeClutterBasisPoints(const TScriptInterface<class IGbxSplineSegment>& Segment, EGbxSplineClutterAnchorPoint AnchorPoint, float LerpValue);
	static class UGbxSplineClutterObject* CreateActorClutterObject(const TScriptInterface<class IGbxSplineSegment>& Segment, TSoftClassPtr<class UClass> ActorClass, const struct FTransform& Transform);
	static class UGbxSplineClutterEntry* CreateClutterEntry(const struct FGbxSplineClutterEntryCreationParams& params);
	static class UGbxSplineClutterObject* CreateMeshClutterObject(const TScriptInterface<class IGbxSplineSegment>& Segment, class UStaticMesh* Mesh, const struct FTransform& Transform);
	static struct FTransform InterpolateVarianceTransforms(const struct FTransform& min_0, const struct FTransform& MAX, bool bInterpolateScaleUniformly);
	static struct FVector LerpAndOffsetToLocation(const TScriptInterface<class IGbxSplineSegment>& Segment, EGbxSplineClutterAnchorPoint AnchorPoint, float LerpValue, float Offset);
	static void LocationToLerpAndOffset(const TScriptInterface<class IGbxSplineSegment>& Segment, EGbxSplineClutterAnchorPoint AnchorPoint, const struct FVector& Location, float* OutLerpValue, float* OutOffset);
	static class FName SelectClutterEntryName(const TScriptInterface<class IGbxSplineSegment>& Segment, const class FText& RuleName);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxSplineClutterLibrary")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxSplineClutterLibrary")
	}
	static class UGbxSplineClutterLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxSplineClutterLibrary>();
	}
};
DUMPER7_ASSERTS_UGbxSplineClutterLibrary;

// Class GbxSpline.GbxSplineClutterState
// 0x0000 (0x0028 - 0x0028)
class UGbxSplineClutterState final : public UObject
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxSplineClutterState")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxSplineClutterState")
	}
	static class UGbxSplineClutterState* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxSplineClutterState>();
	}
};
DUMPER7_ASSERTS_UGbxSplineClutterState;

// Class GbxSpline.GbxSplineClutterObject
// 0x0168 (0x0190 - 0x0028)
class UGbxSplineClutterObject final : public UObject
{
public:
	EGbxSplineClutterType                         ClutterType;                                       // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            ClutterMesh;                                       // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   ClutterActor;                                      // 0x0038(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                             BaseTransform;                                     // 0x0060(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                             MinVariance;                                       // 0x00C0(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                             MaxVariance;                                       // 0x0120(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInterpolateScaleUniformly;                        // 0x0180(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bExcludeOtherClutter;                              // 0x0181(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_182[0x2];                                      // 0x0182(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ExclusionRadius;                                   // 0x0184(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_188[0x8];                                      // 0x0188(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	struct FBoxSphereBounds GetBounds() const;
	struct FTransform InterpolateVariance() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxSplineClutterObject")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxSplineClutterObject")
	}
	static class UGbxSplineClutterObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxSplineClutterObject>();
	}
};
DUMPER7_ASSERTS_UGbxSplineClutterObject;

// Class GbxSpline.GbxSplineClutterExclusionVolume
// 0x0000 (0x03C8 - 0x03C8)
class AGbxSplineClutterExclusionVolume final : public AVolume
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxSplineClutterExclusionVolume")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxSplineClutterExclusionVolume")
	}
	static class AGbxSplineClutterExclusionVolume* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGbxSplineClutterExclusionVolume>();
	}
};
DUMPER7_ASSERTS_AGbxSplineClutterExclusionVolume;

// Class GbxSpline.GbxSplineComponent
// 0x0010 (0x06A0 - 0x0690)
class UGbxSplineComponent final : public USplineComponent
{
public:
	class UGbxSplineMetadata*                     SplineMetadata;                                    // 0x0690(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_698[0x8];                                      // 0x0698(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxSplineComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxSplineComponent")
	}
	static class UGbxSplineComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxSplineComponent>();
	}
};
DUMPER7_ASSERTS_UGbxSplineComponent;

// Class GbxSpline.GbxSplineComponentControlPoint
// 0x0010 (0x0038 - 0x0028)
class UGbxSplineComponentControlPoint final : public UObject
{
public:
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         InterpolationValue;                                // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxSplineComponentControlPoint")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxSplineComponentControlPoint")
	}
	static class UGbxSplineComponentControlPoint* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxSplineComponentControlPoint>();
	}
};
DUMPER7_ASSERTS_UGbxSplineComponentControlPoint;

// Class GbxSpline.GbxSplineComponentSegment
// 0x0018 (0x0040 - 0x0028)
class UGbxSplineComponentSegment final : public UObject
{
public:
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UGbxSplineComponentControlPoint*        StartControlPoint;                                 // 0x0030(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxSplineComponentControlPoint*        EndControlPoint;                                   // 0x0038(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxSplineComponentSegment")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxSplineComponentSegment")
	}
	static class UGbxSplineComponentSegment* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxSplineComponentSegment>();
	}
};
DUMPER7_ASSERTS_UGbxSplineComponentSegment;

// Class GbxSpline.GbxSplineConfigBase
// 0x0000 (0x0000 - 0x0000)
class IGbxSplineConfigBase final
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxSplineConfigBase")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxSplineConfigBase")
	}
	static class IGbxSplineConfigBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<IGbxSplineConfigBase>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_IGbxSplineConfigBase;

// Class GbxSpline.GbxSplineConfig
// 0x0020 (0x0050 - 0x0030)
class UGbxSplineConfig final : public UDataAsset
{
public:
	uint8                                         Pad_30[0x20];                                      // 0x0030(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxSplineConfig")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxSplineConfig")
	}
	static class UGbxSplineConfig* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxSplineConfig>();
	}
};
DUMPER7_ASSERTS_UGbxSplineConfig;

// Class GbxSpline.GbxSplineControlPoint
// 0x0000 (0x0000 - 0x0000)
class IGbxSplineControlPoint final
{
public:
	float GetWidth() const;
	bool IsIntersection() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxSplineControlPoint")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxSplineControlPoint")
	}
	static class IGbxSplineControlPoint* GetDefaultObj()
	{
		return GetDefaultObjImpl<IGbxSplineControlPoint>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_IGbxSplineControlPoint;

// Class GbxSpline.GbxLandscapeSplineLanesPreset
// 0x00D0 (0x0100 - 0x0030)
class UGbxLandscapeSplineLanesPreset final : public UDataAsset
{
public:
	TArray<struct FLandscapeSplineMeshEntry>      LaneMeshes;                                        // 0x0030(0x0010)(ZeroConstructor, Deprecated, NativeAccessSpecifierPublic)
	struct FGbxLandscapeSplineLanesSegmentConfigs configs;                                           // 0x0040(0x0060)(Deprecated, NativeAccessSpecifierPublic)
	class UGbxSplineClutterConfig*                ClutterConfigs;                                    // 0x00A0(0x0008)(ZeroConstructor, Deprecated, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                            ShoulderMesh;                                      // 0x00A8(0x0008)(ZeroConstructor, Deprecated, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<int32, struct FGbxLandscapeSplineEdgeMeshes> AdapterMeshes;                                 // 0x00B0(0x0050)(Deprecated, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxLandscapeSplineLanesPreset")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxLandscapeSplineLanesPreset")
	}
	static class UGbxLandscapeSplineLanesPreset* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxLandscapeSplineLanesPreset>();
	}
};
DUMPER7_ASSERTS_UGbxLandscapeSplineLanesPreset;

// Class GbxSpline.GbxSplineFeatureConfig
// 0x0008 (0x0038 - 0x0030)
class UGbxSplineFeatureConfig final : public UDataAsset
{
public:
	uint8                                         Pad_30[0x8];                                       // 0x0030(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxSplineFeatureConfig")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxSplineFeatureConfig")
	}
	static class UGbxSplineFeatureConfig* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxSplineFeatureConfig>();
	}
};
DUMPER7_ASSERTS_UGbxSplineFeatureConfig;

// Class GbxSpline.GbxSplineFeaturePresetConfig
// 0x0008 (0x0030 - 0x0028)
class UGbxSplineFeaturePresetConfig final : public UObject
{
public:
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxSplineFeaturePresetConfig")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxSplineFeaturePresetConfig")
	}
	static class UGbxSplineFeaturePresetConfig* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxSplineFeaturePresetConfig>();
	}
};
DUMPER7_ASSERTS_UGbxSplineFeaturePresetConfig;

// Class GbxSpline.GbxSplineLanesConfig
// 0x0020 (0x0050 - 0x0030)
class UGbxSplineLanesConfig final : public UDataAsset
{
public:
	uint8                                         Pad_30[0x20];                                      // 0x0030(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxSplineLanesConfig")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxSplineLanesConfig")
	}
	static class UGbxSplineLanesConfig* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxSplineLanesConfig>();
	}
};
DUMPER7_ASSERTS_UGbxSplineLanesConfig;

// Class GbxSpline.GbxSplineMetadata
// 0x0000 (0x0028 - 0x0028)
class UGbxSplineMetadata final : public USplineMetadata
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxSplineMetadata")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxSplineMetadata")
	}
	static class UGbxSplineMetadata* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxSplineMetadata>();
	}
};
DUMPER7_ASSERTS_UGbxSplineMetadata;

// Class GbxSpline.GbxSplineSegment
// 0x0000 (0x0000 - 0x0000)
class IGbxSplineSegment final
{
public:
	TScriptInterface<class IGbxSplineControlPoint> GetEndControlPoint() const;
	TScriptInterface<class IGbxSplineControlPoint> GetStartControlPoint() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxSplineSegment")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxSplineSegment")
	}
	static class IGbxSplineSegment* GetDefaultObj()
	{
		return GetDefaultObjImpl<IGbxSplineSegment>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_IGbxSplineSegment;

// Class GbxSpline.GbxSplineSettings
// 0x0070 (0x00A8 - 0x0038)
class UGbxSplineSettings final : public UDeveloperSettings
{
public:
	class FString                                 SplineFeatureConfigPrefix;                         // 0x0038(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 SplineConfigPrefix;                                // 0x0048(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 DefaultSplineConfigDirectory;                      // 0x0058(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 LanesConfigPrefix;                                 // 0x0068(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnableClutter;                                    // 0x0078(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ClutterConfigPrefix;                               // 0x0080(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnableAllClutterLayers;                           // 0x0090(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        MaxClutterLandscapeAdjustmentOffset;               // 0x0098(0x0008)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   LandscapeExclusionLayerName;                       // 0x00A0(0x0008)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxSplineSettings")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxSplineSettings")
	}
	static class UGbxSplineSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxSplineSettings>();
	}
};
DUMPER7_ASSERTS_UGbxSplineSettings;

}

