#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ShiftBlueprint

#include "Basic.hpp"

#include "ShiftBlueprint_classes.hpp"
#include "ShiftBlueprint_parameters.hpp"


namespace SDK
{

// Function ShiftBlueprint.ShiftNewsBlueprintLibrary.GetArticles
// (Final, RequiredAPI, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UShiftSession*                    Session                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<struct FShiftArticle>      ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<struct FShiftArticle> UShiftNewsBlueprintLibrary::GetArticles(class UShiftSession* Session)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShiftNewsBlueprintLibrary", "GetArticles");

	Params::ShiftNewsBlueprintLibrary_GetArticles Parms{};

	Parms.Session = Session;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ShiftBlueprint.ShiftNewsBlueprintLibrary.RequestNewsArticles
// (Final, RequiredAPI, Native, Public, BlueprintCallable)
// Parameters:
// class UShiftSession*                    Session                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UShiftNewsBlueprintLibrary::RequestNewsArticles(class UShiftSession* Session)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShiftNewsBlueprintLibrary", "RequestNewsArticles");

	Params::ShiftNewsBlueprintLibrary_RequestNewsArticles Parms{};

	Parms.Session = Session;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

