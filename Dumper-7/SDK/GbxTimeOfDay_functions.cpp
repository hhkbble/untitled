#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GbxTimeOfDay

#include "Basic.hpp"

#include "GbxTimeOfDay_classes.hpp"
#include "GbxTimeOfDay_parameters.hpp"


namespace SDK
{

// Function GbxTimeOfDay.TimeOfDayBlueprintLibrary.AddTimeOfDayEventListener
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          InListener                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTimeOfDayBlueprintLibrary::AddTimeOfDayEventListener(class UObject* WorldContextObject, class UObject* InListener)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TimeOfDayBlueprintLibrary", "AddTimeOfDayEventListener");

	Params::TimeOfDayBlueprintLibrary_AddTimeOfDayEventListener Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.InListener = InListener;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GbxTimeOfDay.TimeOfDayBlueprintLibrary.GetTimeOfDay
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UTimeOfDayBlueprintLibrary::GetTimeOfDay(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TimeOfDayBlueprintLibrary", "GetTimeOfDay");

	Params::TimeOfDayBlueprintLibrary_GetTimeOfDay Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GbxTimeOfDay.TimeOfDayBlueprintLibrary.GetTimeOfDayState
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETimeOfDayState                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETimeOfDayState UTimeOfDayBlueprintLibrary::GetTimeOfDayState(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TimeOfDayBlueprintLibrary", "GetTimeOfDayState");

	Params::TimeOfDayBlueprintLibrary_GetTimeOfDayState Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GbxTimeOfDay.TimeOfDayBlueprintLibrary.PauseTimeOfDay
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTimeOfDayBlueprintLibrary::PauseTimeOfDay(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TimeOfDayBlueprintLibrary", "PauseTimeOfDay");

	Params::TimeOfDayBlueprintLibrary_PauseTimeOfDay Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GbxTimeOfDay.TimeOfDayBlueprintLibrary.RemoveTimeOfDayEventListener
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          InListener                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTimeOfDayBlueprintLibrary::RemoveTimeOfDayEventListener(class UObject* WorldContextObject, class UObject* InListener)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TimeOfDayBlueprintLibrary", "RemoveTimeOfDayEventListener");

	Params::TimeOfDayBlueprintLibrary_RemoveTimeOfDayEventListener Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.InListener = InListener;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GbxTimeOfDay.TimeOfDayBlueprintLibrary.SetTimeOfDay
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   NewTimeOfDay                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTimeOfDayBlueprintLibrary::SetTimeOfDay(class UObject* WorldContextObject, float NewTimeOfDay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TimeOfDayBlueprintLibrary", "SetTimeOfDay");

	Params::TimeOfDayBlueprintLibrary_SetTimeOfDay Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.NewTimeOfDay = NewTimeOfDay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GbxTimeOfDay.TimeOfDayBlueprintLibrary.StartTimeOfDay
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTimeOfDayBlueprintLibrary::StartTimeOfDay(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TimeOfDayBlueprintLibrary", "StartTimeOfDay");

	Params::TimeOfDayBlueprintLibrary_StartTimeOfDay Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GbxTimeOfDay.TimeOfDayBlueprintLibrary.TransitionDownOneLayer
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TransitionDuration                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTimeOfDayBlueprintLibrary::TransitionDownOneLayer(class UObject* WorldContextObject, float TransitionDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TimeOfDayBlueprintLibrary", "TransitionDownOneLayer");

	Params::TimeOfDayBlueprintLibrary_TransitionDownOneLayer Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.TransitionDuration = TransitionDuration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GbxTimeOfDay.TimeOfDayBlueprintLibrary.TransitionToLayer
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    ToLayer                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TransitionDuration                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bForceLayerChange                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTimeOfDayBlueprintLibrary::TransitionToLayer(class UObject* WorldContextObject, const class FString& ToLayer, float TransitionDuration, bool bForceLayerChange)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TimeOfDayBlueprintLibrary", "TransitionToLayer");

	Params::TimeOfDayBlueprintLibrary_TransitionToLayer Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.ToLayer = std::move(ToLayer);
	Parms.TransitionDuration = TransitionDuration;
	Parms.bForceLayerChange = bForceLayerChange;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GbxTimeOfDay.TimeOfDayBlueprintLibrary.TransitionUpOneLayer
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TransitionDuration                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTimeOfDayBlueprintLibrary::TransitionUpOneLayer(class UObject* WorldContextObject, float TransitionDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TimeOfDayBlueprintLibrary", "TransitionUpOneLayer");

	Params::TimeOfDayBlueprintLibrary_TransitionUpOneLayer Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.TransitionDuration = TransitionDuration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GbxTimeOfDay.TimeOfDayVolume.TransitionBaseLayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             BaseLayer                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   LayerTransitionTime                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATimeOfDayVolume::TransitionBaseLayer(class FName BaseLayer, float LayerTransitionTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TimeOfDayVolume", "TransitionBaseLayer");

	Params::TimeOfDayVolume_TransitionBaseLayer Parms{};

	Parms.BaseLayer = BaseLayer;
	Parms.LayerTransitionTime = LayerTransitionTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GbxTimeOfDay.TimeOfDayVolume.TransitionWeatherLayer
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FTimeOfDayWeatherForecast& ForecastData                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void ATimeOfDayVolume::TransitionWeatherLayer(const struct FTimeOfDayWeatherForecast& ForecastData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TimeOfDayVolume", "TransitionWeatherLayer");

	Params::TimeOfDayVolume_TransitionWeatherLayer Parms{};

	Parms.ForecastData = std::move(ForecastData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GbxTimeOfDay.TimeOfDayVolume.EnumerateBaseLayerNames
// (Final, Native, Public, HasOutParams, Const)
// Parameters:
// TArray<class FName>*                    OutLayerNames                                          (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void ATimeOfDayVolume::EnumerateBaseLayerNames(TArray<class FName>* OutLayerNames) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TimeOfDayVolume", "EnumerateBaseLayerNames");

	Params::TimeOfDayVolume_EnumerateBaseLayerNames Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutLayerNames != nullptr)
		*OutLayerNames = std::move(Parms.OutLayerNames);
}


// Function GbxTimeOfDay.WorldTimeOfDayActor.OnRep_CycleCount
// (Final, Native, Private)
// Parameters:
// int32                                   PreviousCycleCount                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWorldTimeOfDayActor::OnRep_CycleCount(int32 PreviousCycleCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WorldTimeOfDayActor", "OnRep_CycleCount");

	Params::WorldTimeOfDayActor_OnRep_CycleCount Parms{};

	Parms.PreviousCycleCount = PreviousCycleCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GbxTimeOfDay.WorldTimeOfDayActor.OnRep_TimeOfDay
// (Final, Native, Private)

void AWorldTimeOfDayActor::OnRep_TimeOfDay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WorldTimeOfDayActor", "OnRep_TimeOfDay");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GbxTimeOfDay.WorldTimeOfDayActor.OnRep_WorldTimeOfDayBaseLayerOverrides
// (Final, Native, Private)

void AWorldTimeOfDayActor::OnRep_WorldTimeOfDayBaseLayerOverrides()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WorldTimeOfDayActor", "OnRep_WorldTimeOfDayBaseLayerOverrides");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GbxTimeOfDay.WorldTimeOfDayActor.OnRep_WorldTimeOfDayWeatherData
// (Final, Native, Private)

void AWorldTimeOfDayActor::OnRep_WorldTimeOfDayWeatherData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WorldTimeOfDayActor", "OnRep_WorldTimeOfDayWeatherData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GbxTimeOfDay.WorldTimeOfDayActor.SetCinematicTimeOfDay
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InCinematicTimeOfDay                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWorldTimeOfDayActor::SetCinematicTimeOfDay(float InCinematicTimeOfDay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WorldTimeOfDayActor", "SetCinematicTimeOfDay");

	Params::WorldTimeOfDayActor_SetCinematicTimeOfDay Parms{};

	Parms.InCinematicTimeOfDay = InCinematicTimeOfDay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GbxTimeOfDay.WorldTimeOfDayActor.SetCinematicTimeOfDayBaseLayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    InCinematicTimeOfDayBaseLayer                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWorldTimeOfDayActor::SetCinematicTimeOfDayBaseLayer(const class FString& InCinematicTimeOfDayBaseLayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WorldTimeOfDayActor", "SetCinematicTimeOfDayBaseLayer");

	Params::WorldTimeOfDayActor_SetCinematicTimeOfDayBaseLayer Parms{};

	Parms.InCinematicTimeOfDayBaseLayer = std::move(InCinematicTimeOfDayBaseLayer);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GbxTimeOfDay.WorldTimeOfDayActor.SetCinematicTimeOfDayWeatherLayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    InCinematicTimeOfDayWeatherLayer                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWorldTimeOfDayActor::SetCinematicTimeOfDayWeatherLayer(const class FString& InCinematicTimeOfDayWeatherLayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WorldTimeOfDayActor", "SetCinematicTimeOfDayWeatherLayer");

	Params::WorldTimeOfDayActor_SetCinematicTimeOfDayWeatherLayer Parms{};

	Parms.InCinematicTimeOfDayWeatherLayer = std::move(InCinematicTimeOfDayWeatherLayer);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GbxTimeOfDay.WorldTimeOfDayActor.SetUseCinematicTimeOfDay
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InUseCinematicTimeOfDay                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWorldTimeOfDayActor::SetUseCinematicTimeOfDay(bool InUseCinematicTimeOfDay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WorldTimeOfDayActor", "SetUseCinematicTimeOfDay");

	Params::WorldTimeOfDayActor_SetUseCinematicTimeOfDay Parms{};

	Parms.InUseCinematicTimeOfDay = InUseCinematicTimeOfDay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GbxTimeOfDay.WorldTimeOfDayActor.SetUseCinematicTimeOfDayBaseLayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InUseCinematicTimeOfDayBaseLayer                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWorldTimeOfDayActor::SetUseCinematicTimeOfDayBaseLayer(bool InUseCinematicTimeOfDayBaseLayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WorldTimeOfDayActor", "SetUseCinematicTimeOfDayBaseLayer");

	Params::WorldTimeOfDayActor_SetUseCinematicTimeOfDayBaseLayer Parms{};

	Parms.InUseCinematicTimeOfDayBaseLayer = InUseCinematicTimeOfDayBaseLayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GbxTimeOfDay.WorldTimeOfDayActor.SetUseCinematicTimeOfDayWeatherLayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InUseCinematicTimeOfDayWeatherLayer                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWorldTimeOfDayActor::SetUseCinematicTimeOfDayWeatherLayer(bool InUseCinematicTimeOfDayWeatherLayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WorldTimeOfDayActor", "SetUseCinematicTimeOfDayWeatherLayer");

	Params::WorldTimeOfDayActor_SetUseCinematicTimeOfDayWeatherLayer Parms{};

	Parms.InUseCinematicTimeOfDayWeatherLayer = InUseCinematicTimeOfDayWeatherLayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GbxTimeOfDay.WorldTimeOfDayActor.TransitionBaseLayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             BaseLayer                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   LayerTransitionTime                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWorldTimeOfDayActor::TransitionBaseLayer(class FName BaseLayer, float LayerTransitionTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WorldTimeOfDayActor", "TransitionBaseLayer");

	Params::WorldTimeOfDayActor_TransitionBaseLayer Parms{};

	Parms.BaseLayer = BaseLayer;
	Parms.LayerTransitionTime = LayerTransitionTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GbxTimeOfDay.WorldTimeOfDayActor.TransitionWeatherLayer
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FTimeOfDayWeatherForecast& ForecastData                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void AWorldTimeOfDayActor::TransitionWeatherLayer(const struct FTimeOfDayWeatherForecast& ForecastData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WorldTimeOfDayActor", "TransitionWeatherLayer");

	Params::WorldTimeOfDayActor_TransitionWeatherLayer Parms{};

	Parms.ForecastData = std::move(ForecastData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GbxTimeOfDay.WorldTimeOfDayActor.EnumerateBaseLayerNames
// (Final, Native, Public, HasOutParams, Const)
// Parameters:
// TArray<class FName>*                    OutLayerNames                                          (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AWorldTimeOfDayActor::EnumerateBaseLayerNames(TArray<class FName>* OutLayerNames) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WorldTimeOfDayActor", "EnumerateBaseLayerNames");

	Params::WorldTimeOfDayActor_EnumerateBaseLayerNames Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutLayerNames != nullptr)
		*OutLayerNames = std::move(Parms.OutLayerNames);
}

}

