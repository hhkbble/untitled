#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GbxGame

#include "Basic.hpp"

#include "GbxEngine_structs.hpp"
#include "GbxNexus_structs.hpp"
#include "GbxAI_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "GbxAudio_structs.hpp"
#include "Engine_structs.hpp"
#include "NetCore_structs.hpp"
#include "GbxPhysics_structs.hpp"
#include "GbxCore_structs.hpp"
#include "InputCore_structs.hpp"
#include "GbxNav_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "AnimationCore_structs.hpp"
#include "GbxSpawn_structs.hpp"
#include "MovieScene_structs.hpp"
#include "GbxTimeOfDay_structs.hpp"
#include "EngineCameras_structs.hpp"
#include "AIModule_structs.hpp"
#include "MovieSceneTracks_structs.hpp"


namespace SDK
{

// Enum GbxGame.EGbxSerialNumberIndexStatus
// NumValues: 0x0007
enum class EGbxSerialNumberIndexStatus : uint8
{
	Inactive                                 = 0,
	Static                                   = 1,
	Active                                   = 2,
	Temp                                     = 3,
	Want                                     = 4,
	Count                                    = 5,
	EGbxSerialNumberIndexStatus_MAX          = 6,
};

// Enum GbxGame.EGbxSerialNumberIndexScope
// NumValues: 0x0004
enum class EGbxSerialNumberIndexScope : uint8
{
	Unused                                   = 0,
	Root                                     = 1,
	Sub                                      = 2,
	EGbxSerialNumberIndexScope_MAX           = 3,
};

// Enum GbxGame.EGbxActorPartChoiceType
// NumValues: 0x0004
enum class EGbxActorPartChoiceType : uint8
{
	Default                                  = 0,
	Def                                      = 1,
	Param                                    = 2,
	EGbxActorPartChoiceType_MAX              = 3,
};

// Enum GbxGame.HealthVariation
// NumValues: 0x0004
enum class EHealthVariation : uint8
{
	IsGeneric                                = 0,
	IsShield                                 = 1,
	IsOvershield                             = 2,
	HealthVariation_MAX                      = 3,
};

// Enum GbxGame.HealthUIType
// NumValues: 0x0008
enum class EHealthUIType : uint8
{
	FleshRed                                 = 0,
	EnergyBlue                               = 1,
	ArmorYellow                              = 2,
	CorruptionBlack                          = 3,
	BoneWhite                                = 4,
	EridiumPurple                            = 5,
	OvershieldTeal                           = 6,
	HealthUIType_MAX                         = 7,
};

// Enum GbxGame.EHitRegionDamageRule
// NumValues: 0x0004
enum class EHitRegionDamageRule : uint8
{
	IndependentHealth                        = 0,
	OwnerHealth_DamageCap                    = 1,
	OwnerHealth_NoDamageCap                  = 2,
	EHitRegionDamageRule_MAX                 = 3,
};

// Enum GbxGame.EGbxStatusEffectModifierAppType
// NumValues: 0x0007
enum class EGbxStatusEffectModifierAppType : uint8
{
	BaseValue                                = 0,
	ScaleAdd                                 = 1,
	PreAdd                                   = 2,
	PostAdd                                  = 3,
	ScaleMultiply                            = 4,
	ScaleMultiplyAsAdd                       = 5,
	EGbxStatusEffectModifierAppType_MAX      = 6,
};

// Enum GbxGame.EGbxTrickEnd
// NumValues: 0x0003
enum class EGbxTrickEnd : uint8
{
	Success                                  = 0,
	Aborted                                  = 1,
	EGbxTrickEnd_MAX                         = 2,
};

// Enum GbxGame.EHomingTargetLostReason
// NumValues: 0x0003
enum class EHomingTargetLostReason : uint8
{
	Death                                    = 0,
	Untargetable                             = 1,
	EHomingTargetLostReason_MAX              = 2,
};

// Enum GbxGame.EAIDodgeType
// NumValues: 0x0006
enum class EAIDodgeType : uint8
{
	None                                     = 0,
	Bullet                                   = 1,
	Grenade                                  = 2,
	Random                                   = 3,
	Zone                                     = 4,
	EAIDodgeType_MAX                         = 5,
};

// Enum GbxGame.EUsabilityType
// NumValues: 0x0004
enum class EUsabilityType : uint8
{
	Primary                                  = 0,
	Secondary                                = 1,
	Any                                      = 2,
	EUsabilityType_MAX                       = 3,
};

// Enum GbxGame.EDeliverySpawnPointLimit
// NumValues: 0x0004
enum class EDeliverySpawnPointLimit : uint8
{
	NoLimit                                  = 0,
	MaxPerInstance                           = 1,
	UseEachSpawnPointOnce                    = 2,
	EDeliverySpawnPointLimit_MAX             = 3,
};

// Enum GbxGame.EControlledMoveInitiationType
// NumValues: 0x0005
enum class EControlledMoveInitiationType : uint32
{
	NotSet                                   = 0,
	Server                                   = 1,
	AutonomousClient                         = 2,
	ServerPredicted                          = 3,
	EControlledMoveInitiationType_MAX        = 4,
};

// Enum GbxGame.EGrantedMovementType_Script
// NumValues: 0x0021
enum class EGrantedMovementType_Script : uint8
{
	EngineType1                              = 0,
	EngineType2                              = 1,
	EngineType3                              = 2,
	EngineType4                              = 3,
	EngineType5                              = 4,
	EngineType6                              = 5,
	EngineType7                              = 6,
	EngineType8                              = 7,
	EngineType9                              = 8,
	EngineType10                             = 9,
	EngineType11                             = 10,
	EngineType12                             = 11,
	EngineType13                             = 12,
	EngineType14                             = 13,
	EngineType15                             = 14,
	EngineType16                             = 15,
	GameType1                                = 16,
	GameType2                                = 17,
	GameType3                                = 18,
	GameType4                                = 19,
	GameType5                                = 20,
	GameType6                                = 21,
	GameType7                                = 22,
	GameType8                                = 23,
	GameType9                                = 24,
	GameType10                               = 25,
	GameType11                               = 26,
	GameType12                               = 27,
	GameType13                               = 28,
	GameType14                               = 29,
	GameType15                               = 30,
	GameType16                               = 31,
	EGrantedMovementType_MAX                 = 32,
};

// Enum GbxGame.EGbxSwimmingStopType
// NumValues: 0x0004
enum class EGbxSwimmingStopType : uint8
{
	Walking                                  = 0,
	Jumping                                  = 1,
	Reset                                    = 2,
	EGbxSwimmingStopType_MAX                 = 3,
};

// Enum GbxGame.EGbxSwimmingStartType
// NumValues: 0x0004
enum class EGbxSwimmingStartType : uint8
{
	Walking                                  = 0,
	Falling                                  = 1,
	GroundSlam                               = 2,
	EGbxSwimmingStartType_MAX                = 3,
};

// Enum GbxGame.EGrantedMovementType
// NumValues: 0x0021
enum class EGrantedMovementType : uint32
{
	EngineType1                              = 1,
	EngineType2                              = 2,
	EngineType3                              = 4,
	EngineType4                              = 8,
	EngineType5                              = 16,
	EngineType6                              = 32,
	EngineType7                              = 64,
	EngineType8                              = 128,
	EngineType9                              = 256,
	EngineType10                             = 512,
	EngineType11                             = 1024,
	EngineType12                             = 2048,
	EngineType13                             = 4096,
	EngineType14                             = 8192,
	EngineType15                             = 16384,
	EngineType16                             = 32768,
	GameType1                                = 65536,
	GameType2                                = 131072,
	GameType3                                = 262144,
	GameType4                                = 524288,
	GameType5                                = 1048576,
	GameType6                                = 2097152,
	GameType7                                = 4194304,
	GameType8                                = 8388608,
	GameType9                                = 16777216,
	GameType10                               = 33554432,
	GameType11                               = 67108864,
	GameType12                               = 134217728,
	GameType13                               = 268435456,
	GameType14                               = 536870912,
	GameType15                               = 1073741824,
	GameType16                               = 2147483648,
	EGrantedMovementType_MAX                 = 2147483649,
};

// Enum GbxGame.ECMStopMoveFlags
// NumValues: 0x0006
enum class ECMStopMoveFlags : uint8
{
	None                                     = 0,
	ZeroVelocity                             = 1,
	Interrupted                              = 2,
	ApplyMaxSpeedCooldown                    = 4,
	ClientPredicted_NoReplicate              = 8,
	ECMStopMoveFlags_MAX                     = 9,
};

// Enum GbxGame.EScriptedClimbingType
// NumValues: 0x0008
enum class EScriptedClimbingType : uint8
{
	None                                     = 0,
	GettingOnAtBottom                        = 1,
	GettingOffAtBottom                       = 2,
	GettingOnAtTop                           = 3,
	GettingOffAtTop                          = 4,
	FallingOff                               = 5,
	JumpingOff                               = 6,
	EScriptedClimbingType_MAX                = 7,
};

// Enum GbxGame.EImpactImpulseType
// NumValues: 0x0005
enum class EImpactImpulseType : uint8
{
	MassIndependent                          = 0,
	LightObject                              = 1,
	MediumObject                             = 2,
	HeavyObject                              = 3,
	EImpactImpulseType_MAX                   = 4,
};

// Enum GbxGame.EGbxTraceTrajectoryShape
// NumValues: 0x0005
enum class EGbxTraceTrajectoryShape : uint8
{
	Line                                     = 0,
	Sphere                                   = 1,
	Capsule                                  = 2,
	Box                                      = 3,
	EGbxTraceTrajectoryShape_MAX             = 4,
};

// Enum GbxGame.EStartConditionFailBehavior
// NumValues: 0x0004
enum class EStartConditionFailBehavior : uint32
{
	KeepActivities                           = 0,
	AbortActivities                          = 1,
	AbortActivitiesInstantly                 = 2,
	EStartConditionFailBehavior_MAX          = 3,
};

// Enum GbxGame.EAdditionalAreaTags
// NumValues: 0x0003
enum class EAdditionalAreaTags : uint32
{
	UseAllTags                               = 0,
	PickARandomTag                           = 1,
	EAdditionalAreaTags_MAX                  = 2,
};

// Enum GbxGame.EMatchTypeActivityTags
// NumValues: 0x0003
enum class EMatchTypeActivityTags : uint32
{
	MatchAllRequiredTags                     = 0,
	MatchAtLeastOneRequiredTags              = 1,
	EMatchTypeActivityTags_MAX               = 2,
};

// Enum GbxGame.EActivityRequestExecutionType
// NumValues: 0x0004
enum class EActivityRequestExecutionType : uint8
{
	Interval                                 = 0,
	Once                                     = 1,
	OncePerWarmup                            = 2,
	EActivityRequestExecutionType_MAX        = 3,
};

// Enum GbxGame.EAttackRotation_InPosition
// NumValues: 0x0004
enum class EAttackRotation_InPosition : uint8
{
	Locked                                   = 0,
	Follow                                   = 1,
	RotateThenLock                           = 2,
	EAttackRotation_MAX                      = 3,
};

// Enum GbxGame.EAttackRotation_Moving
// NumValues: 0x0003
enum class EAttackRotation_Moving : uint8
{
	Path                                     = 0,
	Target                                   = 1,
	EAttackRotation_MAX                      = 2,
};

// Enum GbxGame.EAvatarParameterType
// NumValues: 0x0004
enum class EAvatarParameterType : uint8
{
	Number                                   = 0,
	Texture                                  = 1,
	Material                                 = 2,
	EAvatarParameterType_MAX                 = 3,
};

// Enum GbxGame.EAvatarChoiceType
// NumValues: 0x0004
enum class EAvatarChoiceType : uint8
{
	Mirror                                   = 0,
	Fallback                                 = 1,
	Choice                                   = 2,
	EAvatarChoiceType_MAX                    = 3,
};

// Enum GbxGame.EAvatarSelectorType
// NumValues: 0x0004
enum class EAvatarSelectorType : uint8
{
	Form                                     = 0,
	Part                                     = 1,
	Parameter                                = 2,
	EAvatarSelectorType_MAX                  = 3,
};

// Enum GbxGame.EAvatarMatDriverParamType
// NumValues: 0x0004
enum class EAvatarMatDriverParamType : uint8
{
	Scalar                                   = 0,
	Vector                                   = 1,
	Texture                                  = 2,
	EAvatarMatDriverParamType_MAX            = 3,
};

// Enum GbxGame.EAvatarAppearanceStatus
// NumValues: 0x0005
enum class EAvatarAppearanceStatus : uint8
{
	Unknown                                  = 0,
	None                                     = 1,
	Assigned                                 = 2,
	Pending                                  = 3,
	EAvatarAppearanceStatus_MAX              = 4,
};

// Enum GbxGame.EAvatarAppearanceDeltas
// NumValues: 0x0004
enum class EAvatarAppearanceDeltas : uint8
{
	None                                     = 0,
	Assets                                   = 1,
	Exports                                  = 2,
	EAvatarAppearanceDeltas_MAX              = 3,
};

// Enum GbxGame.EAvatarAppearancePhase
// NumValues: 0x0007
enum class EAvatarAppearancePhase : uint8
{
	Constructed                              = 0,
	Configuring                              = 1,
	Configured                               = 2,
	LoadPending                              = 3,
	PreLoading                               = 4,
	PostInit                                 = 5,
	EAvatarAppearancePhase_MAX               = 6,
};

// Enum GbxGame.EAvatarAppearancePreloadStatus
// NumValues: 0x0004
enum class EAvatarAppearancePreloadStatus : uint8
{
	Building                                 = 0,
	Staged                                   = 1,
	Loaded                                   = 2,
	EAvatarAppearancePreloadStatus_MAX       = 3,
};

// Enum GbxGame.EBalanceValueType
// NumValues: 0x0003
enum class EBalanceValueType : uint8
{
	GameStage                                = 0,
	ExperienceLevel                          = 1,
	EBalanceValueType_MAX                    = 2,
};

// Enum GbxGame.EBooleanCompareType
// NumValues: 0x0007
enum class EBooleanCompareType : uint8
{
	Equal                                    = 0,
	NotEqual                                 = 1,
	GreaterThan                              = 2,
	GreaterOrEqual                           = 3,
	LessThan                                 = 4,
	LessOrEqual                              = 5,
	EBooleanCompareType_MAX                  = 6,
};

// Enum GbxGame.EBreadcrumbType
// NumValues: 0x0002
enum class EBreadcrumbType : uint8
{
	InMap                                    = 0,
	EBreadcrumbType_MAX                      = 1,
};

// Enum GbxGame.ECameraModeLookSpaces
// NumValues: 0x0004
enum class ECameraModeLookSpaces : uint8
{
	World                                    = 0,
	ViewTarget                               = 1,
	ViewTargetBase                           = 2,
	ECameraModeLookSpaces_MAX                = 3,
};

// Enum GbxGame.ECameraModeBehaviorLookAxis
// NumValues: 0x0004
enum class ECameraModeBehaviorLookAxis : uint8
{
	Pitch                                    = 0,
	Yaw                                      = 1,
	Roll                                     = 2,
	MAX                                      = 3,
};

// Enum GbxGame.ECharacterSoundType
// NumValues: 0x0003
enum class ECharacterSoundType : uint8
{
	SFX                                      = 0,
	Vocalization                             = 1,
	ECharacterSoundType_MAX                  = 2,
};

// Enum GbxGame.ECharacterSoundVocalizationType
// NumValues: 0x0004
enum class ECharacterSoundVocalizationType : uint8
{
	Normal                                   = 0,
	Pain                                     = 1,
	Death                                    = 2,
	ECharacterSoundVocalizationType_MAX      = 3,
};

// Enum GbxGame.ETopEdgeBehavior
// NumValues: 0x0005
enum class ETopEdgeBehavior : uint8
{
	Undefined                                = 0,
	Exit                                     = 1,
	Clamp                                    = 2,
	Climb                                    = 3,
	ETopEdgeBehavior_MAX                     = 4,
};

// Enum GbxGame.EClimbableInteractiveObjectHiddenState
// NumValues: 0x0003
enum class EClimbableInteractiveObjectHiddenState : uint8
{
	NotHidden                                = 0,
	Hidden                                   = 1,
	EClimbableInteractiveObjectHiddenState_MAX = 2,
};

// Enum GbxGame.ECMMovementType
// NumValues: 0x0005
enum class ECMMovementType : uint8
{
	Ground                                   = 0,
	Flying                                   = 1,
	Falling                                  = 2,
	MoveNoneRootMotion                       = 3,
	ECMMovementType_MAX                      = 4,
};

// Enum GbxGame.ECMMoveFBControlType
// NumValues: 0x0004
enum class ECMMoveFBControlType : uint8
{
	None                                     = 0,
	Pitch                                    = 1,
	Speed                                    = 2,
	ECMMoveFBControlType_MAX                 = 3,
};

// Enum GbxGame.ECMMoveLRControlType
// NumValues: 0x0004
enum class ECMMoveLRControlType : uint8
{
	None                                     = 0,
	Yaw                                      = 1,
	Speed                                    = 2,
	ECMMoveLRControlType_MAX                 = 3,
};

// Enum GbxGame.ECMTeleportPreferenceType
// NumValues: 0x0006
enum class ECMTeleportPreferenceType : uint8
{
	Behind_TargetFacing                      = 0,
	Ahead_TargetFacing                       = 1,
	Behind_MoveDirection                     = 2,
	Ahead_MoveDirection                      = 3,
	Anywhere_MatchTargetFacing               = 4,
	ECMTeleportPreferenceType_MAX            = 5,
};

// Enum GbxGame.ECMLedgeBehavior
// NumValues: 0x0004
enum class ECMLedgeBehavior : uint8
{
	CanWalkOffLedges                         = 0,
	CannotWalkOffLedges                      = 1,
	StopOnReachedLedge                       = 2,
	ECMLedgeBehavior_MAX                     = 3,
};

// Enum GbxGame.ECMGravityModificationType
// NumValues: 0x0004
enum class ECMGravityModificationType : uint8
{
	ScaleGravity                             = 0,
	ScaleDefaultGravity                      = 1,
	OverrideGravity                          = 2,
	ECMGravityModificationType_MAX           = 3,
};

// Enum GbxGame.ECMTerminalVelocityModificationType
// NumValues: 0x0003
enum class ECMTerminalVelocityModificationType : uint8
{
	OverrideTerminalVelocity                 = 0,
	ScaleTerminalVelocity                    = 1,
	ECMTerminalVelocityModificationType_MAX  = 2,
};

// Enum GbxGame.ECMLocationOffsetClampBehavior
// NumValues: 0x0004
enum class ECMLocationOffsetClampBehavior : uint8
{
	StayInPlace                              = 0,
	UseUnadjustedTargetLocation              = 1,
	AllowBackwardsMovement                   = 2,
	ECMLocationOffsetClampBehavior_MAX       = 3,
};

// Enum GbxGame.ECMInheritVelocityType
// NumValues: 0x0007
enum class ECMInheritVelocityType : uint8
{
	Forward                                  = 0,
	Backward                                 = 1,
	Right                                    = 2,
	Left                                     = 3,
	Up                                       = 4,
	Down                                     = 5,
	ECMInheritVelocityType_MAX               = 6,
};

// Enum GbxGame.ECoordinatedRegionFilterType
// NumValues: 0x0004
enum class ECoordinatedRegionFilterType : uint8
{
	None                                     = 0,
	Include                                  = 1,
	Exclude                                  = 2,
	ECoordinatedRegionFilterType_MAX         = 3,
};

// Enum GbxGame.ECoordinatedParticleScaleMode
// NumValues: 0x0007
enum class ECoordinatedParticleScaleMode : uint8
{
	None                                     = 0,
	LargestAxis                              = 1,
	SmallestAxis                             = 2,
	HorizontalAxis                           = 3,
	VerticalAxis                             = 4,
	EachAxis                                 = 5,
	ECoordinatedParticleScaleMode_MAX        = 6,
};

// Enum GbxGame.ECoordinatedParticleVisibilityType
// NumValues: 0x0004
enum class ECoordinatedParticleVisibilityType : uint8
{
	Both                                     = 0,
	FirstPerson                              = 1,
	ThirdPerson                              = 2,
	ECoordinatedParticleVisibilityType_MAX   = 3,
};

// Enum GbxGame.EDamageAreaOverlapFilterType
// NumValues: 0x0004
enum class EDamageAreaOverlapFilterType : uint8
{
	AllDynamicObjects                        = 0,
	Profile                                  = 1,
	Custom                                   = 2,
	EDamageAreaOverlapFilterType_MAX         = 3,
};

// Enum GbxGame.EDamageAreaBoxOriginType
// NumValues: 0x0003
enum class EDamageAreaBoxOriginType : uint8
{
	Centered                                 = 0,
	OffsetByDepth                            = 1,
	EDamageAreaBoxOriginType_MAX             = 2,
};

// Enum GbxGame.EDamageAreaRadiateMethod
// NumValues: 0x0003
enum class EDamageAreaRadiateMethod : uint8
{
	Velocity                                 = 0,
	MinMaxDistance                           = 1,
	EDamageAreaRadiateMethod_MAX             = 2,
};

// Enum GbxGame.EDamageAreaRadiateMovementType
// NumValues: 0x0003
enum class EDamageAreaRadiateMovementType : uint8
{
	FollowInitialDirection                   = 0,
	SimpleMoveOnGround                       = 1,
	EDamageAreaRadiateMovementType_MAX       = 2,
};

// Enum GbxGame.EDamageCauserCritResolverValueType
// NumValues: 0x0003
enum class EDamageCauserCritResolverValueType : uint8
{
	CritChance                               = 0,
	CritDamage                               = 1,
	MAX                                      = 2,
};

// Enum GbxGame.EDamageCausedModificationStrategy
// NumValues: 0x0003
enum class EDamageCausedModificationStrategy : uint32
{
	UseSelfModifier                          = 0,
	UseInstigatorModifier                    = 1,
	EDamageCausedModificationStrategy_MAX    = 2,
};

// Enum GbxGame.EHitDirectionStyle
// NumValues: 0x0006
enum class EHitDirectionStyle : uint8
{
	Radial                                   = 0,
	ActorFacing                              = 1,
	ActorAim                                 = 2,
	BoneFacing                               = 3,
	DamageFacing                             = 4,
	EHitDirectionStyle_MAX                   = 5,
};

// Enum GbxGame.ESourceSocketRotationStyle
// NumValues: 0x0004
enum class ESourceSocketRotationStyle : uint8
{
	Default                                  = 0,
	Actor                                    = 1,
	ActorAim                                 = 2,
	ESourceSocketRotationStyle_MAX           = 3,
};

// Enum GbxGame.EPuddleDamageSourceType
// NumValues: 0x0004
enum class EPuddleDamageSourceType : uint8
{
	Default                                  = 0,
	Damage                                   = 1,
	Custom                                   = 2,
	EPuddleDamageSourceType_MAX              = 3,
};

// Enum GbxGame.EDamageCriticalFilter
// NumValues: 0x0006
enum class EDamageCriticalFilter : uint8
{
	None                                     = 0,
	HitRegionMustBeCritical                  = 1,
	HitRegionMustNotBeCritical               = 2,
	MustBeAnyCritical                        = 3,
	MustNotBeAnyCritical                     = 4,
	EDamageCriticalFilter_MAX                = 5,
};

// Enum GbxGame.EAreaDamageFilter
// NumValues: 0x0004
enum class EAreaDamageFilter : uint8
{
	None                                     = 0,
	MustNotBeRadiusDamage                    = 1,
	MustBeRadiusDamage                       = 2,
	EAreaDamageFilter_MAX                    = 3,
};

// Enum GbxGame.EDamageFilterExprMode
// NumValues: 0x0004
enum class EDamageFilterExprMode : uint32
{
	None                                     = 0,
	MustMatch                                = 1,
	MustNotMatch                             = 2,
	EDamageFilterExprMode_MAX                = 3,
};

// Enum GbxGame.EDamageModifierDamageTypeBonusMode
// NumValues: 0x0006
enum class EDamageModifierDamageTypeBonusMode : uint8
{
	AddBonusDamage                           = 0,
	AddBonusDamage_BackToAttacker            = 1,
	AddBonusDamage_BackToAttackerInstigator  = 2,
	ConvertPartialDamage                     = 3,
	ConvertAllDamage                         = 4,
	EDamageModifierDamageTypeBonusMode_MAX   = 5,
};

// Enum GbxGame.EDamageModifierFlag
// NumValues: 0x0011
enum class EDamageModifierFlag : uint8
{
	Flag1                                    = 0,
	Flag2                                    = 1,
	Flag3                                    = 2,
	Flag4                                    = 3,
	Flag5                                    = 4,
	Flag6                                    = 5,
	Flag7                                    = 6,
	Flag8                                    = 7,
	Flag9                                    = 8,
	Flag10                                   = 9,
	Flag11                                   = 10,
	Flag12                                   = 11,
	Flag13                                   = 12,
	Flag14                                   = 13,
	Flag15                                   = 14,
	Flag16                                   = 15,
	MAX                                      = 16,
};

// Enum GbxGame.EDamageModifierConditionContext
// NumValues: 0x0005
enum class EDamageModifierConditionContext : uint32
{
	Default                                  = 0,
	Override                                 = 1,
	DamageCauser                             = 2,
	DamagedActor                             = 3,
	EDamageModifierConditionContext_MAX      = 4,
};

// Enum GbxGame.EDamageModifierValueType
// NumValues: 0x0004
enum class EDamageModifierValueType : uint8
{
	ScaleAdd                                 = 0,
	Add                                      = 1,
	ScaleMultiply                            = 2,
	EDamageModifierValueType_MAX             = 3,
};

// Enum GbxGame.ECriticalHitDamageOverride
// NumValues: 0x0004
enum class ECriticalHitDamageOverride : uint8
{
	None                                     = 0,
	ForceCrit                                = 1,
	ForceNotCrit                             = 2,
	ECriticalHitDamageOverride_MAX           = 3,
};

// Enum GbxGame.EAdditionalDamageClassifier
// NumValues: 0x0005
enum class EAdditionalDamageClassifier : uint8
{
	None                                     = 0,
	BonusDamage                              = 1,
	ReflectedBonusDamage                     = 2,
	ConvertedDamage                          = 3,
	EAdditionalDamageClassifier_MAX          = 4,
};

// Enum GbxGame.EPreTakeDamageModification
// NumValues: 0x0004
enum class EPreTakeDamageModification : uint8
{
	DamageAllowed                            = 0,
	DamageNotAllowed                         = 1,
	ConvertDamageToHealing                   = 2,
	EPreTakeDamageModification_MAX           = 3,
};

// Enum GbxGame.EConvertDamageToHealingReason
// NumValues: 0x0005
enum class EConvertDamageToHealingReason : uint8
{
	None                                     = 0,
	DamageTypeIsHealing                      = 1,
	PipelineInputIsHealing                   = 2,
	FriendlyFireWasConverted                 = 3,
	EConvertDamageToHealingReason_MAX        = 4,
};

// Enum GbxGame.EDamageInstigatorClassification
// NumValues: 0x0005
enum class EDamageInstigatorClassification : uint8
{
	Other                                    = 0,
	PlayerVersusPlayer                       = 1,
	PlayerVersusAI                           = 2,
	AIVersusPlayer                           = 3,
	EDamageInstigatorClassification_MAX      = 4,
};

// Enum GbxGame.EDamagePresentationLevel
// NumValues: 0x0005
enum class EDamagePresentationLevel : uint8
{
	Negligible                               = 0,
	Low                                      = 1,
	Medium                                   = 2,
	High                                     = 3,
	MAX                                      = 4,
};

// Enum GbxGame.EDialogScriptStatus
// NumValues: 0x0005
enum class EDialogScriptStatus : uint8
{
	Unimplemented                            = 0,
	InProgress                               = 1,
	ReadyToRecord                            = 2,
	ReadyToImport                            = 3,
	EDialogScriptStatus_MAX                  = 4,
};

// Enum GbxGame.EGbxDialogConversationStatus
// NumValues: 0x0008
enum class EGbxDialogConversationStatus : uint8
{
	NotFound                                 = 0,
	Pending                                  = 1,
	Canceled                                 = 2,
	Started                                  = 3,
	HoldingConversation                      = 4,
	Interrupted                              = 5,
	Succeeded                                = 6,
	EGbxDialogConversationStatus_MAX         = 7,
};

// Enum GbxGame.EDialogDecisionTestResult
// NumValues: 0x0004
enum class EDialogDecisionTestResult : uint8
{
	ConditionIsTrue                          = 0,
	ConditionIsFalse                         = 1,
	TestIsInvalid                            = 2,
	EDialogDecisionTestResult_MAX            = 3,
};

// Enum GbxGame.ECachedResultLifetime
// NumValues: 0x0004
enum class ECachedResultLifetime : uint8
{
	OneTest                                  = 0,
	OneSearch                                = 1,
	ManualReset                              = 2,
	ECachedResultLifetime_MAX                = 3,
};

// Enum GbxGame.ELineScorePriorityMode
// NumValues: 0x0003
enum class ELineScorePriorityMode : uint8
{
	RetainLowerScores                        = 0,
	DiscardLowerScores                       = 1,
	ELineScorePriorityMode_MAX               = 2,
};

// Enum GbxGame.EEchoPerformanceMode
// NumValues: 0x0004
enum class EEchoPerformanceMode : uint8
{
	EchoCommunication                        = 0,
	EchoLog                                  = 1,
	VoG                                      = 2,
	EEchoPerformanceMode_MAX                 = 3,
};

// Enum GbxGame.EDialogEchoPreference
// NumValues: 0x0004
enum class EDialogEchoPreference : uint8
{
	AutoTransition                           = 0,
	LiveOnly                                 = 1,
	EchoOnly                                 = 2,
	EDialogEchoPreference_MAX                = 3,
};

// Enum GbxGame.EDialogParameterType
// NumValues: 0x0007
enum class EDialogParameterType : uint8
{
	NexusDef                                 = 0,
	Object                                   = 1,
	Number                                   = 2,
	Boolean                                  = 3,
	FactAddress                              = 4,
	DialogEnum                               = 5,
	EDialogParameterType_MAX                 = 6,
};

// Enum GbxGame.EGbxDialogSpeakerType
// NumValues: 0x0005
enum class EGbxDialogSpeakerType : uint32
{
	Positional                               = 0,
	MultiPositional                          = 1,
	MultiPositionalController                = 2,
	PureEcho                                 = 3,
	EGbxDialogSpeakerType_MAX                = 4,
};

// Enum GbxGame.EGbxDialogQuietTimeScope
// NumValues: 0x0004
enum class EGbxDialogQuietTimeScope : uint8
{
	SmallArea                                = 0,
	LargeArea                                = 1,
	Global                                   = 2,
	EGbxDialogQuietTimeScope_MAX             = 3,
};

// Enum GbxGame.EGbxDialogSocialStrategy
// NumValues: 0x0004
enum class EGbxDialogSocialStrategy : uint8
{
	Normal                                   = 0,
	Selfish                                  = 1,
	NonSocial                                = 2,
	EGbxDialogSocialStrategy_MAX             = 3,
};

// Enum GbxGame.EGbxDialogInterruptStrategy
// NumValues: 0x0003
enum class EGbxDialogInterruptStrategy : uint8
{
	StopOthers                               = 0,
	SpeakOverOthers                          = 1,
	EGbxDialogInterruptStrategy_MAX          = 2,
};

// Enum GbxGame.EGbxCanSpeakEventResult
// NumValues: 0x0004
enum class EGbxCanSpeakEventResult : uint8
{
	CantFindPerformance                      = 0,
	CannotSpeakNow                           = 1,
	CanSpeakEvent                            = 2,
	MAX                                      = 3,
};

// Enum GbxGame.ECanSprintResult
// NumValues: 0x0004
enum class ECanSprintResult : uint8
{
	Yes                                      = 0,
	No                                       = 1,
	Cancel                                   = 2,
	ECanSprintResult_MAX                     = 3,
};

// Enum GbxGame.EDamagePresentationModifier
// NumValues: 0x0004
enum class EDamagePresentationModifier : uint8
{
	Default                                  = 0,
	Increase                                 = 1,
	Decrease                                 = 2,
	EDamagePresentationModifier_MAX          = 3,
};

// Enum GbxGame.EInventoryInputChannel
// NumValues: 0x0003
enum class EInventoryInputChannel : uint8
{
	Channel1                                 = 0,
	Channel2                                 = 1,
	EInventoryInputChannel_MAX               = 255,
};

// Enum GbxGame.EInventoryUseMode
// NumValues: 0x0003
enum class EInventoryUseMode : uint8
{
	Mode1                                    = 0,
	Mode2                                    = 1,
	EInventoryUseMode_MAX                    = 255,
};

// Enum GbxGame.EPickupAttachmentMode
// NumValues: 0x0006
enum class EPickupAttachmentMode : uint8
{
	Origin                                   = 0,
	Center                                   = 1,
	CenterAndScaleDown                       = 2,
	CenterAndScaleUpOrDown                   = 3,
	ScaleDown                                = 4,
	EPickupAttachmentMode_MAX                = 5,
};

// Enum GbxGame.EZoomState
// NumValues: 0x0005
enum class EZoomState : uint8
{
	NotZoomed                                = 0,
	ZoomingIn                                = 1,
	Zoomed                                   = 2,
	ZoomingOut                               = 3,
	EZoomState_MAX                           = 4,
};

// Enum GbxGame.EFactType
// NumValues: 0x0011
enum class EFactType : uint8
{
	Invalid                                  = 0,
	WorldStateRegistry                       = 1,
	GlobalStateCache                         = 2,
	TransientStateCache                      = 3,
	CodeFactsCache                           = 4,
	GameModeStateCache                       = 5,
	StatsCache                               = 6,
	Entitlement                              = 7,
	UnlockablesCache                         = 8,
	DataLayer                                = 9,
	MissionStateCache                        = 10,
	Alias                                    = 11,
	Waypoint                                 = 12,
	Task                                     = 13,
	MissionSource                            = 14,
	Custom                                   = 15,
	EFactType_MAX                            = 16,
};

// Enum GbxGame.EFactChangeValueType
// NumValues: 0x0006
enum class EFactChangeValueType : uint8
{
	Literal                                  = 0,
	Alias                                    = 1,
	GbxDef                                   = 2,
	GbxParam                                 = 3,
	AliasAddress                             = 4,
	Max                                      = 5,
};

// Enum GbxGame.EFactChangeOp
// NumValues: 0x0007
enum class EFactChangeOp : uint8
{
	Set                                      = 0,
	Add                                      = 1,
	Subtract                                 = 2,
	Multiply                                 = 3,
	Divide                                   = 4,
	Max                                      = 5,
	Min                                      = 6,
};

// Enum GbxGame.EFactEvaluatorContextType
// NumValues: 0x0005
enum class EFactEvaluatorContextType : uint8
{
	ContextActor                             = 0,
	World                                    = 1,
	OwningPlayers                            = 2,
	OwningPlayerCharacters                   = 3,
	EFactEvaluatorContextType_MAX            = 4,
};

// Enum GbxGame.EFactEvaluatorContextCombineType
// NumValues: 0x0003
enum class EFactEvaluatorContextCombineType : uint8
{
	Max                                      = 0,
	Min                                      = 1,
	Sum                                      = 2,
};

// Enum GbxGame.EFactExpressionOp
// NumValues: 0x000F
enum class EFactExpressionOp : uint8
{
	NOP                                      = 0,
	Mul                                      = 1,
	Div                                      = 2,
	Mod                                      = 3,
	Add                                      = 4,
	Sub                                      = 5,
	Lt                                       = 6,
	LtEq                                     = 7,
	Gt                                       = 8,
	GtEq                                     = 9,
	Equal                                    = 10,
	NotEq                                    = 11,
	And                                      = 12,
	Or                                       = 13,
	EFactExpressionOp_MAX                    = 14,
};

// Enum GbxGame.EFactsTransience
// NumValues: 0x0004
enum class EFactsTransience : uint8
{
	Automatic                                = 0,
	Transient                                = 1,
	Static                                   = 2,
	EFactsTransience_MAX                     = 3,
};

// Enum GbxGame.EFactsConduitRegistryNameEditType
// NumValues: 0x0004
enum class EFactsConduitRegistryNameEditType : uint8
{
	NotExposed                               = 0,
	ActorLabel                               = 1,
	Manual                                   = 2,
	EFactsConduitRegistryNameEditType_MAX    = 3,
};

// Enum GbxGame.EFactsConduitReactionComparison
// NumValues: 0x0006
enum class EFactsConduitReactionComparison : uint8
{
	Equal                                    = 0,
	LessThan                                 = 1,
	LessThanOrEqual                          = 2,
	GreaterThan                              = 3,
	GreaterThanOrEqual                       = 4,
	EFactsConduitReactionComparison_MAX      = 5,
};

// Enum GbxGame.ECrossConduitAddressSource
// NumValues: 0x0004
enum class ECrossConduitAddressSource : uint8
{
	Actor                                    = 0,
	Manual                                   = 1,
	Expression                               = 2,
	ECrossConduitAddressSource_MAX           = 3,
};

// Enum GbxGame.EFactsDependencyListEntryType
// NumValues: 0x0007
enum class EFactsDependencyListEntryType : uint8
{
	Completed                                = 0,
	Active                                   = 1,
	NotActive                                = 2,
	NotCompleted                             = 3,
	NotStarted                               = 4,
	Expression                               = 5,
	EFactsDependencyListEntryType_MAX        = 6,
};

// Enum GbxGame.EFactsSystemActorFactStatesType
// NumValues: 0x0004
enum class EFactsSystemActorFactStatesType : uint8
{
	EnumeratedStates                         = 0,
	GameDataHandleCategory                   = 1,
	Unknown                                  = 2,
	EFactsSystemActorFactStatesType_MAX      = 3,
};

// Enum GbxGame.EAliasTypeGameDataHandleFilter
// NumValues: 0x0004
enum class EAliasTypeGameDataHandleFilter : uint8
{
	None                                     = 0,
	OnlySubs                                 = 1,
	OnlyRoots                                = 2,
	EAliasTypeGameDataHandleFilter_MAX       = 3,
};

// Enum GbxGame.ECache_RequiredShardState
// NumValues: 0x0005
enum class ECache_RequiredShardState : uint8
{
	None                                     = 0,
	Singleton                                = 2,
	ParentShard                              = 4,
	DedicatedServer                          = 8,
	ECache_MAX                               = 9,
};

// Enum GbxGame.EForceSelection
// NumValues: 0x0004
enum class EForceSelection : uint8
{
	Custom                                   = 0,
	Attribute                                = 1,
	Preset                                   = 2,
	EForceSelection_MAX                      = 3,
};

// Enum GbxGame.EGameResourcePoolState
// NumValues: 0x0005
enum class EGameResourcePoolState : uint8
{
	Depleted                                 = 0,
	Depleting                                = 1,
	Filled                                   = 2,
	Regenerating                             = 3,
	MAX                                      = 4,
};

// Enum GbxGame.EGameResourcePoolSegmentState
// NumValues: 0x0003
enum class EGameResourcePoolSegmentState : uint8
{
	Depleted                                 = 0,
	Filled                                   = 1,
	MAX                                      = 2,
};

// Enum GbxGame.GameResourcePoolReplicationType
// NumValues: 0x0004
enum class EGameResourcePoolReplicationType : uint8
{
	GRPRT_None                               = 0,
	GRPRT_Basic                              = 1,
	GRPRT_Full                               = 2,
	GRPRT_MAX                                = 3,
};

// Enum GbxGame.EGameResourcePoolValueType
// NumValues: 0x0010
enum class EGameResourcePoolValueType : uint8
{
	None                                     = 0,
	MinValue                                 = 1,
	MaxValue                                 = 2,
	PercentOfMaxValueReserved                = 3,
	ConsumptionRate                          = 4,
	ActiveRegenerationRate                   = 5,
	OnIdleRegenerationRate                   = 6,
	OnIdleRegenerationDelay                  = 7,
	OnDepletedIdleRegenerationDelay          = 8,
	PassiveRegenerationRate                  = 9,
	PassivePercentRegenerationRate           = 10,
	PassiveMissingPercentRegenerationRate    = 11,
	OvershieldDuration                       = 12,
	RegenerationDisabled                     = 13,
	NumSegments                              = 14,
	EGameResourcePoolValueType_MAX           = 15,
};

// Enum GbxGame.EGbxActivityMissionSource
// NumValues: 0x0003
enum class EGbxActivityMissionSource : uint8
{
	UseMissionDef                            = 0,
	PickFromWeightedList                     = 1,
	EGbxActivityMissionSource_MAX            = 2,
};

// Enum GbxGame.EActivitySpawnImportance
// NumValues: 0x0003
enum class EActivitySpawnImportance : uint8
{
	Normal                                   = 0,
	Critical                                 = 1,
	EActivitySpawnImportance_MAX             = 2,
};

// Enum GbxGame.EActivityResult
// NumValues: 0x0005
enum class EActivityResult : uint8
{
	Undefined                                = 0,
	Success                                  = 1,
	PartialSuccess                           = 2,
	Failed                                   = 3,
	EActivityResult_MAX                      = 4,
};

// Enum GbxGame.EActivityParams
// NumValues: 0x0006
enum class EActivityParams : uint8
{
	None                                     = 0,
	IgnoreMaxInstance                        = 1,
	IgnoreProbability                        = 2,
	UseMissionOwner                          = 4,
	SaveToProfile                            = 8,
	EActivityParams_MAX                      = 255,
};

// Enum GbxGame.EPendingRequestExecutionType
// NumValues: 0x0003
enum class EPendingRequestExecutionType : uint8
{
	Warmup                                   = 0,
	Interval                                 = 1,
	EPendingRequestExecutionType_MAX         = 2,
};

// Enum GbxGame.EGbxActorPartDebugVisibility
// NumValues: 0x0003
enum class EGbxActorPartDebugVisibility : uint8
{
	Visible                                  = 0,
	Hidden                                   = 1,
	EGbxActorPartDebugVisibility_MAX         = 2,
};

// Enum GbxGame.EGbxActorPartViewMode
// NumValues: 0x0004
enum class EGbxActorPartViewMode : uint8
{
	ThirdOnly                                = 0,
	FirstOnly                                = 1,
	FirstAndThird                            = 2,
	EGbxActorPartViewMode_MAX                = 3,
};

// Enum GbxGame.EGbxActorPartGestaltMode
// NumValues: 0x0004
enum class EGbxActorPartGestaltMode : uint8
{
	ThirdOnly                                = 0,
	FirstOnly                                = 1,
	FirstAndThird                            = 2,
	EGbxActorPartGestaltMode_MAX             = 3,
};

// Enum GbxGame.EGbxActorPartNiagaraMode
// NumValues: 0x0003
enum class EGbxActorPartNiagaraMode : uint8
{
	AttachToSkelMesh                         = 0,
	SetNiagaraComponent                      = 1,
	EGbxActorPartNiagaraMode_MAX             = 2,
};

// Enum GbxGame.EGbxActorPartParam
// NumValues: 0x0004
enum class EGbxActorPartParam : uint32
{
	Bool                                     = 0,
	Float                                    = 1,
	Int                                      = 2,
	EGbxActorPartParam_MAX                   = 3,
};

// Enum GbxGame.EGbxAINodeLastOption
// NumValues: 0x0003
enum class EGbxAINodeLastOption : uint8
{
	StayForever                              = 0,
	Release                                  = 1,
	EGbxAINodeLastOption_MAX                 = 2,
};

// Enum GbxGame.EGbxAINodeApproachDirection
// NumValues: 0x0003
enum class EGbxAINodeApproachDirection : uint8
{
	NodePath                                 = 0,
	NodeDirection                            = 1,
	MAX                                      = 2,
};

// Enum GbxGame.EGbxAINodeBuiltInStayTask
// NumValues: 0x000B
enum class EGbxAINodeBuiltInStayTask : uint8
{
	Custom                                   = 0,
	Idle                                     = 1,
	LookAt                                   = 2,
	Patrol                                   = 3,
	Perch                                    = 4,
	PlaySequence                             = 5,
	PlayTrick                                = 6,
	Cover                                    = 7,
	Absent                                   = 8,
	DirectFollow                             = 9,
	EGbxAINodeBuiltInStayTask_MAX            = 10,
};

// Enum GbxGame.EGbxAINodeBuiltInTravelTask
// NumValues: 0x0008
enum class EGbxAINodeBuiltInTravelTask : uint8
{
	Custom                                   = 0,
	Path                                     = 1,
	Teleport                                 = 2,
	Lead                                     = 3,
	Follow                                   = 4,
	DirectFollow                             = 5,
	Despawn                                  = 6,
	EGbxAINodeBuiltInTravelTask_MAX          = 7,
};

// Enum GbxGame.EGbxAINodeAbsentPresentation
// NumValues: 0x0005
enum class EGbxAINodeAbsentPresentation : uint8
{
	None                                     = 0,
	Cloak                                    = 1,
	Digistruct                               = 2,
	AbsentTaggedAnim                         = 3,
	EGbxAINodeAbsentPresentation_MAX         = 4,
};

// Enum GbxGame.EGbxAINodeRotationOption
// NumValues: 0x0004
enum class EGbxAINodeRotationOption : uint8
{
	None                                     = 0,
	NodeDirection                            = 1,
	Custom                                   = 2,
	MAX                                      = 3,
};

// Enum GbxGame.EGbxAINodeStanceRestriction
// NumValues: 0x0004
enum class EGbxAINodeStanceRestriction : uint8
{
	None                                     = 0,
	DynamicSpeed                             = 1,
	CannotChange                             = 2,
	EGbxAINodeStanceRestriction_MAX          = 3,
};

// Enum GbxGame.EGbxAINodeStanceStyle
// NumValues: 0x0005
enum class EGbxAINodeStanceStyle : uint8
{
	Passive                                  = 0,
	Alert                                    = 1,
	Combat                                   = 2,
	Scared                                   = 3,
	EGbxAINodeStanceStyle_MAX                = 4,
};

// Enum GbxGame.EGbxAINodeStanceSpeed
// NumValues: 0x0005
enum class EGbxAINodeStanceSpeed : uint8
{
	Default                                  = 0,
	Walk                                     = 1,
	Run                                      = 2,
	Sprint                                   = 3,
	EGbxAINodeStanceSpeed_MAX                = 4,
};

// Enum GbxGame.EFloatComparisonType
// NumValues: 0x0007
enum class EFloatComparisonType : uint8
{
	Equal                                    = 0,
	NotEqual                                 = 1,
	GreaterThan                              = 2,
	GreaterThanOrEqual                       = 3,
	LessThan                                 = 4,
	LessThanOrEqual                          = 5,
	EFloatComparisonType_MAX                 = 6,
};

// Enum GbxGame.EHideActorNotifyOption
// NumValues: 0x0003
enum class EHideActorNotifyOption : uint8
{
	Hide                                     = 0,
	Unhide                                   = 1,
	EHideActorNotifyOption_MAX               = 2,
};

// Enum GbxGame.EGbxAnimSetPickerFields
// NumValues: 0x0007
enum class EGbxAnimSetPickerFields : uint8
{
	BoolCondition                            = 0,
	Manufacturer                             = 1,
	ActorDefinition                          = 2,
	AnimSets                                 = 3,
	SubOptions                               = 4,
	Expansion                                = 5,
	EGbxAnimSetPickerFields_MAX              = 6,
};

// Enum GbxGame.EGbxAreaDrawStyle
// NumValues: 0x0005
enum class EGbxAreaDrawStyle : uint8
{
	None                                     = 0,
	Wire                                     = 1,
	Solid                                    = 2,
	SolidAndWire                             = 3,
	EGbxAreaDrawStyle_MAX                    = 4,
};

// Enum GbxGame.EGbxAudioVolumePortalAnchorageType
// NumValues: 0x0004
enum class EGbxAudioVolumePortalAnchorageType : uint8
{
	Wall                                     = 0,
	Ground                                   = 1,
	Ceiling                                  = 2,
	EGbxAudioVolumePortalAnchorageType_MAX   = 3,
};

// Enum GbxGame.EGbxAttributeBlendSpaceResult
// NumValues: 0x0004
enum class EGbxAttributeBlendSpaceResult : uint32
{
	TwoD                                     = 0,
	OneD                                     = 1,
	ScaledOneD                               = 2,
	EGbxAttributeBlendSpaceResult_MAX        = 3,
};

// Enum GbxGame.EGbxBodyNodeSettings_Dialog_NameSource
// NumValues: 0x0004
enum class EGbxBodyNodeSettings_Dialog_NameSource : uint8
{
	Specified                                = 0,
	Inventory                                = 1,
	Owner                                    = 2,
	EGbxBodyNodeSettings_Dialog_MAX          = 3,
};

// Enum GbxGame.EGbxBrainAspectCharacterSoundPlayType
// NumValues: 0x0004
enum class EGbxBrainAspectCharacterSoundPlayType : uint32
{
	TriggerOnStart                           = 0,
	TriggerOnStartAndStopOnStop              = 1,
	TriggerOnStop                            = 2,
	EGbxBrainAspectCharacterSoundPlayType_MAX = 3,
};

// Enum GbxGame.EHealthAspectCheckType
// NumValues: 0x0003
enum class EHealthAspectCheckType : uint8
{
	IsLower                                  = 0,
	IsHigher                                 = 1,
	EHealthAspectCheckType_MAX               = 2,
};

// Enum GbxGame.EGbxBrainAspectResourceLockRotationType
// NumValues: 0x0003
enum class EGbxBrainAspectResourceLockRotationType : uint32
{
	Disable                                  = 0,
	Pause                                    = 1,
	MAX                                      = 2,
};

// Enum GbxGame.EGbxBrainRotationPreset
// NumValues: 0x0007
enum class EGbxBrainRotationPreset : uint8
{
	Custom                                   = 0,
	NoBodyRotationAllowed                    = 1,
	FullBody                                 = 2,
	AimOffsetsOnly                           = 3,
	FullBodyWithAim                          = 4,
	None                                     = 5,
	EGbxBrainRotationPreset_MAX              = 6,
};

// Enum GbxGame.ETeleportTravel
// NumValues: 0x0005
enum class ETeleportTravel : uint32
{
	Instant                                  = 0,
	Speed                                    = 1,
	Time                                     = 2,
	CustomSpeed                              = 3,
	ETeleportTravel_MAX                      = 4,
};

// Enum GbxGame.ETeleportGround
// NumValues: 0x0004
enum class ETeleportGround : uint32
{
	Required                                 = 0,
	Optional                                 = 1,
	None                                     = 2,
	ETeleportGround_MAX                      = 3,
};

// Enum GbxGame.ETrickInterrupt
// NumValues: 0x0005
enum class ETrickInterrupt : uint32
{
	Always                                   = 0,
	Never                                    = 1,
	OnFail                                   = 2,
	OnHigherPriority                         = 3,
	ETrickInterrupt_MAX                      = 4,
};

// Enum GbxGame.EGbxLeadFollowMode
// NumValues: 0x0004
enum class EGbxLeadFollowMode : uint8
{
	Lead                                     = 0,
	Follow                                   = 1,
	NotActive                                = 2,
	EGbxLeadFollowMode_MAX                   = 3,
};

// Enum GbxGame.EGbxLocationTrackingType
// NumValues: 0x0003
enum class EGbxLocationTrackingType : uint8
{
	Patrol                                   = 0,
	Combat                                   = 1,
	MAX                                      = 2,
};

// Enum GbxGame.ELeapAttackTargetMode
// NumValues: 0x0003
enum class ELeapAttackTargetMode : uint8
{
	Param                                    = 0,
	GPS                                      = 1,
	ELeapAttackTargetMode_MAX                = 2,
};

// Enum GbxGame.ELeapAttackRotationTarget
// NumValues: 0x0005
enum class ELeapAttackRotationTarget : uint8
{
	LeapTarget                               = 0,
	LeapOrigin                               = 1,
	CombatTarget                             = 2,
	Custom                                   = 3,
	MAX                                      = 4,
};

// Enum GbxGame.EOrbitRotation
// NumValues: 0x0005
enum class EOrbitRotation : uint8
{
	Path                                     = 0,
	Target                                   = 1,
	Center                                   = 2,
	Custom                                   = 3,
	EOrbitRotation_MAX                       = 4,
};

// Enum GbxGame.EPerchRotationMode
// NumValues: 0x0004
enum class EPerchRotationMode : uint8
{
	None                                     = 0,
	Perch                                    = 1,
	AiTarget                                 = 2,
	EPerchRotationMode_MAX                   = 3,
};

// Enum GbxGame.EGbxViewTargetRotationUpdateMethod
// NumValues: 0x0004
enum class EGbxViewTargetRotationUpdateMethod : uint32
{
	FromCamera                               = 0,
	Fixed                                    = 1,
	FromInputDelta                           = 2,
	EGbxViewTargetRotationUpdateMethod_MAX   = 3,
};

// Enum GbxGame.EGbxCameraShakeOscillatorUnits
// NumValues: 0x0004
enum class EGbxCameraShakeOscillatorUnits : uint8
{
	RadiansPerSecond                         = 0,
	CyclesPerSecond                          = 1,
	TotalCycles                              = 2,
	EGbxCameraShakeOscillatorUnits_MAX       = 3,
};

// Enum GbxGame.EGbxCapitalType
// NumValues: 0x0004
enum class EGbxCapitalType : uint8
{
	None                                     = 0,
	Currency                                 = 1,
	Experience                               = 2,
	EGbxCapitalType_MAX                      = 3,
};

// Enum GbxGame.EGbxCapitalSource
// NumValues: 0x0003
enum class EGbxCapitalSource : uint8
{
	Character                                = 0,
	Account                                  = 1,
	EGbxCapitalSource_MAX                    = 2,
};

// Enum GbxGame.ECharacterDeathType
// NumValues: 0x0008
enum class ECharacterDeathType : uint8
{
	None                                     = 0,
	HealthDepleted                           = 1,
	Suicide                                  = 2,
	ScriptedInstantDeath                     = 3,
	FellOutOfWorld                           = 4,
	Ragdoll                                  = 5,
	Drowned                                  = 6,
	ECharacterDeathType_MAX                  = 7,
};

// Enum GbxGame.ERagdollState
// NumValues: 0x0005
enum class ERagdollState : uint8
{
	Disabled                                 = 0,
	Simulating                               = 1,
	StartRecovery                            = 2,
	Recovering                               = 3,
	ERagdollState_MAX                        = 4,
};

// Enum GbxGame.EGbxCharacterOverlapsOptimization
// NumValues: 0x0004
enum class EGbxCharacterOverlapsOptimization : uint8
{
	None                                     = 0,
	EverythingButRoot                        = 1,
	Everything                               = 2,
	EGbxCharacterOverlapsOptimization_MAX    = 3,
};

// Enum GbxGame.EMantleUpCheckState
// NumValues: 0x001A
enum class EMantleUpCheckState : uint8
{
	Unknown                                  = 0,
	WallCheck_NoWall                         = 1,
	WallCheck_TooFlat                        = 2,
	WallCheck_InvalidHitComponent            = 3,
	HeadRoomCheck_BlockedAhead               = 4,
	HeadRoomCheck_BlockedAbove               = 5,
	StandingSpotCheck_Initial_Ahead_NoFloor  = 6,
	StandingSpotCheck_Initial_Ahead_InitiallyPenetrating = 7,
	StandingSpotCheck_Initial_Ahead_InvalidHitComponent = 8,
	StandingSpotCheck_Final_Ahead_NoFloor    = 9,
	StandingSpotCheck_Final_Ahead_InitiallyPenetrating = 10,
	StandingSpotCheck_Final_Ahead_InvalidHitComponent = 11,
	StandingSpotCheck_Final_Ahead_UnwalkableSlope = 12,
	StandingSpotCheck_Final_Ahead_OutsideOfHeightTolerance = 13,
	StandingSpotCheck_Final_Ahead_BlockedAtHead = 14,
	StandingSpotCheck_Initial_Rotated_NoFloor = 15,
	StandingSpotCheck_Initial_Rotated_InitiallyPenetrating = 16,
	StandingSpotCheck_Initial_Rotated_InvalidHitComponent = 17,
	StandingSpotCheck_Final_Rotated_NoFloor  = 18,
	StandingSpotCheck_Final_Rotated_InitiallyPenetrating = 19,
	StandingSpotCheck_Final_Rotated_InvalidHitComponent = 20,
	StandingSpotCheck_Final_Rotated_UnwalkableSlope = 21,
	StandingSpotCheck_Final_Rotated_OutsideOfHeightTolerance = 22,
	StandingSpotCheck_Final_Rotated_BlockedAtHead = 23,
	Good                                     = 24,
	EMantleUpCheckState_MAX                  = 25,
};

// Enum GbxGame.EColorBlindMode
// NumValues: 0x0005
enum class EColorBlindMode : uint8
{
	Off                                      = 0,
	Deuteranope                              = 1,
	Protanope                                = 2,
	Tritanope                                = 3,
	EColorBlindMode_MAX                      = 4,
};

// Enum GbxGame.EGbxDamageEventType
// NumValues: 0x0005
enum class EGbxDamageEventType : uint8
{
	HealthThreshold                          = 0,
	Health                                   = 1,
	Damage                                   = 2,
	DamageOverTime                           = 3,
	EGbxDamageEventType_MAX                  = 4,
};

// Enum GbxGame.EGbxCracksStoppingCondition
// NumValues: 0x0004
enum class EGbxCracksStoppingCondition : uint32
{
	StopBeforeHitting                        = 0,
	StopAfterHitting                         = 1,
	DontStop                                 = 2,
	EGbxCracksStoppingCondition_MAX          = 3,
};

// Enum GbxGame.EProjectileFeedbackBehavior
// NumValues: 0x0005
enum class EProjectileFeedbackBehavior : uint8
{
	ScalarModification                       = 0,
	VectorModification                       = 1,
	ScaleUp                                  = 2,
	ScaleDown                                = 3,
	EProjectileFeedbackBehavior_MAX          = 4,
};

// Enum GbxGame.EGbxDecoTrigger
// NumValues: 0x000A
enum class EGbxDecoTrigger : uint8
{
	None                                     = 0,
	Bump                                     = 1,
	Damage                                   = 2,
	Proximity                                = 3,
	Use                                      = 4,
	Leave                                    = 5,
	Timer                                    = 6,
	AnimationCycleEnded                      = 7,
	Fact                                     = 8,
	EGbxDecoTrigger_MAX                      = 9,
};

// Enum GbxGame.EGbxDecoAnimCycle
// NumValues: 0x0006
enum class EGbxDecoAnimCycle : uint8
{
	None                                     = 0,
	Sequential                               = 1,
	WeightedRandom                           = 2,
	RandomDontRepeat                         = 3,
	WeightedRandomRepeatForever              = 4,
	EGbxDecoAnimCycle_MAX                    = 5,
};

// Enum GbxGame.EGbxRotationMode
// NumValues: 0x0004
enum class EGbxRotationMode : uint8
{
	Player                                   = 0,
	Custom                                   = 1,
	None                                     = 2,
	EGbxRotationMode_MAX                     = 3,
};

// Enum GbxGame.EDestructionSpawnLocationOption
// NumValues: 0x0003
enum class EDestructionSpawnLocationOption : uint8
{
	Destructible                             = 0,
	ImpactPoint                              = 1,
	EDestructionSpawnLocationOption_MAX      = 2,
};

// Enum GbxGame.ECollisionAudioBehavior
// NumValues: 0x0003
enum class ECollisionAudioBehavior : uint8
{
	DefaultAudioEvent                        = 0,
	OverrideAudioEvent                       = 1,
	ECollisionAudioBehavior_MAX              = 2,
};

// Enum GbxGame.EDialogParameterMappingSourceType
// NumValues: 0x0003
enum class EDialogParameterMappingSourceType : uint8
{
	Parameter                                = 0,
	Constant                                 = 1,
	EDialogParameterMappingSourceType_MAX    = 2,
};

// Enum GbxGame.EStartDialogFlags
// NumValues: 0x0007
enum class EStartDialogFlags : uint8
{
	None                                     = 0,
	ForceLive                                = 1,
	ForceNoMood                              = 2,
	ForceNoGesture                           = 4,
	PlayableWhilePaused                      = 8,
	ForcePlayImmediately                     = 16,
	EStartDialogFlags_MAX                    = 17,
};

// Enum GbxGame.EGbxDiscoveryOfflineAreaShapeType
// NumValues: 0x0004
enum class EGbxDiscoveryOfflineAreaShapeType : uint32
{
	Box                                      = 0,
	Capsule                                  = 1,
	Sphere                                   = 2,
	EGbxDiscoveryOfflineAreaShapeType_MAX    = 3,
};

// Enum GbxGame.EGbxDiscoveryPresentationMapViewerWorldPlacementMode
// NumValues: 0x0004
enum class EGbxDiscoveryPresentationMapViewerWorldPlacementMode : uint32
{
	TranslationOnly                          = 0,
	TranslationAndYawRotation                = 1,
	TranslationAndAllRotation                = 2,
	EGbxDiscoveryPresentationMapViewerWorldPlacementMode_MAX = 3,
};

// Enum GbxGame.EGbxDiscoveryPresentationType
// NumValues: 0x0006
enum class EGbxDiscoveryPresentationType : uint8
{
	None                                     = 0,
	Map                                      = 1,
	Compass                                  = 2,
	Ping                                     = 3,
	HUD                                      = 4,
	MAX                                      = 5,
};

// Enum GbxGame.EGbxDiscoveryProximity
// NumValues: 0x0004
enum class EGbxDiscoveryProximity : uint32
{
	OutOfRange                               = 0,
	Undiscovered                             = 1,
	Discovered                               = 2,
	MAX                                      = 3,
};

// Enum GbxGame.EGbxDiscoveryDiscovererType
// NumValues: 0x0005
enum class EGbxDiscoveryDiscovererType : uint32
{
	Unknown                                  = 0,
	Player_SelfAuthority                     = 1,
	Player_PartyHostAuthority                = 2,
	MapViewer                                = 3,
	EGbxDiscoveryDiscovererType_MAX          = 4,
};

// Enum GbxGame.EGbxDiscoveryDiscovererRole
// NumValues: 0x0004
enum class EGbxDiscoveryDiscovererRole : uint8
{
	ReadOnly                                 = 0,
	DiscoverForSelf                          = 1,
	DiscoverForHost                          = 2,
	EGbxDiscoveryDiscovererRole_MAX          = 3,
};

// Enum GbxGame.EGbxDiscoveryAreaManagerUpdateAction
// NumValues: 0x0004
enum class EGbxDiscoveryAreaManagerUpdateAction : uint8
{
	None                                     = 0,
	EnteredArea                              = 1,
	ExitedArea                               = 2,
	EGbxDiscoveryAreaManagerUpdateAction_MAX = 3,
};

// Enum GbxGame.EGbxDiscoveryPinType
// NumValues: 0x0004
enum class EGbxDiscoveryPinType : uint8
{
	None                                     = 0,
	CustomWaypoint                           = 1,
	LocationPin                              = 2,
	EGbxDiscoveryPinType_MAX                 = 3,
};

// Enum GbxGame.EGbxDiscoveryPinConfigType
// NumValues: 0x0003
enum class EGbxDiscoveryPinConfigType : uint8
{
	Host                                     = 0,
	Client                                   = 1,
	MAX                                      = 2,
};

// Enum GbxGame.EGbxDiscoveryMaxPinBehavior
// NumValues: 0x0003
enum class EGbxDiscoveryMaxPinBehavior : uint32
{
	CannotPin                                = 0,
	RemoveOldest                             = 1,
	EGbxDiscoveryMaxPinBehavior_MAX          = 2,
};

// Enum GbxGame.EGbxDiscoveryViewableMapBoundsSource
// NumValues: 0x0004
enum class EGbxDiscoveryViewableMapBoundsSource : uint32
{
	Explicit                                 = 0,
	FromMetaDataLevelBounds                  = 1,
	FromMetaDataBPMapBounds                  = 2,
	EGbxDiscoveryViewableMapBoundsSource_MAX = 3,
};

// Enum GbxGame.ELocationTargetType
// NumValues: 0x0005
enum class ELocationTargetType : uint8
{
	Actor                                    = 0,
	Component                                = 1,
	Location                                 = 2,
	GPS                                      = 3,
	ELocationTargetType_MAX                  = 4,
};

// Enum GbxGame.EGbxDroneMovementMode
// NumValues: 0x0006
enum class EGbxDroneMovementMode : uint8
{
	None                                     = 0,
	Stationary                               = 1,
	Hover                                    = 2,
	FlyToTarget                              = 3,
	FixedOrbit                               = 4,
	EGbxDroneMovementMode_MAX                = 5,
};

// Enum GbxGame.EGbxDroneOrientationMode
// NumValues: 0x0005
enum class EGbxDroneOrientationMode : uint8
{
	None                                     = 0,
	FaceMoveDir                              = 1,
	FaceTarget                               = 2,
	NearestWaypoint                          = 3,
	EGbxDroneOrientationMode_MAX             = 4,
};

// Enum GbxGame.EGbxDroneDeactivateMode
// NumValues: 0x0004
enum class EGbxDroneDeactivateMode : uint8
{
	None                                     = 0,
	Explode                                  = 1,
	FallAndExplode                           = 2,
	EGbxDroneDeactivateMode_MAX              = 3,
};

// Enum GbxGame.EGbxDroneOrbitDirection
// NumValues: 0x0004
enum class EGbxDroneOrbitDirection : uint8
{
	Clockwise                                = 0,
	CounterClockwise                         = 1,
	Random                                   = 2,
	EGbxDroneOrbitDirection_MAX              = 3,
};

// Enum GbxGame.EGbxDroneAttributeValueType
// NumValues: 0x0003
enum class EGbxDroneAttributeValueType : uint8
{
	MoveTargetActor                          = 0,
	MoveTargetLocation                       = 1,
	EGbxDroneAttributeValueType_MAX          = 2,
};

// Enum GbxGame.EGbxFeedbackType
// NumValues: 0x0008
enum class EGbxFeedbackType : uint8
{
	None                                     = 0,
	Ranged                                   = 1,
	Directional                              = 2,
	RandomRumble                             = 4,
	Continuous                               = 8,
	RandomShake                              = 16,
	UseProvidedSourceLocation                = 32,
	EGbxFeedbackType_MAX                     = 255,
};

// Enum GbxGame.EGbxFeedbackElements
// NumValues: 0x0009
enum class EGbxFeedbackElements : uint8
{
	None                                     = 0,
	CameraShake                              = 1,
	Rumble                                   = 2,
	ScreenParticle                           = 4,
	Audio                                    = 8,
	RadialBlur                               = 16,
	UI                                       = 32,
	All                                      = 255,
	EGbxFeedbackElements_MAX                 = 256,
};

// Enum GbxGame.EFoleyImpactType
// NumValues: 0x0004
enum class EFoleyImpactType : uint8
{
	Trace                                    = 0,
	NoTrace                                  = 1,
	Water                                    = 2,
	EFoleyImpactType_MAX                     = 3,
};

// Enum GbxGame.EFoleyLoopInfoType
// NumValues: 0x0003
enum class EFoleyLoopInfoType : uint32
{
	AngularVelocity                          = 0,
	SpeedOnly                                = 1,
	EFoleyLoopInfoType_MAX                   = 2,
};

// Enum GbxGame.EBulletByDeterminant
// NumValues: 0x0003
enum class EBulletByDeterminant : uint8
{
	Listener                                 = 0,
	LocalPlayer                              = 1,
	EBulletByDeterminant_MAX                 = 2,
};

// Enum GbxGame.EGameInstancePhase
// NumValues: 0x000B
enum class EGameInstancePhase : uint8
{
	None                                     = 0,
	Spawning                                 = 1,
	PreTitle                                 = 2,
	Title                                    = 3,
	PreMain                                  = 4,
	Main                                     = 5,
	TravelingToGameplay                      = 6,
	PreGameplay                              = 7,
	Gameplay                                 = 8,
	LeavingGameplay                          = 9,
	EGameInstancePhase_MAX                   = 10,
};

// Enum GbxGame.EEffectivePlayerCountSetting
// NumValues: 0x0004
enum class EEffectivePlayerCountSetting : uint32
{
	GameForced                               = 0,
	UserRequested                            = 1,
	Actual                                   = 2,
	EEffectivePlayerCountSetting_MAX         = 3,
};

// Enum GbxGame.EGbxGameModeModuleConfig_Matchmaking_PartyHandling
// NumValues: 0x0004
enum class EGbxGameModeModuleConfig_Matchmaking_PartyHandling : uint8
{
	OpenedTeam                               = 0,
	LockedTeam                               = 1,
	Ignored                                  = 2,
	EGbxGameModeModuleConfig_Matchmaking_MAX = 3,
};

// Enum GbxGame.EGbxGameModeModuleConfig_Timer_Event
// NumValues: 0x0003
enum class EGbxGameModeModuleConfig_Timer_Event : uint8
{
	TimePassed                               = 0,
	TimeLeft                                 = 1,
	EGbxGameModeModuleConfig_Timer_MAX       = 2,
};

// Enum GbxGame.EGbxGameModeModuleHostConduitExecs
// NumValues: 0x0003
enum class EGbxGameModeModuleHostConduitExecs : uint8
{
	Valid                                    = 0,
	Invalid                                  = 1,
	EGbxGameModeModuleHostConduitExecs_MAX   = 2,
};

// Enum GbxGame.EGbxGameModeModuleTarget
// NumValues: 0x0004
enum class EGbxGameModeModuleTarget : uint8
{
	Client                                   = 0,
	Honcho                                   = 1,
	Host                                     = 2,
	EGbxGameModeModuleTarget_MAX             = 3,
};

// Enum GbxGame.EGbxGameModeModuleLifecycle
// NumValues: 0x0006
enum class EGbxGameModeModuleLifecycle : uint8
{
	PreMatch                                 = 0,
	AutoStart                                = 1,
	Phase                                    = 2,
	OnDemand                                 = 3,
	PostMatch                                = 4,
	EGbxGameModeModuleLifecycle_MAX          = 5,
};

// Enum GbxGame.EForwardDynamicsDataGenerationMode
// NumValues: 0x0004
enum class EForwardDynamicsDataGenerationMode : uint8
{
	Always                                   = 0,
	OnlyIfMissing                            = 1,
	OnlyIfUniqueExists                       = 2,
	EForwardDynamicsDataGenerationMode_MAX   = 3,
};

// Enum GbxGame.EPlayersOverlappingActorOutput
// NumValues: 0x0003
enum class EPlayersOverlappingActorOutput : uint8
{
	Overlapping                              = 0,
	NotOverlapping                           = 1,
	EPlayersOverlappingActorOutput_MAX       = 2,
};

// Enum GbxGame.EGameplayEffectReplication
// NumValues: 0x0004
enum class EGameplayEffectReplication : uint8
{
	None                                     = 0,
	Unreliable                               = 1,
	Reliable                                 = 2,
	EGameplayEffectReplication_MAX           = 3,
};

// Enum GbxGame.EGameplayEffectVisibility
// NumValues: 0x0004
enum class EGameplayEffectVisibility : uint8
{
	All                                      = 0,
	OwnerNoSee                               = 1,
	OnlyOwnerSee                             = 2,
	EGameplayEffectVisibility_MAX            = 3,
};

// Enum GbxGame.EGameplayEffectBodyVisibility
// NumValues: 0x0004
enum class EGameplayEffectBodyVisibility : uint8
{
	Both                                     = 0,
	FirstPerson                              = 1,
	ThirdPerson                              = 2,
	EGameplayEffectBodyVisibility_MAX        = 3,
};

// Enum GbxGame.EShowFPSMode
// NumValues: 0x0004
enum class EShowFPSMode : uint8
{
	Hide                                     = 0,
	Minimal                                  = 1,
	Full                                     = 2,
	EShowFPSMode_MAX                         = 3,
};

// Enum GbxGame.EGbxNvidiaReflexMode
// NumValues: 0x0004
enum class EGbxNvidiaReflexMode : uint8
{
	Off                                      = 0,
	Enabled                                  = 1,
	Boost                                    = 3,
	EGbxNvidiaReflexMode_MAX                 = 4,
};

// Enum GbxGame.EDamageSurfaceType
// NumValues: 0x0005
enum class EDamageSurfaceType : uint8
{
	Default                                  = 0,
	Flesh                                    = 1,
	Armor                                    = 2,
	Shield                                   = 3,
	EDamageSurfaceType_MAX                   = 4,
};

// Enum GbxGame.EHealthPoolType
// NumValues: 0x0005
enum class EHealthPoolType : uint8
{
	AllHealthPools                           = 0,
	Pool1                                    = 1,
	Pool2                                    = 2,
	Pool3                                    = 3,
	EHealthPoolType_MAX                      = 4,
};

// Enum GbxGame.EGbxHealthStateResolverValue
// NumValues: 0x0009
enum class EGbxHealthStateResolverValue : uint8
{
	Health                                   = 0,
	HealthPercent                            = 1,
	MaxHealth                                = 2,
	TotalHealth                              = 3,
	TotalHealthPercent                       = 4,
	MaxTotalHealth                           = 5,
	HealthFull                               = 6,
	HealthEmpty                              = 7,
	EGbxHealthStateResolverValue_MAX         = 8,
};

// Enum GbxGame.EGbxButtonEvent
// NumValues: 0x0003
enum class EGbxButtonEvent : uint8
{
	Pressed                                  = 0,
	Released                                 = 1,
	EGbxButtonEvent_MAX                      = 2,
};

// Enum GbxGame.EGbxTransactionType
// NumValues: 0x0011
enum class EGbxTransactionType : uint8
{
	INVALID                                  = 0,
	SWAP_EQUIPPED_ITEMS                      = 1,
	SWAP_EQUIPPED_ITEM_WITH_NON_EQUIPPED_ITEM = 2,
	SWAP_BETWEEN_CONTAINERS                  = 3,
	UNEQUIP_ITEM_FROM_SLOT                   = 4,
	EQUIP_ITEM_FROM_CONTAINER                = 5,
	REMOVE_ITEM                              = 6,
	ADD_ITEM_FROM_ENVIRONMENT                = 7,
	MOVE_ITEM_BETWEEN_CONTAINERS             = 8,
	MOVE_ITEM_BETWEEN_CONTAINER_OWNERS       = 9,
	BREAK_DOWN_ITEM                          = 10,
	EXECUTE_RECIPE                           = 11,
	RESET_INVENTORY                          = 12,
	SET_ITEM_STATE_FLAGS                     = 13,
	UPDATE_CUSTOMIZATION                     = 14,
	ADD_ITEM                                 = 15,
	EGbxTransactionType_MAX                  = 16,
};

// Enum GbxGame.EUpdateCustomizationOperation
// NumValues: 0x0005
enum class EUpdateCustomizationOperation : uint8
{
	Add                                      = 0,
	AddUnique                                = 1,
	Remove                                   = 2,
	Clear                                    = 3,
	EUpdateCustomizationOperation_MAX        = 4,
};

// Enum GbxGame.EGbxLevelRoadAreaShape
// NumValues: 0x0003
enum class EGbxLevelRoadAreaShape : uint32
{
	Cylinder                                 = 0,
	Box                                      = 1,
	MAX                                      = 2,
};

// Enum GbxGame.EGbxLevelSequenceReductionMode
// NumValues: 0x0005
enum class EGbxLevelSequenceReductionMode : uint8
{
	None                                     = 0,
	WhiteList                                = 1,
	BlackList                                = 2,
	RemoveThisSubSequence                    = 3,
	EGbxLevelSequenceReductionMode_MAX       = 4,
};

// Enum GbxGame.EGbxSequenceActorDataSpawnType
// NumValues: 0x0005
enum class EGbxSequenceActorDataSpawnType : uint8
{
	Native                                   = 0,
	BodyData                                 = 1,
	GbxActorDef                              = 2,
	InventoryDef                             = 3,
	EGbxSequenceActorDataSpawnType_MAX       = 4,
};

// Enum GbxGame.StationLockStatus
// NumValues: 0x0004
enum class EStationLockStatus : uint8
{
	Default                                  = 0,
	Locked                                   = 1,
	Unlocked                                 = 2,
	StationLockStatus_MAX                    = 3,
};

// Enum GbxGame.EGbxLightType
// NumValues: 0x0005
enum class EGbxLightType : uint8
{
	Directional                              = 0,
	Point                                    = 1,
	Spot                                     = 2,
	Rect                                     = 3,
	EGbxLightType_MAX                        = 4,
};

// Enum GbxGame.EGbxMaterialParameterType
// NumValues: 0x0006
enum class EGbxMaterialParameterType : uint8
{
	None                                     = 0,
	Vector                                   = 1,
	Scalar                                   = 2,
	Vector4f                                 = 3,
	Texture                                  = 4,
	EGbxMaterialParameterType_MAX            = 5,
};

// Enum GbxGame.EGbxMomentExecutionState
// NumValues: 0x0004
enum class EGbxMomentExecutionState : uint8
{
	Idle                                     = 0,
	Executing                                = 1,
	Complete                                 = 2,
	EGbxMomentExecutionState_MAX             = 3,
};

// Enum GbxGame.EGbxMomentNodeExecutionState
// NumValues: 0x0005
enum class EGbxMomentNodeExecutionState : uint8
{
	Idle                                     = 0,
	TryingToStart                            = 1,
	Executing                                = 2,
	Complete                                 = 3,
	EGbxMomentNodeExecutionState_MAX         = 4,
};

// Enum GbxGame.EGbxMomentCinematicModeAction
// NumValues: 0x0004
enum class EGbxMomentCinematicModeAction : uint8
{
	Push                                     = 0,
	Pop                                      = 1,
	Clear                                    = 2,
	EGbxMomentCinematicModeAction_MAX        = 3,
};

// Enum GbxGame.EGbxMomentDebugPrintVerbosity
// NumValues: 0x0004
enum class EGbxMomentDebugPrintVerbosity : uint8
{
	Log                                      = 5,
	Warning                                  = 3,
	Error                                    = 2,
	EGbxMomentDebugPrintVerbosity_MAX        = 6,
};

// Enum GbxGame.EGbxDirectorNoteColorPreset
// NumValues: 0x000F
enum class EGbxDirectorNoteColorPreset : uint8
{
	Default                                  = 0,
	Red                                      = 1,
	Green                                    = 2,
	Blue                                     = 3,
	Yellow                                   = 4,
	White                                    = 5,
	Black                                    = 6,
	Cyan                                     = 7,
	Magenta                                  = 8,
	Orange                                   = 9,
	Purple                                   = 10,
	Turquoise                                = 11,
	Silver                                   = 12,
	Emerald                                  = 13,
	EGbxDirectorNoteColorPreset_MAX          = 14,
};

// Enum GbxGame.EMomentPlaySequenceMode
// NumValues: 0x0003
enum class EMomentPlaySequenceMode : uint8
{
	Transient                                = 0,
	Persistent                               = 1,
	EMomentPlaySequenceMode_MAX              = 2,
};

// Enum GbxGame.EMomentNodePlaySoundType
// NumValues: 0x0005
enum class EMomentNodePlaySoundType : uint32
{
	ActorDefault                             = 0,
	NamedEmitter                             = 1,
	SpawnAtSocket                            = 2,
	PlayInWorld                              = 3,
	EMomentNodePlaySoundType_MAX             = 4,
};

// Enum GbxGame.EGbxMomentScreenFadeDirection
// NumValues: 0x0004
enum class EGbxMomentScreenFadeDirection : uint8
{
	FadeIn                                   = 0,
	FadeOut                                  = 1,
	RemoveFade                               = 2,
	EGbxMomentScreenFadeDirection_MAX        = 3,
};

// Enum GbxGame.EGbxMomentParamWaitType
// NumValues: 0x0004
enum class EGbxMomentParamWaitType : uint32
{
	WaitIndefinitely                         = 0,
	WaitFixedDuration                        = 1,
	DontWait                                 = 2,
	EGbxMomentParamWaitType_MAX              = 3,
};

// Enum GbxGame.EGbxMovingPlatformActorStateIsVisible
// NumValues: 0x0003
enum class EGbxMovingPlatformActorStateIsVisible : uint8
{
	NotVisible                               = 0,
	Visible                                  = 1,
	EGbxMovingPlatformActorStateIsVisible_MAX = 2,
};

// Enum GbxGame.EGbxMovingPlatformMoveState
// NumValues: 0x0003
enum class EGbxMovingPlatformMoveState : uint8
{
	Stationary                               = 0,
	Moving                                   = 1,
	EGbxMovingPlatformMoveState_MAX          = 2,
};

// Enum GbxGame.EGbxMovingPlatformRelevantState
// NumValues: 0x0003
enum class EGbxMovingPlatformRelevantState : uint8
{
	NotRelevant                              = 0,
	Relevant                                 = 1,
	EGbxMovingPlatformRelevantState_MAX      = 2,
};

// Enum GbxGame.EGbxMovingPlatformDestinationType
// NumValues: 0x0005
enum class EGbxMovingPlatformDestinationType : uint32
{
	RelativeTransform                        = 0,
	TargetActorTransform                     = 1,
	SpawnTransform                           = 2,
	FollowSpline                             = 3,
	EGbxMovingPlatformDestinationType_MAX    = 4,
};

// Enum GbxGame.EGbxMovingPlatformDestinationCondition
// NumValues: 0x0005
enum class EGbxMovingPlatformDestinationCondition : uint32
{
	ExternallyControlled                     = 0,
	FunctionLibraryControlled                = 1,
	ActorState                               = 2,
	Automatic                                = 3,
	EGbxMovingPlatformDestinationCondition_MAX = 4,
};

// Enum GbxGame.EGbxMovingPlatformSpeedMode
// NumValues: 0x0004
enum class EGbxMovingPlatformSpeedMode : uint32
{
	MoveSpeed                                = 0,
	MoveTime                                 = 1,
	SpeedCurveDuration                       = 2,
	EGbxMovingPlatformSpeedMode_MAX          = 3,
};

// Enum GbxGame.EGbxMovingPlatformReplicationControllerType
// NumValues: 0x0005
enum class EGbxMovingPlatformReplicationControllerType : uint32
{
	None                                     = 0,
	DestinationReplication                   = 1,
	FullyReplicated                          = 2,
	MovementReplication                      = 3,
	EGbxMovingPlatformReplicationControllerType_MAX = 4,
};

// Enum GbxGame.EGbxMovingPlatformEnforceAccelerationRateType
// NumValues: 0x0004
enum class EGbxMovingPlatformEnforceAccelerationRateType : uint32
{
	None                                     = 0,
	Acceleration                             = 1,
	Duration                                 = 2,
	EGbxMovingPlatformEnforceAccelerationRateType_MAX = 3,
};

// Enum GbxGame.EGbxMovingPlatformSplineMovementRotationType
// NumValues: 0x0004
enum class EGbxMovingPlatformSplineMovementRotationType : uint32
{
	FullRotation                             = 0,
	YawOnly                                  = 1,
	None                                     = 2,
	EGbxMovingPlatformSplineMovementRotationType_MAX = 3,
};

// Enum GbxGame.EGbxMovingPlatformSplineMovementSpeedMode
// NumValues: 0x0003
enum class EGbxMovingPlatformSplineMovementSpeedMode : uint32
{
	SpeedCurve                               = 0,
	SplineDuration                           = 1,
	EGbxMovingPlatformSplineMovementSpeedMode_MAX = 2,
};

// Enum GbxGame.EGbxMovingPlatformRelevancyType
// NumValues: 0x0004
enum class EGbxMovingPlatformRelevancyType : uint32
{
	AlwaysRelevant                           = 0,
	Managed                                  = 1,
	AutoManaged                              = 2,
	EGbxMovingPlatformRelevancyType_MAX      = 3,
};

// Enum GbxGame.EGbxEngagementModeType
// NumValues: 0x0005
enum class EGbxEngagementModeType : uint8
{
	MinorEngagementOnly                      = 0,
	MajorEngagementOnly                      = 1,
	Both                                     = 2,
	TrackEngagement                          = 3,
	MAX                                      = 4,
};

// Enum GbxGame.EGbxEngagementType
// NumValues: 0x0004
enum class EGbxEngagementType : uint8
{
	MinorEngagement                          = 0,
	MajorEngagement                          = 1,
	None                                     = 2,
	MAX                                      = 3,
};

// Enum GbxGame.EGbxNpcPlayerGreetingType
// NumValues: 0x0006
enum class EGbxNpcPlayerGreetingType : uint8
{
	Hello                                    = 0,
	HelloMission                             = 1,
	Idle                                     = 2,
	Goodbye                                  = 3,
	UsedInteraction                          = 4,
	MAX                                      = 5,
};

// Enum GbxGame.EGbxNpcPlayerAwarenessLevel
// NumValues: 0x0005
enum class EGbxNpcPlayerAwarenessLevel : uint8
{
	Unaware                                  = 0,
	Aware                                    = 1,
	Fan                                      = 2,
	Friend                                   = 3,
	MAX                                      = 4,
};

// Enum GbxGame.EGbxInfamyLevelForAwareness
// NumValues: 0x0004
enum class EGbxInfamyLevelForAwareness : uint8
{
	Low                                      = 0,
	Medium                                   = 1,
	High                                     = 2,
	MAX                                      = 3,
};

// Enum GbxGame.EGbxAwarenessLevelBehavior
// NumValues: 0x0004
enum class EGbxAwarenessLevelBehavior : uint8
{
	NoAwarenessLevel                         = 0,
	InfamyBasedAwarness                      = 1,
	StaticAwareness                          = 2,
	MAX                                      = 3,
};

// Enum GbxGame.EGbxOpportunisticAmbientAudioPlayType
// NumValues: 0x0003
enum class EGbxOpportunisticAmbientAudioPlayType : uint8
{
	Persistent                               = 0,
	Stochastic                               = 1,
	EGbxOpportunisticAmbientAudioPlayType_MAX = 2,
};

// Enum GbxGame.EPerchUserAttributeValueType
// NumValues: 0x0003
enum class EPerchUserAttributeValueType : uint8
{
	ShouldRotateToPerchOrientation           = 0,
	PerchRotation                            = 1,
	EPerchUserAttributeValueType_MAX         = 2,
};

// Enum GbxGame.EGbxProfileProgressVaultPathType
// NumValues: 0x0004
enum class EGbxProfileProgressVaultPathType : uint8
{
	Explicit                                 = 0,
	Indexed                                  = 1,
	IndexedPersistent                        = 2,
	EGbxProfileProgressVaultPathType_MAX     = 3,
};

// Enum GbxGame.EProgressGraphAllowedOperation
// NumValues: 0x000B
enum class EProgressGraphAllowedOperation : uint8
{
	None                                     = 0,
	AddPoint                                 = 1,
	RemovePoint                              = 2,
	ResetPoints                              = 4,
	AddBonusPoint                            = 8,
	Activate                                 = 16,
	Deactivate                               = 32,
	ResetActivations                         = 64,
	CreateUnlockableItems                    = 128,
	All                                      = 255,
	EProgressGraphAllowedOperation_MAX       = 256,
};

// Enum GbxGame.EGbxProgressGraphType
// NumValues: 0x0003
enum class EGbxProgressGraphType : uint8
{
	ProgressPoints                           = 0,
	GroupNodeActivation                      = 1,
	EGbxProgressGraphType_MAX                = 2,
};

// Enum GbxGame.EGbxProgressPointsNodeType
// NumValues: 0x0004
enum class EGbxProgressPointsNodeType : uint32
{
	Spent                                    = 0,
	Bonus                                    = 1,
	Total                                    = 2,
	EGbxProgressPointsNodeType_MAX           = 3,
};

// Enum GbxGame.EGbxProgressPointsPoolOps
// NumValues: 0x0004
enum class EGbxProgressPointsPoolOps : uint32
{
	PointsSpent                              = 0,
	PointsAvailable                          = 1,
	PointsAcquired                           = 2,
	EGbxProgressPointsPoolOps_MAX            = 3,
};

// Enum GbxGame.EGbxProjectedMeshShape
// NumValues: 0x0003
enum class EGbxProjectedMeshShape : uint8
{
	Circle                                   = 0,
	Square                                   = 1,
	EGbxProjectedMeshShape_MAX               = 2,
};

// Enum GbxGame.ERadioScriptType
// NumValues: 0x0009
enum class ERadioScriptType : uint8
{
	Commercial                               = 0,
	DJ_Commentary                            = 1,
	DJ_Greetings                             = 2,
	DJ_Infamy                                = 3,
	DJ_Song_Intro                            = 4,
	DJ_Song_Outro                            = 5,
	Music                                    = 6,
	NUM                                      = 7,
	ERadioScriptType_MAX                     = 8,
};

// Enum GbxGame.EGbxRewardType
// NumValues: 0x0003
enum class EGbxRewardType : uint8
{
	RewardDef                                = 0,
	Inline                                   = 1,
	EGbxRewardType_MAX                       = 2,
};

// Enum GbxGame.EGbxRotationTargetLayer
// NumValues: 0x0008
enum class EGbxRotationTargetLayer : uint8
{
	Sequencer                                = 0,
	AnimNotify                               = 1,
	Scripting                                = 2,
	Brain                                    = 3,
	Navigation                               = 4,
	Default                                  = 5,
	Count                                    = 6,
	EGbxRotationTargetLayer_MAX              = 7,
};

// Enum GbxGame.EGbxRotationChannelState
// NumValues: 0x0004
enum class EGbxRotationChannelState : uint8
{
	Disabled                                 = 0,
	Paused                                   = 1,
	Active                                   = 2,
	EGbxRotationChannelState_MAX             = 3,
};

// Enum GbxGame.EGbxRotationChannelType
// NumValues: 0x0004
enum class EGbxRotationChannelType : uint8
{
	Body                                     = 0,
	Aim                                      = 1,
	Head                                     = 2,
	Max                                      = 3,
};

// Enum GbxGame.EGbxRotationTargetPreviewBehavior
// NumValues: 0x0006
enum class EGbxRotationTargetPreviewBehavior : uint8
{
	None                                     = 0,
	Manual                                   = 1,
	Orbit                                    = 2,
	Camera                                   = 3,
	PingPong                                 = 4,
	EGbxRotationTargetPreviewBehavior_MAX    = 5,
};

// Enum GbxGame.EGbxRotationValueResolverValue
// NumValues: 0x000A
enum class EGbxRotationValueResolverValue : uint32
{
	CurrentRotation                          = 0,
	DesiredRotation                          = 1,
	OffsetRotation                           = 2,
	CurrentDirection                         = 3,
	DesiredDirection                         = 4,
	PivotLocation                            = 5,
	TargetLocation                           = 6,
	CurrentRotationLocal                     = 7,
	ChannelAlpha                             = 8,
	MAX                                      = 9,
};

// Enum GbxGame.EGbxRotationValueResolverSubValue
// NumValues: 0x0008
enum class EGbxRotationValueResolverSubValue : uint32
{
	None                                     = 0,
	X                                        = 1,
	Y                                        = 2,
	Z                                        = 3,
	Pitch                                    = 4,
	Yaw                                      = 5,
	Roll                                     = 6,
	MAX                                      = 7,
};

// Enum GbxGame.EGbxSceneViewerCaptureProjectionType
// NumValues: 0x0003
enum class EGbxSceneViewerCaptureProjectionType : uint32
{
	DefaultUnreal                            = 0,
	FixedHeight                              = 1,
	EGbxSceneViewerCaptureProjectionType_MAX = 2,
};

// Enum GbxGame.EGbxSceneViewerViewMode
// NumValues: 0x0004
enum class EGbxSceneViewerViewMode : uint8
{
	None                                     = 0,
	RenderToTexture                          = 1,
	RenderToPlayerViewport                   = 2,
	EGbxSceneViewerViewMode_MAX              = 3,
};

// Enum GbxGame.EGbxNotifySectionDirection
// NumValues: 0x0004
enum class EGbxNotifySectionDirection : uint8
{
	ForwardAndReverse                        = 0,
	Forward                                  = 1,
	Reverse                                  = 2,
	EGbxNotifySectionDirection_MAX           = 3,
};

// Enum GbxGame.EGGbxShapeComponentType
// NumValues: 0x0004
enum class EGGbxShapeComponentType : uint32
{
	Box                                      = 0,
	Capsule                                  = 1,
	Sphere                                   = 2,
	EGGbxShapeComponentType_MAX              = 3,
};

// Enum GbxGame.ESimpleMotionType
// NumValues: 0x0006
enum class ESimpleMotionType : uint8
{
	None                                     = 0,
	ScaleByValue                             = 1,
	Interpolate                              = 2,
	Loop                                     = 3,
	Alternate                                = 4,
	ESimpleMotionType_MAX                    = 5,
};

// Enum GbxGame.EGbxSkillAnimTrickSource
// NumValues: 0x0003
enum class EGbxSkillAnimTrickSource : uint8
{
	Trick                                    = 0,
	Resolver                                 = 1,
	EGbxSkillAnimTrickSource_MAX             = 2,
};

// Enum GbxGame.EGbxSkillActionHandlerResult
// NumValues: 0x0003
enum class EGbxSkillActionHandlerResult : uint8
{
	Success                                  = 0,
	Failure                                  = 1,
	EGbxSkillActionHandlerResult_MAX         = 2,
};

// Enum GbxGame.EGbxSkillActionHandlerState
// NumValues: 0x0006
enum class EGbxSkillActionHandlerState : uint8
{
	Idle                                     = 0,
	Preparing                                = 1,
	Ready                                    = 2,
	Active                                   = 3,
	Failed                                   = 4,
	EGbxSkillActionHandlerState_MAX          = 5,
};

// Enum GbxGame.EGbxSkillActionExecType
// NumValues: 0x0005
enum class EGbxSkillActionExecType : uint8
{
	None                                     = 0,
	Primary                                  = 1,
	Secondary                                = 2,
	Tertiary                                 = 3,
	EGbxSkillActionExecType_MAX              = 4,
};

// Enum GbxGame.EGbxSkillActionExceptionType
// NumValues: 0x0005
enum class EGbxSkillActionExceptionType : uint8
{
	None                                     = 0,
	Failed                                   = 1,
	Aborted                                  = 2,
	Filtered                                 = 3,
	EGbxSkillActionExceptionType_MAX         = 4,
};

// Enum GbxGame.EGbxSkillRNGType
// NumValues: 0x0005
enum class EGbxSkillRNGType : uint8
{
	None                                     = 0,
	Rand                                     = 1,
	FRand                                    = 2,
	Ranged                                   = 3,
	EGbxSkillRNGType_MAX                     = 4,
};

// Enum GbxGame.EGbxSkillActionSequenceDataExecType
// NumValues: 0x0004
enum class EGbxSkillActionSequenceDataExecType : uint8
{
	None                                     = 0,
	Goto                                     = 1,
	Switch                                   = 2,
	EGbxSkillActionSequenceDataExecType_MAX  = 3,
};

// Enum GbxGame.EBranchingTrickStartMode
// NumValues: 0x0003
enum class EBranchingTrickStartMode : uint8
{
	OnStart                                  = 0,
	OnAnimNotify                             = 1,
	EBranchingTrickStartMode_MAX             = 2,
};

// Enum GbxGame.EGbxSkillActionControlleMoveTrickType
// NumValues: 0x0003
enum class EGbxSkillActionControlleMoveTrickType : uint8
{
	Looping                                  = 0,
	NonLooping                               = 1,
	EGbxSkillActionControlleMoveTrickType_MAX = 2,
};

// Enum GbxGame.EGbxSkillActivationMode
// NumValues: 0x0004
enum class EGbxSkillActivationMode : uint8
{
	AlwaysActive                             = 0,
	State                                    = 1,
	StateInverted                            = 2,
	EGbxSkillActivationMode_MAX              = 3,
};

// Enum GbxGame.EGbxFilteredEventExec
// NumValues: 0x0003
enum class EGbxFilteredEventExec : uint8
{
	Filtered                                 = 0,
	Unfiltered                               = 1,
	EGbxFilteredEventExec_MAX                = 2,
};

// Enum GbxGame.EGbxSkillComponent_AttributeEffect_ValueContextSource
// NumValues: 0x0003
enum class EGbxSkillComponent_AttributeEffect_ValueContextSource : uint8
{
	Actor                                    = 0,
	Skill                                    = 1,
	EGbxSkillComponent_AttributeEffect_MAX   = 2,
};

// Enum GbxGame.EGbxSkillComponentDamageModifierMode
// NumValues: 0x0003
enum class EGbxSkillComponentDamageModifierMode : uint8
{
	DamageCauser                             = 0,
	Damageable                               = 1,
	EGbxSkillComponentDamageModifierMode_MAX = 2,
};

// Enum GbxGame.EGbxSkillComponentDelegate_Damage_EventType
// NumValues: 0x0008
enum class EGbxSkillComponentDelegate_Damage_EventType : uint8
{
	CausedDamage                             = 0,
	CausedHealing                            = 1,
	CausedDeath                              = 2,
	CausedInjury                             = 3,
	TakenDamage                              = 4,
	TakenHealing                             = 5,
	HitFriendly                              = 6,
	EGbxSkillComponentDelegate_Damage_MAX    = 7,
};

// Enum GbxGame.EGbxSkillResourcePoolEvent
// NumValues: 0x000C
enum class EGbxSkillResourcePoolEvent : uint8
{
	None                                     = 0,
	NowDepleted                              = 1,
	NowNotDepleted                           = 2,
	NowFilled                                = 3,
	NowNotFilled                             = 4,
	NowRegenerating                          = 5,
	NowNotRegenerating                       = 6,
	NowDepleting                             = 7,
	NowNotDepleting                          = 8,
	NowIdle                                  = 9,
	MinMaxChanged                            = 10,
	EGbxSkillResourcePoolEvent_MAX           = 11,
};

// Enum GbxGame.EResourcePoolComponentEvent
// NumValues: 0x0005
enum class EResourcePoolComponentEvent : uint8
{
	OnDepleted                               = 0,
	OnNotDepleted                            = 1,
	OnFilled                                 = 2,
	OnNotFilled                              = 3,
	EResourcePoolComponentEvent_MAX          = 4,
};

// Enum GbxGame.EGbxSkillComponentTimerAction
// NumValues: 0x0005
enum class EGbxSkillComponentTimerAction : uint8
{
	Start                                    = 0,
	Stop                                     = 1,
	Pause                                    = 2,
	Resume                                   = 3,
	EGbxSkillComponentTimerAction_MAX        = 4,
};

// Enum GbxGame.EGbxSkillComponentTimerState
// NumValues: 0x0004
enum class EGbxSkillComponentTimerState : uint8
{
	NotRunning                               = 0,
	Active                                   = 1,
	Paused                                   = 2,
	EGbxSkillComponentTimerState_MAX         = 3,
};

// Enum GbxGame.EGbxSkillCompValueType
// NumValues: 0x0005
enum class EGbxSkillCompValueType : uint8
{
	GbxValue                                 = 0,
	SkillParam                               = 1,
	DataTable                                = 2,
	FactAddress                              = 3,
	EGbxSkillCompValueType_MAX               = 4,
};

// Enum GbxGame.EGbxSkillDelegateDamageFilterMode
// NumValues: 0x0003
enum class EGbxSkillDelegateDamageFilterMode : uint8
{
	MustMatch                                = 0,
	MustNotMatch                             = 1,
	EGbxSkillDelegateDamageFilterMode_MAX    = 2,
};

// Enum GbxGame.EGbxSkillNetType
// NumValues: 0x0004
enum class EGbxSkillNetType : uint8
{
	None                                     = 0,
	OwnerOnly                                = 1,
	Everyone                                 = 2,
	EGbxSkillNetType_MAX                     = 3,
};

// Enum GbxGame.ESkillConditionGbxPlayerMovementTypes
// NumValues: 0x0005
enum class ESkillConditionGbxPlayerMovementTypes : uint8
{
	None                                     = 0,
	Sprinting                                = 1,
	Sliding                                  = 2,
	Crouching                                = 4,
	ESkillConditionGbxPlayerMovementTypes_MAX = 5,
};

// Enum GbxGame.EGbxSkillStateConditionPossessionMode
// NumValues: 0x0005
enum class EGbxSkillStateConditionPossessionMode : uint8
{
	Unpossessed                              = 0,
	Possessed                                = 1,
	PossessedByPlayer                        = 2,
	PossessedByNonPlayer                     = 3,
	EGbxSkillStateConditionPossessionMode_MAX = 4,
};

// Enum GbxGame.EGbxSkillStateCondition_ResourcePool_Mode
// NumValues: 0x0006
enum class EGbxSkillStateCondition_ResourcePool_Mode : uint8
{
	State                                    = 0,
	GreaterThan                              = 1,
	GreaterThanEqual                         = 2,
	LessThan                                 = 3,
	LessThanEqual                            = 4,
	EGbxSkillStateCondition_ResourcePool_MAX = 5,
};

// Enum GbxGame.EGbxSkillStateMachineAttrContext
// NumValues: 0x0003
enum class EGbxSkillStateMachineAttrContext : uint8
{
	Actor                                    = 0,
	Skill                                    = 1,
	EGbxSkillStateMachineAttrContext_MAX     = 2,
};

// Enum GbxGame.EGbxSkillStateMachineAction_MachineOp
// NumValues: 0x0004
enum class EGbxSkillStateMachineAction_MachineOp : uint8
{
	Advance                                  = 0,
	Stop                                     = 1,
	Reset                                    = 2,
	EGbxSkillStateMachineAction_MAX          = 3,
};

// Enum GbxGame.EGbxSkillStateMachineAction_RegisterOp
// NumValues: 0x0004
enum class EGbxSkillStateMachineAction_RegisterOp : uint8
{
	Push                                     = 0,
	Pop                                      = 1,
	Clear                                    = 2,
	EGbxSkillStateMachineAction_MAX          = 3,
};

// Enum GbxGame.EGbxSkillStateMachineAction_ResourcePool
// NumValues: 0x0005
enum class EGbxSkillStateMachineAction_ResourcePool : uint8
{
	Empty                                    = 0,
	Fill                                     = 1,
	CustomPct                                = 2,
	CustomVal                                = 3,
	EGbxSkillStateMachineAction_MAX          = 4,
};

// Enum GbxGame.EGbxSkillStateMachineMode
// NumValues: 0x0003
enum class EGbxSkillStateMachineMode : uint8
{
	Primary                                  = 0,
	Child                                    = 1,
	EGbxSkillStateMachineMode_MAX            = 2,
};

// Enum GbxGame.ESkillAssuranceTimeout_TimerMode
// NumValues: 0x0003
enum class ESkillAssuranceTimeout_TimerMode : uint8
{
	RunTimerWhenFalse                        = 0,
	RunTimerWhenTrue                         = 1,
	ESkillAssuranceTimeout_MAX               = 2,
};

// Enum GbxGame.EGbxSkillStateMachineRegisterPolicy
// NumValues: 0x0003
enum class EGbxSkillStateMachineRegisterPolicy : uint8
{
	None                                     = 0,
	Reset                                    = 1,
	EGbxSkillStateMachineRegisterPolicy_MAX  = 2,
};

// Enum GbxGame.EGbxSkillStateMachineRegisterOp
// NumValues: 0x0004
enum class EGbxSkillStateMachineRegisterOp : uint8
{
	Push                                     = 0,
	Pop                                      = 1,
	Clear                                    = 2,
	EGbxSkillStateMachineRegisterOp_MAX      = 3,
};

// Enum GbxGame.EGbxSkillStateOp
// NumValues: 0x0003
enum class EGbxSkillStateOp : uint8
{
	Enabled                                  = 0,
	Disabled                                 = 1,
	EGbxSkillStateOp_MAX                     = 2,
};

// Enum GbxGame.EGbxSkillEffectOp
// NumValues: 0x0003
enum class EGbxSkillEffectOp : uint8
{
	Enabled                                  = 0,
	Disabled                                 = 1,
	EGbxSkillEffectOp_MAX                    = 2,
};

// Enum GbxGame.EGbxSkillGeneralOp
// NumValues: 0x0003
enum class EGbxSkillGeneralOp : uint8
{
	Succeeded                                = 0,
	Failed                                   = 1,
	EGbxSkillGeneralOp_MAX                   = 2,
};

// Enum GbxGame.EGbxSkillGeneralStartEndOp
// NumValues: 0x0003
enum class EGbxSkillGeneralStartEndOp : uint8
{
	Started                                  = 0,
	Ended                                    = 1,
	EGbxSkillGeneralStartEndOp_MAX           = 2,
};

// Enum GbxGame.EGbxSkillGeneralAddRemoveOp
// NumValues: 0x0003
enum class EGbxSkillGeneralAddRemoveOp : uint8
{
	Add                                      = 0,
	Remove                                   = 1,
	EGbxSkillGeneralAddRemoveOp_MAX          = 2,
};

// Enum GbxGame.EGbxSkillGeneralStartEndResult
// NumValues: 0x0004
enum class EGbxSkillGeneralStartEndResult : uint8
{
	FailedToStart                            = 0,
	Completed                                = 1,
	Aborted                                  = 2,
	EGbxSkillGeneralStartEndResult_MAX       = 3,
};

// Enum GbxGame.EGbxSkillAddRemoveOp
// NumValues: 0x0003
enum class EGbxSkillAddRemoveOp : uint8
{
	Added                                    = 0,
	Removed                                  = 1,
	EGbxSkillAddRemoveOp_MAX                 = 2,
};

// Enum GbxGame.EGbxSkillGeneralYesNo
// NumValues: 0x0003
enum class EGbxSkillGeneralYesNo : uint8
{
	Yes                                      = 0,
	No                                       = 1,
	EGbxSkillGeneralYesNo_MAX                = 2,
};

// Enum GbxGame.EGbxSkillMessageCallType
// NumValues: 0x0004
enum class EGbxSkillMessageCallType : uint8
{
	None                                     = 0,
	SkillOwner                               = 1,
	SkillReference                           = 2,
	EGbxSkillMessageCallType_MAX             = 3,
};

// Enum GbxGame.EGbxSkillParamContextType
// NumValues: 0x0004
enum class EGbxSkillParamContextType : uint8
{
	Skill                                    = 0,
	SkillDef                                 = 1,
	Global                                   = 2,
	EGbxSkillParamContextType_MAX            = 3,
};

// Enum GbxGame.EGbxSkillOwnedResourceDetachReason
// NumValues: 0x0006
enum class EGbxSkillOwnedResourceDetachReason : uint8
{
	Unknown                                  = 0,
	Requested                                = 1,
	ManagingStateDisabled                    = 2,
	AssetDestroyed                           = 3,
	SkillShuttingDown                        = 4,
	EGbxSkillOwnedResourceDetachReason_MAX   = 5,
};

// Enum GbxGame.EGbxSkillOwnedResourceState
// NumValues: 0x0004
enum class EGbxSkillOwnedResourceState : uint8
{
	Detached                                 = 0,
	Attached                                 = 1,
	Unattached                               = 2,
	EGbxSkillOwnedResourceState_MAX          = 3,
};

// Enum GbxGame.EGbxSkillComparisonOp
// NumValues: 0x0007
enum class EGbxSkillComparisonOp : uint8
{
	Equal                                    = 0,
	NotEq                                    = 1,
	Lt                                       = 2,
	LtEq                                     = 3,
	Gt                                       = 4,
	GtEq                                     = 5,
	EGbxSkillComparisonOp_MAX                = 6,
};

// Enum GbxGame.EGbxSkillEventNetFilter
// NumValues: 0x0006
enum class EGbxSkillEventNetFilter : uint8
{
	Default                                  = 0,
	Server                                   = 1,
	Client                                   = 2,
	ServerLocal                              = 3,
	Local                                    = 4,
	EGbxSkillEventNetFilter_MAX              = 5,
};

// Enum GbxGame.EGbxSkillEventRepType
// NumValues: 0x0005
enum class EGbxSkillEventRepType : uint8
{
	None                                     = 0,
	Multicast                                = 1,
	Client                                   = 2,
	Server                                   = 3,
	EGbxSkillEventRepType_MAX                = 4,
};

// Enum GbxGame.EGbxSkillParamSpace
// NumValues: 0x0003
enum class EGbxSkillParamSpace : uint8
{
	Local                                    = 0,
	Global                                   = 1,
	EGbxSkillParamSpace_MAX                  = 2,
};

// Enum GbxGame.EGbxSkillStateMachineStateOp
// NumValues: 0x0007
enum class EGbxSkillStateMachineStateOp : uint8
{
	Add                                      = 0,
	AddScoped                                = 1,
	Remove                                   = 2,
	Added                                    = 3,
	AddedScoped                              = 4,
	Removed                                  = 5,
	EGbxSkillStateMachineStateOp_MAX         = 6,
};

// Enum GbxGame.ESkillStateScriptExec
// NumValues: 0x0003
enum class ESkillStateScriptExec : uint8
{
	Enabled                                  = 0,
	Disabled                                 = 1,
	ESkillStateScriptExec_MAX                = 2,
};

// Enum GbxGame.EGbxSlopeWarpingLOD
// NumValues: 0x0005
enum class EGbxSlopeWarpingLOD : uint8
{
	High                                     = 0,
	Medium                                   = 1,
	Low                                      = 2,
	None                                     = 3,
	EGbxSlopeWarpingLOD_MAX                  = 4,
};

// Enum GbxGame.EGbxStatusEffectModifierFlag
// NumValues: 0x0003
enum class EGbxStatusEffectModifierFlag : uint8
{
	Const                                    = 1,
	Absolute                                 = 2,
	EGbxStatusEffectModifierFlag_MAX         = 3,
};

// Enum GbxGame.EGbxStatusEffectDOTSelectionCriteria
// NumValues: 0x0007
enum class EGbxStatusEffectDOTSelectionCriteria : uint8
{
	ChooseNewest                             = 0,
	ChooseOldest                             = 1,
	ChooseLeastTime                          = 2,
	ChooseMostTime                           = 3,
	ChooseLeastDPS                           = 4,
	ChooseMostDPS                            = 5,
	EGbxStatusEffectDOTSelectionCriteria_MAX = 6,
};

// Enum GbxGame.EGbxStatusEffectDOTReplaceCriteria
// NumValues: 0x0004
enum class EGbxStatusEffectDOTReplaceCriteria : uint8
{
	ChooseSpec                               = 0,
	ChooseMostDPS                            = 1,
	ChooseLeastDPS                           = 2,
	EGbxStatusEffectDOTReplaceCriteria_MAX   = 3,
};

// Enum GbxGame.EGbxStatusEffectChargePoolState
// NumValues: 0x0004
enum class EGbxStatusEffectChargePoolState : uint8
{
	NoCharge                                 = 0,
	Sustained                                = 1,
	Decaying                                 = 2,
	EGbxStatusEffectChargePoolState_MAX      = 3,
};

// Enum GbxGame.EGbxStatusEffectPresentationChannelPrecision
// NumValues: 0x0004
enum class EGbxStatusEffectPresentationChannelPrecision : uint8
{
	Low                                      = 0,
	Normal                                   = 1,
	High                                     = 2,
	EGbxStatusEffectPresentationChannelPrecision_MAX = 3,
};

// Enum GbxGame.EGbxStatusEffectScriptType
// NumValues: 0x0004
enum class EGbxStatusEffectScriptType : uint8
{
	None                                     = 0,
	InternalConst                            = 1,
	InternalInstanced                        = 2,
	MAX                                      = 3,
};

// Enum GbxGame.EGetStatusEffectParamResultPins
// NumValues: 0x0003
enum class EGetStatusEffectParamResultPins : uint8
{
	Set                                      = 0,
	UNSET                                    = 1,
	EGetStatusEffectParamResultPins_MAX      = 2,
};

// Enum GbxGame.EGbxStatusEffectPopAllFlags
// NumValues: 0x0003
enum class EGbxStatusEffectPopAllFlags : uint8
{
	None                                     = 0,
	ClearResources                           = 1,
	EGbxStatusEffectPopAllFlags_MAX          = 2,
};

// Enum GbxGame.EStatusEffectRuleLifetimeRule
// NumValues: 0x0003
enum class EStatusEffectRuleLifetimeRule : uint8
{
	Forever                                  = 0,
	Timed                                    = 1,
	EStatusEffectRuleLifetimeRule_MAX        = 2,
};

// Enum GbxGame.EGbxStatusEffectNotifyEventType
// NumValues: 0x0004
enum class EGbxStatusEffectNotifyEventType : uint8
{
	None                                     = 0,
	Received                                 = 1,
	Caused                                   = 2,
	EGbxStatusEffectNotifyEventType_MAX      = 3,
};

// Enum GbxGame.EGbxStatusEffectValComparisonType
// NumValues: 0x0006
enum class EGbxStatusEffectValComparisonType : uint8
{
	LessThan                                 = 0,
	LessThanEquals                           = 1,
	Equals                                   = 2,
	GreaterThan                              = 3,
	GreaterThanEquals                        = 4,
	EGbxStatusEffectValComparisonType_MAX    = 5,
};

// Enum GbxGame.EGbxTrickAnimNotifyType
// NumValues: 0x0005
enum class EGbxTrickAnimNotifyType : uint8
{
	Notify                                   = 0,
	StateBegin                               = 1,
	StateSuccess                             = 2,
	StateInterrupt                           = 3,
	EGbxTrickAnimNotifyType_MAX              = 4,
};

// Enum GbxGame.EGbxTrickNetMode
// NumValues: 0x0005
enum class EGbxTrickNetMode : uint8
{
	Server                                   = 0,
	Local                                    = 1,
	Owner                                    = 2,
	OwnerLocal                               = 3,
	EGbxTrickNetMode_MAX                     = 4,
};

// Enum GbxGame.EGbxTrickRootMotion
// NumValues: 0x0005
enum class EGbxTrickRootMotion : uint8
{
	None                                     = 0,
	WithPhysics                              = 1,
	TranslationNoRotation                    = 2,
	Full                                     = 3,
	EGbxTrickRootMotion_MAX                  = 4,
};

// Enum GbxGame.EGbxTrickRootRotation
// NumValues: 0x0005
enum class EGbxTrickRootRotation : uint8
{
	Default                                  = 0,
	OnlyPhysics                              = 1,
	OnlyAnimation                            = 2,
	All                                      = 3,
	EGbxTrickRootRotation_MAX                = 4,
};

// Enum GbxGame.EGbxTrickNavType
// NumValues: 0x0004
enum class EGbxTrickNavType : uint8
{
	Walking                                  = 0,
	Flying                                   = 1,
	Ghost                                    = 2,
	MAX                                      = 3,
};

// Enum GbxGame.EGbxTrickAudioType
// NumValues: 0x0004
enum class EGbxTrickAudioType : uint8
{
	StandardEmitter                          = 0,
	SpawnAttached                            = 1,
	SpawnInWorld                             = 2,
	EGbxTrickAudioType_MAX                   = 3,
};

// Enum GbxGame.EGbxTrickAudioBehavior
// NumValues: 0x0003
enum class EGbxTrickAudioBehavior : uint8
{
	StopOnEnd                                = 0,
	FireAndForget                            = 1,
	EGbxTrickAudioBehavior_MAX               = 2,
};

// Enum GbxGame.EGbxTrickRefType
// NumValues: 0x0003
enum class EGbxTrickRefType : uint32
{
	Asset                                    = 0,
	Tag                                      = 1,
	EGbxTrickRefType_MAX                     = 2,
};

// Enum GbxGame.EGbxTrickScriptType
// NumValues: 0x0006
enum class EGbxTrickScriptType : uint8
{
	None                                     = 0,
	Shared                                   = 1,
	InternalConst                            = 2,
	InternalInstanced                        = 3,
	ActorScript                              = 4,
	MAX                                      = 5,
};

// Enum GbxGame.EGbxTrickAnimNotifyState
// NumValues: 0x0004
enum class EGbxTrickAnimNotifyState : uint8
{
	Begin                                    = 0,
	Success                                  = 1,
	Interrupt                                = 2,
	EGbxTrickAnimNotifyState_MAX             = 3,
};

// Enum GbxGame.EGbxTrickLatentState
// NumValues: 0x0003
enum class EGbxTrickLatentState : uint8
{
	Start                                    = 0,
	Complete                                 = 1,
	EGbxTrickLatentState_MAX                 = 2,
};

// Enum GbxGame.EGbxTrickBlendSpaceSource
// NumValues: 0x0005
enum class EGbxTrickBlendSpaceSource : uint32
{
	None                                     = 0,
	Attribute                                = 1,
	TrickParameter                           = 2,
	Blackboard                               = 3,
	Max                                      = 4,
};

// Enum GbxGame.EGbxTrickBlendSpaceType
// NumValues: 0x0003
enum class EGbxTrickBlendSpaceType : uint32
{
	OneDimensional                           = 0,
	TwoDimensional                           = 1,
	Max                                      = 2,
};

// Enum GbxGame.EGbxTrickAnimDirection
// NumValues: 0x0005
enum class EGbxTrickAnimDirection : uint8
{
	Forward                                  = 0,
	Backward                                 = 1,
	Left                                     = 2,
	Right                                    = 3,
	Max                                      = 4,
};

// Enum GbxGame.EGbxTrickDodgeDirection
// NumValues: 0x0005
enum class EGbxTrickDodgeDirection : uint8
{
	IdleLeft                                 = 0,
	IdleRight                                = 1,
	MovingLeft                               = 2,
	MovingRight                              = 3,
	Max                                      = 4,
};

// Enum GbxGame.ETrickLoopType
// NumValues: 0x0006
enum class ETrickLoopType : uint8
{
	Time                                     = 0,
	Count                                    = 1,
	Condition                                = 2,
	Forever                                  = 3,
	Internal                                 = 4,
	ETrickLoopType_MAX                       = 5,
};

// Enum GbxGame.ETrickLoopCondition
// NumValues: 0x0003
enum class ETrickLoopCondition : uint8
{
	LoopWhileFalse                           = 0,
	LoopWhileTrue                            = 1,
	ETrickLoopCondition_MAX                  = 2,
};

// Enum GbxGame.EPerchVerticalInterp
// NumValues: 0x0003
enum class EPerchVerticalInterp : uint8
{
	InterpToSlot                             = 0,
	InterpToGround                           = 1,
	EPerchVerticalInterp_MAX                 = 2,
};

// Enum GbxGame.ERagdollBehaviorCategoryType
// NumValues: 0x0004
enum class ERagdollBehaviorCategoryType : uint32
{
	LiveAuto                                 = 0,
	LiveManual                               = 1,
	Dead                                     = 2,
	ERagdollBehaviorCategoryType_MAX         = 3,
};

// Enum GbxGame.EItemComparisonResult
// NumValues: 0x0008
enum class EItemComparisonResult : uint8
{
	NONE                                     = 0,
	NOCOMPARE                                = 1,
	EQUAL                                    = 2,
	BETTER                                   = 3,
	MUCH_BETTER                              = 4,
	WORSE                                    = 5,
	MUCH_WORSE                               = 6,
	EItemComparisonResult_MAX                = 7,
};

// Enum GbxGame.EUIStatGroupOrder
// NumValues: 0x000B
enum class EUIStatGroupOrder : uint8
{
	First                                    = 0,
	Second                                   = 1,
	Third                                    = 2,
	Fourth                                   = 3,
	Fifth                                    = 4,
	Sixth                                    = 5,
	Seventh                                  = 6,
	Eighth                                   = 7,
	Ninth                                    = 8,
	Tenth                                    = 9,
	EUIStatGroupOrder_MAX                    = 10,
};

// Enum GbxGame.EUILongDescriptionBehavior
// NumValues: 0x0004
enum class EUILongDescriptionBehavior : uint8
{
	ReplaceValue                             = 0,
	Append                                   = 1,
	AppendOnNewLine                          = 2,
	EUILongDescriptionBehavior_MAX           = 3,
};

// Enum GbxGame.EGoreModifiers
// NumValues: 0x0004
enum class EGoreModifiers : uint8
{
	None                                     = 0,
	DisableDialog                            = 1,
	ForceRagdoll                             = 2,
	EGoreModifiers_MAX                       = 3,
};

// Enum GbxGame.EGoreType
// NumValues: 0x0004
enum class EGoreType : uint8
{
	DamageEffects                            = 0,
	GoreRegion                               = 1,
	GibTrick                                 = 2,
	EGoreType_MAX                            = 3,
};

// Enum GbxGame.EGoreFlags
// NumValues: 0x000A
enum class EGoreFlags : uint32
{
	None                                     = 0,
	StumpMesh                                = 1,
	LimbMesh                                 = 2,
	StumpParticles                           = 4,
	SplatterImpact                           = 8,
	BounceImpact                             = 16,
	ApplyBoneMod                             = 32,
	StumpDecals                              = 64,
	All                                      = 255,
	EGoreFlags_MAX                           = 256,
};

// Enum GbxGame.EProjectileGpsContextDataType
// NumValues: 0x0004
enum class EProjectileGpsContextDataType : uint8
{
	Location                                 = 0,
	Rotation                                 = 1,
	Actor                                    = 2,
	MAX                                      = 3,
};

// Enum GbxGame.EGpsGeneratorSettings_Characters_PlayerTypeFilter
// NumValues: 0x0003
enum class EGpsGeneratorSettings_Characters_PlayerTypeFilter : uint32
{
	IgnorePlayers                            = 0,
	IgnoreNonPlayers                         = 1,
	EGpsGeneratorSettings_Characters_MAX     = 2,
};

// Enum GbxGame.EGpsGeneratorSettings_Characters_ControllerTypeFilter
// NumValues: 0x0003
enum class EGpsGeneratorSettings_Characters_ControllerTypeFilter : uint32
{
	IgnoreHumans                             = 0,
	IgnoreAI                                 = 1,
	EGpsGeneratorSettings_Characters_MAX     = 2,
};

// Enum GbxGame.EGpsGeneratorSettings_Characters_DeathFilter
// NumValues: 0x0003
enum class EGpsGeneratorSettings_Characters_DeathFilter : uint32
{
	IgnoreDead                               = 0,
	IgnoreAlive                              = 1,
	EGpsGeneratorSettings_Characters_MAX     = 2,
};

// Enum GbxGame.EGpsGeneratorSettings_InventoryPickups_InteractionTypeFilter
// NumValues: 0x0003
enum class EGpsGeneratorSettings_InventoryPickups_InteractionTypeFilter : uint32
{
	UseOnly                                  = 0,
	TouchOnly                                = 1,
	EGpsGeneratorSettings_InventoryPickups_MAX = 2,
};

// Enum GbxGame.EPerchSearchArea
// NumValues: 0x0003
enum class EPerchSearchArea : uint8
{
	Radius                                   = 0,
	Territory                                = 1,
	EPerchSearchArea_MAX                     = 2,
};

// Enum GbxGame.EGpsGeneratorSettings_Waypoints_WaypointTypeFilter
// NumValues: 0x0006
enum class EGpsGeneratorSettings_Waypoints_WaypointTypeFilter : uint8
{
	None                                     = 0,
	Default                                  = 1,
	MissionGiver                             = 2,
	TravelStation                            = 4,
	All                                      = 7,
	EGpsGeneratorSettings_Waypoints_MAX      = 8,
};

// Enum GbxGame.EGpsValueScore
// NumValues: 0x0005
enum class EGpsValueScore : uint32
{
	PreferLow                                = 0,
	PreferHigh                               = 1,
	PreferMid                                = 2,
	PreferCustom                             = 3,
	EGpsValueScore_MAX                       = 4,
};

// Enum GbxGame.EGpsTest_Death
// NumValues: 0x0003
enum class EGpsTest_Death : uint32
{
	PreferAlive                              = 0,
	PreferDead                               = 1,
	EGpsTest_MAX                             = 2,
};

// Enum GbxGame.EHazardPrimitiveCollectionType
// NumValues: 0x0005
enum class EHazardPrimitiveCollectionType : uint8
{
	Disabled                                 = 0,
	Custom                                   = 1,
	Collision                                = 2,
	All                                      = 3,
	EHazardPrimitiveCollectionType_MAX       = 4,
};

// Enum GbxGame.EHazardInteractionMode
// NumValues: 0x0004
enum class EHazardInteractionMode : uint8
{
	Default                                  = 0,
	OnlyTransmit                             = 1,
	OnlyReceive                              = 2,
	EHazardInteractionMode_MAX               = 3,
};

// Enum GbxGame.EHazardEffectSizeSourceType
// NumValues: 0x0004
enum class EHazardEffectSizeSourceType : uint8
{
	Default                                  = 0,
	Damage                                   = 1,
	Interaction                              = 2,
	EHazardEffectSizeSourceType_MAX          = 3,
};

// Enum GbxGame.EHazardEffectSizeComputationType
// NumValues: 0x0003
enum class EHazardEffectSizeComputationType : uint8
{
	BoundsSphereRadius                       = 0,
	BoundsBoxExtentMaxAxis                   = 1,
	EHazardEffectSizeComputationType_MAX     = 2,
};

// Enum GbxGame.EHazardInteractionSourceMode
// NumValues: 0x0005
enum class EHazardInteractionSourceMode : uint8
{
	Default                                  = 0,
	Always                                   = 1,
	Never                                    = 2,
	OnlyThroughBlueprint                     = 3,
	EHazardInteractionSourceMode_MAX         = 4,
};

// Enum GbxGame.EImpactEffectUsage
// NumValues: 0x0003
enum class EImpactEffectUsage : uint8
{
	Default                                  = 0,
	Footstep                                 = 1,
	EImpactEffectUsage_MAX                   = 2,
};

// Enum GbxGame.EGbxStatusEffectDriverInstanceStackStrategy_Capped_SelectionPolicy
// NumValues: 0x0005
enum class EGbxStatusEffectDriverInstanceStackStrategy_Capped_SelectionPolicy : uint8
{
	ShortestDuration                         = 0,
	LongestDuration                          = 1,
	Oldest                                   = 2,
	Newest                                   = 3,
	EGbxStatusEffectDriverInstanceStackStrategy_Capped_MAX = 4,
};

// Enum GbxGame.EGbxStatusEffectDriverInstanceStackStrategy_Capped_ReplacementPolicy
// NumValues: 0x0004
enum class EGbxStatusEffectDriverInstanceStackStrategy_Capped_ReplacementPolicy : uint8
{
	ChooseSpec                               = 0,
	ChooseLongerDuration                     = 1,
	ChooseShorterDuration                    = 2,
	EGbxStatusEffectDriverInstanceStackStrategy_Capped_MAX = 3,
};

// Enum GbxGame.EInventoryAspectSelectionPriority
// NumValues: 0x0007
enum class EInventoryAspectSelectionPriority : uint8
{
	Default                                  = 0,
	Low                                      = 1,
	Medium                                   = 2,
	High                                     = 3,
	Ultra                                    = 4,
	Legendary                                = 5,
	EInventoryAspectSelectionPriority_MAX    = 6,
};

// Enum GbxGame.EInventoryControlInputHandler
// NumValues: 0x0003
enum class EInventoryControlInputHandler : uint8
{
	None                                     = 0,
	Set                                      = 1,
	EInventoryControlInputHandler_MAX        = 2,
};

// Enum GbxGame.EInventoryBodyVisibilityType
// NumValues: 0x0004
enum class EInventoryBodyVisibilityType : uint8
{
	Both                                     = 0,
	FirstPerson                              = 1,
	ThirdPerson                              = 2,
	EInventoryBodyVisibilityType_MAX         = 3,
};

// Enum GbxGame.EInventoryBodyTextureMipsSetting
// NumValues: 0x0004
enum class EInventoryBodyTextureMipsSetting : uint8
{
	Default                                  = 0,
	High                                     = 1,
	VeryHigh                                 = 2,
	EInventoryBodyTextureMipsSetting_MAX     = 3,
};

// Enum GbxGame.EInventoryBodyControlEvent
// NumValues: 0x000C
enum class EInventoryBodyControlEvent : uint8
{
	Pause                                    = 0,
	Resume                                   = 1,
	Reset                                    = 2,
	CacheState                               = 3,
	RestoreState                             = 4,
	CacheStateAndReset                       = 5,
	ResetAndPause                            = 6,
	SetInput                                 = 7,
	AddInput                                 = 8,
	ReturnToDefault                          = 9,
	UpdateEvent                              = 10,
	EInventoryBodyControlEvent_MAX           = 11,
};

// Enum GbxGame.EInventoryBodyControlUpdateEvent
// NumValues: 0x0008
enum class EInventoryBodyControlUpdateEvent : uint8
{
	None                                     = 0,
	Ammo                                     = 1,
	Mode                                     = 2,
	Use                                      = 3,
	TargetLock                               = 4,
	ReloadStart                              = 5,
	ReloadEnd                                = 6,
	EInventoryBodyControlUpdateEvent_MAX     = 7,
};

// Enum GbxGame.EInventoryBodyMaterialBlend
// NumValues: 0x0004
enum class EInventoryBodyMaterialBlend : uint8
{
	Add                                      = 0,
	Scale                                    = 1,
	Override                                 = 2,
	EInventoryBodyMaterialBlend_MAX          = 3,
};

// Enum GbxGame.EInventoryEffectFlag
// NumValues: 0x000A
enum class EInventoryEffectFlag : uint8
{
	AutoActivate                             = 0,
	PlayOnlyOnActiveSlot                     = 1,
	IgnoredByFXCoordinator                   = 2,
	HideWhenScoped                           = 3,
	SpawnOnlyWhenVisible                     = 4,
	PlayersOnly                              = 5,
	ResumeSystemOnParticleChanged            = 6,
	LoopingEffect                            = 7,
	Template                                 = 8,
	EInventoryEffectFlag_MAX                 = 9,
};

// Enum GbxGame.EInventoryPickupInteractionType
// NumValues: 0x0004
enum class EInventoryPickupInteractionType : uint8
{
	Default                                  = 0,
	UseOnly                                  = 1,
	TouchOnly                                = 2,
	EInventoryPickupInteractionType_MAX      = 3,
};

// Enum GbxGame.ECriterionCreationMethod
// NumValues: 0x0006
enum class ECriterionCreationMethod : uint8
{
	None                                     = 0,
	Self                                     = 1,
	SelfAndSubs                              = 2,
	Subs                                     = 3,
	Disabled                                 = 4,
	ECriterionCreationMethod_MAX             = 5,
};

// Enum GbxGame.EInventoryItemFlags
// NumValues: 0x000A
enum class EInventoryItemFlags : uint8
{
	None                                     = 0,
	Equipped                                 = 1,
	AllowOverflow                            = 8,
	MissionReward                            = 16,
	AutoEquip                                = 32,
	AddedByPickup                            = 64,
	Transient                                = 104,
	MarkedForRemoval                         = 128,
	All                                      = 255,
	EInventoryItemFlags_MAX                  = 256,
};

// Enum GbxGame.FInventoryParamType
// NumValues: 0x0004
enum class EFInventoryParamType : uint8
{
	Integer                                  = 0,
	Float                                    = 1,
	String                                   = 2,
	FInventoryParamType_MAX                  = 3,
};

// Enum GbxGame.EInventoryCriterionFlag
// NumValues: 0x0003
enum class EInventoryCriterionFlag : uint8
{
	NoDelete                                 = 0,
	Hidden                                   = 1,
	EInventoryCriterionFlag_MAX              = 2,
};

// Enum GbxGame.EInventoryStatsRoundingMode
// NumValues: 0x0005
enum class EInventoryStatsRoundingMode : uint8
{
	None                                     = 0,
	RoundToInt                               = 1,
	FloorToInt                               = 2,
	CeilToInt                                = 3,
	EInventoryStatsRoundingMode_MAX          = 4,
};

// Enum GbxGame.EJunkItemOwnershipType
// NumValues: 0x0004
enum class EJunkItemOwnershipType : uint8
{
	None                                     = 0,
	InstancedForOwner                        = 1,
	OnlyPickupableByOwner                    = 2,
	EJunkItemOwnershipType_MAX               = 3,
};

// Enum GbxGame.ELatentSpawnButton
// NumValues: 0x0003
enum class ELatentSpawnButton : uint8
{
	Then                                     = 0,
	Spawned                                  = 1,
	ELatentSpawnButton_MAX                   = 2,
};

// Enum GbxGame.ELightBeamCollisionHandlerResult
// NumValues: 0x0004
enum class ELightBeamCollisionHandlerResult : uint8
{
	Ignore                                   = 0,
	Track                                    = 1,
	TrackAndUpdate                           = 2,
	ELightBeamCollisionHandlerResult_MAX     = 3,
};

// Enum GbxGame.ELightBeamLock
// NumValues: 0x0004
enum class ELightBeamLock : uint8
{
	Never                                    = 0,
	Always                                   = 1,
	LockOn                                   = 2,
	ELightBeamLock_MAX                       = 3,
};

// Enum GbxGame.ELightBeamFlag
// NumValues: 0x0011
enum class ELightBeamFlag : uint8
{
	ViewDependent                            = 0,
	Locked                                   = 1,
	FollowViewPoint                          = 2,
	DisableChaining                          = 3,
	Child                                    = 4,
	LagCompensation                          = 5,
	NoRicochet                               = 6,
	ParentBeamIsSource                       = 7,
	EngineFlag5                              = 8,
	EngineFlag6                              = 9,
	EngineFlag7                              = 10,
	GameFlag1                                = 11,
	GameFlag2                                = 12,
	GameFlag3                                = 13,
	GameFlag4                                = 14,
	GameFlag5                                = 15,
	ELightBeamFlag_MAX                       = 16,
};

// Enum GbxGame.ELightBeamQueryActorType
// NumValues: 0x0008
enum class ELightBeamQueryActorType : uint8
{
	Unfiltered                               = 0,
	DamageCauser                             = 1,
	Instigator                               = 2,
	Source                                   = 3,
	Target                                   = 4,
	SourceOrTarget                           = 5,
	SourceAndTarget                          = 6,
	ELightBeamQueryActorType_MAX             = 7,
};

// Enum GbxGame.ELightProjectileTracerThrottleLevel
// NumValues: 0x0005
enum class ELightProjectileTracerThrottleLevel : uint8
{
	None                                     = 0,
	NPC                                      = 1,
	RemotePlayer                             = 2,
	LocalPlayer                              = 3,
	ELightProjectileTracerThrottleLevel_MAX  = 4,
};

// Enum GbxGame.ELightProjectileFlag
// NumValues: 0x0011
enum class ELightProjectileFlag : uint8
{
	Homing                                   = 0,
	StartFromLocalSource                     = 1,
	Magnetism                                = 2,
	Reflected                                = 3,
	Penetrated                               = 4,
	HideTracer                               = 5,
	LagCompensation                          = 6,
	TargetActorSet                           = 7,
	DisableTracerThrottling                  = 8,
	InheritsDamageModifiers                  = 9,
	DrunkenMovement                          = 10,
	NoRicochet                               = 11,
	GameFlag1                                = 12,
	GameFlag2                                = 13,
	GameFlag3                                = 14,
	GameFlag4                                = 15,
	ELightProjectileFlag_MAX                 = 16,
};

// Enum GbxGame.ELightProjectileQueryActorType
// NumValues: 0x0007
enum class ELightProjectileQueryActorType : uint8
{
	Unfiltered                               = 0,
	DamageCauser                             = 1,
	Instigator                               = 2,
	Source                                   = 3,
	Target                                   = 4,
	Attached                                 = 5,
	ELightProjectileQueryActorType_MAX       = 6,
};

// Enum GbxGame.ELightProjectileSpeedModifierType
// NumValues: 0x0004
enum class ELightProjectileSpeedModifierType : uint8
{
	None                                     = 0,
	Scale                                    = 1,
	Replace                                  = 2,
	ELightProjectileSpeedModifierType_MAX    = 3,
};

// Enum GbxGame.ELightProjectileSplitPattern
// NumValues: 0x0003
enum class ELightProjectileSplitPattern : uint8
{
	Cone                                     = 0,
	Fan                                      = 1,
	ELightProjectileSplitPattern_MAX         = 2,
};

// Enum GbxGame.ELootInstancingPolicy
// NumValues: 0x0005
enum class ELootInstancingPolicy : uint8
{
	Default                                  = 0,
	Instance                                 = 1,
	DontInstance                             = 2,
	NonInstanced_PickupableOnlyByOwner       = 3,
	MAX                                      = 4,
};

// Enum GbxGame.ECSVIdentityFormat
// NumValues: 0x0004
enum class ECSVIdentityFormat : uint8
{
	None                                     = 0,
	SerialNumber                             = 1,
	Readable                                 = 2,
	ECSVIdentityFormat_MAX                   = 3,
};

// Enum GbxGame.ECSVSummaryStatType
// NumValues: 0x0005
enum class ECSVSummaryStatType : uint8
{
	None                                     = 0,
	Rarity                                   = 1,
	Manufacturer                             = 2,
	Type                                     = 3,
	ECSVSummaryStatType_MAX                  = 4,
};

// Enum GbxGame.EManagedActorDestroyOrder
// NumValues: 0x0004
enum class EManagedActorDestroyOrder : uint8
{
	OldestFirst                              = 0,
	NewestFirst                              = 1,
	Random                                   = 2,
	EManagedActorDestroyOrder_MAX            = 3,
};

// Enum GbxGame.EMantleType
// NumValues: 0x0003
enum class EMantleType : uint8
{
	MantleUp                                 = 0,
	WallHop                                  = 1,
	EMantleType_MAX                          = 255,
};

// Enum GbxGame.EMeleeReboundTrigger
// NumValues: 0x0005
enum class EMeleeReboundTrigger : uint32
{
	None                                     = 0,
	MeleeImpact                              = 1,
	MeleeEnd                                 = 2,
	AnimNotify                               = 3,
	EMeleeReboundTrigger_MAX                 = 4,
};

// Enum GbxGame.EMissionActionConditionCompoundOp
// NumValues: 0x0003
enum class EMissionActionConditionCompoundOp : uint8
{
	And                                      = 0,
	Or                                       = 1,
	EMissionActionConditionCompoundOp_MAX    = 2,
};

// Enum GbxGame.EMissionActionConditionEncounterStateQuery
// NumValues: 0x0005
enum class EMissionActionConditionEncounterStateQuery : uint8
{
	Cleared                                  = 0,
	Active                                   = 1,
	Enabled                                  = 2,
	Disabled                                 = 3,
	EMissionActionConditionEncounterStateQuery_MAX = 4,
};

// Enum GbxGame.EMissionActionConditionSpawnerStateQuery
// NumValues: 0x0004
enum class EMissionActionConditionSpawnerStateQuery : uint8
{
	Cleared                                  = 0,
	Active                                   = 1,
	Disabled                                 = 2,
	EMissionActionConditionSpawnerStateQuery_MAX = 3,
};

// Enum GbxGame.EMissionActionBlockingBehavior
// NumValues: 0x0003
enum class EMissionActionBlockingBehavior : uint8
{
	Block                                    = 0,
	DoNotBlock                               = 1,
	EMissionActionBlockingBehavior_MAX       = 2,
};

// Enum GbxGame.EToggleAlias_FilterType
// NumValues: 0x0003
enum class EToggleAlias_FilterType : uint8
{
	Spawner                                  = 0,
	None                                     = 1,
	EToggleAlias_MAX                         = 2,
};

// Enum GbxGame.EMissionAction_ModuleEvent_Target
// NumValues: 0x0005
enum class EMissionAction_ModuleEvent_Target : uint8
{
	AllModules                               = 0,
	ModuleWithName                           = 1,
	ModulesWithTags                          = 2,
	ModulesWithType                          = 3,
	EMissionAction_ModuleEvent_MAX           = 4,
};

// Enum GbxGame.EMissionNetScope
// NumValues: 0x0005
enum class EMissionNetScope : uint32
{
	Dedicated                                = 0,
	Peer_to_peer                             = 1,
	Local                                    = 2,
	All                                      = 3,
	EMissionNetScope_MAX                     = 4,
};

// Enum GbxGame.EMissionChoiceType
// NumValues: 0x0004
enum class EMissionChoiceType : uint8
{
	Internal                                 = 0,
	Area                                     = 1,
	AreaFiller                               = 2,
	EMissionChoiceType_MAX                   = 3,
};

// Enum GbxGame.EMatchTypeAdditionalTags
// NumValues: 0x0003
enum class EMatchTypeAdditionalTags : uint32
{
	MatchAllTags                             = 0,
	MatchAtLeastOneTags                      = 1,
	EMatchTypeAdditionalTags_MAX             = 2,
};

// Enum GbxGame.EMissionReplicationType
// NumValues: 0x0003
enum class EMissionReplicationType : uint8
{
	Shared                                   = 0,
	Personal                                 = 1,
	EMissionReplicationType_MAX              = 2,
};

// Enum GbxGame.EMissionOwnershipType
// NumValues: 0x0004
enum class EMissionOwnershipType : uint8
{
	None                                     = 0,
	Simple                                   = 1,
	SubordinateInstancing                    = 2,
	EMissionOwnershipType_MAX                = 3,
};

// Enum GbxGame.EMissionDependencyConditionCompoundOp
// NumValues: 0x0003
enum class EMissionDependencyConditionCompoundOp : uint8
{
	And                                      = 0,
	Or                                       = 1,
	EMissionDependencyConditionCompoundOp_MAX = 2,
};

// Enum GbxGame.EMissionDependencyConditionMissionStatus
// NumValues: 0x0004
enum class EMissionDependencyConditionMissionStatus : uint8
{
	Complete                                 = 0,
	AtLeastUnlocked                          = 1,
	AtLeastStarted                           = 2,
	EMissionDependencyConditionMissionStatus_MAX = 3,
};

// Enum GbxGame.EMissionDependencyConditionMissionSetStatus
// NumValues: 0x0003
enum class EMissionDependencyConditionMissionSetStatus : uint8
{
	Complete                                 = 0,
	AtLeastStarted                           = 1,
	EMissionDependencyConditionMissionSetStatus_MAX = 2,
};

// Enum GbxGame.EMissionDependencyConditionObjectiveStatus
// NumValues: 0x0004
enum class EMissionDependencyConditionObjectiveStatus : uint8
{
	Complete                                 = 0,
	Failed                                   = 1,
	Deactivated                              = 2,
	EMissionDependencyConditionObjectiveStatus_MAX = 3,
};

// Enum GbxGame.EMissionEntityOrderType
// NumValues: 0x0003
enum class EMissionEntityOrderType : uint8
{
	Single                                   = 0,
	Range                                    = 1,
	EMissionEntityOrderType_MAX              = 2,
};

// Enum GbxGame.EObjectiveFailureBehavior
// NumValues: 0x0004
enum class EObjectiveFailureBehavior : uint8
{
	HardFailure                              = 0,
	SoftFailure                              = 1,
	Nothing                                  = 2,
	EObjectiveFailureBehavior_MAX            = 3,
};

// Enum GbxGame.EMissionOwnershipFilter
// NumValues: 0x0004
enum class EMissionOwnershipFilter : uint8
{
	None                                     = 0,
	OwnedOnly                                = 1,
	GlobalOnly                               = 2,
	EMissionOwnershipFilter_MAX              = 3,
};

// Enum GbxGame.EMissionObjectiveResolveType
// NumValues: 0x0005
enum class EMissionObjectiveResolveType : uint8
{
	None                                     = 0,
	Succeed                                  = 1,
	Fail                                     = 2,
	Deactivate                               = 3,
	EMissionObjectiveResolveType_MAX         = 4,
};

// Enum GbxGame.EMissionActionOnLoadFilter
// NumValues: 0x0003
enum class EMissionActionOnLoadFilter : uint8
{
	SkipOnLoad                               = 0,
	SkipNotOnLoad                            = 1,
	EMissionActionOnLoadFilter_MAX           = 2,
};

// Enum GbxGame.EMissionActionPreCompletedFilter
// NumValues: 0x0003
enum class EMissionActionPreCompletedFilter : uint8
{
	SkipWhenAlreadyCompleted                 = 0,
	SkipWhenNotAlreadyCompleted              = 1,
	EMissionActionPreCompletedFilter_MAX     = 2,
};

// Enum GbxGame.EMissionStatus
// NumValues: 0x000A
enum class EMissionStatus : uint8
{
	WaitingOnMissionSet                      = 0,
	Locked                                   = 1,
	Available                                = 2,
	Kickoffing                               = 3,
	Active                                   = 4,
	Failed                                   = 5,
	Completed                                = 6,
	Abandoned                                = 7,
	Uninitialized                            = 8,
	EMissionStatus_MAX                       = 9,
};

// Enum GbxGame.EMissionQueryOperator
// NumValues: 0x0004
enum class EMissionQueryOperator : uint8
{
	AnyMatch                                 = 0,
	ExactMatch                               = 1,
	OverlapMatch                             = 2,
	EMissionQueryOperator_MAX                = 3,
};

// Enum GbxGame.EMissionTaskDefLocation
// NumValues: 0x0003
enum class EMissionTaskDefLocation : uint8
{
	External                                 = 0,
	Inline                                   = 1,
	EMissionTaskDefLocation_MAX              = 2,
};

// Enum GbxGame.EObjectiveUpdateCountDisplayType
// NumValues: 0x0003
enum class EObjectiveUpdateCountDisplayType : uint8
{
	Default                                  = 0,
	ProgressBar                              = 1,
	EObjectiveUpdateCountDisplayType_MAX     = 2,
};

// Enum GbxGame.EObjectiveStatusConditionQuery
// NumValues: 0x000B
enum class EObjectiveStatusConditionQuery : uint8
{
	Completed                                = 0,
	CompletedFully                           = 1,
	Deactivated                              = 2,
	DeactivatedFully                         = 3,
	Failed                                   = 4,
	FailedFully                              = 5,
	Active                                   = 6,
	Dormant                                  = 7,
	Live                                     = 8,
	NotStarted                               = 9,
	EObjectiveStatusConditionQuery_MAX       = 10,
};

// Enum GbxGame.EMissionGbxDefType
// NumValues: 0x0003
enum class EMissionGbxDefType : uint8
{
	GbxDef                                   = 0,
	Alias                                    = 1,
	EMissionGbxDefType_MAX                   = 2,
};

// Enum GbxGame.EMissionDeliveryType
// NumValues: 0x0003
enum class EMissionDeliveryType : uint8
{
	Default                                  = 0,
	Pickup                                   = 1,
	EMissionDeliveryType_MAX                 = 2,
};

// Enum GbxGame.EMissionGiverWaypointOption
// NumValues: 0x0003
enum class EMissionGiverWaypointOption : uint8
{
	Default                                  = 0,
	None                                     = 1,
	EMissionGiverWaypointOption_MAX          = 2,
};

// Enum GbxGame.EMissionGraphAliasValidityStatus
// NumValues: 0x0008
enum class EMissionGraphAliasValidityStatus : uint8
{
	None                                     = 0,
	Invalid                                  = 1,
	Unknown                                  = 2,
	Exists                                   = 3,
	SpawnerExists                            = 4,
	ExistsAndLoaded                          = 5,
	SpawnerExistsAndLoaded                   = 6,
	EMissionGraphAliasValidityStatus_MAX     = 7,
};

// Enum GbxGame.EMissionGraphMissionFactLifetime
// NumValues: 0x0004
enum class EMissionGraphMissionFactLifetime : uint8
{
	State                                    = 0,
	Final                                    = 1,
	Temp                                     = 2,
	EMissionGraphMissionFactLifetime_MAX     = 3,
};

// Enum GbxGame.EMissionObjectiveUpdateCountValueType
// NumValues: 0x0003
enum class EMissionObjectiveUpdateCountValueType : uint8
{
	Constant                                 = 0,
	Dynamic                                  = 1,
	EMissionObjectiveUpdateCountValueType_MAX = 2,
};

// Enum GbxGame.EMissionObjectiveUpdateCountDynamicEvaluateTiming
// NumValues: 0x0005
enum class EMissionObjectiveUpdateCountDynamicEvaluateTiming : uint8
{
	None                                     = 0,
	OnMissionStart                           = 1,
	OnObjectiveStart                         = 2,
	OnObjectiveSetStart                      = 3,
	EMissionObjectiveUpdateCountDynamicEvaluateTiming_MAX = 4,
};

// Enum GbxGame.EMissionObjectiveUpdateFilterType
// NumValues: 0x0003
enum class EMissionObjectiveUpdateFilterType : uint8
{
	Any                                      = 0,
	Single                                   = 1,
	EMissionObjectiveUpdateFilterType_MAX    = 2,
};

// Enum GbxGame.EMissionRewardInfoType
// NumValues: 0x0003
enum class EMissionRewardInfoType : uint8
{
	GbxReward                                = 0,
	Alias                                    = 1,
	EMissionRewardInfoType_MAX               = 2,
};

// Enum GbxGame.EMissionSourceSelectionType
// NumValues: 0x0004
enum class EMissionSourceSelectionType : uint8
{
	Random                                   = 0,
	Sequential                               = 1,
	All                                      = 2,
	EMissionSourceSelectionType_MAX          = 3,
};

// Enum GbxGame.EMissionBlockType
// NumValues: 0x0003
enum class EMissionBlockType : uint8
{
	Missions                                 = 0,
	Tags                                     = 1,
	EMissionBlockType_MAX                    = 2,
};

// Enum GbxGame.EMissionSourceActionType
// NumValues: 0x0005
enum class EMissionSourceActionType : uint8
{
	DoNothing                                = 0,
	LevelUp                                  = 1,
	StartMission                             = 2,
	StartTimer                               = 3,
	EMissionSourceActionType_MAX             = 4,
};

// Enum GbxGame.EMissionUIStateFlag
// NumValues: 0x0011
enum class EMissionUIStateFlag : uint8
{
	Seen                                     = 0,
	EngineFlag1                              = 1,
	EngineFlag2                              = 2,
	EngineFlag3                              = 3,
	EngineFlag4                              = 4,
	EngineFlag5                              = 5,
	EngineFlag6                              = 6,
	EngineFlag7                              = 7,
	GameFlag1                                = 8,
	GameFlag2                                = 9,
	GameFlag3                                = 10,
	GameFlag4                                = 11,
	GameFlag5                                = 12,
	GameFlag6                                = 13,
	GameFlag7                                = 14,
	GameFlag8                                = 15,
	MAX                                      = 16,
};

// Enum GbxGame.EMissionGiverUIStateFlag
// NumValues: 0x0011
enum class EMissionGiverUIStateFlag : uint8
{
	Seen                                     = 0,
	EngineFlag1                              = 1,
	EngineFlag2                              = 2,
	EngineFlag3                              = 3,
	EngineFlag4                              = 4,
	EngineFlag5                              = 5,
	EngineFlag6                              = 6,
	EngineFlag7                              = 7,
	GameFlag1                                = 8,
	GameFlag2                                = 9,
	GameFlag3                                = 10,
	GameFlag4                                = 11,
	GameFlag5                                = 12,
	GameFlag6                                = 13,
	GameFlag7                                = 14,
	GameFlag8                                = 15,
	MAX                                      = 16,
};

// Enum GbxGame.ECoordinatedMaterialParameterChannel
// NumValues: 0x0005
enum class ECoordinatedMaterialParameterChannel : uint8
{
	Base                                     = 0,
	Glow                                     = 1,
	Mask                                     = 2,
	Overlay                                  = 3,
	MAX                                      = 4,
};

// Enum GbxGame.ENumericDisplayValueSignStyle
// NumValues: 0x0005
enum class ENumericDisplayValueSignStyle : uint8
{
	AsIs                                     = 0,
	Positive                                 = 1,
	Negative                                 = 2,
	OppositeSign                             = 3,
	ENumericDisplayValueSignStyle_MAX        = 4,
};

// Enum GbxGame.ENumericDisplayValueRoundingMode
// NumValues: 0x0005
enum class ENumericDisplayValueRoundingMode : uint8
{
	None                                     = 0,
	RoundToInt                               = 1,
	FloorToInt                               = 2,
	CeilToInt                                = 3,
	ENumericDisplayValueRoundingMode_MAX     = 4,
};

// Enum GbxGame.EObjectiveBoundaryType
// NumValues: 0x0003
enum class EObjectiveBoundaryType : uint8
{
	Trigger                                  = 0,
	Dynamic                                  = 1,
	EObjectiveBoundaryType_MAX               = 2,
};

// Enum GbxGame.EObjectiveTriggerPlayerEventType
// NumValues: 0x0006
enum class EObjectiveTriggerPlayerEventType : uint8
{
	AnyPlayerArrive                          = 0,
	AllPlayersArrive                         = 1,
	AllPlayersLeave                          = 2,
	AnyPlayerLeaves                          = 3,
	AnyPlayerLeaves_MustHaveAlreadyBeenTouching = 4,
	EObjectiveTriggerPlayerEventType_MAX     = 5,
};

// Enum GbxGame.EObjectiveTriggerPlayerCountEventType
// NumValues: 0x0004
enum class EObjectiveTriggerPlayerCountEventType : uint8
{
	AtLeastOnePlayer                         = 0,
	AllPlayers                               = 1,
	NoPlayer                                 = 2,
	EObjectiveTriggerPlayerCountEventType_MAX = 3,
};

// Enum GbxGame.ECompositeObjectiveSubVisibility
// NumValues: 0x0004
enum class ECompositeObjectiveSubVisibility : uint8
{
	AllInvisible                             = 0,
	AllVisible                               = 1,
	Custom                                   = 2,
	ECompositeObjectiveSubVisibility_MAX     = 3,
};

// Enum GbxGame.EObjectiveExternalSubType
// NumValues: 0x0004
enum class EObjectiveExternalSubType : uint8
{
	Mission                                  = 0,
	InternalObjective                        = 1,
	ExternalObjective                        = 2,
	EObjectiveExternalSubType_MAX            = 3,
};

// Enum GbxGame.EObjectiveKillSubType
// NumValues: 0x0004
enum class EObjectiveKillSubType : uint8
{
	Exterminate                              = 0,
	Assassinate                              = 1,
	Kill                                     = 2,
	EObjectiveKillSubType_MAX                = 3,
};

// Enum GbxGame.EMultiPickupObjectiveDropTarget
// NumValues: 0x0003
enum class EMultiPickupObjectiveDropTarget : uint8
{
	SpecificSpawner                          = 0,
	Global                                   = 1,
	EMultiPickupObjectiveDropTarget_MAX      = 2,
};

// Enum GbxGame.EMissionObjectivePickupSpawnTiming
// NumValues: 0x0004
enum class EMissionObjectivePickupSpawnTiming : uint8
{
	ObjectiveActivation                      = 0,
	MissionInitialization                    = 1,
	Manual                                   = 2,
	EMissionObjectivePickupSpawnTiming_MAX   = 3,
};

// Enum GbxGame.ETravelObjectiveDetectionMethod
// NumValues: 0x0004
enum class ETravelObjectiveDetectionMethod : uint8
{
	TriggerVolume                            = 0,
	Dynamic                                  = 1,
	Map                                      = 2,
	ETravelObjectiveDetectionMethod_MAX      = 3,
};

// Enum GbxGame.EAreaObjectiveDetectionMethod
// NumValues: 0x0003
enum class EAreaObjectiveDetectionMethod : uint8
{
	TriggerVolume                            = 0,
	Dynamic                                  = 1,
	EAreaObjectiveDetectionMethod_MAX        = 2,
};

// Enum GbxGame.ECompoundObjectiveValueEvaluatorOp
// NumValues: 0x0003
enum class ECompoundObjectiveValueEvaluatorOp : uint8
{
	And                                      = 0,
	Or                                       = 1,
	ECompoundObjectiveValueEvaluatorOp_MAX   = 2,
};

// Enum GbxGame.EMissionObjectiveTimerDisplayStyle
// NumValues: 0x0004
enum class EMissionObjectiveTimerDisplayStyle : uint8
{
	DontDisplay                              = 0,
	Countdown                                = 1,
	ProgressBar                              = 2,
	EMissionObjectiveTimerDisplayStyle_MAX   = 3,
};

// Enum GbxGame.EObjectivePhaseWaypointVisibilityFlag
// NumValues: 0x000A
enum class EObjectivePhaseWaypointVisibilityFlag : uint8
{
	Kickoffing                               = 0,
	Starting                                 = 1,
	Active                                   = 2,
	Dormant                                  = 3,
	Succeeding                               = 4,
	Deactivating                             = 5,
	Failing                                  = 6,
	Finishing                                = 7,
	PostFinishing                            = 8,
	EObjectivePhaseWaypointVisibilityFlag_MAX = 9,
};

// Enum GbxGame.EPerchAvailability
// NumValues: 0x0009
enum class EPerchAvailability : uint8
{
	Available                                = 0,
	Claimed                                  = 1,
	Disabled                                 = 2,
	NoTricks                                 = 3,
	OnCooldown                               = 4,
	NotSupported                             = 5,
	NotLoaded                                = 6,
	Filtered                                 = 7,
	EPerchAvailability_MAX                   = 8,
};

// Enum GbxGame.EIdleTimeBehavior
// NumValues: 0x0004
enum class EIdleTimeBehavior : uint8
{
	Default                                  = 0,
	Override                                 = 1,
	Infinite                                 = 2,
	EIdleTimeBehavior_MAX                    = 3,
};

// Enum GbxGame.EPerchAlignment
// NumValues: 0x0005
enum class EPerchAlignment : uint8
{
	None                                     = 0,
	Location                                 = 1,
	Rotation                                 = 2,
	LocationAndRotation                      = 3,
	EPerchAlignment_MAX                      = 4,
};

// Enum GbxGame.EPickupLifespanType
// NumValues: 0x0006
enum class EPickupLifespanType : uint8
{
	VeryShort                                = 0,
	Short                                    = 1,
	Long                                     = 2,
	AsLongAsLevel                            = 3,
	Session                                  = 4,
	EPickupLifespanType_MAX                  = 5,
};

// Enum GbxGame.EOakUI_PingType
// NumValues: 0x0012
enum class EOakUI_PingType : uint8
{
	Ping                                     = 0,
	LootPing                                 = 1,
	CharacterPing                            = 2,
	Default                                  = 3,
	Warning                                  = 4,
	Chest                                    = 5,
	Friendly                                 = 6,
	Pet                                      = 7,
	Hostile                                  = 8,
	Equipment                                = 9,
	Health                                   = 10,
	Currency                                 = 11,
	Ammo                                     = 12,
	Salvage                                  = 13,
	Valuable                                 = 14,
	Grapple                                  = 15,
	Drone                                    = 16,
	Max                                      = 17,
};

// Enum GbxGame.EProjectileExplosionFlags
// NumValues: 0x0009
enum class EProjectileExplosionFlags : uint8
{
	DestroyOnExplode                         = 0,
	Flag2                                    = 1,
	Flag3                                    = 2,
	Flag4                                    = 3,
	Flag5                                    = 4,
	Flag6                                    = 5,
	Flag7                                    = 6,
	Flag8                                    = 7,
	MAX                                      = 8,
};

// Enum GbxGame.EProjectileGameplayBounceSurfaceType
// NumValues: 0x0005
enum class EProjectileGameplayBounceSurfaceType : uint8
{
	Undefined                                = 0,
	Ground                                   = 1,
	Ceiling                                  = 2,
	Wall                                     = 3,
	EProjectileGameplayBounceSurfaceType_MAX = 4,
};

// Enum GbxGame.EProjectileDrunkenMovementType
// NumValues: 0x0004
enum class EProjectileDrunkenMovementType : uint8
{
	None                                     = 0,
	Random                                   = 1,
	Wave                                     = 2,
	EProjectileDrunkenMovementType_MAX       = 3,
};

// Enum GbxGame.EProjectileFlag
// NumValues: 0x0005
enum class EProjectileFlag : uint8
{
	GameFlag1                                = 0,
	GameFlag2                                = 1,
	GameFlag3                                = 2,
	GameFlag4                                = 3,
	EProjectileFlag_MAX                      = 4,
};

// Enum GbxGame.EHomingTargetUntargetableAction
// NumValues: 0x0004
enum class EHomingTargetUntargetableAction : uint8
{
	None                                     = 0,
	HomeToLastKnownLocation                  = 1,
	Stop                                     = 2,
	EHomingTargetUntargetableAction_MAX      = 3,
};

// Enum GbxGame.ESpawnProjectileExec
// NumValues: 0x0003
enum class ESpawnProjectileExec : uint8
{
	Completed                                = 0,
	OnSpawned                                = 1,
	ESpawnProjectileExec_MAX                 = 2,
};

// Enum GbxGame.EProjectileOwnerOptions
// NumValues: 0x0005
enum class EProjectileOwnerOptions : uint8
{
	Source                                   = 0,
	Owner                                    = 1,
	Instigator                               = 2,
	OwnerAndInstigator                       = 3,
	EProjectileOwnerOptions_MAX              = 4,
};

// Enum GbxGame.EProjectileDetachAction
// NumValues: 0x0005
enum class EProjectileDetachAction : uint8
{
	None                                     = 0,
	Fall                                     = 1,
	Explode                                  = 2,
	Destroy                                  = 3,
	EProjectileDetachAction_MAX              = 4,
};

// Enum GbxGame.EPuddleState
// NumValues: 0x0006
enum class EPuddleState : uint8
{
	Spawning                                 = 0,
	Idle                                     = 1,
	CleaningUp                               = 2,
	CleanedUp                                = 3,
	GroundingCleaningUp                      = 4,
	EPuddleState_MAX                         = 5,
};

// Enum GbxGame.EPuddleHazardBuildType
// NumValues: 0x0003
enum class EPuddleHazardBuildType : uint8
{
	Decal                                    = 0,
	Mesh                                     = 1,
	EPuddleHazardBuildType_MAX               = 2,
};

// Enum GbxGame.EPuddleHazardInstanceBuildType
// NumValues: 0x0004
enum class EPuddleHazardInstanceBuildType : uint8
{
	Default                                  = 0,
	Decal                                    = 1,
	Mesh                                     = 2,
	EPuddleHazardInstanceBuildType_MAX       = 3,
};

// Enum GbxGame.ERelativeDirectionType
// NumValues: 0x0017
enum class ERelativeDirectionType : uint8
{
	Default                                  = 0,
	ParentOrientation                        = 1,
	ParentOrientation2D                      = 2,
	InverseParentOrientation                 = 3,
	ParentVelocity                           = 4,
	ParentVelocity2D                         = 5,
	InverseParentVelocity                    = 6,
	InverseParentVelocity2D                  = 7,
	Random                                   = 8,
	RandomUpwards                            = 9,
	RandomDownwards                          = 10,
	RandomOnHorizontalPlane                  = 11,
	StraightUp                               = 12,
	StraightDown                             = 13,
	StraightTowardTarget                     = 14,
	StraightAwayFromTarget                   = 15,
	ParentAimDirection                       = 16,
	InverseParentAimDirection                = 17,
	ParentAimDirection2D                     = 18,
	InverseParentAimDirection2D              = 19,
	ParentAcceleration2D                     = 20,
	InverseParentAimOffset                   = 21,
	ERelativeDirectionType_MAX               = 22,
};

// Enum GbxGame.ERelativeFactsSystemActorReferenceSubmapMode
// NumValues: 0x0003
enum class ERelativeFactsSystemActorReferenceSubmapMode : uint8
{
	Inherit                                  = 0,
	Custom                                   = 1,
	ERelativeFactsSystemActorReferenceSubmapMode_MAX = 2,
};

// Enum GbxGame.EScreenParticleScalingMode
// NumValues: 0x0008
enum class EScreenParticleScalingMode : uint8
{
	FitToHorizontal                          = 0,
	FitToVertical                            = 1,
	FitToExterior                            = 2,
	FitToInterior                            = 3,
	FitToViewport                            = 4,
	DontAdjustScaling                        = 5,
	FitToViewportAndKeepContentAspectRatio   = 6,
	EScreenParticleScalingMode_MAX           = 7,
};

// Enum GbxGame.EScreenParticleVisibility
// NumValues: 0x0004
enum class EScreenParticleVisibility : uint8
{
	Default                                  = 0,
	Show                                     = 1,
	Hide                                     = 2,
	EScreenParticleVisibility_MAX            = 3,
};

// Enum GbxGame.FUnlockableLedgerType
// NumValues: 0x0003
enum class EFUnlockableLedgerType : uint8
{
	Transient                                = 0,
	HeldInProfile                            = 1,
	FUnlockableLedgerType_MAX                = 2,
};

// Enum GbxGame.EUsabilityConditionContextType
// NumValues: 0x0003
enum class EUsabilityConditionContextType : uint8
{
	Player                                   = 0,
	UsableActor                              = 1,
	EUsabilityConditionContextType_MAX       = 2,
};

// Enum GbxGame.ECostSource
// NumValues: 0x0005
enum class ECostSource : uint8
{
	NoCost                                   = 0,
	Attribute                                = 1,
	GbxItem                                  = 2,
	IngredientList                           = 3,
	ECostSource_MAX                          = 4,
};

// Enum GbxGame.EUsableCostContext
// NumValues: 0x0003
enum class EUsableCostContext : uint8
{
	Usable                                   = 0,
	Payer                                    = 1,
	EUsableCostContext_MAX                   = 2,
};

// Enum GbxGame.EUsabilityResponseType
// NumValues: 0x0004
enum class EUsabilityResponseType : uint8
{
	InUse                                    = 0,
	Locked                                   = 1,
	Custom                                   = 2,
	EUsabilityResponseType_MAX               = 3,
};

// Enum GbxGame.EHoldToUseMode
// NumValues: 0x0005
enum class EHoldToUseMode : uint8
{
	Disabled                                 = 0,
	HoldOnly                                 = 1,
	Both                                     = 2,
	ObjectHosted                             = 3,
	EHoldToUseMode_MAX                       = 4,
};

// Enum GbxGame.EWaypointInfoFlag
// NumValues: 0x0010
enum class EWaypointInfoFlag : uint8
{
	OptionalObjective                        = 0,
	HideInUI                                 = 1,
	EngineFlag3                              = 2,
	EngineFlag4                              = 3,
	EngineFlag5                              = 4,
	EngineFlag6                              = 5,
	EngineFlag7                              = 6,
	EngineFlag8                              = 7,
	GameFlag1                                = 8,
	GameFlag2                                = 9,
	GameFlag3                                = 10,
	GameFlag4                                = 11,
	GameFlag5                                = 12,
	GameFlag6                                = 13,
	GameFlag7                                = 14,
	MAX                                      = 15,
};

// Enum GbxGame.EWaypointInstanceType
// NumValues: 0x0005
enum class EWaypointInstanceType : uint8
{
	Default                                  = 0,
	MissionGiver                             = 1,
	TravelStation                            = 2,
	Count                                    = 3,
	EWaypointInstanceType_MAX                = 4,
};

// Enum GbxGame.EZoomHandlerValueResolverType
// NumValues: 0x0008
enum class EZoomHandlerValueResolverType : uint8
{
	ZoomPercent                              = 0,
	ZoomLevelPercent                         = 1,
	ZoomDuration                             = 2,
	ZoomFOVScale                             = 3,
	ViewModelFOVScale                        = 4,
	NotZoomed                                = 5,
	IsZoomed                                 = 6,
	EZoomHandlerValueResolverType_MAX        = 7,
};

// ScriptStruct GbxGame.GbxAnimSetOption
// 0x0088 (0x0090 - 0x0008)
struct FGbxAnimSetOption final : public FGbxHasStructType
{
public:
	uint8                                         EnabledFields;                                     // 0x0008(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FGameDataHandleProperty_                      Condition;                                         // 0x0010(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      ManufacturerDef;                                   // 0x0028(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      ActorDef;                                          // 0x0040(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UGbxAnimSet*>                    AnimSets;                                          // 0x0058(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	struct FGbxInlineStruct                       ExpansionData;                                     // 0x0068(0x0018)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FGbxInlineStruct>               WrappedSubOptions;                                 // 0x0080(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxAnimSetOption;

// ScriptStruct GbxGame.GbxAnimSetOptionWrapper
// 0x0090 (0x0098 - 0x0008)
struct FGbxAnimSetOptionWrapper final : public FGbxHasStructType
{
public:
	struct FGbxAnimSetOption                      Inner;                                             // 0x0008(0x0090)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxAnimSetOptionWrapper;

// ScriptStruct GbxGame.FactAddress
// 0x0038 (0x0038 - 0x0000)
struct FFactAddress final
{
public:
	uint8                                         Pad_0[0x10];                                       // 0x0000(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSName                                 address;                                           // 0x0010(0x0028)(HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FFactAddress;

// ScriptStruct GbxGame.FactExpression
// 0x0010 (0x0010 - 0x0000)
struct alignas(0x08) FFactExpression final
{
public:
	uint8                                         Pad_0[0x10];                                       // 0x0000(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FFactExpression;

// ScriptStruct GbxGame.FactsConduitResponse
// 0x0028 (0x0028 - 0x0000)
struct alignas(0x08) FFactsConduitResponse final
{
public:
	class FName                                   OtherActorFactValue;                               // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFactsConduitReactionComparison               NumericComparison;                                 // 0x0008(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   MyChannel;                                         // 0x000C(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   MyChannelValue;                                    // 0x0014(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0xC];                                       // 0x001C(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FFactsConduitResponse;

// ScriptStruct GbxGame.FactsConduitReaction
// 0x00A8 (0x00A8 - 0x0000)
struct FFactsConduitReaction final
{
public:
	ECrossConduitAddressSource                    FactAddressSource;                                 // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class AActor>                  SourceActor;                                       // 0x0008(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                   OtherActorChannel;                                 // 0x0030(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FFactAddress                           address;                                           // 0x0038(0x0038)(Edit, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FFactExpression                        Expression;                                        // 0x0070(0x0010)(Edit, NativeAccessSpecifierPrivate)
	TArray<struct FFactsConduitResponse>          responses;                                         // 0x0080(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_90[0x18];                                      // 0x0090(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FFactsConduitReaction;

// ScriptStruct GbxGame.DamageArea
// 0x0040 (0x0048 - 0x0008)
struct FDamageArea : public FGbxHasStructType
{
public:
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	uint8                                         bDoDirectDamageToImpactedActor : 1;                // 0x0010(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bCheckVisibility : 1;                              // 0x0010(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bDamageFallsOff : 1;                               // 0x0010(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bTryDirectTraceFirst : 1;                          // 0x0010(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bTraceToGround : 1;                                // 0x0010(0x0001)(BitIndex: 0x04, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	ECollisionChannel                             TraceChannel;                                      // 0x0011(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MaxTargets;                                        // 0x0014(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TraceToGroundDownwardDistance;                     // 0x0018(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TraceToGroundStartHeightOffset;                    // 0x001C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TraceToGroundHitOffset;                            // 0x0020(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EDamageAreaOverlapFilterType                  OverlapFilter;                                     // 0x0024(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   OverlapProfileName;                                // 0x0028(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<ECollisionChannel>                     OverlapObjectTypes;                                // 0x0030(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_40[0x8];                                       // 0x0040(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FDamageArea;

// ScriptStruct GbxGame.DamageArea_BaseRound
// 0x0058 (0x00A0 - 0x0048)
struct FDamageArea_BaseRound : public FDamageArea
{
public:
	struct FGbxAttributeInit                      Radius;                                            // 0x0048(0x0050)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         bExpandRadiusOverTime : 1;                         // 0x0098(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bExpandingRadiusIsHollow : 1;                      // 0x0098(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FDamageArea_BaseRound;

// ScriptStruct GbxGame.DamageArea_Cylinder
// 0x00A8 (0x0148 - 0x00A0)
struct FDamageArea_Cylinder final : public FDamageArea_BaseRound
{
public:
	struct FGbxAttributeInit                      Height;                                            // 0x00A0(0x0050)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	float                                         HeightOffsetPct;                                   // 0x00F0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAttributeInit                      WedgeAngle;                                        // 0x00F8(0x0050)(Edit, NoDestructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FDamageArea_Cylinder;

// ScriptStruct GbxGame.GbxActorPartChoice
// 0x0058 (0x0058 - 0x0000)
struct FGbxActorPartChoice final
{
public:
	EGbxActorPartChoiceType                       type;                                              // 0x0000(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FGbxDefPtrProperty_                           ChosenDef;                                         // 0x0008(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxParam                              Param;                                             // 0x0020(0x0038)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxActorPartChoice;

// ScriptStruct GbxGame.AvatarParameterSource
// 0x0078 (0x0080 - 0x0008)
struct FAvatarParameterSource final : public FGbxHasStructType
{
public:
	class FName                                   Name;                                              // 0x0008(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAvatarParameterType                          type;                                              // 0x0010(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Number;                                            // 0x0014(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_18[0x4];                                       // 0x0018(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         NumberMin;                                         // 0x001C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         NumberMax;                                         // 0x0020(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int16                                         NumberSteps;                                       // 0x0024(0x0002)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int16                                         SerialIndex;                                       // 0x0026(0x0002)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   UIType;                                            // 0x0028(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture>                Texture;                                           // 0x0030(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterialInterface>      Material;                                          // 0x0058(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FAvatarParameterSource;

// ScriptStruct GbxGame.GbxSkillStateMachineStateAction_RegisterOp_Register
// 0x0018 (0x0018 - 0x0000)
struct FGbxSkillStateMachineStateAction_RegisterOp_Register final
{
public:
	EGbxSkillStateMachineAction_RegisterOp        RegisterOp;                                        // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<FGbxDefPtrProperty_>                   Registers;                                         // 0x0008(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxSkillStateMachineStateAction_RegisterOp_Register;

// ScriptStruct GbxGame.AvatarSerialNumberBuilder
// 0x0010 (0x0010 - 0x0000)
struct FAvatarSerialNumberBuilder final
{
public:
	class FString                                 SerialNumberString;                                // 0x0000(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FAvatarSerialNumberBuilder;

// ScriptStruct GbxGame.GbxBrainAspect_Teleport
// 0x0090 (0x0168 - 0x00D8)
struct FGbxBrainAspect_Teleport final : public FGbxBrainAspect
{
public:
	uint8                                         Pad_D8[0x90];                                      // 0x00D8(0x0090)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainAspect_Teleport;

// ScriptStruct GbxGame.MantleAttemptInfo
// 0x0028 (0x0028 - 0x0000)
struct FMantleAttemptInfo final
{
public:
	int32                                         ActionIndex;                                       // 0x0000(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Location;                                          // 0x0008(0x0018)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPrimitiveComponent*                    MovementBase;                                      // 0x0020(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FMantleAttemptInfo;

// ScriptStruct GbxGame.MantleActiveActionData
// 0x0030 (0x0030 - 0x0000)
struct FMantleActiveActionData final
{
public:
	struct FMantleAttemptInfo                     MantleAttempt;                                     // 0x0000(0x0028)(Transient, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FMantleActiveActionData;

// ScriptStruct GbxGame.InventoryParam
// 0x0028 (0x0028 - 0x0000)
struct FInventoryParam final
{
public:
	class FName                                   Name;                                              // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFInventoryParamType                          type;                                              // 0x0008(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	uint64                                        IntValue;                                          // 0x0010(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FloatValue;                                        // 0x0018(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FloatMin;                                          // 0x001C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FloatMax;                                          // 0x0020(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRandomized;                                       // 0x0024(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         BitSize;                                           // 0x0025(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int16                                         Index;                                             // 0x0026(0x0002)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FInventoryParam;

// ScriptStruct GbxGame.GbxActivityActorData
// 0x0058 (0x0058 - 0x0000)
struct FGbxActivityActorData final
{
public:
	uint8                                         Pad_0[0x8];                                        // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FNexusBitSet                           ActivityAreaActorTags;                             // 0x0008(0x0020)(Edit, NativeAccessSpecifierPrivate)
	class AGbxActivityArea*                       LinkedActivityArea;                                // 0x0028(0x0008)(Edit, ZeroConstructor, EditConst, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AActor*                                 Actor;                                             // 0x0030(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_38[0x20];                                      // 0x0038(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxActivityActorData;

// ScriptStruct GbxGame.AvatarGameDataBase
// 0x0028 (0x0030 - 0x0008)
struct FAvatarGameDataBase : public FGbxHasStructType
{
public:
	class FName                                   Category;                                          // 0x0008(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FNexusBitSet                           GameDataTags;                                      // 0x0010(0x0020)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FAvatarGameDataBase;

// ScriptStruct GbxGame.AvatarMaterialGameData
// 0x0000 (0x0030 - 0x0030)
struct FAvatarMaterialGameData final : public FAvatarGameDataBase
{
};
DUMPER7_ASSERTS_FAvatarMaterialGameData;

// ScriptStruct GbxGame.GbxInputActionEventInterpreter
// 0x0000 (0x0008 - 0x0008)
struct FGbxInputActionEventInterpreter final : public FGbxHasStructType
{
};
DUMPER7_ASSERTS_FGbxInputActionEventInterpreter;

// ScriptStruct GbxGame.GbxBrainAspect_Event
// 0x0010 (0x00E8 - 0x00D8)
struct FGbxBrainAspect_Event final : public FGbxBrainAspect
{
public:
	uint8                                         Pad_D8[0x10];                                      // 0x00D8(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainAspect_Event;

// ScriptStruct GbxGame.GbxStatusEffectDriver
// 0x0000 (0x0008 - 0x0008)
struct FGbxStatusEffectDriver : public FGbxHasStructType
{
};
DUMPER7_ASSERTS_FGbxStatusEffectDriver;

// ScriptStruct GbxGame.AvatarRequirementsChannel
// 0x0058 (0x0058 - 0x0000)
struct FAvatarRequirementsChannel final
{
public:
	class FName                                   channel;                                           // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FNexusBitSet                           FormTags;                                          // 0x0008(0x0020)(Edit, NativeAccessSpecifierPublic)
	ENexusBitSetOperator                          FormMode;                                          // 0x0028(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAllowEmpty;                                       // 0x0029(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAvatarSerialNumberBuilder             RecoverySerialNumber;                              // 0x0030(0x0010)(Edit, NativeAccessSpecifierPublic)
	struct FGbxInlineStruct                       FailureHandler;                                    // 0x0040(0x0018)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FAvatarRequirementsChannel;

// ScriptStruct GbxGame.AvatarRequirementsDef
// 0x0020 (0x0038 - 0x0018)
struct FAvatarRequirementsDef final : public FGbxDef
{
public:
	uint8                                         Pad_18[0x8];                                       // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAvatarRequirementsChannel>     Channels;                                          // 0x0020(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bAllowUnlistedChannels;                            // 0x0030(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FAvatarRequirementsDef;

// ScriptStruct GbxGame.CharacterRotateToCommand
// 0x0070 (0x0070 - 0x0000)
struct FCharacterRotateToCommand final
{
public:
	class AActor*                                 TargetActor;                                       // 0x0000(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   TargetSocket;                                      // 0x0008(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                TargetLocation;                                    // 0x0010(0x0018)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_28[0x20];                                      // 0x0028(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Duration;                                          // 0x0048(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFreezeRotation;                                   // 0x004C(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         InterpSpeed;                                       // 0x0050(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxYawRate;                                        // 0x0054(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxPitchRate;                                      // 0x0058(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseEasing;                                        // 0x005C(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUpdateCamera;                                     // 0x005D(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5E[0x2];                                       // 0x005E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxEasingFunc                         easing;                                            // 0x0060(0x000C)(BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FCharacterRotateToCommand;

// ScriptStruct GbxGame.CharacterRotateToState
// 0x0090 (0x0090 - 0x0000)
struct FCharacterRotateToState final
{
public:
	struct FCharacterRotateToCommand              CommandData;                                       // 0x0000(0x0070)(NativeAccessSpecifierPublic)
	uint8                                         Pad_70[0x20];                                      // 0x0070(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FCharacterRotateToState;

// ScriptStruct GbxGame.ConditionalCoordinatedMaterialData
// 0x0030 (0x0030 - 0x0000)
struct FConditionalCoordinatedMaterialData final
{
public:
	class UMaterialInterface*                     Material;                                          // 0x0000(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bUseGlobalInheritedParameters : 1;                 // 0x0008(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bInheritAllParameters : 1;                         // 0x0008(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           InheritedParameters;                               // 0x0010(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	class UMaterial*                              BaseMaterial;                                      // 0x0020(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MeshElementIndex;                                  // 0x0028(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FConditionalCoordinatedMaterialData;

// ScriptStruct GbxGame.GbxBodyNodeSettings
// 0x0000 (0x0038 - 0x0038)
struct FGbxBodyNodeSettings : public FGbxGraphNodeSettings
{
};
DUMPER7_ASSERTS_FGbxBodyNodeSettings;

// ScriptStruct GbxGame.GbxBodyNodeSettings_AvatarParameter
// 0x0060 (0x0098 - 0x0038)
struct FGbxBodyNodeSettings_AvatarParameter final : public FGbxBodyNodeSettings
{
public:
	class FName                                   Parameter;                                         // 0x0038(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Value;                                             // 0x0040(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSet<class FName>                             Channels;                                          // 0x0048(0x0050)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxBodyNodeSettings_AvatarParameter;

// ScriptStruct GbxGame.AvatarOptionFeatures
// 0x0030 (0x0038 - 0x0008)
struct FAvatarOptionFeatures final : public FGbxHasStructType
{
public:
	FGbxDefPtrProperty_                           Aspect;                                            // 0x0008(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bReplaceBaseFeatures;                              // 0x0020(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bReplaceExternalFeatures;                          // 0x0021(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGbxInlineStruct>               Features;                                          // 0x0028(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FAvatarOptionFeatures;

// ScriptStruct GbxGame.GbxSkillStateConditionData
// 0x0008 (0x0010 - 0x0008)
struct FGbxSkillStateConditionData : public FGbxHasStructType
{
public:
	bool                                          bInvertCondition;                                  // 0x0008(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxSkillStateConditionData;

// ScriptStruct GbxGame.GbxSkillStateConditionData_TargetList
// 0x0020 (0x0030 - 0x0010)
struct FGbxSkillStateConditionData_TargetList final : public FGbxSkillStateConditionData
{
public:
	FGbxDefPtrProperty_                           TargetList;                                        // 0x0010(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EGbxSkillComparisonOp                         Op;                                                // 0x0028(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Value;                                             // 0x002C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxSkillStateConditionData_TargetList;

// ScriptStruct GbxGame.GbxActorPartSelection
// 0x0028 (0x0028 - 0x0000)
struct FGbxActorPartSelection final
{
public:
	FGbxDefPtrProperty_                           SelectorDef;                                       // 0x0000(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGbxActorPartChoice>            choices;                                           // 0x0018(0x0010)(Edit, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxActorPartSelection;

// ScriptStruct GbxGame.GbxActorPartOwnerState
// 0x00D0 (0x00D0 - 0x0000)
struct FGbxActorPartOwnerState final
{
public:
	uint8                                         Pad_0[0xA0];                                       // 0x0000(0x00A0)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGbxActorPartSelection>         ReplicatedSelections;                              // 0x00A0(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                         Pad_B0[0x10];                                      // 0x00B0(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGbxActorPartSelection>         InstanceSelections;                                // 0x00C0(0x0010)(Edit, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, RepSkip, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxActorPartOwnerState;

// ScriptStruct GbxGame.GbxCapitalGameData
// 0x0000 (0x0008 - 0x0008)
struct FGbxCapitalGameData : public FGbxHasStructType
{
};
DUMPER7_ASSERTS_FGbxCapitalGameData;

// ScriptStruct GbxGame.GbxBrainAspectSettings_Follow
// 0x00B0 (0x0350 - 0x02A0)
struct FGbxBrainAspectSettings_Follow final : public FGbxBrainAspectSettings_Gps
{
public:
	struct FGbxParam                              StartNode;                                         // 0x02A0(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              GoalNode;                                          // 0x02D8(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              ActorToFollow;                                     // 0x0310(0x0038)(Edit, NativeAccessSpecifierPublic)
	bool                                          bAdvanceIfLeaderPassedGoal;                        // 0x0348(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCanChangePlayerTaget;                             // 0x0349(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34A[0x6];                                      // 0x034A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainAspectSettings_Follow;

// ScriptStruct GbxGame.JumpGoalCollectionDef
// 0x0050 (0x0068 - 0x0018)
struct FJumpGoalCollectionDef final : public FGbxDef
{
public:
	TMap<struct FGameplayTag, FGbxDefPtrProperty_> JumpTypes;                                        // 0x0018(0x0050)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FJumpGoalCollectionDef;

// ScriptStruct GbxGame.GbxSerialNumberIndex
// 0x0010 (0x0018 - 0x0008)
struct FGbxSerialNumberIndex final : public FGbxHasStructType
{
public:
	class FName                                   Category;                                          // 0x0008(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGbxSerialNumberIndexScope                    scope;                                             // 0x0010(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGbxSerialNumberIndexStatus                   status;                                            // 0x0011(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int16                                         Index;                                             // 0x0012(0x0002)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxSerialNumberIndex;

// ScriptStruct GbxGame.GbxSerialNumberAwareDef
// 0x0018 (0x0030 - 0x0018)
struct FGbxSerialNumberAwareDef : public FGbxDef
{
public:
	struct FGbxSerialNumberIndex                  SerialIndex;                                       // 0x0018(0x0018)(Edit, AdvancedDisplay, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxSerialNumberAwareDef;

// ScriptStruct GbxGame.GbxActorPartBaseDef
// 0x0050 (0x0080 - 0x0030)
struct FGbxActorPartBaseDef : public FGbxSerialNumberAwareDef
{
public:
	class FText                                   Description;                                       // 0x0030(0x0010)(Edit, NativeAccessSpecifierPrivate)
	TArray<FGbxDefPtrProperty_>                   IncludedParts;                                     // 0x0040(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<FGbxDefPtrProperty_>                   InsertIntoTheseParts;                              // 0x0050(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_60[0x16];                                      // 0x0060(0x0016)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bSkipThumbnailRendering;                           // 0x0076(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bDisplayAsColor;                                   // 0x0077(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         SortOrder;                                         // 0x0078(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxActorPartBaseDef;

// ScriptStruct GbxGame.GbxSkillComponentReference
// 0x0018 (0x0018 - 0x0000)
struct FGbxSkillComponentReference final
{
public:
	class UGbxSkillScript*                        Context;                                           // 0x0000(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGuid                                  ComponentID;                                       // 0x0008(0x0010)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxSkillComponentReference;

// ScriptStruct GbxGame.FactsConduitRegistryName
// 0x000C (0x000C - 0x0000)
struct FFactsConduitRegistryName final
{
public:
	struct FSToken                                Name;                                              // 0x0000(0x000C)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FFactsConduitRegistryName;

// ScriptStruct GbxGame.FactsConduit
// 0x00D0 (0x00D0 - 0x0000)
struct FFactsConduit final
{
public:
	struct FSToken                                SubmapName;                                        // 0x0000(0x000C)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bSaveStateToProfile;                               // 0x000C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_D[0xB];                                        // 0x000D(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSToken                                GroupName;                                         // 0x0018(0x000C)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FFactsConduitRegistryName              RegistryName;                                      // 0x0024(0x000C)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	TArray<struct FFactsConduitReaction>          FactChangeReactions;                               // 0x0030(0x0010)(Edit, ZeroConstructor, RepSkip, NativeAccessSpecifierPrivate)
	uint8                                         Pad_40[0x90];                                      // 0x0040(0x0090)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FFactsConduit;

// ScriptStruct GbxGame.DialogDecisionNode
// 0x0010 (0x0010 - 0x0000)
struct FDialogDecisionNode final
{
public:
	int16                                         Parent;                                            // 0x0000(0x0002)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int16                                         DecisionIndex;                                     // 0x0002(0x0002)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int16                                         TrueResultChild;                                   // 0x0004(0x0002)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int16                                         FalseResultChild;                                  // 0x0006(0x0002)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int16                                         UnrelatedResultChild;                              // 0x0008(0x0002)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int16                                         ResultBucket;                                      // 0x000A(0x0002)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxChildQuality;                                   // 0x000C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FDialogDecisionNode;

// ScriptStruct GbxGame.GbxRotationSettings
// 0x0000 (0x00A8 - 0x00A8)
struct FGbxRotationSettings final : public FGbxGraphSettings
{
};
DUMPER7_ASSERTS_FGbxRotationSettings;

// ScriptStruct GbxGame.GameResourcePoolReference
// 0x0020 (0x0020 - 0x0000)
struct alignas(0x08) FGameResourcePoolReference final
{
public:
	uint8                                         Pad_0[0x20];                                       // 0x0000(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGameResourcePoolReference;

// ScriptStruct GbxGame.MissionActionTypeBase
// 0x0018 (0x0020 - 0x0008)
struct FMissionActionTypeBase : public FGbxHasStructType
{
public:
	TArray<struct FGbxInlineStruct>               Conditions;                                        // 0x0008(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bShouldDelay;                                      // 0x0018(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DelayForSeconds;                                   // 0x001C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FMissionActionTypeBase;

// ScriptStruct GbxGame.MissionActionType_BatchActionOnAliases
// 0x0020 (0x0040 - 0x0020)
struct FMissionActionType_BatchActionOnAliases final : public FMissionActionTypeBase
{
public:
	EToggleAlias_FilterType                       TypeFilter;                                        // 0x0020(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 NamePrefixFilter;                                  // 0x0028(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnabled;                                          // 0x0038(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FMissionActionType_BatchActionOnAliases;

// ScriptStruct GbxGame.DialogParameterMapping
// 0x0020 (0x0028 - 0x0008)
struct FDialogParameterMapping final : public FGbxHasStructType
{
public:
	FGbxDefPtrProperty_                           TargetParameter;                                   // 0x0008(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EDialogParameterMappingSourceType             SourceType;                                        // 0x0020(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FDialogParameterMapping;

// ScriptStruct GbxGame.GbxDialogConditionRequirement
// 0x0040 (0x0040 - 0x0000)
struct FGbxDialogConditionRequirement final
{
public:
	TSoftObjectPtr<class UGbxDialogFunction>      FunctionCall;                                      // 0x0000(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FDialogParameterMapping>        ParameterMappings;                                 // 0x0028(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	uint32                                        DecisionNumber;                                    // 0x0038(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxDialogConditionRequirement;

// ScriptStruct GbxGame.GbxRotationChannelData
// 0x0028 (0x0030 - 0x0008)
struct FGbxRotationChannelData : public FGbxHasStructType
{
public:
	bool                                          bUseRotationRate;                                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RotationRate;                                      // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGbxInlineStruct>               DefaultTargetModifiers;                            // 0x0010(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FGbxInlineStruct>               Children;                                          // 0x0020(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxRotationChannelData;

// ScriptStruct GbxGame.GbxRotationChannelData_Child
// 0x0038 (0x0068 - 0x0030)
struct FGbxRotationChannelData_Child : public FGbxRotationChannelData
{
public:
	struct FGameplayTag                           ChannelName;                                       // 0x0030(0x0008)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   PivotBoneName;                                     // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   DisableCurve;                                      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BlendInTime;                                       // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BlendOutTime;                                      // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FNumericRange                          ClampYawRange;                                     // 0x0050(0x0008)(NoDestructor, NativeAccessSpecifierPublic)
	struct FNumericRange                          ClampPitchRange;                                   // 0x0058(0x0008)(NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bDragParentIfClamped;                              // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bBoostWithParentRotation;                          // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseParentTargetAndState;                          // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_63[0x5];                                       // 0x0063(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxRotationChannelData_Child;

// ScriptStruct GbxGame.GbxRotationChannelData_Head
// 0x0000 (0x0068 - 0x0068)
struct FGbxRotationChannelData_Head final : public FGbxRotationChannelData_Child
{
};
DUMPER7_ASSERTS_FGbxRotationChannelData_Head;

// ScriptStruct GbxGame.GbxDiscoveryOfflineAreaShape
// 0x0090 (0x0090 - 0x0000)
struct FGbxDiscoveryOfflineAreaShape final
{
public:
	struct FTransform                             ShapeTransform;                                    // 0x0000(0x0060)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGbxDiscoveryOfflineAreaShapeType             ShapeType;                                         // 0x0060(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                BoxExtent;                                         // 0x0068(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SphereRadius;                                      // 0x0080(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CapsuleHalfHeight;                                 // 0x0084(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CapsuleRadius;                                     // 0x0088(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxDiscoveryOfflineAreaShape;

// ScriptStruct GbxGame.GbxSkillStateDef
// 0x0018 (0x0030 - 0x0018)
struct FGbxSkillStateDef final : public FGbxDef
{
public:
	FGameDataHandleProperty_                      Outer;                                             // 0x0018(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxSkillStateDef;

// ScriptStruct GbxGame.GpsGeneratorSettings_GbxSkillTargetList
// 0x0018 (0x01E0 - 0x01C8)
struct FGpsGeneratorSettings_GbxSkillTargetList final : public FGpsGeneratorSettings_Actors
{
public:
	FGameDataHandleProperty_                      TargetListDef;                                     // 0x01C8(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGpsGeneratorSettings_GbxSkillTargetList;

// ScriptStruct GbxGame.MantleTraceInputs
// 0x0098 (0x0098 - 0x0000)
struct FMantleTraceInputs final
{
public:
	uint8                                         Pad_0[0x70];                                       // 0x0000(0x0070)(Fixing Size After Last Property [ Dumper-7 ])
	class UWorld*                                 World;                                             // 0x0070(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_78[0x8];                                       // 0x0078(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 SourceActor;                                       // 0x0080(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_88[0x10];                                      // 0x0088(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FMantleTraceInputs;

// ScriptStruct GbxGame.MantleTraceCheck
// 0x0470 (0x0470 - 0x0000)
struct FMantleTraceCheck final
{
public:
	struct FMantleTraceInputs                     Inputs;                                            // 0x0000(0x0098)(Transient, NativeAccessSpecifierPublic)
	uint8                                         Pad_98[0x3D8];                                     // 0x0098(0x03D8)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FMantleTraceCheck;

// ScriptStruct GbxGame.MantleState
// 0x0C88 (0x0C88 - 0x0000)
struct FMantleState final
{
public:
	class UGbxCharacterMovementComponent*         MovementComponentOwner;                            // 0x0000(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_8[0x10];                                       // 0x0008(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMantleActiveActionData                ActiveActionData;                                  // 0x0018(0x0030)(Transient, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                         Pad_48[0x7D0];                                     // 0x0048(0x07D0)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMantleTraceCheck                      CurrentTrace;                                      // 0x0818(0x0470)(Transient, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FMantleState;

// ScriptStruct GbxGame.DialogParameterValue
// 0x0040 (0x0040 - 0x0000)
struct alignas(0x08) FDialogParameterValue final
{
public:
	uint8                                         Pad_0[0x40];                                       // 0x0000(0x0040)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FDialogParameterValue;

// ScriptStruct GbxGame.DialogEventParameters
// 0x0050 (0x0050 - 0x0000)
struct FDialogEventParameters final
{
public:
	TMap<FGbxDefPtrProperty_, struct FDialogParameterValue> Parameters;                              // 0x0000(0x0050)(Edit, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FDialogEventParameters;

// ScriptStruct GbxGame.GbxBrainAspectSettings_DialogCondition
// 0x00A0 (0x00A0 - 0x0000)
struct FGbxBrainAspectSettings_DialogCondition final
{
public:
	struct FGbxParam                              Condition;                                         // 0x0000(0x0038)(Edit, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           DialogEvent;                                       // 0x0038(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDialogEventParameters                 DialogEventParams;                                 // 0x0050(0x0050)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxBrainAspectSettings_DialogCondition;

// ScriptStruct GbxGame.GbxBrainAspectSettings_DialogEvent
// 0x00F8 (0x0178 - 0x0080)
struct FGbxBrainAspectSettings_DialogEvent final : public FGbxBrainAspectSettings
{
public:
	TArray<struct FGbxBrainAspectSettings_DialogCondition> ConditionalDialogEvents;                  // 0x0080(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           DialogEventDef;                                    // 0x0090(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDialogEventParameters                 DialogEventParams;                                 // 0x00A8(0x0050)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              DialogStartDelay;                                  // 0x00F8(0x0038)(Edit, NativeAccessSpecifierPublic)
	bool                                          PlayOnStop;                                        // 0x0130(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              DialogCooldownTime;                                // 0x0138(0x0038)(Edit, NativeAccessSpecifierPublic)
	bool                                          bUseDialogCooldownTime;                            // 0x0170(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainAspectSettings_DialogEvent;

// ScriptStruct GbxGame.GbxActorPartGestaltList
// 0x0010 (0x0010 - 0x0000)
struct FGbxActorPartGestaltList final
{
public:
	TArray<TSoftObjectPtr<class USkeletalMesh>>   Meshes;                                            // 0x0000(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxActorPartGestaltList;

// ScriptStruct GbxGame.GbxActorPartGestaltSet
// 0x0060 (0x0060 - 0x0000)
struct FGbxActorPartGestaltSet
{
public:
	TArray<TSoftObjectPtr<class USkeletalMesh>>   Meshes3rd;                                         // 0x0000(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TMap<struct FGameplayTag, struct FGbxActorPartGestaltList> ViewTargetMeshes;                     // 0x0010(0x0050)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxActorPartGestaltSet;

// ScriptStruct GbxGame.GbxActorPartGestaltMatchSet
// 0x0020 (0x0080 - 0x0060)
struct FGbxActorPartGestaltMatchSet final : public FGbxActorPartGestaltSet
{
public:
	struct FGameplayTagContainer                  matchtags;                                         // 0x0060(0x0020)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxActorPartGestaltMatchSet;

// ScriptStruct GbxGame.LightProjectileAttachment
// 0x0060 (0x0060 - 0x0000)
struct FLightProjectileAttachment final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneComponent*                        Component;                                         // 0x0008(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   socket;                                            // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector_NetQuantize100                 RelativeLocation;                                  // 0x0018(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               RelativeRotation;                                  // 0x0030(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector_NetQuantizeNormal              RelativeImpactNormal;                              // 0x0048(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FLightProjectileAttachment;

// ScriptStruct GbxGame.GbxDiscoveryCategoryDef
// 0x0018 (0x0030 - 0x0018)
struct FGbxDiscoveryCategoryDef : public FGbxDef
{
public:
	FGbxDefPtrProperty_                           CategoryPresentation;                              // 0x0018(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxDiscoveryCategoryDef;

// ScriptStruct GbxGame.GxInputEventActionCondition
// 0x0020 (0x0028 - 0x0008)
struct FGxInputEventActionCondition : public FGbxHasStructType
{
public:
	FGameDataHandleProperty_                      ActionDef;                                         // 0x0008(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bInvertCondition;                                  // 0x0020(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGxInputEventActionCondition;

// ScriptStruct GbxGame.GbxMomentParamWaitBehavior
// 0x0040 (0x0040 - 0x0000)
struct FGbxMomentParamWaitBehavior final
{
public:
	EGbxMomentParamWaitType                       WaitType;                                          // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              MaxWaitTime;                                       // 0x0008(0x0038)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxMomentParamWaitBehavior;

// ScriptStruct GbxGame.GbxMomentNodeSettings
// 0x0048 (0x0080 - 0x0038)
struct FGbxMomentNodeSettings : public FGbxGraphNodeSettings
{
public:
	bool                                          bOverrideDefaultWaitBehavior;                      // 0x0038(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxMomentParamWaitBehavior            OverrideWaitBehavior;                              // 0x0040(0x0040)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxMomentNodeSettings;

// ScriptStruct GbxGame.GbxMomentNodeSettings_PlaySound
// 0x0160 (0x01E0 - 0x0080)
struct FGbxMomentNodeSettings_PlaySound final : public FGbxMomentNodeSettings
{
public:
	struct FGbxParam                              ContextActor;                                      // 0x0080(0x0038)(Edit, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           WwiseEvent;                                        // 0x00B8(0x0018)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxAudioEvent                         AudioEvent;                                        // 0x00D0(0x0030)(Edit, NativeAccessSpecifierPublic)
	EMomentNodePlaySoundType                      PerformanceMode;                                   // 0x0100(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   NameOrSocket;                                      // 0x0104(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              WorldLocation;                                     // 0x0110(0x0038)(Edit, NativeAccessSpecifierPublic)
	bool                                          bWaitForPlaybackEnd;                               // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAudioEmitterSource                 EmitterSource;                                     // 0x0150(0x0080)(Edit, NoDestructor, AdvancedDisplay, NativeAccessSpecifierPublic)
	bool                                          bAttachToSocket;                                   // 0x01D0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D1[0xF];                                      // 0x01D1(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxMomentNodeSettings_PlaySound;

// ScriptStruct GbxGame.DamageSourceContainer
// 0x0040 (0x0040 - 0x0000)
struct alignas(0x08) FDamageSourceContainer final
{
public:
	uint8                                         Pad_0[0x40];                                       // 0x0000(0x0040)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FDamageSourceContainer;

// ScriptStruct GbxGame.DamageTags
// 0x0000 (0x0020 - 0x0020)
struct FDamageTags final : public FNexusBitSet
{
};
DUMPER7_ASSERTS_FDamageTags;

// ScriptStruct GbxGame.ProjectileTakingDamageDetails
// 0x00F8 (0x00F8 - 0x0000)
struct FProjectileTakingDamageDetails final
{
public:
	FGameDataHandleProperty_                      DamageType;                                        // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDamageSourceContainer                 DamageSource;                                      // 0x0018(0x0040)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class AController*                            InstigatedBy;                                      // 0x0058(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 DamageCauser;                                      // 0x0060(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0068(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                HitLocation;                                       // 0x0070(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                HitDirection;                                      // 0x0088(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                HitForce;                                          // 0x00A0(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                RadiusDamageOrigin;                                // 0x00B8(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         damageradius;                                      // 0x00D0(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDamageTags                            DamageTags;                                        // 0x00D8(0x0020)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FProjectileTakingDamageDetails;

// ScriptStruct GbxGame.GbxBodyNodeState
// 0x0018 (0x0068 - 0x0050)
struct FGbxBodyNodeState : public FGbxGraphNodeState
{
public:
	uint8                                         Pad_50[0x18];                                      // 0x0050(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBodyNodeState;

// ScriptStruct GbxGame.GbxBodyNodeState_AttachableRoot
// 0x0010 (0x0078 - 0x0068)
struct FGbxBodyNodeState_AttachableRoot final : public FGbxBodyNodeState
{
public:
	uint8                                         Pad_68[0x10];                                      // 0x0068(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBodyNodeState_AttachableRoot;

// ScriptStruct GbxGame.GbxRotationTarget
// 0x0048 (0x0048 - 0x0000)
struct alignas(0x08) FGbxRotationTarget final
{
public:
	uint8                                         Pad_0[0x48];                                       // 0x0000(0x0048)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxRotationTarget;

// ScriptStruct GbxGame.CosmeticReplicationRequest
// 0x0010 (0x0010 - 0x0000)
struct alignas(0x08) FCosmeticReplicationRequest
{
public:
	uint8                                         Pad_0[0x10];                                       // 0x0000(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FCosmeticReplicationRequest;

// ScriptStruct GbxGame.ReplicatedImpactEffectRequest
// 0x01A0 (0x01B0 - 0x0010)
struct alignas(0x10) FReplicatedImpactEffectRequest final : public FCosmeticReplicationRequest
{
public:
	uint8                                         Pad_10[0x1A0];                                     // 0x0010(0x01A0)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FReplicatedImpactEffectRequest;

// ScriptStruct GbxGame.GbxTrickState
// 0x00F0 (0x00F0 - 0x0000)
struct FGbxTrickState final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TScriptInterface<class IGbxTrickInterface>    owner;                                             // 0x0008(0x0010)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UGbxTrickScript*>                InstancedScripts;                                  // 0x0018(0x0010)(ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPrivate)
	uint8                                         Pad_28[0xC8];                                      // 0x0028(0x00C8)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxTrickState;

// ScriptStruct GbxGame.GbxActorScriptInstanceDataReferencedNamePair
// 0x0010 (0x0010 - 0x0000)
struct FGbxActorScriptInstanceDataReferencedNamePair final
{
public:
	class UObject*                                Object;                                            // 0x0000(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   Name;                                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxActorScriptInstanceDataReferencedNamePair;

// ScriptStruct GbxGame.GbxActorScriptInstanceData
// 0x0088 (0x0088 - 0x0000)
struct FGbxActorScriptInstanceData final
{
public:
	TSubclassOf<class UObject>                    ScriptClass;                                       // 0x0000(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<uint8>                                 SavedProperties;                                   // 0x0008(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UObject*>                        ReferencedObjects;                                 // 0x0018(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class FName>                           ReferencedNames;                                   // 0x0028(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FGbxActorScriptInstanceDataReferencedNamePair> ReferencedSearchableNames;          // 0x0038(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<FGameDataHandleProperty_>              ReferencedGameDataHandles;                         // 0x0048(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<FGbxDefPtrProperty_>                   ReferencedDefPtrs;                                 // 0x0058(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_68[0x20];                                      // 0x0068(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxActorScriptInstanceData;

// ScriptStruct GbxGame.GbxActorScriptOwnerState
// 0x0080 (0x0080 - 0x0000)
struct FGbxActorScriptOwnerState final
{
public:
	uint8                                         Pad_0[0x20];                                       // 0x0000(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSubclassOf<class UGbxActorScript>>    Scripts;                                           // 0x0020(0x0010)(ZeroConstructor, Transient, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<class UGbxActorScript*>                Instances;                                         // 0x0030(0x0010)(Edit, ExportObject, ZeroConstructor, Transient, EditConst, ContainsInstancedReference, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<struct FGbxActorScriptInstanceData>    InstanceDataCache;                                 // 0x0040(0x0010)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TScriptInterface<class IGbxActorScriptInterface> owner;                                          // 0x0050(0x0010)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AActor*                                 ActorOwner;                                        // 0x0060(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_68[0x8];                                       // 0x0068(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UGbxActorScript*>                ReplicatedInstances;                               // 0x0070(0x0010)(ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
};
DUMPER7_ASSERTS_FGbxActorScriptOwnerState;

// ScriptStruct GbxGame.GbxSkillComponent
// 0x0048 (0x0050 - 0x0008)
struct FGbxSkillComponent : public FGbxHasStructType
{
public:
	uint8                                         Pad_8[0x48];                                       // 0x0008(0x0048)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxSkillComponent;

// ScriptStruct GbxGame.GbxSkillComponent_DelegateEx
// 0x0010 (0x0060 - 0x0050)
struct FGbxSkillComponent_DelegateEx final : public FGbxSkillComponent
{
public:
	uint8                                         Pad_50[0x10];                                      // 0x0050(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxSkillComponent_DelegateEx;

// ScriptStruct GbxGame.MissionAliasRef
// 0x000C (0x000C - 0x0000)
struct FMissionAliasRef final
{
public:
	struct FSToken                                AliasName;                                         // 0x0000(0x000C)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FMissionAliasRef;

// ScriptStruct GbxGame.MissionActionType_FinishTask
// 0x0010 (0x0030 - 0x0020)
struct FMissionActionType_FinishTask final : public FMissionActionTypeBase
{
public:
	struct FMissionAliasRef                       TaskAlias;                                         // 0x0020(0x000C)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FMissionActionType_FinishTask;

// ScriptStruct GbxGame.GbxBrainAspectSettings_MaxChildActors
// 0x0078 (0x00F8 - 0x0080)
struct FGbxBrainAspectSettings_MaxChildActors final : public FGbxBrainAspectSettings
{
public:
	struct FGbxParam                              MaxLivingChildren;                                 // 0x0080(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              MaxTotalChildren;                                  // 0x00B8(0x0038)(Edit, NativeAccessSpecifierPublic)
	bool                                          bCheckMaxChildren;                                 // 0x00F0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInvert;                                           // 0x00F1(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F2[0x6];                                       // 0x00F2(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainAspectSettings_MaxChildActors;

// ScriptStruct GbxGame.LightProjectileQueryData
// 0x0050 (0x0050 - 0x0000)
struct FLightProjectileQueryData final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ELightProjectileQueryActorType                ActorType;                                         // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FGameDataHandleProperty_                      ProjectileDef;                                     // 0x0010(0x0018)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   Name;                                              // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDamageTags                            DamageTags;                                        // 0x0030(0x0020)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FLightProjectileQueryData;

// ScriptStruct GbxGame.GbxGameModePhaseDef
// 0x0018 (0x0030 - 0x0018)
struct FGbxGameModePhaseDef final : public FGbxDef
{
public:
	FGbxDefPtrProperty_                           DisplayData;                                       // 0x0018(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxGameModePhaseDef;

// ScriptStruct GbxGame.HitRegionInfo
// 0x0020 (0x0020 - 0x0000)
struct alignas(0x08) FHitRegionInfo final
{
public:
	FGameDataHandleProperty_                      def;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_18[0x8];                                       // 0x0018(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FHitRegionInfo;

// ScriptStruct GbxGame.HealthTypeDamageSummary
// 0x0020 (0x0020 - 0x0000)
struct alignas(0x08) FHealthTypeDamageSummary final
{
public:
	FGameDataHandleProperty_                      HealthType;                                        // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         damage;                                            // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FHealthTypeDamageSummary;

// ScriptStruct GbxGame.CausedDamageDetails
// 0x0128 (0x0128 - 0x0000)
struct FCausedDamageDetails final
{
public:
	float                                         damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bWasCrit;                                          // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	FGameDataHandleProperty_                      DamageType;                                        // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDamageSourceContainer                 DamageSource;                                      // 0x0020(0x0040)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class AActor*                                 DamageInstigator;                                  // 0x0060(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 DamageCauser;                                      // 0x0068(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0070(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                HitLocation;                                       // 0x0078(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                HitDirection;                                      // 0x0090(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FHitRegionInfo                         HitRegion;                                         // 0x00A8(0x0020)(BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FHealthTypeDamageSummary>       DamagePerHealthType;                               // 0x00C8(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FVector                                RadiusDamageOrigin;                                // 0x00D8(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         damageradius;                                      // 0x00F0(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsDamageOverTime;                                 // 0x00F4(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCausedDeath;                                      // 0x00F5(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F6[0x2];                                       // 0x00F6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         OverkillDamage;                                    // 0x00F8(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bWasOverkill;                                      // 0x00FC(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_FD[0x3];                                       // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDamageTags                            DamageTags;                                        // 0x0100(0x0020)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	bool                                          bWasSplashDamage;                                  // 0x0120(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCausedByChild;                                    // 0x0121(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bWasFullyHealthy;                                  // 0x0122(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_123[0x5];                                      // 0x0123(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FCausedDamageDetails;

// ScriptStruct GbxGame.GbxActorPartChecklistItem
// 0x0020 (0x0020 - 0x0000)
struct alignas(0x08) FGbxActorPartChecklistItem final
{
public:
	FGbxDefPtrProperty_                           part;                                              // 0x0000(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Chance;                                            // 0x0018(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxActorPartChecklistItem;

// ScriptStruct GbxGame.GbxActorPartDef_Checklist
// 0x0010 (0x0090 - 0x0080)
struct FGbxActorPartDef_Checklist final : public FGbxActorPartBaseDef
{
public:
	TArray<struct FGbxActorPartChecklistItem>     parts;                                             // 0x0080(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxActorPartDef_Checklist;

// ScriptStruct GbxGame.GbxMomentNodeSettings_If
// 0x0038 (0x00B8 - 0x0080)
struct FGbxMomentNodeSettings_If final : public FGbxMomentNodeSettings
{
public:
	struct FGbxParam                              Condition;                                         // 0x0080(0x0038)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxMomentNodeSettings_If;

// ScriptStruct GbxGame.GbxSkillAnimTrick
// 0x0048 (0x0048 - 0x0000)
struct FGbxSkillAnimTrick final
{
public:
	EGbxSkillAnimTrickSource                      Source;                                            // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UGbxTrick>               Trick;                                             // 0x0008(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGbxInlineStruct                       Resolver;                                          // 0x0030(0x0018)(Edit, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxSkillAnimTrick;

// ScriptStruct GbxGame.GbxSkillActionItem
// 0x0060 (0x0068 - 0x0008)
struct FGbxSkillActionItem : public FGbxHasStructType
{
public:
	uint8                                         Pad_8[0xC];                                        // 0x0008(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ItemName;                                          // 0x0014(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FGbxDefPtrProperty_                           ActiveStateDef;                                    // 0x0020(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FGbxInlineStruct>               StartActions;                                      // 0x0038(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FGbxInlineStruct>               StopActions;                                       // 0x0048(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	bool                                          bExecOutput;                                       // 0x0058(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ExecName;                                          // 0x005C(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         NetID;                                             // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxSkillActionItem;

// ScriptStruct GbxGame.GbxSkillActionItem_SingleTrick
// 0x0048 (0x00B0 - 0x0068)
struct FGbxSkillActionItem_SingleTrick : public FGbxSkillActionItem
{
public:
	struct FGbxSkillAnimTrick                     AnimTrick;                                         // 0x0068(0x0048)(Edit, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxSkillActionItem_SingleTrick;

// ScriptStruct GbxGame.AvatarOptionFeature
// 0x0008 (0x0010 - 0x0008)
struct FAvatarOptionFeature : public FGbxHasStructType
{
public:
	class FName                                   channel;                                           // 0x0008(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
};
DUMPER7_ASSERTS_FAvatarOptionFeature;

// ScriptStruct GbxGame.AvatarOptionFeatureByAspect
// 0x0000 (0x0010 - 0x0010)
struct FAvatarOptionFeatureByAspect : public FAvatarOptionFeature
{
};
DUMPER7_ASSERTS_FAvatarOptionFeatureByAspect;

// ScriptStruct GbxGame.AvatarOptionFeatureSkelMeshBundle
// 0x0018 (0x0028 - 0x0010)
struct FAvatarOptionFeatureSkelMeshBundle final : public FAvatarOptionFeatureByAspect
{
public:
	TArray<TSoftObjectPtr<class USkeletalMesh>>   SkelMeshes;                                        // 0x0010(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	int16                                         ViewablePriority;                                  // 0x0020(0x0002)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FAvatarOptionFeatureSkelMeshBundle;

// ScriptStruct GbxGame.HealthTypeDef
// 0x01A0 (0x01B8 - 0x0018)
struct FHealthTypeDef final : public FGbxDef
{
public:
	EHealthUIType                                 DisplayColor;                                      // 0x0018(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EHealthVariation                              Variation;                                         // 0x0019(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bResetIdleTimerIfNoDamage;                         // 0x001A(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B[0x5];                                       // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UPhysicalMaterial>       PhysicalMaterial;                                  // 0x0020(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UPhysicalMaterial>       NoDamagePhysicalMaterial;                          // 0x0048(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  GameplayTags;                                      // 0x0070(0x0020)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                          bPassthroughDamage;                                // 0x0090(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAttributeInit                      PassthroughDamageModifier;                         // 0x0098(0x0050)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bNegateDamage;                                     // 0x00E8(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAttributeInit                      NegatedDamageModifier;                             // 0x00F0(0x0050)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bTakeAllDamageWhileCharged;                        // 0x0140(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_141[0x3];                                      // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   GlobalBalanceName;                                 // 0x0144(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14C[0x4];                                      // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGbxUEDataTableRowHandle>       PlaythroughBalanceData;                            // 0x0150(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                          bEnableSegmentDamageProtection;                    // 0x0160(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bClampDamageToSegmentSize;                         // 0x0161(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_162[0x6];                                      // 0x0162(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAttributeInit                      SegmentRefilledByDamageScale;                      // 0x0168(0x0050)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FHealthTypeDef;

// ScriptStruct GbxGame.GbxSkillAliasDef
// 0x0000 (0x0018 - 0x0018)
struct FGbxSkillAliasDef final : public FGbxDef
{
};
DUMPER7_ASSERTS_FGbxSkillAliasDef;

// ScriptStruct GbxGame.LightBeamParticlePoolData
// 0x0010 (0x0010 - 0x0000)
struct FLightBeamParticlePoolData final
{
public:
	class UFXSystemComponent*                     PSC;                                               // 0x0000(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FLightBeamParticlePoolData;

// ScriptStruct GbxGame.AvatarOptionFeatureAttachableBody
// 0x0028 (0x0038 - 0x0010)
struct FAvatarOptionFeatureAttachableBody final : public FAvatarOptionFeatureByAspect
{
public:
	TSoftObjectPtr<class UGbxAttachableBodyData>  AttachableBody;                                    // 0x0010(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FAvatarOptionFeatureAttachableBody;

// ScriptStruct GbxGame.GbxIdleTurn
// 0x000C (0x000C - 0x0000)
struct alignas(0x04) FGbxIdleTurn final
{
public:
	uint8                                         Pad_0[0xC];                                        // 0x0000(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxIdleTurn;

// ScriptStruct GbxGame.GbxMovingPlatformMoveState
// 0x00F0 (0x00F0 - 0x0000)
struct FGbxMovingPlatformMoveState final
{
public:
	int32                                         MoveId;                                            // 0x0000(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        MoveStartTime;                                     // 0x0008(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MoveTime;                                          // 0x0010(0x0004)(ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0xC];                                       // 0x0014(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             StartingTransform;                                 // 0x0020(0x0060)(Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                             TargetTransform;                                   // 0x0080(0x0060)(Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MoveDuration;                                      // 0x00E0(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bTeleport;                                         // 0x00E4(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsFollowSpline;                                   // 0x00E5(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E6[0x2];                                       // 0x00E6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TimeDilation;                                      // 0x00E8(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxMovingPlatformMoveState;

// ScriptStruct GbxGame.FactsDependencyListEntry
// 0x0030 (0x0030 - 0x0000)
struct FFactsDependencyListEntry final
{
public:
	EFactsDependencyListEntryType                 type;                                              // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFactExpression                        Expression;                                        // 0x0008(0x0010)(Edit, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      MissionEntity;                                     // 0x0018(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FFactsDependencyListEntry;

// ScriptStruct GbxGame.FactsDependencyList
// 0x0010 (0x0010 - 0x0000)
struct FFactsDependencyList final
{
public:
	TArray<struct FFactsDependencyListEntry>      Entries;                                           // 0x0000(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FFactsDependencyList;

// ScriptStruct GbxGame.MissionEntityParentBase
// 0x0040 (0x0058 - 0x0018)
struct FMissionEntityParentBase : public FGbxDef
{
public:
	uint8                                         Pad_18[0x40];                                      // 0x0018(0x0040)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FMissionEntityParentBase;

// ScriptStruct GbxGame.MissionSetDef
// 0x0078 (0x00D0 - 0x0058)
struct FMissionSetDef : public FMissionEntityParentBase
{
public:
	uint8                                         Pad_58[0x30];                                      // 0x0058(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFactsDependencyList                   ManualDependencies;                                // 0x0088(0x0010)(Edit, NativeAccessSpecifierPublic)
	struct FFactsDependencyList                   GeneratedDependencies;                             // 0x0098(0x0010)(Edit, EditConst, NativeAccessSpecifierPublic)
	bool                                          bChained;                                          // 0x00A8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FNexusBitSet                           tags;                                              // 0x00B0(0x0020)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FMissionSetDef;

// ScriptStruct GbxGame.FactsBinderBehaviorMod
// 0x0010 (0x0018 - 0x0008)
struct FFactsBinderBehaviorMod : public FGbxHasStructType
{
public:
	uint8                                         Pad_8[0x10];                                       // 0x0008(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FFactsBinderBehaviorMod;

// ScriptStruct GbxGame.BinderBehaviorMod_AttachBody
// 0x0028 (0x0040 - 0x0018)
struct FBinderBehaviorMod_AttachBody final : public FFactsBinderBehaviorMod
{
public:
	TSoftObjectPtr<class UGbxAttachableBodyData>  Body;                                              // 0x0018(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FBinderBehaviorMod_AttachBody;

// ScriptStruct GbxGame.GbxStatusEffectModifierInitBase
// 0x0060 (0x0060 - 0x0000)
struct FGbxStatusEffectModifierInitBase
{
public:
	EGbxStatusEffectModifierAppType               AppType;                                           // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         priority;                                          // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Flags;                                             // 0x0008(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAttributeInit                      ValueInit;                                         // 0x0010(0x0050)(Edit, NoDestructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxStatusEffectModifierInitBase;

// ScriptStruct GbxGame.GbxStatusEffectModifierInit
// 0x0028 (0x0088 - 0x0060)
struct FGbxStatusEffectModifierInit final : public FGbxStatusEffectModifierInitBase
{
public:
	TSoftClassPtr<class UClass>                   ModifierType;                                      // 0x0060(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxStatusEffectModifierInit;

// ScriptStruct GbxGame.GbxStatusEffectApplicationModifierSet
// 0x0010 (0x0010 - 0x0000)
struct FGbxStatusEffectApplicationModifierSet final
{
public:
	TArray<struct FGbxStatusEffectModifierInit>   Modifiers;                                         // 0x0000(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxStatusEffectApplicationModifierSet;

// ScriptStruct GbxGame.HitRegionHealthParams
// 0x0028 (0x0028 - 0x0000)
struct alignas(0x08) FHitRegionHealthParams final
{
public:
	float                                         OwnerHealthPercent;                                // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOwnerTotalMaxHealth;                              // 0x0004(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         HealthSlot;                                        // 0x0005(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	FGameDataHandleProperty_                      ResourcePoolDef;                                   // 0x0008(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EHitRegionDamageRule                          DamageRule;                                        // 0x0020(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FHitRegionHealthParams;

// ScriptStruct GbxGame.HitRegionDef
// 0x0298 (0x02B0 - 0x0018)
struct FHitRegionDef final : public FGbxDef
{
public:
	uint8                                         bIsDefault : 1;                                    // 0x0018(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bCanEverTakeRadiusDamage : 1;                      // 0x0018(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bMustOverlapRadiusDamage : 1;                      // 0x0018(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bCriticalHit : 1;                                  // 0x0018(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bAllowCriticalRadiusDamage : 1;                    // 0x0018(0x0001)(BitIndex: 0x04, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bShouldBlockAreaDamage : 1;                        // 0x0018(0x0001)(BitIndex: 0x05, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bAllowRadiusDamageToBeConvertedToImpactDamage : 1; // 0x0018(0x0001)(BitIndex: 0x06, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bShowDamageNumbers : 1;                            // 0x0018(0x0001)(BitIndex: 0x07, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bShowZeroDamage : 1;                               // 0x0019(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bShowCrosshairHitMarker : 1;                       // 0x0019(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bPlayHitNotifySounds : 1;                          // 0x0019(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bPlayZeroDamageHitNotifySound : 1;                 // 0x0019(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bTrackDamage : 1;                                  // 0x0019(0x0001)(BitIndex: 0x04, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bPlayImactEffectWithNoDamage : 1;                  // 0x0019(0x0001)(BitIndex: 0x05, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bDisableHitReactions : 1;                          // 0x0019(0x0001)(BitIndex: 0x06, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bUseDamageScale : 1;                               // 0x0019(0x0001)(BitIndex: 0x07, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxStatusEffectApplicationModifierSet StatusEffectModifierSet;                           // 0x0020(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGbxAttributeInit                      DamageScale;                                       // 0x0030(0x0050)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FGbxAttributeInit                      DotDamageScale;                                    // 0x0080(0x0050)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         bUseDotDamageScale : 1;                            // 0x00D0(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bCanReflect : 1;                                   // 0x00D0(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bCanRicochet : 1;                                  // 0x00D0(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bRicochetIfReflectionFails : 1;                    // 0x00D0(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bAlwaysReflectToAttacker : 1;                      // 0x00D0(0x0001)(BitIndex: 0x04, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAttributeInit                      ReflectionChance;                                  // 0x00D8(0x0050)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FGbxAttributeInit                      RicochetChance;                                    // 0x0128(0x0050)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	float                                         ReflectionAccuracyModifier;                        // 0x0178(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_17C[0x4];                                      // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAttributeInit                      IncomingReflectedDamageScale;                      // 0x0180(0x0050)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FGbxAttributeInit                      OutgoingReflectedDamageScale;                      // 0x01D0(0x0050)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FDamageTags                            ReflectedDamageTags;                               // 0x0220(0x0020)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FHitRegionHealthParams                 Health;                                            // 0x0240(0x0028)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      ImpactEffect;                                      // 0x0268(0x0018)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UPhysicalMaterial>       PhysicalMaterial;                                  // 0x0280(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   CustomDamageNumberEvent;                           // 0x02A8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FHitRegionDef;

// ScriptStruct GbxGame.GbxDiscoveryOfflineArea
// 0x0020 (0x0020 - 0x0000)
struct FGbxDiscoveryOfflineArea final
{
public:
	bool                                          bEverywhere;                                       // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Radius;                                            // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Height;                                            // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseHeight;                                        // 0x000C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGbxDiscoveryOfflineAreaShape>  VolumeShapes;                                      // 0x0010(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxDiscoveryOfflineArea;

// ScriptStruct GbxGame.FactsSystemActorReference
// 0x0030 (0x0030 - 0x0000)
struct FFactsSystemActorReference final
{
public:
	struct FSToken                                Map;                                               // 0x0000(0x000C)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSToken                                Submap;                                            // 0x000C(0x000C)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSToken                                GroupName;                                         // 0x0018(0x000C)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSToken                                RegistryName;                                      // 0x0024(0x000C)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FFactsSystemActorReference;

// ScriptStruct GbxGame.GbxDiscoveryLocationMetaDataMapInfo
// 0x00A0 (0x00A0 - 0x0000)
struct FGbxDiscoveryLocationMetaDataMapInfo final
{
public:
	class FName                                   MapName;                                           // 0x0000(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                        MapAsset;                                          // 0x0008(0x0020)(Edit, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   InstanceActorName;                                 // 0x0028(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   InstanceActorGbxSubMapName;                        // 0x0030(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_38[0x8];                                       // 0x0038(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             InstanceActorTransform;                            // 0x0040(0x0060)(Edit, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxDiscoveryLocationMetaDataMapInfo;

// ScriptStruct GbxGame.GbxDiscoveryPresentationDriverData
// 0x0048 (0x0048 - 0x0000)
struct FGbxDiscoveryPresentationDriverData final
{
public:
	class FName                                   DefType;                                           // 0x0000(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   DefName;                                           // 0x0008(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFactAddress                           DefFact;                                           // 0x0010(0x0038)(Edit, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxDiscoveryPresentationDriverData;

// ScriptStruct GbxGame.GbxDiscoveryLocationMetaData
// 0x0268 (0x0280 - 0x0018)
struct FGbxDiscoveryLocationMetaData final : public FGbxDef
{
public:
	FGbxDefPtrProperty_                           LocationDisplayData;                               // 0x0018(0x0018)(Edit, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	FGbxDefPtrProperty_                           LocationType;                                      // 0x0030(0x0018)(Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFactAddress                           ActorFactAddress;                                  // 0x0048(0x0038)(Edit, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFactsSystemActorReference             ActorRef;                                          // 0x0080(0x0030)(Edit, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bActorFactAddressWasExposed;                       // 0x00B0(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                ActorWorldLocation;                                // 0x00B8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                             ActorWorldTransform;                               // 0x00D0(0x0060)(Edit, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   WorldMapName;                                      // 0x0130(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   WorldActorName;                                    // 0x0138(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGbxDiscoveryLocationMetaDataMapInfo> OwningMapChain;                              // 0x0140(0x0010)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	struct FGbxDiscoveryOfflineArea               DiscoveryStateTerritories[0x3];                    // 0x0150(0x0020)(Edit, NativeAccessSpecifierPublic)
	struct FFloatRange                            WithinRanges[0x5];                                 // 0x01B0(0x0010)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                FinalInWorldInidcatorLocation;                     // 0x0200(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                           ChildLocations;                                    // 0x0218(0x0010)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	class FName                                   ParentLocation;                                    // 0x0228(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      TravelStationDef;                                  // 0x0230(0x0018)(Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGbxDiscoveryPresentationDriverData> PresentationDrivers;                          // 0x0248(0x0010)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	class FString                                 SourceGuidString;                                  // 0x0258(0x0010)(Edit, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_268[0x18];                                     // 0x0268(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxDiscoveryLocationMetaData;

// ScriptStruct GbxGame.GbxProgressStateData
// 0x001C (0x001C - 0x0000)
struct FGbxProgressStateData final
{
public:
	class FName                                   Name;                                              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGuid                                  ID;                                                // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint32                                        ResetCount;                                        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxProgressStateData;

// ScriptStruct GbxGame.GbxProgressStateDataContainer
// 0x0010 (0x0010 - 0x0000)
struct FGbxProgressStateDataContainer final
{
public:
	TArray<struct FGbxProgressStateData>          StateData;                                         // 0x0000(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxProgressStateDataContainer;

// ScriptStruct GbxGame.GbxTraceTrajectoryCollisionData
// 0x0014 (0x0014 - 0x0000)
struct FGbxTraceTrajectoryCollisionData final
{
public:
	ECollisionChannel                             channel;                                           // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGbxTraceTrajectoryShape                      Shape;                                             // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ExtentX;                                           // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ExtentY;                                           // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ExtentZ;                                           // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSetTeamCollision;                                 // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EExtraCollisionFilterChannel                  TeamCollisionChannel;                              // 0x0011(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFallbackToEndpoint;                               // 0x0012(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_13[0x1];                                       // 0x0013(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxTraceTrajectoryCollisionData;

// ScriptStruct GbxGame.MissionDependencyConditionState
// 0x0048 (0x0050 - 0x0008)
struct FMissionDependencyConditionState : public FGbxHasStructType
{
public:
	uint8                                         Pad_8[0x48];                                       // 0x0008(0x0048)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FMissionDependencyConditionState;

// ScriptStruct GbxGame.MissionDependencyConditionState_Compound
// 0x0010 (0x0060 - 0x0050)
struct FMissionDependencyConditionState_Compound final : public FMissionDependencyConditionState
{
public:
	uint8                                         Pad_50[0x10];                                      // 0x0050(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FMissionDependencyConditionState_Compound;

// ScriptStruct GbxGame.CoordinatedMaterialSettings
// 0x0048 (0x0050 - 0x0008)
struct FCoordinatedMaterialSettings final : public FGbxHasStructType
{
public:
	class UMaterialInterface*                     Material;                                          // 0x0008(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                           InheritedParameters;                               // 0x0010(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	EMaterialParameterCopyMethod                  InheritParametersMethod;                           // 0x0020(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bInheritAllParameters : 1;                         // 0x0021(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bApplyToTranslucentMaterials : 1;                  // 0x0021(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FConditionalCoordinatedMaterialData> ConditionalMaterials;                         // 0x0028(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	class UMaterialInterface*                     MaskMaterial;                                      // 0x0038(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                     GlowMaterial;                                      // 0x0040(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                     OverlayMaterial;                                   // 0x0048(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FCoordinatedMaterialSettings;

// ScriptStruct GbxGame.GbxCondition_IsPlayerOrPet
// 0x0008 (0x0018 - 0x0010)
struct FGbxCondition_IsPlayerOrPet final : public FGbxConditionValueResolver
{
public:
	bool                                          bConsiderPet;                                      // 0x0010(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bConsiderPlayer;                                   // 0x0011(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxCondition_IsPlayerOrPet;

// ScriptStruct GbxGame.GbxSkillStateConditionData_TargetListEx
// 0x0070 (0x0080 - 0x0010)
struct FGbxSkillStateConditionData_TargetListEx final : public FGbxSkillStateConditionData
{
public:
	FGbxDefPtrProperty_                           TargetList;                                        // 0x0010(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EGbxSkillComparisonOp                         Op;                                                // 0x0028(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAttributeInit                      ValueInit;                                         // 0x0030(0x0050)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxSkillStateConditionData_TargetListEx;

// ScriptStruct GbxGame.GbxAnimNode_Rotation_AimOffset
// 0x0040 (0x0158 - 0x0118)
struct FGbxAnimNode_Rotation_AimOffset : public FAnimNode_RotationOffsetBlendSpace
{
public:
	struct FGameplayTag                           RotationChannelName;                               // 0x0118(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           BlendSpaceKey;                                     // 0x0120(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAxis                                         YawAxis;                                           // 0x0128(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAxis                                         PitchAxis;                                         // 0x0129(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_12A[0x2E];                                     // 0x012A(0x002E)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxAnimNode_Rotation_AimOffset;

// ScriptStruct GbxGame.GbxAnimNode_Rotation_Aim
// 0x0000 (0x0158 - 0x0158)
struct FGbxAnimNode_Rotation_Aim final : public FGbxAnimNode_Rotation_AimOffset
{
};
DUMPER7_ASSERTS_FGbxAnimNode_Rotation_Aim;

// ScriptStruct GbxGame.MissionBinderTarget
// 0x0000 (0x0008 - 0x0008)
struct FMissionBinderTarget : public FGbxHasStructType
{
};
DUMPER7_ASSERTS_FMissionBinderTarget;

// ScriptStruct GbxGame.MissionBinderTarget_RegistryActor
// 0x0010 (0x0018 - 0x0008)
struct FMissionBinderTarget_RegistryActor final : public FMissionBinderTarget
{
public:
	struct FMissionAliasRef                       Actor;                                             // 0x0008(0x000C)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FMissionBinderTarget_RegistryActor;

// ScriptStruct GbxGame.GbxRewardData
// 0x0018 (0x0020 - 0x0008)
struct FGbxRewardData : public FGbxHasStructType
{
public:
	FGbxDefPtrProperty_                           DisplayData;                                       // 0x0008(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxRewardData;

// ScriptStruct GbxGame.GbxGlobalsHazard
// 0x00E0 (0x0100 - 0x0020)
struct FGbxGlobalsHazard final : public FGbxGlobalDef
{
public:
	struct FDamageSourceContainer                 DamageSource;                                      // 0x0020(0x0040)(Edit, NativeAccessSpecifierPublic)
	ECollisionChannel                             CollisionChannel;                                  // 0x0060(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UStaticMesh>             DefaultCircleMesh;                                 // 0x0068(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UStaticMesh>             DefaultSquareMesh;                                 // 0x0090(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           PuddleScaleRtpc;                                   // 0x00B8(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           PuddleOpacityRtpc;                                 // 0x00D0(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           TransitionRtpc;                                    // 0x00E8(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxGlobalsHazard;

// ScriptStruct GbxGame.SlideEndedDetails
// 0x0020 (0x0020 - 0x0000)
struct FSlideEndedDetails final
{
public:
	class AActor*                                 HitActor;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                StopVelocity;                                      // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSlideEndedDetails;

// ScriptStruct GbxGame.BinderBehaviorMod_MissionPickup
// 0x0028 (0x0040 - 0x0018)
struct FBinderBehaviorMod_MissionPickup : public FFactsBinderBehaviorMod
{
public:
	uint8                                         Pad_18[0x28];                                      // 0x0018(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FBinderBehaviorMod_MissionPickup;

// ScriptStruct GbxGame.BinderBehaviorMod_MissionGiverPickup
// 0x0008 (0x0048 - 0x0040)
struct FBinderBehaviorMod_MissionGiverPickup final : public FBinderBehaviorMod_MissionPickup
{
public:
	uint8                                         Pad_40[0x8];                                       // 0x0040(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FBinderBehaviorMod_MissionGiverPickup;

// ScriptStruct GbxGame.GbxTrickRef
// 0x0018 (0x0018 - 0x0000)
struct FGbxTrickRef final
{
public:
	class UGbxTrick*                              Trick;                                             // 0x0000(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                           TrickTag;                                          // 0x0008(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EGbxTrickRefType                              type;                                              // 0x0010(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxTrickRef;

// ScriptStruct GbxGame.GbxBrainAspectSettings_Trick
// 0x00A0 (0x0120 - 0x0080)
struct FGbxBrainAspectSettings_Trick final : public FGbxBrainAspectSettings
{
public:
	struct FGbxTrickRef                           Trick;                                             // 0x0080(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FGbxParam                              Count;                                             // 0x0098(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              PlayRate;                                          // 0x00D0(0x0038)(Edit, NativeAccessSpecifierPublic)
	ETrickInterrupt                               InterruptRule;                                     // 0x0108(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bWaitForLoopExit;                                  // 0x010C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_10D[0x3];                                      // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGbxGraphParam>                 Parameters;                                        // 0x0110(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxBrainAspectSettings_Trick;

// ScriptStruct GbxGame.GbxSkillComponent_Tickable
// 0x0020 (0x0070 - 0x0050)
struct FGbxSkillComponent_Tickable : public FGbxSkillComponent
{
public:
	uint8                                         Pad_50[0x20];                                      // 0x0050(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxSkillComponent_Tickable;

// ScriptStruct GbxGame.GbxSkillComponent_Material
// 0x0018 (0x0088 - 0x0070)
struct FGbxSkillComponent_Material final : public FGbxSkillComponent_Tickable
{
public:
	uint8                                         Pad_70[0x18];                                      // 0x0070(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxSkillComponent_Material;

// ScriptStruct GbxGame.BinderBehaviorMod_Encounter
// 0x0040 (0x0058 - 0x0018)
struct FBinderBehaviorMod_Encounter final : public FFactsBinderBehaviorMod
{
public:
	uint8                                         Pad_18[0x40];                                      // 0x0018(0x0040)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FBinderBehaviorMod_Encounter;

// ScriptStruct GbxGame.GbxRotationNodeBaseSettings
// 0x0000 (0x0038 - 0x0038)
struct FGbxRotationNodeBaseSettings : public FGbxGraphNodeSettings
{
};
DUMPER7_ASSERTS_FGbxRotationNodeBaseSettings;

// ScriptStruct GbxGame.GbxRotationTargetModifierSettings
// 0x0000 (0x0038 - 0x0038)
struct FGbxRotationTargetModifierSettings : public FGbxRotationNodeBaseSettings
{
};
DUMPER7_ASSERTS_FGbxRotationTargetModifierSettings;

// ScriptStruct GbxGame.GbxRotationTargetModifierSettings_AlphaScale
// 0x0008 (0x0040 - 0x0038)
struct FGbxRotationTargetModifierSettings_AlphaScale final : public FGbxRotationTargetModifierSettings
{
public:
	float                                         AlphaScale;                                        // 0x0038(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxRotationTargetModifierSettings_AlphaScale;

// ScriptStruct GbxGame.GbxCharacterTurnState
// 0x0078 (0x0078 - 0x0000)
struct alignas(0x08) FGbxCharacterTurnState final
{
public:
	uint8                                         Pad_0[0x48];                                       // 0x0000(0x0048)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxIdleTurn                           IdleTurn;                                          // 0x0048(0x000C)(Transient, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_54[0x24];                                      // 0x0054(0x0024)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxCharacterTurnState;

// ScriptStruct GbxGame.MissionEntityOrder
// 0x000C (0x000C - 0x0000)
struct FMissionEntityOrder final
{
public:
	EMissionEntityOrderType                       type;                                              // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Start;                                             // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         End;                                               // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FMissionEntityOrder;

// ScriptStruct GbxGame.MissionEntityOrderData
// 0x0014 (0x0014 - 0x0000)
struct FMissionEntityOrderData final
{
public:
	struct FMissionEntityOrder                    order;                                             // 0x0000(0x000C)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x8];                                        // 0x000C(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FMissionEntityOrderData;

// ScriptStruct GbxGame.GbxDiscoveryPresentationDef
// 0x0128 (0x0140 - 0x0018)
struct FGbxDiscoveryPresentationDef : public FGbxDef
{
public:
	TSoftObjectPtr<class UTexture2D>              DiscoveryIconTexture;                              // 0x0018(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   State;                                             // 0x0040(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDisableAnimation;                                 // 0x0048(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseBackgroundTexture;                             // 0x0049(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              BackgroundTexture;                                 // 0x0050(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              PinTexture;                                        // 0x0078(0x0028)(Edit, AdvancedDisplay, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UTexture2D>              PlayerOwnedPinTexture;                             // 0x00A0(0x0028)(Edit, AdvancedDisplay, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	FGbxDefPtrProperty_                           MapViewerIconSize;                                 // 0x00C8(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGbxDiscoveryPresentationMapViewerWorldPlacementMode MapViewerPlacementMode;                     // 0x00E0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bTreatThisAsUndiscovered;                          // 0x00E4(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDisplayOffScreenIndicator;                        // 0x00E5(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E6[0x2];                                       // 0x00E6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   OverrideMapViewerActorClass;                       // 0x00E8(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CompassIconDistancedThreshold;                     // 0x0110(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPinToCompassEdge;                                 // 0x0114(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDontShowOnCompass;                                // 0x0115(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_116[0x2];                                      // 0x0116(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CompassState;                                      // 0x0118(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           PingInWorldIndicator;                              // 0x0120(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowRewards;                                      // 0x0138(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxDiscoveryPresentationDef;

// ScriptStruct GbxGame.GbxInputEvent
// 0x0058 (0x0060 - 0x0008)
struct FGbxInputEvent : public FGbxHasStructType
{
public:
	uint8                                         Pad_8[0x58];                                       // 0x0008(0x0058)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxInputEvent;

// ScriptStruct GbxGame.GbxInputEvent_Button_Core
// 0x00A0 (0x0100 - 0x0060)
struct alignas(0x10) FGbxInputEvent_Button_Core : public FGbxInputEvent
{
public:
	uint8                                         Pad_60[0xA0];                                      // 0x0060(0x00A0)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxInputEvent_Button_Core;

// ScriptStruct GbxGame.GbxSkillComponentData_LibraryData
// 0x0000 (0x0008 - 0x0008)
struct FGbxSkillComponentData_LibraryData : public FGbxHasStructType
{
};
DUMPER7_ASSERTS_FGbxSkillComponentData_LibraryData;

// ScriptStruct GbxGame.GbxSkillComponentData_LibraryData_Basic
// 0x0018 (0x0020 - 0x0008)
struct FGbxSkillComponentData_LibraryData_Basic final : public FGbxSkillComponentData_LibraryData
{
public:
	FGbxDefPtrProperty_                           LibraryDef;                                        // 0x0008(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxSkillComponentData_LibraryData_Basic;

// ScriptStruct GbxGame.ProjectileHomingData
// 0x00B8 (0x00B8 - 0x0000)
struct FProjectileHomingData final
{
public:
	uint8                                         Pad_0[0x8];                                        // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TurnSpeed;                                         // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxTurnSpeed;                                      // 0x000C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TurnAcceleration;                                  // 0x0010(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TurnSpeedCurveScale;                               // 0x0014(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxEasingFunc                         TurnSpeedCurve;                                    // 0x0018(0x000C)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	float                                         TrueTargetDistance;                                // 0x0024(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TrueTargetTime;                                    // 0x0028(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         EaseInTime;                                        // 0x002C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxEasingFunc                         EaseInFunc;                                        // 0x0030(0x000C)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	float                                         StartApproachDistance;                             // 0x003C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FinalApproachDistance;                             // 0x0040(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ApproachTurnSpeedScale;                            // 0x0044(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxEasingFunc                         ApproachEasingFunc;                                // 0x0048(0x000C)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	float                                         StopHomingDistance;                                // 0x0054(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReachDistance;                                     // 0x0058(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bMoveDirectlyToTarget : 1;                         // 0x005C(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bStopHomingWhenPassingApproachTarget : 1;          // 0x005C(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   DefaultTargetSocket;                               // 0x0060(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                TargetLocalOffset;                                 // 0x0068(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bAutoFindTarget : 1;                               // 0x0080(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bUseProjectileInstigatorAsGpsContext : 1;          // 0x0080(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UGpsQueryAsset>          TargetGps;                                         // 0x0088(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EHomingTargetUntargetableAction               UntargetableAction;                                // 0x00B0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FProjectileHomingData;

// ScriptStruct GbxGame.AIDodgeTriggerZone
// 0x0058 (0x0058 - 0x0000)
struct FAIDodgeTriggerZone final
{
public:
	float                                         MinVelocityToDodge;                                // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxVelocityToScale;                                // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DodgeLength;                                       // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Radius;                                            // 0x000C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxScale;                                          // 0x0010(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StartOffsetX;                                      // 0x0014(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OffsetZ;                                           // 0x0018(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         PreviousInZoneActors;                              // 0x0020(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	uint8                                         Pad_30[0x20];                                      // 0x0030(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 OwnerActor;                                        // 0x0050(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FAIDodgeTriggerZone;

// ScriptStruct GbxGame.GbxSkillActionException
// 0x0010 (0x0010 - 0x0000)
struct alignas(0x08) FGbxSkillActionException final
{
public:
	uint8                                         Pad_0[0x10];                                       // 0x0000(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxSkillActionException;

// ScriptStruct GbxGame.InventoryTags
// 0x0000 (0x0020 - 0x0020)
struct FInventoryTags final : public FNexusBitSet
{
};
DUMPER7_ASSERTS_FInventoryTags;

// ScriptStruct GbxGame.GbxItemFilterDef
// 0x00E8 (0x0100 - 0x0018)
struct FGbxItemFilterDef final : public FGbxDef
{
public:
	class FString                                 DisplayName;                                       // 0x0018(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxAttributeInit                      Quantity;                                          // 0x0028(0x0050)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           TypeDef;                                           // 0x0078(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAlsoMatchChildrenOfTypeDef;                       // 0x0090(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FGbxDefPtrProperty_                           Manufacturer;                                      // 0x0098(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FInventoryTags                         TagsRequired;                                      // 0x00B0(0x0020)(Edit, NativeAccessSpecifierPublic)
	struct FInventoryTags                         TagsRejected;                                      // 0x00D0(0x0020)(Edit, NativeAccessSpecifierPublic)
	class FName                                   ContainerSource;                                   // 0x00F0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bMustBeRerollable;                                 // 0x00F8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxItemFilterDef;

// ScriptStruct GbxGame.RecipeCurrency
// 0x0060 (0x0060 - 0x0000)
struct FRecipeCurrency final
{
public:
	struct FSToken                                currency;                                          // 0x0000(0x000C)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAttributeInit                      Amount;                                            // 0x0010(0x0050)(Edit, NoDestructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FRecipeCurrency;

// ScriptStruct GbxGame.GbxIngredientList
// 0x0028 (0x0040 - 0x0018)
struct FGbxIngredientList final : public FGbxDef
{
public:
	TArray<struct FGbxItemFilterDef>              Ingredients;                                       // 0x0018(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FRecipeCurrency>                CurrencyInputs;                                    // 0x0028(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bUseSourceAsCurrencyContext;                       // 0x0038(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxIngredientList;

// ScriptStruct GbxGame.GbxItemGeneratedOutput
// 0x00F0 (0x00F0 - 0x0000)
struct FGbxItemGeneratedOutput final
{
public:
	bool                                          bReroll;                                           // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FGameDataHandleProperty_                      itempool;                                          // 0x0008(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxAttributeInit                      Quantity;                                          // 0x0020(0x0050)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FGbxAttributeInit                      gamestage;                                         // 0x0070(0x0050)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      TypeDef;                                           // 0x00C0(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      CompDef;                                           // 0x00D8(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxItemGeneratedOutput;

// ScriptStruct GbxGame.GbxRecipeDef
// 0x0090 (0x00A8 - 0x0018)
struct FGbxRecipeDef final : public FGbxDef
{
public:
	class FString                                 RecipeName;                                        // 0x0018(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxIngredientList                     Ingredients;                                       // 0x0028(0x0040)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FGbxItemGeneratedOutput>        Outputs;                                           // 0x0068(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FRecipeCurrency>                CurrencyOutputs;                                   // 0x0078(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FNexusBitSet                           tags;                                              // 0x0088(0x0020)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxRecipeDef;

// ScriptStruct GbxGame.GbxSkillStateMachineStateDef_RegisterOp
// 0x0020 (0x0020 - 0x0000)
struct alignas(0x08) FGbxSkillStateMachineStateDef_RegisterOp final
{
public:
	EGbxSkillStateMachineRegisterOp               RegisterOp;                                        // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FGbxDefPtrProperty_                           Register;                                          // 0x0008(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxSkillStateMachineStateDef_RegisterOp;

// ScriptStruct GbxGame.GbxSkillStateMachineGlobalTransitionDataItem
// 0x0038 (0x0038 - 0x0000)
struct FGbxSkillStateMachineGlobalTransitionDataItem
{
public:
	FGbxDefPtrProperty_                           State;                                             // 0x0000(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGbxSkillStateMachineStateDef_RegisterOp> RegisterOps;                             // 0x0018(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FGbxInlineStruct>               TransitionActions;                                 // 0x0028(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxSkillStateMachineGlobalTransitionDataItem;

// ScriptStruct GbxGame.CharacterGestaltLODInfo
// 0x0020 (0x0020 - 0x0000)
struct alignas(0x08) FCharacterGestaltLODInfo final
{
public:
	uint8                                         Pad_0[0x20];                                       // 0x0000(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FCharacterGestaltLODInfo;

// ScriptStruct GbxGame.GbxFloatCurve
// 0x00B0 (0x00B0 - 0x0000)
struct FGbxFloatCurve final
{
public:
	uint8                                         Pad_0[0x8];                                        // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRichCurve                             EditorCurveData;                                   // 0x0008(0x0080)(NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UCurveFloat>             ExternalCurve;                                     // 0x0088(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxFloatCurve;

// ScriptStruct GbxGame.CharacterScriptedMeshOffsetCommand
// 0x01E0 (0x01E0 - 0x0000)
struct alignas(0x10) FCharacterScriptedMeshOffsetCommand final
{
public:
	class UAnimSequence*                          RootMotionSourceAnim;                              // 0x0000(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SyncTime;                                          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PreSyncTime;                                       // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSuppressGravityBeforeSyncTime;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxFloatCurve                         HorzCurv;                                          // 0x0018(0x00B0)(NativeAccessSpecifierPublic)
	struct FGbxFloatCurve                         VertCurv;                                          // 0x00C8(0x00B0)(NativeAccessSpecifierPublic)
	uint8                                         Pad_178[0x68];                                     // 0x0178(0x0068)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FCharacterScriptedMeshOffsetCommand;

// ScriptStruct GbxGame.GbxStatusEffectGraphNodeSettings
// 0x0000 (0x0038 - 0x0038)
struct FGbxStatusEffectGraphNodeSettings : public FGbxGraphNodeSettings
{
};
DUMPER7_ASSERTS_FGbxStatusEffectGraphNodeSettings;

// ScriptStruct GbxGame.GbxStatusEffectGraphNodeSettings_Condition
// 0x0000 (0x0038 - 0x0038)
struct FGbxStatusEffectGraphNodeSettings_Condition : public FGbxStatusEffectGraphNodeSettings
{
};
DUMPER7_ASSERTS_FGbxStatusEffectGraphNodeSettings_Condition;

// ScriptStruct GbxGame.GbxStatusEffectGraphNodeSettings_Condition_IsPlayer
// 0x0000 (0x0038 - 0x0038)
struct FGbxStatusEffectGraphNodeSettings_Condition_IsPlayer final : public FGbxStatusEffectGraphNodeSettings_Condition
{
};
DUMPER7_ASSERTS_FGbxStatusEffectGraphNodeSettings_Condition_IsPlayer;

// ScriptStruct GbxGame.GbxBrainAspect_Rotate
// 0x01A8 (0x0280 - 0x00D8)
struct alignas(0x10) FGbxBrainAspect_Rotate final : public FGbxBrainAspect
{
public:
	uint8                                         Pad_D8[0x1A8];                                     // 0x00D8(0x01A8)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainAspect_Rotate;

// ScriptStruct GbxGame.GBXDialogLineRuntimeDataScalars
// 0x0010 (0x0010 - 0x0000)
struct FGBXDialogLineRuntimeDataScalars final
{
public:
	int32                                         LineNum;                                           // 0x0000(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         EarlyFinishTimeFraction;                           // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Weight;                                            // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          EnableEarlyFinish;                                 // 0x000C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EDialogEchoPreference                         EchoPreference;                                    // 0x000D(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGBXDialogLineRuntimeDataScalars;

// ScriptStruct GbxGame.UsabilityNumericalAttributeCondition
// 0x0058 (0x0058 - 0x0000)
struct FUsabilityNumericalAttributeCondition final
{
public:
	EGbxComparator                                AttributeComparison;                               // 0x0000(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAttributeInit                      AttributeCompareTo;                                // 0x0008(0x0050)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FUsabilityNumericalAttributeCondition;

// ScriptStruct GbxGame.ActorStatePair
// 0x0010 (0x0010 - 0x0000)
struct FActorStatePair
{
public:
	class FName                                   StateMachine;                                      // 0x0000(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   State;                                             // 0x0008(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FActorStatePair;

// ScriptStruct GbxGame.ActorStatePairCondition
// 0x0004 (0x0014 - 0x0010)
struct FActorStatePairCondition final : public FActorStatePair
{
public:
	bool                                          bInvert;                                           // 0x0010(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FActorStatePairCondition;

// ScriptStruct GbxGame.UsabilityResponseConditions
// 0x00A0 (0x00A0 - 0x0000)
struct FUsabilityResponseConditions final
{
public:
	EUsabilityConditionContextType                AttributeConditionContext;                         // 0x0000(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FGameDataHandleProperty_                      AttributeCondition;                                // 0x0008(0x0018)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FUsabilityNumericalAttributeCondition  AttributeNumericalConditions;                      // 0x0020(0x0058)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FActorStatePairCondition>       StateConditions;                                   // 0x0078(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FFactExpression                        FactCondition;                                     // 0x0088(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                          bHostRestrictedUsage;                              // 0x0098(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FUsabilityResponseConditions;

// ScriptStruct GbxGame.UIStatDisplayValue
// 0x0000 (0x0008 - 0x0008)
struct FUIStatDisplayValue : public FGbxHasStructType
{
};
DUMPER7_ASSERTS_FUIStatDisplayValue;

// ScriptStruct GbxGame.BooleanDisplayValue
// 0x0028 (0x0030 - 0x0008)
struct FBooleanDisplayValue final : public FUIStatDisplayValue
{
public:
	FGameDataHandleProperty_                      AttributeDef;                                      // 0x0008(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        AttributeIndex;                                    // 0x0020(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EBooleanCompareType                           CompareType;                                       // 0x0024(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CompareValue;                                      // 0x0028(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          DefaultValue;                                      // 0x002C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FBooleanDisplayValue;

// ScriptStruct GbxGame.NumericDisplayValue
// 0x00A0 (0x00A8 - 0x0008)
struct FNumericDisplayValue final : public FUIStatDisplayValue
{
public:
	class FString                                 KeyGroup;                                          // 0x0008(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBooleanDisplayValue                   DisplayCondition;                                  // 0x0018(0x0030)(Edit, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      AttributeDef;                                      // 0x0048(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      AttributeParam;                                    // 0x0060(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowStatModifier;                                 // 0x0078(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowModifierDelta;                                // 0x0079(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_7A[0x2];                                       // 0x007A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	uint32                                        AttributeIndex;                                    // 0x007C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ENumericDisplayValueSignStyle                 SignStyle;                                         // 0x0080(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ENumericDisplayValueRoundingMode              RoundingMode;                                      // 0x0081(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_82[0x2];                                       // 0x0082(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TruncateAfterDigits;                               // 0x0084(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDisplayAsPercentage;                              // 0x0088(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDisplayPercentAsFloat;                            // 0x0089(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDisplayAsInverse;                                 // 0x008A(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDisplayPlusSign;                                  // 0x008B(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDisplayAsOneMinus;                                // 0x008C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDisplayAsOnePlus;                                 // 0x008D(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCalculateWithReductionMath;                       // 0x008E(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseFormatText;                                    // 0x008F(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   FormatText;                                        // 0x0090(0x0010)(Edit, NativeAccessSpecifierPublic)
	uint32                                        FloatPrecision;                                    // 0x00A0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FNumericDisplayValue;

// ScriptStruct GbxGame.UsabilityCost
// 0x0148 (0x0160 - 0x0018)
struct FUsabilityCost final : public FGbxDef
{
public:
	struct FNumericDisplayValue                   CostDisplayValue;                                  // 0x0018(0x00A8)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                          bUseAttributeCost;                                 // 0x00C0(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EUsableCostContext                            CostContext;                                       // 0x00C1(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C2[0x6];                                       // 0x00C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAttributeInit                      CostAmount;                                        // 0x00C8(0x0050)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           CostSourceAttribute;                               // 0x0118(0x0018)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           CostSourceIngredientList;                          // 0x0130(0x0018)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           CostSource_ItemsOutput_Recipe;                     // 0x0148(0x0018)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FUsabilityCost;

// ScriptStruct GbxGame.UsabilityResponse
// 0x02D0 (0x02E8 - 0x0018)
struct FUsabilityResponse final : public FGbxDef
{
public:
	EUsabilityResponseType                        ResponseType;                                      // 0x0018(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FGameDataHandleProperty_                      Prompt;                                            // 0x0020(0x0018)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FUsabilityResponseConditions           ConditionsToSelectThisResponse;                    // 0x0038(0x00A0)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FUsabilityResponseConditions           ConditionsToAllowUse;                              // 0x00D8(0x00A0)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FUsabilityCost                         CostRequirements;                                  // 0x0178(0x0160)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FActorStatePair>                StateChanges;                                      // 0x02D8(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FUsabilityResponse;

// ScriptStruct GbxGame.ObjectHostedHoldToUseParams
// 0x000C (0x000C - 0x0000)
struct FObjectHostedHoldToUseParams final
{
public:
	class FName                                   LinkedActorStateMachine;                           // 0x0000(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHoldToUseTimeDeterminedByActorState;              // 0x0008(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FObjectHostedHoldToUseParams;

// ScriptStruct GbxGame.UsabilityInfo
// 0x0038 (0x0050 - 0x0018)
struct FUsabilityInfo final : public FGbxDef
{
public:
	TArray<struct FUsabilityResponse>             UseResponses;                                      // 0x0018(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	EHoldToUseMode                                HoldToUseMode;                                     // 0x0028(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         HoldToUseTime;                                     // 0x002C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FUsabilityResponse>             HoldToUseResponses;                                // 0x0030(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FObjectHostedHoldToUseParams           ObjectHostedHoldToUseParams;                       // 0x0040(0x000C)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FUsabilityInfo;

// ScriptStruct GbxGame.GbxLevelRoadSegmentConnectionDef
// 0x000C (0x000C - 0x0000)
struct FGbxLevelRoadSegmentConnectionDef final
{
public:
	int32                                         ControlPointIndex;                                 // 0x0000(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ConnectionIndex;                                   // 0x0004(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TangentLength;                                     // 0x0008(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxLevelRoadSegmentConnectionDef;

// ScriptStruct GbxGame.GbxProgressPointsContainer
// 0x0038 (0x0038 - 0x0000)
struct FGbxProgressPointsContainer final
{
public:
	uint8                                         Pad_0[0x28];                                       // 0x0000(0x0028)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 PointsAcquiredPerPool;                             // 0x0028(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxProgressPointsContainer;

// ScriptStruct GbxGame.HitByFriendlyEventDetails
// 0x0080 (0x0080 - 0x0000)
struct FHitByFriendlyEventDetails final
{
public:
	class AActor*                                 DamageInstigator;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      DamageType;                                        // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDamageSourceContainer                 DamageSource;                                      // 0x0020(0x0040)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FDamageTags                            DamageTags;                                        // 0x0060(0x0020)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FHitByFriendlyEventDetails;

// ScriptStruct GbxGame.DialogPlayOptions
// 0x0088 (0x0088 - 0x0000)
struct FDialogPlayOptions final
{
public:
	float                                         StartDelay;                                        // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 SpecificSpeakerActor;                              // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_10[0x31];                                      // 0x0010(0x0031)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bForceToPlayWhilePaused;                           // 0x0041(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bForceLocalOnly;                                   // 0x0042(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIgnoreEventDelay;                                 // 0x0043(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FGbxDefPtrProperty_                           SpecificNameTag;                                   // 0x0048(0x0018)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           OverrideNameTag;                                   // 0x0060(0x0018)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SpecificLineNum;                                   // 0x0078(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOnlyPureEchoSpeakers;                             // 0x007C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCreateTransientSpeaker;                           // 0x007D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCreatePureEchoIfNoOtherOptions;                   // 0x007E(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAllowOnDeadSpeakers;                              // 0x007F(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIgnoreConditions;                                 // 0x0080(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIgnoreChanceToPlay;                               // 0x0081(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_82[0x6];                                       // 0x0082(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FDialogPlayOptions;

// ScriptStruct GbxGame.GbxMomentNodeSettings_TriggerDialogEvent
// 0x0140 (0x01C0 - 0x0080)
struct FGbxMomentNodeSettings_TriggerDialogEvent final : public FGbxMomentNodeSettings
{
public:
	FGbxDefPtrProperty_                           DialogEvent;                                       // 0x0080(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDialogPlayOptions                     PlayOptions;                                       // 0x0098(0x0088)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	TMap<class FName, struct FGbxParam>           EventParameterMap;                                 // 0x0120(0x0050)(Edit, NativeAccessSpecifierPublic)
	TMap<class FName, FGbxDefPtrProperty_>        DialogContextParameters;                           // 0x0170(0x0050)(NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxMomentNodeSettings_TriggerDialogEvent;

// ScriptStruct GbxGame.DamageModifierAttributeCollection
// 0x0030 (0x0030 - 0x0000)
struct alignas(0x08) FDamageModifierAttributeCollection final
{
public:
	FGameDataHandleProperty_                      InstigatedModifier;                                // 0x0000(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      ReceivedModifier;                                  // 0x0018(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FDamageModifierAttributeCollection;

// ScriptStruct GbxGame.DamageTypeDef
// 0x0108 (0x0120 - 0x0018)
struct FDamageTypeDef : public FGbxDef
{
public:
	struct FLinearColor                           DamageColor;                                       // 0x0018(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 DamageIconFrameName;                               // 0x0028(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsHealingType;                                    // 0x0038(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsDoT;                                            // 0x0039(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         InnerDamageRadiusPercent;                          // 0x003C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OuterDamageRadiusPercent;                          // 0x0040(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinRadiusDamageScalar;                             // 0x0044(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DamageFalloff;                                     // 0x0048(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  GameplayTags;                                      // 0x0050(0x0020)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FDamageModifierAttributeCollection     ModifierAttributes;                                // 0x0070(0x0030)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  HealthTypeTags;                                    // 0x00A0(0x0020)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      DefaultPuddleHazard;                               // 0x00C0(0x0018)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UGbxStatusEffectData>    StatusEffectData;                                  // 0x00D8(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxStatusEffectApplicationModifierSet StatusEffectModifierSet;                           // 0x0100(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	uint8                                         Pad_110[0x10];                                     // 0x0110(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FDamageTypeDef;

// ScriptStruct GbxGame.InventoryNamingStrategyDef
// 0x0018 (0x0030 - 0x0018)
struct FInventoryNamingStrategyDef final : public FGbxDef
{
public:
	struct FGbxInlineStruct                       NamingStrategy;                                    // 0x0018(0x0018)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FInventoryNamingStrategyDef;

// ScriptStruct GbxGame.GbxSkillStateMachineDebugCommand
// 0x0030 (0x0030 - 0x0000)
struct FGbxSkillStateMachineDebugCommand final
{
public:
	class FName                                   Command;                                           // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxInlineStruct                       Condition;                                         // 0x0008(0x0018)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FGbxInlineStruct>               actions;                                           // 0x0020(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxSkillStateMachineDebugCommand;

// ScriptStruct GbxGame.EffectGameDataCategories_DONTUSE
// 0x0001 (0x0001 - 0x0000)
struct FEffectGameDataCategories_DONTUSE final
{
public:
	uint8                                         Pad_0[0x1];                                        // 0x0000(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FEffectGameDataCategories_DONTUSE;

// ScriptStruct GbxGame.GbxMomentNodeSettings_LookAt_Base
// 0x00C0 (0x0140 - 0x0080)
struct FGbxMomentNodeSettings_LookAt_Base : public FGbxMomentNodeSettings
{
public:
	struct FGbxParam                              Actor;                                             // 0x0080(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGameplayTag                           RotationChannelName;                               // 0x00B8(0x0008)(Edit, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bTurnBody;                                         // 0x00C0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              TimeLimit;                                         // 0x00C8(0x0038)(Edit, AdvancedDisplay, NativeAccessSpecifierPublic)
	struct FGbxParam                              AngleThreshold;                                    // 0x0100(0x0038)(Edit, AdvancedDisplay, NativeAccessSpecifierPublic)
	bool                                          bContinuouslyReevaluateTarget;                     // 0x0138(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxMomentNodeSettings_LookAt_Base;

// ScriptStruct GbxGame.GbxMomentNodeSettings_LookAtPlayer
// 0x0000 (0x0140 - 0x0140)
struct FGbxMomentNodeSettings_LookAtPlayer final : public FGbxMomentNodeSettings_LookAt_Base
{
};
DUMPER7_ASSERTS_FGbxMomentNodeSettings_LookAtPlayer;

// ScriptStruct GbxGame.JumpGoalDef
// 0x0010 (0x0028 - 0x0018)
struct FJumpGoalDef final : public FGbxDef
{
public:
	float                                         InitialZVelocity;                                  // 0x0018(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GoalHeight;                                        // 0x001C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bUseInitialZVelocity : 1;                          // 0x0020(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bUseGoalHeight : 1;                                // 0x0020(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bClearGravityScaleAtApex : 1;                      // 0x0020(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FJumpGoalDef;

// ScriptStruct GbxGame.UIStatDisplayDef
// 0x00F0 (0x0108 - 0x0018)
struct FUIStatDisplayDef final : public FGbxDef
{
public:
	FGbxDefPtrProperty_                           DisplayGroup;                                      // 0x0018(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBooleanDisplayValue                   DisplayCondition;                                  // 0x0030(0x0030)(Edit, NativeAccessSpecifierPublic)
	float                                         SortingPriority;                                   // 0x0060(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FGameDataHandleProperty_                      CompareAttribute;                                  // 0x0068(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ComparisonIdentifier;                              // 0x0080(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bBiggerIsBetter;                                   // 0x0088(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              StatIcon;                                          // 0x0090(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxInlineStruct                       StatLabel;                                         // 0x00B8(0x0018)(Edit, NativeAccessSpecifierPublic)
	struct FGbxInlineStruct                       StatValue;                                         // 0x00D0(0x0018)(Edit, NativeAccessSpecifierPublic)
	struct FGbxInlineStruct                       LongDescription;                                   // 0x00E8(0x0018)(Edit, NativeAccessSpecifierPublic)
	EUILongDescriptionBehavior                    LongDescriptionBehavior;                           // 0x0100(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FUIStatDisplayDef;

// ScriptStruct GbxGame.ActorTaggedFaceFXData
// 0x0048 (0x0048 - 0x0000)
struct FActorTaggedFaceFXData final
{
public:
	struct FGameplayTagContainer                  ActorMatchTags;                                    // 0x0000(0x0020)(Edit, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UFaceFXActor>            FaceFXActor;                                       // 0x0020(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FActorTaggedFaceFXData;

// ScriptStruct GbxGame.GbxActorPartDef
// 0x0000 (0x0080 - 0x0080)
struct FGbxActorPartDef : public FGbxActorPartBaseDef
{
};
DUMPER7_ASSERTS_FGbxActorPartDef;

// ScriptStruct GbxGame.GbxActorPartDef_FaceFX
// 0x0010 (0x0090 - 0x0080)
struct FGbxActorPartDef_FaceFX final : public FGbxActorPartDef
{
public:
	TArray<struct FActorTaggedFaceFXData>         TaggedFaceFXDataOptions;                           // 0x0080(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxActorPartDef_FaceFX;

// ScriptStruct GbxGame.GbxMomentNodeState
// 0x0020 (0x0070 - 0x0050)
struct FGbxMomentNodeState : public FGbxGraphNodeState
{
public:
	uint8                                         Pad_50[0x20];                                      // 0x0050(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxMomentNodeState;

// ScriptStruct GbxGame.GbxMomentNodeState_UseCover
// 0x0048 (0x00B8 - 0x0070)
struct FGbxMomentNodeState_UseCover final : public FGbxMomentNodeState
{
public:
	uint8                                         Pad_70[0x48];                                      // 0x0070(0x0048)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxMomentNodeState_UseCover;

// ScriptStruct GbxGame.LightProjectileGameDataCategory_DONTUSE
// 0x0001 (0x0001 - 0x0000)
struct FLightProjectileGameDataCategory_DONTUSE final
{
public:
	uint8                                         Pad_0[0x1];                                        // 0x0000(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FLightProjectileGameDataCategory_DONTUSE;

// ScriptStruct GbxGame.CausedHealingDetails
// 0x0090 (0x0090 - 0x0000)
struct FCausedHealingDetails final
{
public:
	class AActor*                                 HealTarget;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 HealInstigator;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Healing;                                           // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InitialHealth;                                     // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      DamageType;                                        // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDamageSourceContainer                 DamageSource;                                      // 0x0030(0x0040)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FDamageTags                            DamageTags;                                        // 0x0070(0x0020)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FCausedHealingDetails;

// ScriptStruct GbxGame.GbxSkillComponentData
// 0x0028 (0x0030 - 0x0008)
struct FGbxSkillComponentData : public FGbxHasStructType
{
public:
	FGbxDefPtrProperty_                           IdentifierDef;                                     // 0x0008(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGuid                                  ComponentID;                                       // 0x0020(0x0010)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxSkillComponentData;

// ScriptStruct GbxGame.GbxGlobalsMantle
// 0x00C0 (0x00E0 - 0x0020)
struct FGbxGlobalsMantle final : public FGbxGlobalDef
{
public:
	int32                                         DistanceToLookAheadForWalls;                       // 0x0020(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FootCollisionHeight;                               // 0x0024(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HeadCollisionHeight;                               // 0x0028(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinWallSlope;                                      // 0x002C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxAngleToKeepMantleCache;                         // 0x0030(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TimeToHoldValidClimbLocationSeconds;               // 0x0034(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxDegreeAngleFromForward;                         // 0x0038(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LookAngleRange;                                    // 0x003C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bShowPromptWhenAvailable : 1;                      // 0x0040(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DelayBeforeShowingPrompt;                          // 0x0044(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSoftClassPtr<class UClass>>           ValidActorClasses;                                 // 0x0048(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<TSoftClassPtr<class UClass>>           InvalidActorClasses;                               // 0x0058(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<TSoftClassPtr<class UClass>>           ValidPrimitiveComponentClasses;                    // 0x0068(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<EGbxMovementMode>                      ValidMovementModes;                                // 0x0078(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                         MaxAscendingSpeedZ;                                // 0x0088(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxDescendingSpeedZ;                               // 0x008C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinLedgeHeightToStillAllowMantle;                  // 0x0090(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxPossibleLedgeHeight;                            // 0x0094(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxPossibleLedgeDistance;                          // 0x0098(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ClientValidationTolerance;                         // 0x009C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinPassiveMantleHeight_Default;                    // 0x00A0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinPassiveMantleHeight_ForwardInput;               // 0x00A4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIgnoreTeamCollision;                              // 0x00A8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSubclassOf<class UObject>>            LoadedValidActorClasses;                           // 0x00B0(0x0010)(ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class UObject>>            LoadedInvalidActorClasses;                         // 0x00C0(0x0010)(ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class UObject>>            LoadedValidPrimitiveComponentClasses;              // 0x00D0(0x0010)(ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxGlobalsMantle;

// ScriptStruct GbxGame.GbxAnimNode_MultiTwoBoneIK
// 0x0028 (0x00F8 - 0x00D0)
struct FGbxAnimNode_MultiTwoBoneIK : public FAnimNode_SkeletalControlBase
{
public:
	uint8                                         Pad_D0[0x28];                                      // 0x00D0(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxAnimNode_MultiTwoBoneIK;

// ScriptStruct GbxGame.GbxNotifySectionKey
// 0x0010 (0x0010 - 0x0000)
struct FGbxNotifySectionKey final
{
public:
	class UAnimNotify*                            AnimNotify;                                        // 0x0000(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGbxNotifySectionDirection                    Direction;                                         // 0x0008(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxNotifySectionKey;

// ScriptStruct GbxGame.GbxMovieSceneNotifyChannel
// 0x00A8 (0x00F8 - 0x0050)
struct FGbxMovieSceneNotifyChannel final : public FMovieSceneChannel
{
public:
	TArray<struct FFrameNumber>                   KeyTimes;                                          // 0x0050(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FGbxNotifySectionKey>           KeyValues;                                         // 0x0060(0x0010)(ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                         Pad_70[0x88];                                      // 0x0070(0x0088)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxMovieSceneNotifyChannel;

// ScriptStruct GbxGame.CharacterMoveToCommand
// 0x0028 (0x0028 - 0x0000)
struct FCharacterMoveToCommand final
{
public:
	TWeakObjectPtr<class AActor>                  TargetActor;                                       // 0x0000(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                TargetLocation;                                    // 0x0008(0x0018)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Duration;                                          // 0x0020(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bContinuouslyUpdate : 1;                           // 0x0024(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bEnforceMaxSpeed : 1;                              // 0x0024(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bEnforceMaxSpeedOnEnding : 1;                      // 0x0024(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bMoveZAxis : 1;                                    // 0x0024(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bEndFalling : 1;                                   // 0x0024(0x0001)(BitIndex: 0x04, PropSize: 0x0001 (BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FCharacterMoveToCommand;

// ScriptStruct GbxGame.CharacterMoveToState
// 0x0048 (0x0048 - 0x0000)
struct FCharacterMoveToState final
{
public:
	struct FCharacterMoveToCommand                CommandData;                                       // 0x0000(0x0028)(NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_28[0x20];                                      // 0x0028(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FCharacterMoveToState;

// ScriptStruct GbxGame.GbxCameraModeTransition
// 0x0010 (0x0018 - 0x0008)
struct FGbxCameraModeTransition : public FGbxHasStructType
{
public:
	float                                         BlendTime;                                         // 0x0008(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         EasingExponent;                                    // 0x000C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bDelayShowViewModel;                               // 0x0010(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxCameraModeTransition;

// ScriptStruct GbxGame.GbxBodySettings
// 0x0180 (0x0228 - 0x00A8)
struct FGbxBodySettings : public FGbxGraphSettings
{
public:
	TArray<class UGbxActorStateSequence*>         ActorStateSequences;                               // 0x00A8(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	struct FBox                                   InitialBounds;                                     // 0x00B8(0x0038)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FVector                                InitialScale;                                      // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_108[0x90];                                     // 0x0108(0x0090)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UObject>                    ActorClass;                                        // 0x0198(0x0008)(Edit, ZeroConstructor, EditConst, NoClear, NoDestructor, AdvancedDisplay, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UObject*>                        ReferencedAssets;                                  // 0x01A0(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	struct FGameplayTag                           PartsViewTarget;                                   // 0x01B0(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                   AvatarViewTarget;                                  // 0x01B8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	FGbxDefPtrProperty_                           DefaultImpactEffect;                               // 0x01C0(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<struct FDBodyReference, FGbxDefPtrProperty_> ImpactEffectBodyOverrides;                     // 0x01D8(0x0050)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxBodySettings;

// ScriptStruct GbxGame.GbxProgressionDef
// 0x0020 (0x0038 - 0x0018)
struct FGbxProgressionDef final : public FGbxDef
{
public:
	TArray<FGbxDefPtrProperty_>                   PointPools;                                        // 0x0018(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FGbxInlineStruct>               behaviors;                                         // 0x0028(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxProgressionDef;

// ScriptStruct GbxGame.InventoryMaterialDAScalarParameter
// 0x000C (0x000C - 0x0000)
struct FInventoryMaterialDAScalarParameter final
{
public:
	class FName                                   Name;                                              // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Value;                                             // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FInventoryMaterialDAScalarParameter;

// ScriptStruct GbxGame.InventoryMaterialDAVectorParameter
// 0x0018 (0x0018 - 0x0000)
struct FInventoryMaterialDAVectorParameter final
{
public:
	class FName                                   Name;                                              // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           Value;                                             // 0x0008(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FInventoryMaterialDAVectorParameter;

// ScriptStruct GbxGame.InventoryMaterialDATextureParameter
// 0x0010 (0x0010 - 0x0000)
struct FInventoryMaterialDATextureParameter final
{
public:
	class FName                                   Name;                                              // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture*                               Value;                                             // 0x0008(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FInventoryMaterialDATextureParameter;

// ScriptStruct GbxGame.InventoryMaterialParamElementData
// 0x0030 (0x0030 - 0x0000)
struct FInventoryMaterialParamElementData final
{
public:
	TArray<struct FInventoryMaterialDAScalarParameter> Scalars;                                      // 0x0000(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FInventoryMaterialDAVectorParameter> Vectors;                                      // 0x0010(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FInventoryMaterialDATextureParameter> Textures;                                    // 0x0020(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FInventoryMaterialParamElementData;

// ScriptStruct GbxGame.ControlledMoveInitiationData
// 0x0020 (0x0020 - 0x0000)
struct alignas(0x08) FControlledMoveInitiationData final
{
public:
	int32                                         ID;                                                // 0x0000(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EControlledMoveInitiationType                 InitiationType;                                    // 0x0004(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8[0x18];                                       // 0x0008(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FControlledMoveInitiationData;

// ScriptStruct GbxGame.ControlledMoveNetCorrection
// 0x0030 (0x0030 - 0x0000)
struct FControlledMoveNetCorrection final
{
public:
	struct FControlledMoveInitiationData          InitData;                                          // 0x0000(0x0020)(NativeAccessSpecifierPublic)
	float                                         Runtime;                                           // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UControlledMove*                        ControlledMove;                                    // 0x0028(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FControlledMoveNetCorrection;

// ScriptStruct GbxGame.GbxSkillComponentData_Activatable
// 0x0020 (0x0050 - 0x0030)
struct FGbxSkillComponentData_Activatable : public FGbxSkillComponentData
{
public:
	EGbxSkillActivationMode                       ActivationMode;                                    // 0x0030(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FGbxDefPtrProperty_                           State;                                             // 0x0038(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxSkillComponentData_Activatable;

// ScriptStruct GbxGame.MissionSourceAction
// 0x0014 (0x0014 - 0x0000)
struct FMissionSourceAction final
{
public:
	uint32                                        Rank;                                              // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMissionSourceActionType                      Action;                                            // 0x0004(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSToken                                Timer;                                             // 0x0008(0x000C)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FMissionSourceAction;

// ScriptStruct GbxGame.CausedDeathDetails
// 0x00F8 (0x00F8 - 0x0000)
struct FCausedDeathDetails final
{
public:
	FGameDataHandleProperty_                      DamageType;                                        // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDamageSourceContainer                 DamageSource;                                      // 0x0018(0x0040)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class APawn*                                  DamageInstigator;                                  // 0x0058(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 DamageCauser;                                      // 0x0060(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         damage;                                            // 0x0068(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OverkillDamage;                                    // 0x006C(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bWasOverkill;                                      // 0x0070(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bWasCrit;                                          // 0x0071(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bWasAwareOfKiller;                                 // 0x0072(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bWasFullyHealthy;                                  // 0x0073(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                HitLocation;                                       // 0x0078(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                HitDirection;                                      // 0x0090(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                RadiusDamageOrigin;                                // 0x00A8(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         damageradius;                                      // 0x00C0(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FHealthTypeDamageSummary>       DamagePerHealthType;                               // 0x00C8(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FDamageTags                            DamageTags;                                        // 0x00D8(0x0020)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FCausedDeathDetails;

// ScriptStruct GbxGame.BinderBehaviorMod_AddChildActor
// 0x00B8 (0x00D0 - 0x0018)
struct alignas(0x10) FBinderBehaviorMod_AddChildActor final : public FFactsBinderBehaviorMod
{
public:
	uint8                                         Pad_18[0xB8];                                      // 0x0018(0x00B8)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FBinderBehaviorMod_AddChildActor;

// ScriptStruct GbxGame.GbxGameModeModuleTags
// 0x0000 (0x0020 - 0x0020)
struct FGbxGameModeModuleTags final : public FNexusBitSet
{
};
DUMPER7_ASSERTS_FGbxGameModeModuleTags;

// ScriptStruct GbxGame.GbxGameModeModuleEventParams
// 0x0050 (0x0050 - 0x0000)
struct FGbxGameModeModuleEventParams final
{
public:
	TMap<class FName, struct FGbxParam>           ParamsMap;                                         // 0x0000(0x0050)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxGameModeModuleEventParams;

// ScriptStruct GbxGame.ProjectileGameplayBounceFilterData
// 0x0001 (0x0001 - 0x0000)
struct FProjectileGameplayBounceFilterData final
{
public:
	uint8                                         bGround : 1;                                       // 0x0000(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bCeiling : 1;                                      // 0x0000(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bWall : 1;                                         // 0x0000(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bWorld : 1;                                        // 0x0000(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bDamageable : 1;                                   // 0x0000(0x0001)(BitIndex: 0x04, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bEnemy : 1;                                        // 0x0000(0x0001)(BitIndex: 0x05, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bFriend : 1;                                       // 0x0000(0x0001)(BitIndex: 0x06, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
};
DUMPER7_ASSERTS_FProjectileGameplayBounceFilterData;

// ScriptStruct GbxGame.ProjectileGameplayBounceData
// 0x0008 (0x0008 - 0x0000)
struct FProjectileGameplayBounceData final
{
public:
	int32                                         MaxNumBounces;                                     // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FProjectileGameplayBounceFilterData    filter;                                            // 0x0004(0x0001)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FProjectileGameplayBounceData;

// ScriptStruct GbxGame.GbxStatusEffectPresentationGraphNodeSettings
// 0x0000 (0x0038 - 0x0038)
struct FGbxStatusEffectPresentationGraphNodeSettings : public FGbxGraphNodeSettings
{
};
DUMPER7_ASSERTS_FGbxStatusEffectPresentationGraphNodeSettings;

// ScriptStruct GbxGame.ObjectiveValueEvaluator
// 0x0000 (0x0008 - 0x0008)
struct FObjectiveValueEvaluator : public FGbxHasStructType
{
};
DUMPER7_ASSERTS_FObjectiveValueEvaluator;

// ScriptStruct GbxGame.GbxRotationChannelRepItem
// 0x01B4 (0x01C0 - 0x000C)
struct FGbxRotationChannelRepItem final : public FFastArraySerializerItem
{
public:
	EGbxRotationChannelState                      State;                                             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int8                                          TargetDataSourceIndex;                             // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxRotationTarget                     Targets[0x6];                                      // 0x0010(0x0048)(NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxRotationChannelRepItem;

// ScriptStruct GbxGame.GbxRotationStateRepData
// 0x0010 (0x0010 - 0x0000)
struct FGbxRotationStateRepData final
{
public:
	TArray<struct FGbxRotationChannelRepItem>     items;                                             // 0x0000(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxRotationStateRepData;

// ScriptStruct GbxGame.GbxRotationState
// 0x0058 (0x0188 - 0x0130)
struct FGbxRotationState final : public FGbxGraphState
{
public:
	uint8                                         Pad_130[0x18];                                     // 0x0130(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxRotationStateRepData               RepData;                                           // 0x0148(0x0010)(Transient, NativeAccessSpecifierPrivate)
	uint8                                         Pad_158[0x30];                                     // 0x0158(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxRotationState;

// ScriptStruct GbxGame.MissionAction
// 0x0018 (0x0018 - 0x0000)
struct FMissionAction final
{
public:
	struct FGbxInlineStruct                       data;                                              // 0x0000(0x0018)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FMissionAction;

// ScriptStruct GbxGame.ObjectiveGoToAction
// 0x0020 (0x0020 - 0x0000)
struct FObjectiveGoToAction final
{
public:
	struct FSToken                                Objective;                                         // 0x0000(0x000C)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFactExpression                        Condition;                                         // 0x0010(0x0010)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FObjectiveGoToAction;

// ScriptStruct GbxGame.MissionActionSequenceDef
// 0x0020 (0x0028 - 0x0008)
struct FMissionActionSequenceDef : public FGbxHasStructType
{
public:
	TArray<struct FMissionAction>                 actions;                                           // 0x0008(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FObjectiveGoToAction>           GoTos;                                             // 0x0018(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FMissionActionSequenceDef;

// ScriptStruct GbxGame.MissionLatentPhaseDef
// 0x0008 (0x0030 - 0x0028)
struct FMissionLatentPhaseDef final : public FMissionActionSequenceDef
{
public:
	bool                                          bExpediteOnLoad;                                   // 0x0028(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FMissionLatentPhaseDef;

// ScriptStruct GbxGame.AspectMaterialVectorParameter
// 0x0018 (0x0018 - 0x0000)
struct FAspectMaterialVectorParameter final
{
public:
	class FName                                   Name;                                              // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           Value;                                             // 0x0008(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FAspectMaterialVectorParameter;

// ScriptStruct GbxGame.BodyActionAnimSubSet
// 0x0040 (0x0040 - 0x0000)
struct FBodyActionAnimSubSet final
{
public:
	struct FGbxAttributeEvaluator                 Condition;                                         // 0x0000(0x0038)(Edit, NativeAccessSpecifierPublic)
	class UGbxTrick*                              Trick;                                             // 0x0038(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FBodyActionAnimSubSet;

// ScriptStruct GbxGame.BodyActionAnimSet
// 0x0050 (0x0050 - 0x0000)
struct FBodyActionAnimSet final
{
public:
	struct FGbxAttributeEvaluator                 Condition;                                         // 0x0000(0x0038)(Edit, NativeAccessSpecifierPublic)
	class UGbxTrick*                              Trick;                                             // 0x0038(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FBodyActionAnimSubSet>          Sets;                                              // 0x0040(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FBodyActionAnimSet;

// ScriptStruct GbxGame.BodyActionData
// 0x0018 (0x0018 - 0x0000)
struct FBodyActionData final
{
public:
	EGbxTrickNetMode                              TrickNetMode;                                      // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBodyActionAnimSet>             Sets;                                              // 0x0008(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FBodyActionData;

// ScriptStruct GbxGame.GbxBrainTaskSettings_AOEAttack
// 0x0138 (0x02D0 - 0x0198)
struct FGbxBrainTaskSettings_AOEAttack final : public FGbxBrainTaskSettings_Composite
{
public:
	struct FGbxParam                              target;                                            // 0x0198(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              DesiredDistance;                                   // 0x01D0(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              DesiredHeight;                                     // 0x0208(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxTrickRef                           Attack;                                            // 0x0240(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FGbxParam                              Count;                                             // 0x0258(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              PlayRate;                                          // 0x0290(0x0038)(Edit, NativeAccessSpecifierPublic)
	ETrickInterrupt                               InterruptRule;                                     // 0x02C8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCanMoveIntoPosition;                              // 0x02CC(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAttackRotation_Moving                        BodyRotation_Moving;                               // 0x02CD(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAllowHeadLook_Moving;                             // 0x02CE(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAllowAimOffset_Moving;                            // 0x02CF(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxBrainTaskSettings_AOEAttack;

// ScriptStruct GbxGame.GbxDamageEventDetails
// 0x00E0 (0x00E0 - 0x0000)
struct FGbxDamageEventDetails final
{
public:
	FGameDataHandleProperty_                      DamageType;                                        // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDamageSourceContainer                 DamageSource;                                      // 0x0018(0x0040)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class APawn*                                  DamageInstigator;                                  // 0x0058(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 DamageCauser;                                      // 0x0060(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                HitLocation;                                       // 0x0068(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                HitDirection;                                      // 0x0080(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0098(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FHitRegionInfo                         HitRegion;                                         // 0x00A0(0x0020)(BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                RadiusDamageOrigin;                                // 0x00C0(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         damageradius;                                      // 0x00D8(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxDamageEventDetails;

// ScriptStruct GbxGame.GbxSkillComponentDataItem
// 0x0020 (0x0028 - 0x0008)
struct FGbxSkillComponentDataItem : public FGbxHasStructType
{
public:
	class FString                                 ItemDisplayName;                                   // 0x0008(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                  ComponentItemID;                                   // 0x0018(0x0010)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxSkillComponentDataItem;

// ScriptStruct GbxGame.GbxSkillComponentData_TimerItemEx
// 0x00E0 (0x0108 - 0x0028)
struct FGbxSkillComponentData_TimerItemEx final : public FGbxSkillComponentDataItem
{
public:
	struct FGbxAttributeInit                      DurationInit;                                      // 0x0028(0x0050)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bAutoStart;                                        // 0x0078(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInfinite;                                         // 0x0079(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_7A[0x6];                                       // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAttributeInit                      RunCountInit;                                      // 0x0080(0x0050)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bCanAdjustPastDuration;                            // 0x00D0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxInlineStruct                       ActivationStrategy;                                // 0x00D8(0x0018)(Edit, NativeAccessSpecifierPublic)
	struct FGbxInlineStruct                       Extension;                                         // 0x00F0(0x0018)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxSkillComponentData_TimerItemEx;

// ScriptStruct GbxGame.GbxSkillComponentData_TimerEx
// 0x0028 (0x0058 - 0x0030)
struct FGbxSkillComponentData_TimerEx final : public FGbxSkillComponentData
{
public:
	TArray<struct FGbxSkillComponentData_TimerItemEx> timers;                                        // 0x0030(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	struct FGbxInlineStruct                       DefaultActivationStrategy;                         // 0x0040(0x0018)(Edit, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxSkillComponentData_TimerEx;

// ScriptStruct GbxGame.GbxBrainService_LocationTracker
// 0x1718 (0x1748 - 0x0030)
struct FGbxBrainService_LocationTracker final : public FGbxBrainService
{
public:
	uint8                                         Pad_30[0x1718];                                    // 0x0030(0x1718)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainService_LocationTracker;

// ScriptStruct GbxGame.HitFriendlyEventDetails
// 0x0088 (0x0088 - 0x0000)
struct FHitFriendlyEventDetails final
{
public:
	class AActor*                                 HitTarget;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 HitInstigator;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      DamageType;                                        // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDamageSourceContainer                 DamageSource;                                      // 0x0028(0x0040)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FDamageTags                            DamageTags;                                        // 0x0068(0x0020)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FHitFriendlyEventDetails;

// ScriptStruct GbxGame.GbxUnlockConditionData
// 0x0000 (0x0008 - 0x0008)
struct FGbxUnlockConditionData : public FGbxHasStructType
{
};
DUMPER7_ASSERTS_FGbxUnlockConditionData;

// ScriptStruct GbxGame.UserDefinedMissionBinderInfo
// 0x0030 (0x0030 - 0x0000)
struct FUserDefinedMissionBinderInfo final
{
public:
	struct FSToken                                Name;                                              // 0x0000(0x000C)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGbxInlineStruct>               Targets;                                           // 0x0010(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FGbxInlineStruct>               BehaviorMods;                                      // 0x0020(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FUserDefinedMissionBinderInfo;

// ScriptStruct GbxGame.InventoryAspect
// 0x0028 (0x0030 - 0x0008)
struct FInventoryAspect : public FGbxHasStructType
{
public:
	EInventoryAspectSelectionPriority             SelectionPriority;                                 // 0x0008(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_9[0xF];                                        // 0x0009(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	FGbxDefPtrProperty_                           params;                                            // 0x0018(0x0018)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
};
DUMPER7_ASSERTS_FInventoryAspect;

// ScriptStruct GbxGame.InventorySkillsAspect
// 0x0020 (0x0050 - 0x0030)
struct FInventorySkillsAspect final : public FInventoryAspect
{
public:
	TArray<FGbxDefPtrProperty_>                   skills;                                            // 0x0030(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FName                                   Tag;                                               // 0x0040(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bApplyOnEquip;                                     // 0x0048(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FInventorySkillsAspect;

// ScriptStruct GbxGame.GbxBrainAspect_RetraceSteps
// 0x0070 (0x0190 - 0x0120)
struct FGbxBrainAspect_RetraceSteps final : public FGbxBrainAspect_Navigation
{
public:
	uint8                                         Pad_120[0x70];                                     // 0x0120(0x0070)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainAspect_RetraceSteps;

// ScriptStruct GbxGame.ObjectiveWaypointSettings
// 0x0020 (0x0028 - 0x0008)
struct FObjectiveWaypointSettings : public FGbxHasStructType
{
public:
	bool                                          bPassWaypointToSpawnedActors;                      // 0x0008(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         WaypointRadius;                                    // 0x000C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNeverDisplayAsOptional;                           // 0x0010(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOverrideVisibilityFlags;                          // 0x0011(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         OverrideVisibilityFlags;                           // 0x0014(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFactExpression                        Condition;                                         // 0x0018(0x0010)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FObjectiveWaypointSettings;

// ScriptStruct GbxGame.CameraModeCategories
// 0x0001 (0x0001 - 0x0000)
struct FCameraModeCategories final
{
public:
	uint8                                         Pad_0[0x1];                                        // 0x0000(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FCameraModeCategories;

// ScriptStruct GbxGame.GbxSkillActionSequenceExecBufferPolicy
// 0x0030 (0x0030 - 0x0000)
struct FGbxSkillActionSequenceExecBufferPolicy final
{
public:
	TArray<struct FGbxInlineStruct>               Exec_Primary;                                      // 0x0000(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FGbxInlineStruct>               Exec_Secondary;                                    // 0x0010(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FGbxInlineStruct>               Exec_Tertiary;                                     // 0x0020(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxSkillActionSequenceExecBufferPolicy;

// ScriptStruct GbxGame.UsableAngleRestriction
// 0x0010 (0x0028 - 0x0018)
struct FUsableAngleRestriction final : public FGbxDef
{
public:
	bool                                          bUseAngleRestriction;                              // 0x0018(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AngleOffset;                                       // 0x001C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AngleWidth;                                        // 0x0020(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FUsableAngleRestriction;

// ScriptStruct GbxGame.GbxCondition_InventoryType
// 0x0018 (0x0028 - 0x0010)
struct FGbxCondition_InventoryType final : public FGbxConditionValueResolver
{
public:
	FGameDataHandleProperty_                      InventoryType;                                     // 0x0010(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxCondition_InventoryType;

// ScriptStruct GbxGame.GbxDialogLineRef
// 0x0028 (0x0028 - 0x0000)
struct alignas(0x08) FGbxDialogLineRef final
{
public:
	FGbxDefPtrProperty_                           LineSlotDef;                                       // 0x0000(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                   LineName;                                          // 0x0018(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_20[0x8];                                       // 0x0020(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxDialogLineRef;

// ScriptStruct GbxGame.GbxSkillComponent_Activatable
// 0x0008 (0x0058 - 0x0050)
struct FGbxSkillComponent_Activatable : public FGbxSkillComponent
{
public:
	uint8                                         Pad_50[0x8];                                       // 0x0050(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxSkillComponent_Activatable;

// ScriptStruct GbxGame.GbxSkillComponent_Targetable
// 0x0040 (0x0098 - 0x0058)
struct FGbxSkillComponent_Targetable : public FGbxSkillComponent_Activatable
{
public:
	uint8                                         Pad_58[0x40];                                      // 0x0058(0x0040)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxSkillComponent_Targetable;

// ScriptStruct GbxGame.GbxSkillComponent_Targetable_Filtered
// 0x0010 (0x00A8 - 0x0098)
struct FGbxSkillComponent_Targetable_Filtered : public FGbxSkillComponent_Targetable
{
public:
	uint8                                         Pad_98[0x10];                                      // 0x0098(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxSkillComponent_Targetable_Filtered;

// ScriptStruct GbxGame.GbxSkillComponent_DamageModifier
// 0x0018 (0x00C0 - 0x00A8)
struct FGbxSkillComponent_DamageModifier final : public FGbxSkillComponent_Targetable_Filtered
{
public:
	uint8                                         Pad_A8[0x18];                                      // 0x00A8(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxSkillComponent_DamageModifier;

// ScriptStruct GbxGame.GbxStatusEffectQueryResult_Item
// 0x0040 (0x0040 - 0x0000)
struct FGbxStatusEffectQueryResult_Item final
{
public:
	class FName                                   ParamName;                                         // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxParam                              Param;                                             // 0x0008(0x0038)(NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxStatusEffectQueryResult_Item;

// ScriptStruct GbxGame.GbxStatusEffectQueryResult
// 0x0010 (0x0010 - 0x0000)
struct FGbxStatusEffectQueryResult final
{
public:
	TArray<struct FGbxStatusEffectQueryResult_Item> items;                                           // 0x0000(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxStatusEffectQueryResult;

// ScriptStruct GbxGame.CameraModeBehavior
// 0x0010 (0x0018 - 0x0008)
struct FCameraModeBehavior : public FGbxHasStructType
{
public:
	class FName                                   label;                                             // 0x0008(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bDefaultUpdatePreViewTarget;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bUpdatePreViewTarget;                              // 0x0011(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bZeroDeltaUpdateWhilePaused;                       // 0x0012(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_13[0x5];                                       // 0x0013(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FCameraModeBehavior;

// ScriptStruct GbxGame.CameraModeBehavior_ContinuousCollisionTrace
// 0x0028 (0x0040 - 0x0018)
struct FCameraModeBehavior_ContinuousCollisionTrace final : public FCameraModeBehavior
{
public:
	uint8                                         Pad_18[0x20];                                      // 0x0018(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CollisionRadius;                                   // 0x0038(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         bIgnoreChildToViewTarget : 1;                      // 0x003C(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bIgnoreViewTargetAttachParent : 1;                 // 0x003C(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FCameraModeBehavior_ContinuousCollisionTrace;

// ScriptStruct GbxGame.DamageCauserData
// 0x0200 (0x0208 - 0x0008)
struct FDamageCauserData : public FGbxHasStructType
{
public:
	uint8                                         Pad_8[0x78];                                       // 0x0008(0x0078)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class AActor* DamagedActor, const struct FCausedDamageDetails& Details)> OnCausedAnyDamage; // 0x0080(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const class AActor* DamagedActor, const struct FCausedDeathDetails& Details)> OnCausedDeath; // 0x0090(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FCausedHealingDetails& Details)> OnCausedHealing;     // 0x00A0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const struct FHitFriendlyEventDetails& Details)> OnHitFriendly;    // 0x00B0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const class AActor* DamagedActor, const struct FCausedDeathDetails& Details)> OnCausedInjury; // 0x00C0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_D0[0x34];                                      // 0x00D0(0x0034)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAttributeFloat                     DamageDealtMultiplier;                             // 0x0104(0x000C)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	struct FGbxAttributeFloat                     RadiusDamage_RadiusMultiplier;                     // 0x0110(0x000C)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	struct FGbxAttributeFloat                     RadiusDamage_DamageMultiplier;                     // 0x011C(0x000C)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	struct FGbxAttributeFloat                     HealingDealtMultiplier;                            // 0x0128(0x000C)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	struct FGbxAttributeInteger                   ShouldIgnoreEnemyElementalResistance;              // 0x0134(0x000C)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	uint8                                         Pad_140[0x68];                                     // 0x0140(0x0068)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAttributeFloat                     DefaultCriticalHitMultiplier;                      // 0x01A8(0x000C)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	struct FGbxAttributeFloat                     DefaultCriticalHitChance;                          // 0x01B4(0x000C)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	struct FGbxAttributeFloat                     EnemyReflectionChance;                             // 0x01C0(0x000C)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_1CC[0x3C];                                     // 0x01CC(0x003C)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FDamageCauserData;

// ScriptStruct GbxGame.GbxUnlockableGroupNodeRef
// 0x0028 (0x0028 - 0x0000)
struct alignas(0x08) FGbxUnlockableGroupNodeRef final
{
public:
	FGbxDefPtrProperty_                           ProgressGraph;                                     // 0x0000(0x0018)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                   GroupName;                                         // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                   NodeName;                                          // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxUnlockableGroupNodeRef;

// ScriptStruct GbxGame.GbxStatusEffectRuleBaseData
// 0x0000 (0x0008 - 0x0008)
struct FGbxStatusEffectRuleBaseData : public FGbxHasStructType
{
};
DUMPER7_ASSERTS_FGbxStatusEffectRuleBaseData;

// ScriptStruct GbxGame.GbxProgressionCommandLevel
// 0x0010 (0x0010 - 0x0000)
struct FGbxProgressionCommandLevel final
{
public:
	TArray<struct FGbxInlineStruct>               CommandList;                                       // 0x0000(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxProgressionCommandLevel;

// ScriptStruct GbxGame.GbxProgressionCommandListDef
// 0x0038 (0x0050 - 0x0018)
struct FGbxProgressionCommandListDef final : public FGbxDef
{
public:
	FGbxDefPtrProperty_                           AssociatedProgressGraphGroup;                      // 0x0018(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<FGbxDefPtrProperty_>                   ProgressGraphsToReset;                             // 0x0030(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FGbxProgressionCommandLevel>    CommandLevels;                                     // 0x0040(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxProgressionCommandListDef;

// ScriptStruct GbxGame.MissionObjectiveUpdateFilter
// 0x0008 (0x0008 - 0x0000)
struct FMissionObjectiveUpdateFilter final
{
public:
	EMissionObjectiveUpdateFilterType             type;                                              // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         IntValue;                                          // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FMissionObjectiveUpdateFilter;

// ScriptStruct GbxGame.MissionActionSequenceDef_ObjectiveUpdated
// 0x0008 (0x0030 - 0x0028)
struct FMissionActionSequenceDef_ObjectiveUpdated final : public FMissionActionSequenceDef
{
public:
	struct FMissionObjectiveUpdateFilter          filter;                                            // 0x0028(0x0008)(Edit, NoDestructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FMissionActionSequenceDef_ObjectiveUpdated;

// ScriptStruct GbxGame.ObjectiveGraphNodeRuntimeData
// 0x0030 (0x0030 - 0x0000)
struct FObjectiveGraphNodeRuntimeData final
{
public:
	uint8                                         Pad_0[0x20];                                       // 0x0000(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FMissionActionSequenceDef_ObjectiveUpdated> updated;                               // 0x0020(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FObjectiveGraphNodeRuntimeData;

// ScriptStruct GbxGame.InitialRotationAxisParams
// 0x00E0 (0x00E0 - 0x0000)
struct FInitialRotationAxisParams final
{
public:
	bool                                          bEnabled;                                          // 0x0000(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MinAngle;                                          // 0x0004(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxAngle;                                          // 0x0008(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRelativeToBase;                                   // 0x000C(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLinearInterpolation;                              // 0x000D(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         speed;                                             // 0x0010(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxFloatCurve                         SpeedScaleCurve;                                   // 0x0018(0x00B0)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                         delay;                                             // 0x00C8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_CC[0x14];                                      // 0x00CC(0x0014)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FInitialRotationAxisParams;

// ScriptStruct GbxGame.ReplicatedSwimmingState
// 0x001C (0x001C - 0x0000)
struct FReplicatedSwimmingState final
{
public:
	uint8                                         bIsSwimming;                                       // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGbxSwimmingStartType                         StartType;                                         // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         StartVelZ;                                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGbxSwimmingStopType                          StopType;                                          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bIsSwimmingUnderwater;                             // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bIsSubmerged;                                      // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B[0x1];                                        // 0x000B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SubmergedDepth;                                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DistanceToFloor;                                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WadingPercentage;                                  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SurfaceZ;                                          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FReplicatedSwimmingState;

// ScriptStruct GbxGame.GbxActivityEffect
// 0x0000 (0x0008 - 0x0008)
struct FGbxActivityEffect : public FGbxHasStructType
{
};
DUMPER7_ASSERTS_FGbxActivityEffect;

// ScriptStruct GbxGame.GbxSkillActionSequenceExecBufferPolicyData
// 0x0000 (0x0008 - 0x0008)
struct FGbxSkillActionSequenceExecBufferPolicyData : public FGbxHasStructType
{
};
DUMPER7_ASSERTS_FGbxSkillActionSequenceExecBufferPolicyData;

// ScriptStruct GbxGame.UsabilityData
// 0x00A8 (0x00C0 - 0x0018)
struct FUsabilityData final : public FGbxDef
{
public:
	bool                                          bEnablePrimaryUse;                                 // 0x0018(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnableSecondaryUse;                               // 0x0019(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUsabilityInfo                         PrimaryUseInfo;                                    // 0x0020(0x0050)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FUsabilityInfo                         SecondaryUseInfo;                                  // 0x0070(0x0050)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FUsabilityData;

// ScriptStruct GbxGame.UsabilityConfigInfo
// 0x0108 (0x0108 - 0x0000)
struct FUsabilityConfigInfo final
{
public:
	FGameDataHandleProperty_                      UsabilityDataDef;                                  // 0x0000(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseExternalDef;                                   // 0x0018(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRequireTrace;                                     // 0x0019(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIndirectTraceWhileHolding;                        // 0x001A(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseCustomInteractDistance;                        // 0x001B(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CustomInteractDistance;                            // 0x001C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FUsabilityData                         UsabilityData;                                     // 0x0020(0x00C0)(Edit, NativeAccessSpecifierPublic)
	struct FUsableAngleRestriction                AngleRestrictions;                                 // 0x00E0(0x0028)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FUsabilityConfigInfo;

// ScriptStruct GbxGame.InventoryItemDefProvider
// 0x0038 (0x0038 - 0x0000)
struct FInventoryItemDefProvider final
{
public:
	FGameDataHandleProperty_                      Handle;                                            // 0x0000(0x0018)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bInstance;                                         // 0x0018(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxInlineStruct                       Instance;                                          // 0x0020(0x0018)(Edit, Protected, NativeAccessSpecifierProtected)
};
DUMPER7_ASSERTS_FInventoryItemDefProvider;

// ScriptStruct GbxGame.InventorySelectionCriterion
// 0x00E8 (0x00E8 - 0x0000)
struct FInventorySelectionCriterion final
{
public:
	class FName                                   Name;                                              // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	FGameDataHandleProperty_                      Preset;                                            // 0x0008(0x0018)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FInventoryTags                         tags;                                              // 0x0020(0x0020)(Edit, Protected, NativeAccessSpecifierProtected)
	TMap<class FName, struct FGbxAttributeInit>   TagWeights;                                        // 0x0040(0x0050)(Edit, Protected, NativeAccessSpecifierProtected)
	TMap<class FName, struct FGbxAttributeInit>   TagMinGameStages;                                  // 0x0090(0x0050)(Edit, Protected, NativeAccessSpecifierProtected)
	bool                                          bNoneSet;                                          // 0x00E0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Flags;                                             // 0x00E1(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_E2[0x6];                                       // 0x00E2(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FInventorySelectionCriterion;

// ScriptStruct GbxGame.InventorySelectionCriteria
// 0x0028 (0x0028 - 0x0000)
struct FInventorySelectionCriteria final
{
public:
	FGameDataHandleProperty_                      Preset;                                            // 0x0000(0x0018)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FInventorySelectionCriterion>   Criteria;                                          // 0x0018(0x0010)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
};
DUMPER7_ASSERTS_FInventorySelectionCriteria;

// ScriptStruct GbxGame.InventoryItemSelectionData
// 0x0068 (0x0068 - 0x0000)
struct FInventoryItemSelectionData
{
public:
	uint8                                         Pad_0[0x8];                                        // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInventoryItemDefProvider              item;                                              // 0x0008(0x0038)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FInventorySelectionCriteria            Criteria;                                          // 0x0040(0x0028)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FInventoryItemSelectionData;

// ScriptStruct GbxGame.ItemPoolEntry
// 0x00C0 (0x00C0 - 0x0000)
struct FItemPoolEntry final
{
public:
	struct FInventoryItemSelectionData            item;                                              // 0x0000(0x0068)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FGbxAttributeInit                      Weight;                                            // 0x0068(0x0050)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_B8[0x8];                                       // 0x00B8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FItemPoolEntry;

// ScriptStruct GbxGame.GbxSkillCompValue
// 0x0040 (0x0040 - 0x0000)
struct alignas(0x08) FGbxSkillCompValue final
{
public:
	uint8                                         Pad_0[0x40];                                       // 0x0000(0x0040)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxSkillCompValue;

// ScriptStruct GbxGame.GbxSkillComparison
// 0x0088 (0x0088 - 0x0000)
struct FGbxSkillComparison final
{
public:
	struct FGbxSkillCompValue                     LHS;                                               // 0x0000(0x0040)(Edit, NativeAccessSpecifierPrivate)
	EGbxSkillComparisonOp                         Op;                                                // 0x0040(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxSkillCompValue                     RHS;                                               // 0x0048(0x0040)(Edit, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxSkillComparison;

// ScriptStruct GbxGame.GbxCondition_SkillComparison
// 0x0088 (0x0098 - 0x0010)
struct FGbxCondition_SkillComparison final : public FGbxConditionValueResolver
{
public:
	struct FGbxSkillComparison                    Comparison;                                        // 0x0010(0x0088)(Edit, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxCondition_SkillComparison;

// ScriptStruct GbxGame.GbxStatusEffectSpec_Param
// 0x0030 (0x0030 - 0x0000)
struct alignas(0x08) FGbxStatusEffectSpec_Param final
{
public:
	uint8                                         Pad_0[0x30];                                       // 0x0000(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxStatusEffectSpec_Param;

// ScriptStruct GbxGame.GbxStatusEffectSpec_Params
// 0x0018 (0x0018 - 0x0000)
struct FGbxStatusEffectSpec_Params final
{
public:
	TArray<struct FGbxStatusEffectSpec_Param>     params;                                            // 0x0000(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_10[0x8];                                       // 0x0010(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxStatusEffectSpec_Params;

// ScriptStruct GbxGame.FoleyLoopInfo
// 0x00C0 (0x00C0 - 0x0000)
struct alignas(0x10) FFoleyLoopInfo final
{
public:
	EFoleyLoopInfoType                            LoopType;                                          // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   EmitterTag;                                        // 0x0004(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FGbxDefPtrProperty_                           WwiseEvent;                                        // 0x0010(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   TrackingSocket;                                    // 0x0028(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2f                              AngularVelocityInputRange;                         // 0x0030(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           AngularVelocityRtpc;                               // 0x0038(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FadeTime;                                          // 0x0050(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           Tag;                                               // 0x0054(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EInventoryAspectSelectionPriority             priority;                                          // 0x005C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5D[0x63];                                      // 0x005D(0x0063)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FFoleyLoopInfo;

// ScriptStruct GbxGame.FoleyImpactTraceNotify
// 0x0038 (0x0038 - 0x0000)
struct FFoleyImpactTraceNotify final
{
public:
	class FName                                   EmitterTag;                                        // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxAudioEvent                         Event;                                             // 0x0008(0x0030)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FFoleyImpactTraceNotify;

// ScriptStruct GbxGame.FoleyImpactInfo
// 0x0070 (0x0070 - 0x0000)
struct FFoleyImpactInfo final
{
public:
	class FName                                   socket;                                            // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      Impact;                                            // 0x0008(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      WaterStateImpactOverride;                          // 0x0020(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFoleyImpactTraceNotify                OnTraceFailed;                                     // 0x0038(0x0038)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FFoleyImpactInfo;

// ScriptStruct GbxGame.FoleyImpactGroup
// 0x0010 (0x0010 - 0x0000)
struct FFoleyImpactGroup final
{
public:
	TArray<struct FFoleyImpactInfo>               FoleyImpactInfos;                                  // 0x0000(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FFoleyImpactGroup;

// ScriptStruct GbxGame.FoleyRollingLoopInfo
// 0x0050 (0x0050 - 0x0000)
struct alignas(0x08) FFoleyRollingLoopInfo final
{
public:
	class FName                                   EmitterTag;                                        // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           StartEvent;                                        // 0x0008(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           StopEvent;                                         // 0x0020(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SpeedThreshold;                                    // 0x0038(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3C[0x14];                                      // 0x003C(0x0014)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FFoleyRollingLoopInfo;

// ScriptStruct GbxGame.SoundTagOverride
// 0x0020 (0x0020 - 0x0000)
struct alignas(0x08) FSoundTagOverride final
{
public:
	struct FGameplayTag                           SoundTag;                                          // 0x0000(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           WwiseEvent;                                        // 0x0008(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSoundTagOverride;

// ScriptStruct GbxGame.GestaltSoundTagOverrides
// 0x0010 (0x0010 - 0x0000)
struct FGestaltSoundTagOverrides final
{
public:
	TArray<struct FSoundTagOverride>              SoundTagOverrides;                                 // 0x0000(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGestaltSoundTagOverrides;

// ScriptStruct GbxGame.GbxFoleyAudioProviderDef
// 0x0198 (0x02E0 - 0x0148)
struct FGbxFoleyAudioProviderDef : public FGbxAudioProviderDef
{
public:
	TArray<struct FFoleyLoopInfo>                 FoleyLoopInfo;                                     // 0x0148(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FFoleyImpactInfo>               Feet;                                              // 0x0158(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TMap<struct FGameplayTag, struct FFoleyImpactGroup> FoleyImpactGroups;                           // 0x0168(0x0050)(Edit, NativeAccessSpecifierPublic)
	bool                                          bCharacterRolls;                                   // 0x01B8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B9[0x7];                                      // 0x01B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFoleyRollingLoopInfo                  RollingLoopInfo;                                   // 0x01C0(0x0050)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	float                                         HighDetailFoleyRadius;                             // 0x0210(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FoleyTraceLength;                                  // 0x0214(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FootstepBlendValue;                                // 0x0218(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2f                              FootSpeedInputRange;                               // 0x021C(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_224[0x4];                                      // 0x0224(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FGbxDefPtrProperty_                           CharacterSpeedRtpcName;                            // 0x0228(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   CharacterSpeedTrackingSocket;                      // 0x0240(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WetnessDryingTime;                                 // 0x0248(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GlobalWetnessTraceDistance;                        // 0x024C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GlobalWetnessTraceFrequency;                       // 0x0250(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_254[0x4];                                      // 0x0254(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<struct FGameplayTag, struct FGestaltSoundTagOverrides> GestaltSoundTagOverrideMap;          // 0x0258(0x0050)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FFoleyLoopInfo>                 GestaltFoleyLookupTable;                           // 0x02A8(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                         MaxFoleyLoops;                                     // 0x02B8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FootstepRetriggerDelay;                            // 0x02BC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAudioVolumeAware;                                 // 0x02C0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C1[0x7];                                      // 0x02C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FGbxDefPtrProperty_                           IsHiddenGameParameter;                             // 0x02C8(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxFoleyAudioProviderDef;

// ScriptStruct GbxGame.GbxLevelSequenceActorDef
// 0x0088 (0x00A0 - 0x0018)
struct FGbxLevelSequenceActorDef final : public FGbxDef
{
public:
	struct FVector                                Location;                                          // 0x0018(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Duration;                                          // 0x0030(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFactAddress                           FactAddress;                                       // 0x0038(0x0038)(Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsPersistent;                                     // 0x0070(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class UDataLayerAsset>> DataLayers;                                        // 0x0078(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	bool                                          bIsSpatiallyLoaded;                                // 0x0088(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFactAddress>                   ShotOriginFactAddresses;                           // 0x0090(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxLevelSequenceActorDef;

// ScriptStruct GbxGame.ControlledMoveParameters
// 0x0030 (0x0030 - 0x0000)
struct FControlledMoveParameters final
{
public:
	float                                         SpeedOverride;                                     // 0x0000(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         DurationOverride;                                  // 0x0004(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         LaunchAngleOverride;                               // 0x0008(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class AActor>                  TargetActor;                                       // 0x000C(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                TargetLocation;                                    // 0x0018(0x0018)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FControlledMoveParameters;

// ScriptStruct GbxGame.SimpleMotionState
// 0x0040 (0x0040 - 0x0000)
struct FSimpleMotionState final
{
public:
	ESimpleMotionType                             MotionType;                                        // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MinSpeed;                                          // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         maxspeed;                                          // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UCurveFloat>             SpeedControlCurve;                                 // 0x0010(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Acceleration;                                      // 0x0038(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bScaleTransformByValue : 1;                        // 0x003C(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bScaleSpeedByValue : 1;                            // 0x003C(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bScaleAccelerationByValue : 1;                     // 0x003C(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FSimpleMotionState;

// ScriptStruct GbxGame.GbxAnimNode_SimpleMotionBoneControl
// 0x0390 (0x0460 - 0x00D0)
struct FGbxAnimNode_SimpleMotionBoneControl final : public FAnimNode_SkeletalControlBase
{
public:
	float                                         ControlValue;                                      // 0x00D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsActive;                                         // 0x00D4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAutoActivate;                                     // 0x00D5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPaused;                                           // 0x00D6(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bActivateAfterRecovery;                            // 0x00D7(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBoneReference                         BoneToModify;                                      // 0x00D8(0x0010)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         IdleSpeedControlValue;                             // 0x00E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ActiveSpeedControlValue;                           // 0x00EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RecoverySpeedControlValue;                         // 0x00F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EBoneModificationMode                         TranslationMode;                                   // 0x00F4(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EBoneControlSpace                             TranslationSpace;                                  // 0x00F5(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F6[0x2];                                       // 0x00F6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                IdleTranslation;                                   // 0x00F8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                ActiveTranslation;                                 // 0x0110(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSimpleMotionState                     IdleTranslationState;                              // 0x0128(0x0040)(Edit, NativeAccessSpecifierPublic)
	struct FSimpleMotionState                     ActiveTranslationState;                            // 0x0168(0x0040)(Edit, NativeAccessSpecifierPublic)
	struct FSimpleMotionState                     RecoveryTranslationState;                          // 0x01A8(0x0040)(Edit, NativeAccessSpecifierPublic)
	EBoneModificationMode                         RotationMode;                                      // 0x01E8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EBoneControlSpace                             RotationSpace;                                     // 0x01E9(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1EA[0x6];                                      // 0x01EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               IdleRotation;                                      // 0x01F0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                               ActiveRotation;                                    // 0x0208(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FSimpleMotionState                     IdleRotationState;                                 // 0x0220(0x0040)(Edit, NativeAccessSpecifierPublic)
	struct FSimpleMotionState                     ActiveRotationState;                               // 0x0260(0x0040)(Edit, NativeAccessSpecifierPublic)
	struct FSimpleMotionState                     RecoveryRotationState;                             // 0x02A0(0x0040)(Edit, NativeAccessSpecifierPublic)
	EBoneModificationMode                         ScaleMode;                                         // 0x02E0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EBoneControlSpace                             ScaleSpace;                                        // 0x02E1(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2E2[0x6];                                      // 0x02E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                IdleScale;                                         // 0x02E8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                ActiveScale;                                       // 0x0300(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSimpleMotionState                     IdleScaleState;                                    // 0x0318(0x0040)(Edit, NativeAccessSpecifierPublic)
	struct FSimpleMotionState                     ActiveScaleState;                                  // 0x0358(0x0040)(Edit, NativeAccessSpecifierPublic)
	struct FSimpleMotionState                     RecoveryScaleState;                                // 0x0398(0x0040)(Edit, NativeAccessSpecifierPublic)
	float                                         ControlImpulseSpeed;                               // 0x03D8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ControlImpulseMaxValue;                            // 0x03DC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ControlImpulseDecayDelay;                          // 0x03E0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ControlImpulseDecaySpeed;                          // 0x03E4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3E8[0x78];                                     // 0x03E8(0x0078)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxAnimNode_SimpleMotionBoneControl;

// ScriptStruct GbxGame.GbxStandInDef
// 0x00D0 (0x0160 - 0x0090)
struct FGbxStandInDef : public FGbxActorDef
{
public:
	TArray<struct FGbxInlineStruct>               BodyComponentList;                                 // 0x0090(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bAlwaysAllowUnlockables;                           // 0x00A0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsUIStandIn;                                      // 0x00A1(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShouldUpdateAnimsOnInit;                          // 0x00A2(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOverrideAudioProvider;                            // 0x00A3(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FGameDataHandleProperty_                      AudioProviderDefOverride;                          // 0x00A8(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UGbxTrick>>       SpawnInTricks;                                     // 0x00C0(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UGbxTrick_CoordinatedEffect> SpawnOutEffect;                                // 0x00D0(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUsePausedFXSystems;                               // 0x00F8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F9[0x3];                                       // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FXSystemsDesiredAge;                               // 0x00FC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<struct FGameplayTag, TSoftObjectPtr<class UGbxTrick>> StandInTricks;                        // 0x0100(0x0050)(Edit, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<TSoftClassPtr<class UClass>>           Scripts;                                           // 0x0150(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxStandInDef;

// ScriptStruct GbxGame.GbxDiscoveryFODSavedLevelData
// 0x0028 (0x0028 - 0x0000)
struct alignas(0x08) FGbxDiscoveryFODSavedLevelData final
{
public:
	uint8                                         Pad_0[0x28];                                       // 0x0000(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxDiscoveryFODSavedLevelData;

// ScriptStruct GbxGame.GbxActorPartDef_Gestalt
// 0x0118 (0x0198 - 0x0080)
struct FGbxActorPartDef_Gestalt final : public FGbxActorPartDef
{
public:
	struct FGbxActorPartGestaltSet                DefaultMeshes;                                     // 0x0080(0x0060)(Edit, NativeAccessSpecifierPrivate)
	TArray<struct FGbxActorPartGestaltMatchSet>   MatchedMeshes;                                     // 0x00E0(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class USkeleton>               OverrideTargetPrimarySkeleton;                     // 0x00F0(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class USkeletalMesh>           SkeletalMesh;                                      // 0x0118(0x0028)(UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EGbxActorPartGestaltMode                      ViewMode;                                          // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<struct FGameplayTag, TSoftObjectPtr<class USkeletalMesh>> AdditionalViewTargets;            // 0x0148(0x0050)(UObjectWrapper, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxActorPartDef_Gestalt;

// ScriptStruct GbxGame.GbxMomentNodeState_TriggerDialogEvent
// 0x0000 (0x0070 - 0x0070)
struct FGbxMomentNodeState_TriggerDialogEvent final : public FGbxMomentNodeState
{
};
DUMPER7_ASSERTS_FGbxMomentNodeState_TriggerDialogEvent;

// ScriptStruct GbxGame.GbxInputKey
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) FGbxInputKey
{
public:
	uint8                                         Pad_0[0x8];                                        // 0x0000(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxInputKey;

// ScriptStruct GbxGame.GbxInputButton
// 0x0010 (0x0018 - 0x0008)
struct FGbxInputButton final : public FGbxInputKey
{
public:
	TArray<struct FKey>                           keys;                                              // 0x0008(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxInputButton;

// ScriptStruct GbxGame.GbxInputEventActionData
// 0x0030 (0x0030 - 0x0000)
struct FGbxInputEventActionData final
{
public:
	class FName                                   EventName;                                         // 0x0000(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      ActionDef;                                         // 0x0008(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGbxInlineStruct>               ConditionalActions;                                // 0x0020(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxInputEventActionData;

// ScriptStruct GbxGame.GbxInputEventActionMap
// 0x0010 (0x0010 - 0x0000)
struct FGbxInputEventActionMap final
{
public:
	TArray<struct FGbxInputEventActionData>       EventActions;                                      // 0x0000(0x0010)(Edit, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxInputEventActionMap;

// ScriptStruct GbxGame.GbxInputEventSchema
// 0x0018 (0x0020 - 0x0008)
struct FGbxInputEventSchema : public FGbxHasStructType
{
public:
	FGameDataHandleProperty_                      rebinddef;                                         // 0x0008(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxInputEventSchema;

// ScriptStruct GbxGame.GbxInputEventSchema_Button_Core
// 0x0028 (0x0048 - 0x0020)
struct FGbxInputEventSchema_Button_Core : public FGbxInputEventSchema
{
public:
	struct FGbxInputButton                        ButtonData;                                        // 0x0020(0x0018)(Edit, NativeAccessSpecifierPrivate)
	struct FGbxInputEventActionMap                EventActionMap;                                    // 0x0038(0x0010)(Edit, Protected, NativeAccessSpecifierProtected)
};
DUMPER7_ASSERTS_FGbxInputEventSchema_Button_Core;

// ScriptStruct GbxGame.GbxInputEventSchema_Button_PressPulse
// 0x0000 (0x0048 - 0x0048)
struct FGbxInputEventSchema_Button_PressPulse final : public FGbxInputEventSchema_Button_Core
{
};
DUMPER7_ASSERTS_FGbxInputEventSchema_Button_PressPulse;

// ScriptStruct GbxGame.ReceivedDamageDetails
// 0x0140 (0x0140 - 0x0000)
struct FReceivedDamageDetails final
{
public:
	float                                         damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bWasCrit;                                          // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	FGameDataHandleProperty_                      DamageType;                                        // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDamageSourceContainer                 DamageSource;                                      // 0x0020(0x0040)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class AController*                            InstigatedBy;                                      // 0x0060(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APawn*                                  instigator;                                        // 0x0068(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 DamageCauser;                                      // 0x0070(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0078(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                HitLocation;                                       // 0x0080(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                HitDirection;                                      // 0x0098(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                HitForce;                                          // 0x00B0(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FHitRegionInfo                         HitRegion;                                         // 0x00C8(0x0020)(BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FHealthTypeDamageSummary>       DamagePerHealthType;                               // 0x00E8(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FVector                                RadiusDamageOrigin;                                // 0x00F8(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         damageradius;                                      // 0x0110(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bWasBulletReflected;                               // 0x0114(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_115[0x3];                                      // 0x0115(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDamageTags                            DamageTags;                                        // 0x0118(0x0020)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	float                                         LevelSyncedDamageScale;                            // 0x0138(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_13C[0x4];                                      // 0x013C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FReceivedDamageDetails;

// ScriptStruct GbxGame.GbxBrainAspectSettings_EngagePlayers
// 0x0008 (0x0088 - 0x0080)
struct FGbxBrainAspectSettings_EngagePlayers final : public FGbxBrainAspectSettings
{
public:
	bool                                          bRequireMajorEngageTarget;                         // 0x0080(0x0001)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGbxEngagementModeType                        EngagementModes;                                   // 0x0081(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAllowTalkPrompt;                                  // 0x0082(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCanRunWithoutTarget;                              // 0x0083(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainAspectSettings_EngagePlayers;

// ScriptStruct GbxGame.GbxStandInScene_Element
// 0x0068 (0x0070 - 0x0008)
struct FGbxStandInScene_Element : public FGbxHasStructType
{
public:
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             SpawnTransform;                                    // 0x0010(0x0060)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxStandInScene_Element;

// ScriptStruct GbxGame.GbxStandInScene_DynamicElement
// 0x0000 (0x0070 - 0x0070)
struct FGbxStandInScene_DynamicElement : public FGbxStandInScene_Element
{
};
DUMPER7_ASSERTS_FGbxStandInScene_DynamicElement;

// ScriptStruct GbxGame.GbxStandInScene_StandIn
// 0x0050 (0x00C0 - 0x0070)
struct FGbxStandInScene_StandIn final : public FGbxStandInScene_DynamicElement
{
public:
	struct FGameplayTag                           Identifier;                                        // 0x0070(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           StandInDef;                                        // 0x0078(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAutomaticallySpawn;                               // 0x0090(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseFixedActorDef;                                 // 0x0091(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_92[0x6];                                       // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	FGbxDefPtrProperty_                           FixedActorDef;                                     // 0x0098(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B0[0x10];                                      // 0x00B0(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxStandInScene_StandIn;

// ScriptStruct GbxGame.GbxSkillStateMachineGlobalExplicitTransitionDataItem
// 0x0018 (0x0050 - 0x0038)
struct FGbxSkillStateMachineGlobalExplicitTransitionDataItem final : public FGbxSkillStateMachineGlobalTransitionDataItem
{
public:
	FGbxDefPtrProperty_                           FromState;                                         // 0x0038(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxSkillStateMachineGlobalExplicitTransitionDataItem;

// ScriptStruct GbxGame.GbxSkillStateMachineGlobalTransitionData
// 0x0068 (0x0068 - 0x0000)
struct FGbxSkillStateMachineGlobalTransitionData final
{
public:
	class FString                                 TransitionName;                                    // 0x0000(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<FGbxDefPtrProperty_>                   Registers;                                         // 0x0010(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FGbxSkillStateMachineGlobalExplicitTransitionDataItem> ExplicitTransitions;        // 0x0020(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FGbxSkillStateMachineGlobalTransitionDataItem Default;                                    // 0x0030(0x0038)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxSkillStateMachineGlobalTransitionData;

// ScriptStruct GbxGame.LimbImpactEffectData
// 0x0020 (0x0020 - 0x0000)
struct alignas(0x08) FLimbImpactEffectData final
{
public:
	FGbxDefPtrProperty_                           BounceImpactEffect;                                // 0x0000(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BounceEffectThreshold;                             // 0x0018(0x0004)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BounceEffectFrequency;                             // 0x001C(0x0004)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FLimbImpactEffectData;

// ScriptStruct GbxGame.LimbImpactEffectState
// 0x0050 (0x0058 - 0x0008)
struct FLimbImpactEffectState final : public FGbxHasStructType
{
public:
	struct FLimbImpactEffectData                  LimbImpactEffectData;                              // 0x0008(0x0020)(Transient, NoDestructor, NativeAccessSpecifierPrivate)
	FGbxDefPtrProperty_                           MaterialParameters;                                // 0x0028(0x0018)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class AGoreLimb>               CachedGoreLimb;                                    // 0x0040(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_48[0x10];                                      // 0x0048(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FLimbImpactEffectState;

// ScriptStruct GbxGame.GbxAnimNode_ArmIK
// 0x0000 (0x00F8 - 0x00F8)
struct FGbxAnimNode_ArmIK : public FGbxAnimNode_MultiTwoBoneIK
{
};
DUMPER7_ASSERTS_FGbxAnimNode_ArmIK;

// ScriptStruct GbxGame.CharacterScriptedMeshOffsetState
// 0x02B0 (0x02B0 - 0x0000)
struct FCharacterScriptedMeshOffsetState final
{
public:
	uint8                                         Pad_0[0xD0];                                       // 0x0000(0x00D0)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCharacterScriptedMeshOffsetCommand    Cmd;                                               // 0x00D0(0x01E0)(NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FCharacterScriptedMeshOffsetState;

// ScriptStruct GbxGame.GpsTestSettings_GbxSkillParam
// 0x0040 (0x00C0 - 0x0080)
struct FGpsTestSettings_GbxSkillParam final : public FGpsTestSettings
{
public:
	FGbxDefPtrProperty_                           SkillDef;                                          // 0x0080(0x0018)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UGbxSkillParamData>      ParamData;                                         // 0x0098(0x0028)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
};
DUMPER7_ASSERTS_FGpsTestSettings_GbxSkillParam;

// ScriptStruct GbxGame.MeleeDefHomingData
// 0x0088 (0x0088 - 0x0000)
struct FMeleeDefHomingData final
{
public:
	float                                         TargetMaxAngleYaw;                                 // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TargetMaxAngleUpPitch;                             // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TargetMaxAngleDownPitch;                           // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinClosingDistance;                                // 0x000C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxPitchUpAngle;                                   // 0x0010(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RotateInterpSpeed;                                 // 0x0014(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxPitchRate;                                      // 0x0018(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxYawRate;                                        // 0x001C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SocketProximity;                                   // 0x0020(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAttributeInit                      DistanceFormula;                                   // 0x0028(0x0050)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	float                                         DistanceFromTarget;                                // 0x0078(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxSuccessMeleeHeightOffsetWhenEnemyBelow;         // 0x007C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxSuccessMeleeHeightOffsetWhenEnemyAbove;         // 0x0080(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCloseInOnIndirectlyDamagedTargets;                // 0x0084(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FMeleeDefHomingData;

// ScriptStruct GbxGame.InteractiveObjectBodySettings
// 0x0000 (0x0228 - 0x0228)
struct FInteractiveObjectBodySettings : public FGbxBodySettings
{
};
DUMPER7_ASSERTS_FInteractiveObjectBodySettings;

// ScriptStruct GbxGame.GbxRotationChannelData_Eye
// 0x0000 (0x0068 - 0x0068)
struct FGbxRotationChannelData_Eye final : public FGbxRotationChannelData_Child
{
};
DUMPER7_ASSERTS_FGbxRotationChannelData_Eye;

// ScriptStruct GbxGame.EffectCollectionDef
// 0x0000 (0x0018 - 0x0018)
struct FEffectCollectionDef : public FGbxDef
{
};
DUMPER7_ASSERTS_FEffectCollectionDef;

// ScriptStruct GbxGame.GbxBrainAspectSettings_ClaimPerch
// 0x0038 (0x00B8 - 0x0080)
struct FGbxBrainAspectSettings_ClaimPerch : public FGbxBrainAspectSettings
{
public:
	struct FGbxParam                              Perch;                                             // 0x0080(0x0038)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxBrainAspectSettings_ClaimPerch;

// ScriptStruct GbxGame.GbxBrainAspect_MaxChildActors
// 0x0008 (0x00E0 - 0x00D8)
struct FGbxBrainAspect_MaxChildActors final : public FGbxBrainAspect
{
public:
	uint8                                         Pad_D8[0x8];                                       // 0x00D8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainAspect_MaxChildActors;

// ScriptStruct GbxGame.GbxSkillActionItem_SimpleTrick
// 0x0000 (0x00B0 - 0x00B0)
struct FGbxSkillActionItem_SimpleTrick final : public FGbxSkillActionItem_SingleTrick
{
};
DUMPER7_ASSERTS_FGbxSkillActionItem_SimpleTrick;

// ScriptStruct GbxGame.ControlledMoveServerStartData
// 0x0058 (0x0058 - 0x0000)
struct FControlledMoveServerStartData final
{
public:
	struct FControlledMoveInitiationData          InitData;                                          // 0x0000(0x0020)(Transient, NativeAccessSpecifierPublic)
	class UControlledMove*                        ControlledMove;                                    // 0x0020(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 target;                                            // 0x0028(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                TargetLocation;                                    // 0x0030(0x0018)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SpeedOverride;                                     // 0x0048(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DurationOverride;                                  // 0x004C(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LaunchAngleOverride;                               // 0x0050(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FControlledMoveServerStartData;

// ScriptStruct GbxGame.GbxActorPartAnimList
// 0x0050 (0x0050 - 0x0000)
struct FGbxActorPartAnimList final
{
public:
	TMap<struct FGameplayTag, TSoftObjectPtr<class UAnimationAsset>> Animations;                     // 0x0000(0x0050)(Edit, UObjectWrapper, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxActorPartAnimList;

// ScriptStruct GbxGame.TrackedSlidingImpactEffect
// 0x0018 (0x0018 - 0x0000)
struct FTrackedSlidingImpactEffect final
{
public:
	class USceneComponent*                        Component;                                         // 0x0000(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPhysicalMaterial*                      PhysicalMaterial;                                  // 0x0008(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_10[0x8];                                       // 0x0010(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FTrackedSlidingImpactEffect;

// ScriptStruct GbxGame.GbxSlidingImpactState
// 0x01B0 (0x01B0 - 0x0000)
struct FGbxSlidingImpactState final
{
public:
	uint8                                         Pad_0[0x38];                                       // 0x0000(0x0038)(Fixing Size After Last Property [ Dumper-7 ])
	class UGbxCharacterMovementComponent*         OwnerMovementComponent;                            // 0x0038(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           StartAudioEvent;                                   // 0x0040(0x0018)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           StopAudioEvent;                                    // 0x0058(0x0018)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIgnoreSlidingState;                               // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             LastImpact;                                        // 0x0078(0x0100)(IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                         LastImpactTraceTime;                               // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_17C[0x4];                                      // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FTrackedSlidingImpactEffect>    effects;                                           // 0x0180(0x0010)(ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class FName                                   SpeedParticleParameterName;                        // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_198[0x18];                                     // 0x0198(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxSlidingImpactState;

// ScriptStruct GbxGame.GbxSymphonicAmbientAudioCondition
// 0x0000 (0x0008 - 0x0008)
struct FGbxSymphonicAmbientAudioCondition : public FGbxHasStructType
{
};
DUMPER7_ASSERTS_FGbxSymphonicAmbientAudioCondition;

// ScriptStruct GbxGame.CameraModeBehavior_RelativeOffset
// 0x0030 (0x0048 - 0x0018)
struct FCameraModeBehavior_RelativeOffset : public FCameraModeBehavior
{
public:
	struct FVector                                LocationOffset;                                    // 0x0018(0x0018)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                               RotationOffset;                                    // 0x0030(0x0018)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
};
DUMPER7_ASSERTS_FCameraModeBehavior_RelativeOffset;

// ScriptStruct GbxGame.GbxCharacterSlidingDef
// 0x0120 (0x0138 - 0x0018)
struct FGbxCharacterSlidingDef : public FGbxDef
{
public:
	float                                         MinSprintSpeedPctToStartSliding;                   // 0x0018(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UControlledMove>         ControlledMove;                                    // 0x0020(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SlideCooldown;                                     // 0x0048(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   FootBone;                                          // 0x004C(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FGameDataHandleProperty_                      FootImpact;                                        // 0x0058(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      FootImpact1st;                                     // 0x0070(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           AudioEventStart;                                   // 0x0088(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           AudioEventStop;                                    // 0x00A0(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   BaseBone;                                          // 0x00B8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   SpeedParticleParameterName;                        // 0x00C0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      BaseImpact;                                        // 0x00C8(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LegsRotationSpeed;                                 // 0x00E0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinDesiredAngleRotationBetweenCameraAndLegsYaw;    // 0x00E4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxAllowedAimOffset;                               // 0x00E8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FootCollisionDistance;                             // 0x00EC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FootTraceLateralOffset;                            // 0x00F0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FootCollisionStopAngle;                            // 0x00F4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FootCollisionStopAngleDot;                         // 0x00F8(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FootCollisionStopSpeed;                            // 0x00FC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LegsCollisionInterpolationSpeed;                   // 0x0100(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinSprintSpeedPctToTriggerSlideJump;               // 0x0104(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         JumpHorizontalSpeedScale;                          // 0x0108(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinForceSlideFloorAngle;                           // 0x010C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ForceSlideFloorZ;                                  // 0x0110(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinDownhillSpeedToStartForcedSlide;                // 0x0114(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxDirectionDeviationFromDownhillAngle;            // 0x0118(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAllowAutomaticSlidingWhileCrouched;               // 0x011C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11D[0x3];                                      // 0x011D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MinContinuedSlideFloorAngle;                       // 0x0120(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ContinuedSlideFloorZ;                              // 0x0124(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WadingPercentToEndSlide;                           // 0x0128(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCanSlideUponLanding;                              // 0x012C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseSlideUponLandingMinSprintSpeedPctToStartSliding; // 0x012D(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_12E[0x2];                                      // 0x012E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SlideUponLandingMinSprintSpeedPctToStartSliding;   // 0x0130(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxCharacterSlidingDef;

// ScriptStruct GbxGame.GbxSkillActionSequenceTransitionCondition
// 0x0000 (0x0008 - 0x0008)
struct FGbxSkillActionSequenceTransitionCondition : public FGbxHasStructType
{
};
DUMPER7_ASSERTS_FGbxSkillActionSequenceTransitionCondition;

// ScriptStruct GbxGame.GbxSkillActionSequenceTransitionCondition_ActionItem
// 0x0008 (0x0010 - 0x0008)
struct FGbxSkillActionSequenceTransitionCondition_ActionItem final : public FGbxSkillActionSequenceTransitionCondition
{
public:
	class FName                                   ActionItemName;                                    // 0x0008(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxSkillActionSequenceTransitionCondition_ActionItem;

// ScriptStruct GbxGame.ControlledMoveReplicationData
// 0x0080 (0x0080 - 0x0000)
struct FControlledMoveReplicationData final
{
public:
	uint8                                         DirtyCounter;                                      // 0x0000(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FControlledMoveInitiationData          InitData;                                          // 0x0008(0x0020)(Transient, NativeAccessSpecifierPrivate)
	class UControlledMove*                        ControlledMove;                                    // 0x0028(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FControlledMoveParameters              Parameters;                                        // 0x0030(0x0030)(Transient, NoDestructor, NativeAccessSpecifierPrivate)
	struct FVector                                PackedDirection;                                   // 0x0060(0x0018)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ECMStopMoveFlags                              StopMoveFlags;                                     // 0x0078(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FControlledMoveReplicationData;

// ScriptStruct GbxGame.GameResourcePoolDef
// 0x0360 (0x0378 - 0x0018)
struct FGameResourcePoolDef final : public FGbxDef
{
public:
	FGameDataHandleProperty_                      resource;                                          // 0x0018(0x0018)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BaseMinValue;                                      // 0x0030(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAttributeInit                      BaseMaxValue;                                      // 0x0038(0x0050)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	float                                         StartingValue;                                     // 0x0088(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bStartWithMinValue;                                // 0x008C(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bStartWithMaxValue;                                // 0x008D(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUpdateCurrentValueOnExtremaChange;                // 0x008E(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8F[0x1];                                       // 0x008F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MinimumReservedValue;                              // 0x0090(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAttributeInit                      BaseNumSegments;                                   // 0x0098(0x0050)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bCheckFilledAgainstOldValues;                      // 0x00E8(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAttributeInit                      BaseConsumptionRate;                               // 0x00F0(0x0050)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FGbxAttributeInit                      BaseActiveRegenerationRate;                        // 0x0140(0x0050)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FGbxAttributeInit                      BasePassiveRegenerationRate;                       // 0x0190(0x0050)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FGbxAttributeInit                      BasePassivePercentRegenerationRate;                // 0x01E0(0x0050)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FGbxAttributeInit                      BasePassiveMissingPercentRegenerationRate;         // 0x0230(0x0050)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FGbxAttributeInit                      BaseOnIdleRegenerationRate;                        // 0x0280(0x0050)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FGbxAttributeInit                      BaseOnIdleRegenerationDelay;                       // 0x02D0(0x0050)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FGbxAttributeInit                      BaseOnDepletedRegenerationDelay;                   // 0x0320(0x0050)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	float                                         RecentImpulseTimer;                                // 0x0370(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOnlyReplicateToOwner;                             // 0x0374(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGameResourcePoolReplicationType              ReplicationType;                                   // 0x0375(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_376[0x2];                                      // 0x0376(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGameResourcePoolDef;

// ScriptStruct GbxGame.GbxSkillStateMachineStateDef_SkillStateData_StateOp
// 0x0020 (0x0020 - 0x0000)
struct alignas(0x08) FGbxSkillStateMachineStateDef_SkillStateData_StateOp final
{
public:
	EGbxSkillStateMachineStateOp                  StateOp;                                           // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FGbxDefPtrProperty_                           State;                                             // 0x0008(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxSkillStateMachineStateDef_SkillStateData_StateOp;

// ScriptStruct GbxGame.GbxSkillStateMachineStateDef_SkillStateData
// 0x0018 (0x0018 - 0x0000)
struct FGbxSkillStateMachineStateDef_SkillStateData final
{
public:
	bool                                          bInheritPreviousSkillStates;                       // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGbxSkillStateMachineStateDef_SkillStateData_StateOp> SkillStateOperations;        // 0x0008(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxSkillStateMachineStateDef_SkillStateData;

// ScriptStruct GbxGame.DamageArea_Cone
// 0x00A0 (0x00E8 - 0x0048)
struct FDamageArea_Cone final : public FDamageArea
{
public:
	struct FGbxAttributeInit                      Length;                                            // 0x0048(0x0050)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FGbxAttributeInit                      Angle;                                             // 0x0098(0x0050)(Edit, NoDestructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FDamageArea_Cone;

// ScriptStruct GbxGame.GbxRotationValueResolver
// 0x0020 (0x0028 - 0x0008)
struct FGbxRotationValueResolver final : public FAttributeValueResolver
{
public:
	class FName                                   channel;                                           // 0x0008(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EGbxRotationValueResolverValue                Value;                                             // 0x0010(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EGbxRotationValueResolverSubValue             SubValue;                                          // 0x0014(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FNumericRange                          IsWithinThreshold;                                 // 0x0018(0x0008)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                          bUseWithinThreshold;                               // 0x0020(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxRotationValueResolver;

// ScriptStruct GbxGame.JumpDetails
// 0x0020 (0x0020 - 0x0000)
struct alignas(0x08) FJumpDetails final
{
public:
	struct FGameplayTag                           JumpType;                                          // 0x0000(0x0008)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           JumpGoal;                                          // 0x0008(0x0018)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FJumpDetails;

// ScriptStruct GbxGame.GbxActorPartOwnerData
// 0x0020 (0x0020 - 0x0000)
struct FGbxActorPartOwnerData final
{
public:
	TArray<FGbxDefPtrProperty_>                   parts;                                             // 0x0000(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FGbxActorPartSelection>         Selections;                                        // 0x0010(0x0010)(Edit, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxActorPartOwnerData;

// ScriptStruct GbxGame.BalancedActorData
// 0x0028 (0x0030 - 0x0008)
struct FBalancedActorData final : public FGbxHasStructType
{
public:
	bool                                          bBalanced;                                         // 0x0008(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bSyncedToWorld;                                    // 0x0009(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bInheritFromOwner;                                 // 0x000A(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bBalanceToWorldAuthority;                          // 0x000B(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxUEDataTableRowHandle               BalanceTableRowHandle;                             // 0x0010(0x0020)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
};
DUMPER7_ASSERTS_FBalancedActorData;

// ScriptStruct GbxGame.InteractiveObjectDef
// 0x02B8 (0x0348 - 0x0090)
struct FInteractiveObjectDef : public FGbxActorDef
{
public:
	uint8                                         bTeamCollision : 1;                                // 0x0090(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bIgnoreCollisionWithTeam : 1;                      // 0x0090(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bUseOwnerTeam : 1;                                 // 0x0090(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bCanBeValidCover : 1;                              // 0x0090(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bBlockDamageLineOfSight : 1;                       // 0x0090(0x0001)(BitIndex: 0x04, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bForceReplicated : 1;                              // 0x0090(0x0001)(BitIndex: 0x05, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bStartNetDormant : 1;                              // 0x0090(0x0001)(BitIndex: 0x06, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UInteractiveObjectBodyData> Body;                                           // 0x0098(0x0028)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<TSoftObjectPtr<class UGbxAttachableBodyData>> AdditionalBodies;                           // 0x00C0(0x0010)(Edit, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	struct FGbxGraphParamOverrides                BodyParameters;                                    // 0x00D0(0x0080)(Edit, Protected, NativeAccessSpecifierProtected)
	TArray<TSoftClassPtr<class UClass>>           Scripts;                                           // 0x0150(0x0010)(Edit, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	struct FGbxBlackboardDefaults                 blackboard;                                        // 0x0160(0x0018)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FGbxActorPartOwnerData                 GbxActorPartOwnerData;                             // 0x0178(0x0020)(Edit, Protected, NativeAccessSpecifierProtected)
	EFactsTransience                              FactsTransience;                                   // 0x0198(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_199[0x3];                                      // 0x0199(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSToken                                RegistryName;                                      // 0x019C(0x000C)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FUsabilityConfigInfo                   usability;                                         // 0x01A8(0x0108)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FBalancedActorData                     BalanceData;                                       // 0x02B0(0x0030)(Edit, Protected, NativeAccessSpecifierProtected)
	FGameDataHandleProperty_                      audioprovider;                                     // 0x02E0(0x0018)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bIncludeMoveableStaticMeshComponentInHLOD;         // 0x02F8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bLocksSpawnPoint;                                  // 0x02F9(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2FA[0x6];                                      // 0x02FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	FGameDataHandleProperty_                      Team;                                              // 0x0300(0x0018)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bCanEverBeTargetable;                              // 0x0318(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bTargetableByAI;                                   // 0x0319(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bTargetableByPlayers;                              // 0x031A(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bWantsFriendlyWeaponsLowered;                      // 0x031B(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_31C[0x4];                                      // 0x031C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FTargetLocationSettings>        DefaultTargetSockets;                              // 0x0320(0x0010)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FTargetLocationSettings>        DefaultMeleeTargetSockets;                         // 0x0330(0x0010)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	bool                                          bAllowMeleeTargetHoming;                           // 0x0340(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EAimAssistSnapTargetType                      SnapTargetType;                                    // 0x0341(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bSupportsAimAssist;                                // 0x0342(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_343[0x5];                                      // 0x0343(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FInteractiveObjectDef;

// ScriptStruct GbxGame.AvatarMatDriverParam
// 0x0078 (0x0080 - 0x0008)
struct FAvatarMatDriverParam final : public FGbxHasStructType
{
public:
	class FName                                   Name;                                              // 0x0008(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAvatarMatDriverParamType                     type;                                              // 0x0010(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ScalarDefault;                                     // 0x0014(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ScalarSource;                                      // 0x0018(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture>                TextureDefault;                                    // 0x0020(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   TextureSource;                                     // 0x0048(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           VectorDefault;                                     // 0x0050(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   VectorSources[0x4];                                // 0x0060(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FAvatarMatDriverParam;

// ScriptStruct GbxGame.MissionLifeCyclePlan_ExplicitSet
// 0x0078 (0x0080 - 0x0008)
struct FMissionLifeCyclePlan_ExplicitSet final : public FGbxHasStructType
{
public:
	FGbxDefPtrProperty_                           missionset;                                        // 0x0008(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<FGbxDefPtrProperty_>                   missions;                                          // 0x0020(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FNexusBitSet                           MissionRequireTags;                                // 0x0030(0x0020)(Edit, NativeAccessSpecifierPublic)
	ENexusBitSetOperator                          MissionRequireMode;                                // 0x0050(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FNexusBitSet                           MissionRejectTags;                                 // 0x0058(0x0020)(Edit, NativeAccessSpecifierPublic)
	ENexusBitSetOperator                          MissionRejectMode;                                 // 0x0078(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FMissionLifeCyclePlan_ExplicitSet;

// ScriptStruct GbxGame.GbxBoneModTransform
// 0x0060 (0x0060 - 0x0000)
struct FGbxBoneModTransform final
{
public:
	struct FBoneReference                         bone;                                              // 0x0000(0x0010)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Translation;                                       // 0x0010(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               Rotation;                                          // 0x0028(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                Scale3D;                                           // 0x0040(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         scale;                                             // 0x0058(0x0004)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBoneModTransform;

// ScriptStruct GbxGame.GbxBoneMod
// 0x0060 (0x0060 - 0x0000)
struct FGbxBoneMod final
{
public:
	class FName                                   Name;                                              // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAlphaBlend                            Blend;                                             // 0x0008(0x0030)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bUseTranslation;                                   // 0x0038(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseRotation;                                      // 0x0039(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseScale;                                         // 0x003A(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAdditive;                                         // 0x003B(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EBoneControlSpace                             TransformSpace;                                    // 0x003C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBoneReference                         TransformRelativeBone;                             // 0x0040(0x0010)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGbxBoneModTransform>           Transforms;                                        // 0x0050(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxBoneMod;

// ScriptStruct GbxGame.ReplicatedMantleState
// 0x0008 (0x0008 - 0x0000)
struct FReplicatedMantleState final
{
public:
	uint8                                         Counter;                                           // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ActionIndex;                                       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FReplicatedMantleState;

// ScriptStruct GbxGame.GbxStatusEffectMutator
// 0x0000 (0x0008 - 0x0008)
struct FGbxStatusEffectMutator : public FGbxHasStructType
{
};
DUMPER7_ASSERTS_FGbxStatusEffectMutator;

// ScriptStruct GbxGame.GbxStatusEffectMutator_Param
// 0x0008 (0x0010 - 0x0008)
struct FGbxStatusEffectMutator_Param : public FGbxStatusEffectMutator
{
public:
	TSubclassOf<class UGbxStatusEffectSignatureParam_Float> TargetParam;                             // 0x0008(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxStatusEffectMutator_Param;

// ScriptStruct GbxGame.GbxStatusEffectMutator_Param_Param
// 0x0008 (0x0018 - 0x0010)
struct FGbxStatusEffectMutator_Param_Param final : public FGbxStatusEffectMutator_Param
{
public:
	TSubclassOf<class UGbxStatusEffectSignatureParam_Float> DeltaParam;                              // 0x0010(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxStatusEffectMutator_Param_Param;

// ScriptStruct GbxGame.GbxUnlockableItemAttributeTransaction
// 0x0070 (0x0070 - 0x0000)
struct FGbxUnlockableItemAttributeTransaction final
{
public:
	FGbxDefPtrProperty_                           attribute;                                         // 0x0000(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EGbxAttributeModifierType                     ModifierType;                                      // 0x0018(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAttributeInit                      AttributeInit;                                     // 0x0020(0x0050)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxUnlockableItemAttributeTransaction;

// ScriptStruct GbxGame.ReplicatedClimbingState
// 0x0002 (0x0002 - 0x0000)
struct FReplicatedClimbingState final
{
public:
	uint8                                         DirtyCounter;                                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EScriptedClimbingType                         ClimbableType;                                     // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FReplicatedClimbingState;

// ScriptStruct GbxGame.GbxGlobalsStatusEffects_Alias
// 0x0030 (0x0030 - 0x0000)
struct FGbxGlobalsStatusEffects_Alias final
{
public:
	class FName                                   alias;                                             // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UGbxStatusEffectData>    StatusEffectData;                                  // 0x0008(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxGlobalsStatusEffects_Alias;

// ScriptStruct GbxGame.GbxGlobalsStatusEffects
// 0x0018 (0x0038 - 0x0020)
struct FGbxGlobalsStatusEffects final : public FGbxGlobalDef
{
public:
	float                                         MaterialTransitionRate;                            // 0x0020(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGbxGlobalsStatusEffects_Alias> aliases;                                           // 0x0028(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxGlobalsStatusEffects;

// ScriptStruct GbxGame.GbxMusicCondition
// 0x0000 (0x0008 - 0x0008)
struct FGbxMusicCondition : public FGbxHasStructType
{
};
DUMPER7_ASSERTS_FGbxMusicCondition;

// ScriptStruct GbxGame.GbxMusicCondition_FactExpression
// 0x0020 (0x0028 - 0x0008)
struct FGbxMusicCondition_FactExpression final : public FGbxMusicCondition
{
public:
	struct FFactExpression                        FactExpression;                                    // 0x0008(0x0010)(Edit, NativeAccessSpecifierPublic)
	uint8                                         Pad_18[0x10];                                      // 0x0018(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxMusicCondition_FactExpression;

// ScriptStruct GbxGame.GbxStatusEffectGraphNodeSettings_Root
// 0x0000 (0x0038 - 0x0038)
struct FGbxStatusEffectGraphNodeSettings_Root final : public FGbxStatusEffectGraphNodeSettings
{
};
DUMPER7_ASSERTS_FGbxStatusEffectGraphNodeSettings_Root;

// ScriptStruct GbxGame.GbxSkillComponentIdentifierDef
// 0x0000 (0x0018 - 0x0018)
struct FGbxSkillComponentIdentifierDef final : public FGbxDef
{
};
DUMPER7_ASSERTS_FGbxSkillComponentIdentifierDef;

// ScriptStruct GbxGame.ReplicatedParticleEffectRequest
// 0x00A8 (0x00B8 - 0x0010)
struct FReplicatedParticleEffectRequest final : public FCosmeticReplicationRequest
{
public:
	uint8                                         Pad_10[0xA8];                                      // 0x0010(0x00A8)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FReplicatedParticleEffectRequest;

// ScriptStruct GbxGame.GbxSkillActionSequenceStateRule
// 0x0000 (0x0008 - 0x0008)
struct FGbxSkillActionSequenceStateRule : public FGbxHasStructType
{
};
DUMPER7_ASSERTS_FGbxSkillActionSequenceStateRule;

// ScriptStruct GbxGame.ClimbingAnimState
// 0x0090 (0x0090 - 0x0000)
struct alignas(0x10) FClimbingAnimState final
{
public:
	EScriptedClimbingType                         PendingType;                                       // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7F];                                       // 0x0001(0x007F)(Fixing Size After Last Property [ Dumper-7 ])
	EScriptedClimbingType                         CurrentType;                                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_81[0xF];                                       // 0x0081(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FClimbingAnimState;

// ScriptStruct GbxGame.MissionTransitionPersistence
// 0x0000 (0x0020 - 0x0020)
struct FMissionTransitionPersistence final : public FNexusBitSet
{
};
DUMPER7_ASSERTS_FMissionTransitionPersistence;

// ScriptStruct GbxGame.GbxSkillConditionData
// 0x0008 (0x0010 - 0x0008)
struct FGbxSkillConditionData : public FGbxHasStructType
{
public:
	bool                                          bInvertCondition;                                  // 0x0008(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxSkillConditionData;

// ScriptStruct GbxGame.GbxSkillConditionData_StateCondition
// 0x0018 (0x0028 - 0x0010)
struct FGbxSkillConditionData_StateCondition final : public FGbxSkillConditionData
{
public:
	struct FGbxInlineStruct                       ConditionData;                                     // 0x0010(0x0018)(Edit, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxSkillConditionData_StateCondition;

// ScriptStruct GbxGame.AimAssistSmoothingProperties
// 0x0020 (0x0020 - 0x0000)
struct FAimAssistSmoothingProperties final
{
public:
	uint8                                         Pad_0[0x8];                                        // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 LastTarget;                                        // 0x0008(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_10[0x10];                                      // 0x0010(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FAimAssistSmoothingProperties;

// ScriptStruct GbxGame.GbxActorPartState
// 0x0018 (0x0018 - 0x0000)
struct alignas(0x08) FGbxActorPartState
{
public:
	uint8                                         Pad_0[0x18];                                       // 0x0000(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxActorPartState;

// ScriptStruct GbxGame.GbxActorPartState_Material
// 0x0050 (0x0068 - 0x0018)
struct FGbxActorPartState_Material final : public FGbxActorPartState
{
public:
	uint8                                         Pad_18[0x50];                                      // 0x0018(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxActorPartState_Material;

// ScriptStruct GbxGame.LightProjectileTimedEvent
// 0x000C (0x000C - 0x0000)
struct FLightProjectileTimedEvent final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   EventName;                                         // 0x0004(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FLightProjectileTimedEvent;

// ScriptStruct GbxGame.GbxMusicAudioProvider
// 0x00B0 (0x03B0 - 0x0300)
struct FGbxMusicAudioProvider final : public FGbxAudioProvider
{
public:
	uint8                                         Pad_300[0xB0];                                     // 0x0300(0x00B0)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxMusicAudioProvider;

// ScriptStruct GbxGame.ClimbingState
// 0x0048 (0x0048 - 0x0000)
struct FClimbingState final
{
public:
	bool                                          bClientWasOnLadder;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TScriptInterface<class IClimbableInterface>> OverlappingClimbables;                       // 0x0008(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TScriptInterface<class IClimbableInterface>   CurrentClimbable;                                  // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TScriptInterface<class IClimbableInterface>   JumpClimbable;                                     // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LadderJumpTime;                                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bAlreadyCenteredOnLadder : 1;                      // 0x003C(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bWantsToBeOnLadder : 1;                            // 0x003C(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bWasOnGroundBeforeStartingToLadder : 1;            // 0x003C(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bReverseLadderInput : 1;                           // 0x003C(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_3D[0xB];                                       // 0x003D(0x000B)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FClimbingState;

// ScriptStruct GbxGame.GbxMomentInstanceHandle
// 0x0004 (0x0004 - 0x0000)
struct FGbxMomentInstanceHandle final
{
public:
	uint32                                        ID;                                                // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxMomentInstanceHandle;

// ScriptStruct GbxGame.GbxSkillAlias
// 0x0000 (0x0008 - 0x0008)
struct FGbxSkillAlias : public FGbxHasStructType
{
};
DUMPER7_ASSERTS_FGbxSkillAlias;

// ScriptStruct GbxGame.ProjectileMovementModifierState
// 0x0010 (0x0018 - 0x0008)
struct FProjectileMovementModifierState : public FGbxHasStructType
{
public:
	TScriptInterface<class IProjectileMovementInterface> owner;                                      // 0x0008(0x0010)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
};
DUMPER7_ASSERTS_FProjectileMovementModifierState;

// ScriptStruct GbxGame.FactEvaluator
// 0x0000 (0x0008 - 0x0008)
struct FFactEvaluator : public FGbxHasStructType
{
};
DUMPER7_ASSERTS_FFactEvaluator;

// ScriptStruct GbxGame.FactEvaluator_IsInMap
// 0x0020 (0x0028 - 0x0008)
struct FFactEvaluator_IsInMap final : public FFactEvaluator
{
public:
	FGbxDefPtrProperty_                           Map;                                               // 0x0008(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInvert;                                           // 0x0020(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FFactEvaluator_IsInMap;

// ScriptStruct GbxGame.GbxMomentNodeSettings_PersistentSequence
// 0x0038 (0x00B8 - 0x0080)
struct FGbxMomentNodeSettings_PersistentSequence final : public FGbxMomentNodeSettings
{
public:
	struct FGbxParam                              LevelSequenceActor;                                // 0x0080(0x0038)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxMomentNodeSettings_PersistentSequence;

// ScriptStruct GbxGame.ImpactEffectSizeData
// 0x0070 (0x0070 - 0x0000)
struct FImpactEffectSizeData final
{
public:
	float                                         Size;                                              // 0x0000(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FGameDataHandleProperty_                      DefaultEffect;                                     // 0x0008(0x0018)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<FGameDataHandleProperty_, FGameDataHandleProperty_> damagetypeeffects;                      // 0x0020(0x0050)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FImpactEffectSizeData;

// ScriptStruct GbxGame.ImpactEffectCollectionDef
// 0x0000 (0x0018 - 0x0018)
struct FImpactEffectCollectionDef : public FGbxDef
{
};
DUMPER7_ASSERTS_FImpactEffectCollectionDef;

// ScriptStruct GbxGame.ImpactEffectSizeCollectionDef
// 0x0010 (0x0028 - 0x0018)
struct FImpactEffectSizeCollectionDef final : public FImpactEffectCollectionDef
{
public:
	TArray<struct FImpactEffectSizeData>          effects;                                           // 0x0018(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
};
DUMPER7_ASSERTS_FImpactEffectSizeCollectionDef;

// ScriptStruct GbxGame.GbxSkillDefConditionData
// 0x0030 (0x0030 - 0x0000)
struct FGbxSkillDefConditionData final
{
public:
	FGbxDefPtrProperty_                           def;                                               // 0x0000(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxInlineStruct                       data;                                              // 0x0018(0x0018)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxSkillDefConditionData;

// ScriptStruct GbxGame.GbxCondition_SkillCondition
// 0x0038 (0x0048 - 0x0010)
struct FGbxCondition_SkillCondition final : public FGbxConditionValueResolver
{
public:
	FGbxDefPtrProperty_                           ConditionDef;                                      // 0x0010(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	FGbxDefPtrProperty_                           SkillDef;                                          // 0x0028(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bIsEnabled;                                        // 0x0040(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxCondition_SkillCondition;

// ScriptStruct GbxGame.GbxSkillStateMachineStateAction
// 0x0000 (0x0008 - 0x0008)
struct FGbxSkillStateMachineStateAction : public FGbxHasStructType
{
};
DUMPER7_ASSERTS_FGbxSkillStateMachineStateAction;

// ScriptStruct GbxGame.GbxSkillStateMachineStateAction_AddAttributeEffect
// 0x0080 (0x0088 - 0x0008)
struct FGbxSkillStateMachineStateAction_AddAttributeEffect : public FGbxSkillStateMachineStateAction
{
public:
	class FName                                   EffectName;                                        // 0x0008(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGbxAttributeEffect                    AttributeEffect;                                   // 0x0010(0x0070)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	EGbxSkillStateMachineAttrContext              AttributeContext;                                  // 0x0080(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EGbxSkillStateMachineAttrContext              ValueContext;                                      // 0x0081(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_82[0x6];                                       // 0x0082(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxSkillStateMachineStateAction_AddAttributeEffect;

// ScriptStruct GbxGame.GbxSkillStateMachineStateAction_ToggleAttributeEffect
// 0x0000 (0x0088 - 0x0088)
struct FGbxSkillStateMachineStateAction_ToggleAttributeEffect final : public FGbxSkillStateMachineStateAction_AddAttributeEffect
{
};
DUMPER7_ASSERTS_FGbxSkillStateMachineStateAction_ToggleAttributeEffect;

// ScriptStruct GbxGame.ProjectileDrunkenMovementState
// 0x0080 (0x0080 - 0x0000)
struct alignas(0x10) FProjectileDrunkenMovementState final
{
public:
	TScriptInterface<class IProjectileMovementInterface> owner;                                      // 0x0000(0x0010)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_10[0x70];                                      // 0x0010(0x0070)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FProjectileDrunkenMovementState;

// ScriptStruct GbxGame.GbxCurrencyValueResolver
// 0x0008 (0x0010 - 0x0008)
struct FGbxCurrencyValueResolver final : public FAttributeValueResolver
{
public:
	class FName                                   CurrencyTypeName;                                  // 0x0008(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxCurrencyValueResolver;

// ScriptStruct GbxGame.GbxAudioNodeAspectSettings_FactValue
// 0x0038 (0x0070 - 0x0038)
struct FGbxAudioNodeAspectSettings_FactValue final : public FGbxAudioNodeAspectSettings_Data
{
public:
	struct FFactAddress                           FactAddress;                                       // 0x0038(0x0038)(Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxAudioNodeAspectSettings_FactValue;

// ScriptStruct GbxGame.GbxMomentNodeState_MusicEvent
// 0x0000 (0x0070 - 0x0070)
struct FGbxMomentNodeState_MusicEvent final : public FGbxMomentNodeState
{
};
DUMPER7_ASSERTS_FGbxMomentNodeState_MusicEvent;

// ScriptStruct GbxGame.ProjectileHomingState
// 0x0070 (0x0070 - 0x0000)
struct FProjectileHomingState final
{
public:
	TScriptInterface<class IProjectileMovementInterface> owner;                                      // 0x0000(0x0010)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_10[0x60];                                      // 0x0010(0x0060)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FProjectileHomingState;

// ScriptStruct GbxGame.GbxBodyNodeSettings_AttachableBody
// 0x0008 (0x0040 - 0x0038)
struct FGbxBodyNodeSettings_AttachableBody final : public FGbxBodyNodeSettings
{
public:
	class UGbxBodyData*                           Body;                                              // 0x0038(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxBodyNodeSettings_AttachableBody;

// ScriptStruct GbxGame.GbxTraceTrajectorySourceData
// 0x00D0 (0x00D0 - 0x0000)
struct FGbxTraceTrajectorySourceData final
{
public:
	bool                                          bConvergeTowardsAimLocation;                       // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseWorldLocation;                                 // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                WorldLocation;                                     // 0x0008(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxRelativeLocation                   RelativeLocation;                                  // 0x0020(0x0060)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bUseWorldRotation;                                 // 0x0080(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               WorldRotation;                                     // 0x0088(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FGbxRelativeRotation                   RelativeRotation;                                  // 0x00A0(0x0030)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxTraceTrajectorySourceData;

// ScriptStruct GbxGame.GbxSkillStateConditionData_SkillState
// 0x0020 (0x0030 - 0x0010)
struct FGbxSkillStateConditionData_SkillState final : public FGbxSkillStateConditionData
{
public:
	FGameDataHandleProperty_                      SkillStateDef;                                     // 0x0010(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bEnabled;                                          // 0x0028(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxSkillStateConditionData_SkillState;

// ScriptStruct GbxGame.GbxDialogMoodsMap
// 0x0050 (0x0050 - 0x0000)
struct FGbxDialogMoodsMap final
{
public:
	TMap<class FName, TSoftObjectPtr<class UGbxTrick_Mood>> Moods;                                   // 0x0000(0x0050)(Edit, UObjectWrapper, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxDialogMoodsMap;

// ScriptStruct GbxGame.ProjectileBounceInPlaceData
// 0x0008 (0x0008 - 0x0000)
struct FProjectileBounceInPlaceData final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bScaleByInitialSpeed;                              // 0x0001(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         UpwardSpeed;                                       // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FProjectileBounceInPlaceData;

// ScriptStruct GbxGame.ImpactEffectSelection
// 0x0018 (0x0018 - 0x0000)
struct alignas(0x08) FImpactEffectSelection final
{
public:
	FGameDataHandleProperty_                      Handle;                                            // 0x0000(0x0018)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
};
DUMPER7_ASSERTS_FImpactEffectSelection;

// ScriptStruct GbxGame.ProjectileBounceEvenlyData
// 0x000C (0x000C - 0x0000)
struct FProjectileBounceEvenlyData final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bScaleByInitialSpeed;                              // 0x0001(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ForwardSpeed;                                      // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         UpwardSpeed;                                       // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FProjectileBounceEvenlyData;

// ScriptStruct GbxGame.AttitudeDamageRules
// 0x0028 (0x0028 - 0x0000)
struct FAttitudeDamageRules final
{
public:
	uint8                                         bAllowHostileDamage : 1;                           // 0x0000(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bAllowNeutralDamage : 1;                           // 0x0000(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bAllowFriendlyDamage : 1;                          // 0x0000(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bEnableInstigatedFriendlyDamageRule : 1;           // 0x0000(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bAllowInstigatedFriendlyDamage : 1;                // 0x0000(0x0001)(BitIndex: 0x04, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDamageTags                            InstigatedFriendlyDamageTags;                      // 0x0008(0x0020)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FAttitudeDamageRules;

// ScriptStruct GbxGame.InitHealthTypeData
// 0x00F0 (0x00F0 - 0x0000)
struct FInitHealthTypeData final
{
public:
	FGameDataHandleProperty_                      HealthType;                                        // 0x0000(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bChoosePoolAutomatically;                          // 0x0018(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FGameDataHandleProperty_                      ResourcePool;                                      // 0x0020(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGbxAttributeInit>              Segments;                                          // 0x0038(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FGbxAttributeInit                      SimpleMaxHealthFormula;                            // 0x0048(0x0050)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FGbxAttributeInit                      ChanceToExist;                                     // 0x0098(0x0050)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bUseChanceToExist;                                 // 0x00E8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FInitHealthTypeData;

// ScriptStruct GbxGame.DamageReceiverData
// 0x0018 (0x0018 - 0x0000)
struct FDamageReceiverData final
{
public:
	TArray<FGameDataHandleProperty_>              DamageModifiers;                                   // 0x0000(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bShowDamageNumbers;                                // 0x0010(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowImmuneFeedbackInGodMode;                      // 0x0011(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bStrictDamageAreaVisibilityTest;                   // 0x0012(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAlwaysBlockWeapons;                               // 0x0013(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNeverBlockWeapons;                                // 0x0014(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FDamageReceiverData;

// ScriptStruct GbxGame.ForceSelection
// 0x0048 (0x0048 - 0x0000)
struct alignas(0x08) FForceSelection final
{
public:
	EForceSelection                               Selection;                                         // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Preset;                                            // 0x0004(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FGameDataHandleProperty_                      attribute;                                         // 0x0010(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         force;                                             // 0x0028(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSetDestructiblePresetsManually;                   // 0x002C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DestructibleForce;                                 // 0x0030(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   DestructibleForcePreset;                           // 0x0034(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DestructibleStrain;                                // 0x003C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   DestructibleStrainPreset;                          // 0x0040(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FForceSelection;

// ScriptStruct GbxGame.ProjectileAttachHostilityFilterData
// 0x0002 (0x0002 - 0x0000)
struct FProjectileAttachHostilityFilterData
{
public:
	bool                                          bEnemy;                                            // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFriend;                                           // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FProjectileAttachHostilityFilterData;

// ScriptStruct GbxGame.ProjectileAttachDamageableFilterData
// 0x0001 (0x0003 - 0x0002)
struct FProjectileAttachDamageableFilterData final : public FProjectileAttachHostilityFilterData
{
public:
	bool                                          bCorpse;                                           // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FProjectileAttachDamageableFilterData;

// ScriptStruct GbxGame.ProjectileAttachFilterData
// 0x0008 (0x0008 - 0x0000)
struct FProjectileAttachFilterData final
{
public:
	bool                                          bWorld;                                            // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDamageable;                                       // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FProjectileAttachDamageableFilterData  DamageableFilter;                                  // 0x0002(0x0003)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bCharacter;                                        // 0x0005(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FProjectileAttachHostilityFilterData   CharacterFilter;                                   // 0x0006(0x0002)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FProjectileAttachFilterData;

// ScriptStruct GbxGame.ProjectileDrunkenMovementData
// 0x0040 (0x0040 - 0x0000)
struct FProjectileDrunkenMovementData final
{
public:
	uint8                                         Pad_0[0x8];                                        // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         StartApproachDistance;                             // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StartDelayTime;                                    // 0x000C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         EaseInTime;                                        // 0x0010(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EProjectileDrunkenMovementType                MovementType;                                      // 0x0014(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PathCorrectionInterval;                            // 0x0018(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TurnSpeed;                                         // 0x001C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxSpreadAngle;                                    // 0x0020(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxDepartureAngle;                                 // 0x0024(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGbxVector2DWaveform>           Waveforms;                                         // 0x0028(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                         GlobalWaveformScale;                               // 0x0038(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxRandomWaveOffsetTime;                           // 0x003C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FProjectileDrunkenMovementData;

// ScriptStruct GbxGame.ProjectileDef
// 0x0660 (0x06F0 - 0x0090)
struct FProjectileDef : public FGbxActorDef
{
public:
	TSoftClassPtr<class UClass>                   ProjectileClassPath;                               // 0x0090(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B8[0x6];                                       // 0x00B8(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	uint8                                         bInitialVelocityInLocalSpace : 1;                  // 0x00BE(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bRotationFollowsVelocity : 1;                      // 0x00BE(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bRotationRemainsVertical : 1;                      // 0x00BE(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_BF[0x9];                                       // 0x00BF(0x0009)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               InitialVelocityOffset;                             // 0x00C8(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                         GravityScale;                                      // 0x00E0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInheritTimeDilation;                              // 0x00E4(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E5[0x3];                                       // 0x00E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               BaseRotationOffset;                                // 0x00E8(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         bShouldRotate : 1;                                 // 0x0100(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               RotationRate;                                      // 0x0108(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                         SmoothedRotationSpeed;                             // 0x0120(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bShouldBounce : 1;                                 // 0x0124(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_125[0x3];                                      // 0x0125(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Bounciness;                                        // 0x0128(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         EnemyBouncinessScale;                              // 0x012C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Friction;                                          // 0x0130(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BounceVelocityStopSimulatingThreshold;             // 0x0134(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bBounceParallelToHitNormal : 1;                    // 0x0138(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bBounceInStraightLine : 1;                         // 0x0138(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_139[0x3];                                      // 0x0139(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FProjectileBounceInPlaceData           BounceInPlace;                                     // 0x013C(0x0008)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FProjectileBounceEvenlyData            BounceEvenly;                                      // 0x0144(0x000C)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactEffectSelection                 BounceEffect;                                      // 0x0150(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         bEnableGameplayBounce : 1;                         // 0x0168(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_169[0x3];                                      // 0x0169(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FProjectileGameplayBounceData          GameplayBounce;                                    // 0x016C(0x0008)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         bStopAtLastGameplayBounce : 1;                     // 0x0174(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bExplodeOnGameplayBounce : 1;                      // 0x0174(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bExplodeAtLastGameplayBounce : 1;                  // 0x0174(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bDestroyAtLastGameplayBounce : 1;                  // 0x0174(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bExplodeOnHitWorldAfterLastBounce : 1;             // 0x0174(0x0001)(BitIndex: 0x04, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bExplodeOnHitDamageableAfterLastBounce : 1;        // 0x0174(0x0001)(BitIndex: 0x05, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bExplodeOnHitEnemyAfterLastBounce : 1;             // 0x0174(0x0001)(BitIndex: 0x06, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bDestroyOnExplodeAfterLastBounce : 1;              // 0x0174(0x0001)(BitIndex: 0x07, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bWalkingPhysics : 1;                               // 0x0175(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bGravityAffectsSlopeWalking : 1;                   // 0x0175(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bFallOffLedges : 1;                                // 0x0175(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_176[0x2];                                      // 0x0176(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         WalkingSpeed;                                      // 0x0178(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxWalkAngle;                                      // 0x017C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxStepUpHeight;                                   // 0x0180(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ExplodeAfterAirborneTime;                          // 0x0184(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bStopExplodeOnAirborneTimerOnLand;                 // 0x0188(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_189[0x3];                                      // 0x0189(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MovementFrozenMaxTime;                             // 0x018C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bStartHoming : 1;                                  // 0x0190(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_191[0x7];                                      // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FProjectileHomingData                  Homing;                                            // 0x0198(0x00B8)(Edit, NativeAccessSpecifierPublic)
	uint8                                         bSetTeamFromInstigator : 1;                        // 0x0250(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bCollideWithInstigator : 1;                        // 0x0250(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bCollideWithTeamProjectiles : 1;                   // 0x0250(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bOverrideInstigatorTeamCollisionSettings : 1;      // 0x0250(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bCollideWithInstigatorTeam : 1;                    // 0x0250(0x0001)(BitIndex: 0x04, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bStopBlockingPawnsWhenSimulatingPhysics : 1;       // 0x0250(0x0001)(BitIndex: 0x05, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bBlockDamageLineOfSight : 1;                       // 0x0250(0x0001)(BitIndex: 0x06, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bCollideWithLagCompensation : 1;                   // 0x0250(0x0001)(BitIndex: 0x07, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bOverrideGlobalLagCompensation : 1;                // 0x0251(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bUseLagCompensation : 1;                           // 0x0251(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bCollideWithSource : 1;                            // 0x0251(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_252[0x2];                                      // 0x0252(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CollideWithSourceDelay;                            // 0x0254(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bExplodeAfterLifetime : 1;                         // 0x0258(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bDestroyOnExplode : 1;                             // 0x0258(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bExplodeOnHitWorld : 1;                            // 0x0258(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bExplodeOnHitDamageable : 1;                       // 0x0258(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bExplodeOnHitEnemy : 1;                            // 0x0258(0x0001)(BitIndex: 0x04, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bDamageOnExplode : 1;                              // 0x0258(0x0001)(BitIndex: 0x05, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bPlayExplosionEffectOnExplode : 1;                 // 0x0258(0x0001)(BitIndex: 0x06, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bPayloadEffectPostExplosion : 1;                   // 0x0258(0x0001)(BitIndex: 0x07, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_259[0x7];                                      // 0x0259(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FImpactEffectSelection                 ExplosionEffect;                                   // 0x0260(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         bProximityTrigger : 1;                             // 0x0278(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bProximityAttachToEnemy : 1;                       // 0x0278(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bProximityHomeToEnemy : 1;                         // 0x0278(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         BitPad_278_3 : 5;                                  // 0x0278(0x0001)(Fixing Bit-Field Size For New Byte [ Dumper-7 ])
	uint8                                         Pad_279[0x3];                                      // 0x0279(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	uint8                                         bProximityHomingExplodeOnHitWorld : 1;             // 0x027C(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bProximityHomingExplodeOnHitDamageable : 1;        // 0x027C(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bProximityHomingExplodeOnHitEnemy : 1;             // 0x027C(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bProximityOwnerBeginOverlap : 1;                   // 0x027C(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bExplosionPostProximityTrigger : 1;                // 0x027C(0x0001)(BitIndex: 0x04, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         BitPad_27C_5 : 3;                                  // 0x027C(0x0001)(Fixing Bit-Field Size For New Byte [ Dumper-7 ])
	uint8                                         Pad_27D[0x9];                                      // 0x027D(0x0009)(Fixing Size After Last Property [ Dumper-7 ])
	uint8                                         bInstigatorIsDamageCauser : 1;                     // 0x0286(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_287[0x9];                                      // 0x0287(0x0009)(Fixing Size After Last Property [ Dumper-7 ])
	FGameDataHandleProperty_                      DamageType;                                        // 0x0290(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDamageSourceContainer                 DamageSource;                                      // 0x02A8(0x0040)(Edit, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      DamageData;                                        // 0x02E8(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bCanBeDamaged : 1;                                 // 0x0300(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bExplodeOnTakeDamage : 1;                          // 0x0300(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bDestroyOnTakeDamage : 1;                          // 0x0300(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bDamageCauserBecomesInstigatorOnDeath : 1;         // 0x0300(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_301[0x7];                                      // 0x0301(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxInlineStruct                       DamageFilterToInstantlyTrigger;                    // 0x0308(0x0018)(Edit, NativeAccessSpecifierPublic)
	uint8                                         bUseTakeDamageAttitudeRules : 1;                   // 0x0320(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_321[0x7];                                      // 0x0321(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAttitudeDamageRules                   TakeDamageAttitudeRules;                           // 0x0328(0x0028)(Edit, NativeAccessSpecifierPublic)
	struct FDamageTags                            DamageAttitudeTags;                                // 0x0350(0x0020)(Edit, NativeAccessSpecifierPublic)
	struct FGbxInlineStruct                       TakeDamageFilter;                                  // 0x0370(0x0018)(Edit, NativeAccessSpecifierPublic)
	bool                                          bReplenishHealthOnWorldReset;                      // 0x0388(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_389[0x7];                                      // 0x0389(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FInitHealthTypeData>            healthtypes;                                       // 0x0390(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FDamageReceiverData                    DamageReceiverData;                                // 0x03A0(0x0018)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FBalancedActorData                     BalanceData;                                       // 0x03B8(0x0030)(Edit, NativeAccessSpecifierPublic)
	bool                                          bUseInstigatorBalanceDataForDamage;                // 0x03E8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bTargetableByPlayers;                              // 0x03E9(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bTargetableByAI;                                   // 0x03EA(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3EB[0x5];                                      // 0x03EB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FTargetLocationSettings>        DefaultTargetSockets;                              // 0x03F0(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FTargetLocationSettings>        DefaultMeleeTargetSockets;                         // 0x0400(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bAllowMeleeTargetHoming;                           // 0x0410(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAimAssistSnapTargetType                      SnapTargetType;                                    // 0x0411(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSupportsAimAssist;                                // 0x0412(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bWantsFriendlyWeaponsLowered;                      // 0x0413(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_414[0x4];                                      // 0x0414(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FForceSelection                        ImpactForce;                                       // 0x0418(0x0048)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactEffectSelection                 ImpactEffect;                                      // 0x0460(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         bCanAttachTo : 1;                                  // 0x0478(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bAttachOnImpact : 1;                               // 0x0478(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	struct FProjectileAttachFilterData            AttachToOnImpact;                                  // 0x0479(0x0008)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	EProjectileDetachAction                       AttachOnImpactDetachAction;                        // 0x0481(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bClampVerticalAttachAngle;                         // 0x0482(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_483[0x1];                                      // 0x0483(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FNumericRange                          AttachAngleRange;                                  // 0x0484(0x0008)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         bStartDrunkenMovement : 1;                         // 0x048C(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_48D[0x3];                                      // 0x048D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FProjectileDrunkenMovementData         DrunkenMovement;                                   // 0x0490(0x0040)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FGbxInlineStruct>               MovementModifiers;                                 // 0x04D0(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      audioprovider;                                     // 0x04E0(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           SimAudio;                                          // 0x04F8(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           AttachAudio;                                       // 0x0510(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           RingOutAudio;                                      // 0x0528(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           FuseTimerEvent;                                    // 0x0540(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           StopFuseTimerEvent;                                // 0x0558(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           FuseTimerRtpc;                                     // 0x0570(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bCanTriggerGrenadeDodges : 1;                      // 0x0588(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bCanTriggerBulletDodges : 1;                       // 0x0588(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bShowHUDWarning : 1;                               // 0x0588(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bGetHUDWarningRadiusFromDamageData : 1;            // 0x0588(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_589[0x3];                                      // 0x0589(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         HUDWarningRadius;                                  // 0x058C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bReplicates : 1;                                   // 0x0590(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bNetTemporary : 1;                                 // 0x0590(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bReplicateMovement : 1;                            // 0x0590(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bReplicatesWhileHeld : 1;                          // 0x0590(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_591[0x7];                                      // 0x0591(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UFXSystemAsset>          TrailAsset;                                        // 0x0598(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      TrailCollection;                                   // 0x05C0(0x0018)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                TrailLocationOffset;                               // 0x05D8(0x0018)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               TrailRotationOffset;                               // 0x05F0(0x0018)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class FName                                   TrailAttachSocket;                                 // 0x0608(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UFXSystemAsset>          FuseAsset;                                         // 0x0610(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      FuseCollection;                                    // 0x0638(0x0018)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                FuseLocationOffset;                                // 0x0650(0x0018)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               FuseRotationOffset;                                // 0x0668(0x0018)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class FName                                   FuseAttachSocket;                                  // 0x0680(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bSuppressDamageModifierPresentations : 1;          // 0x0688(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_689[0x1];                                      // 0x0689(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	uint16                                        SuppressedDamageModifierPresentations;             // 0x068A(0x0002)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   DroppedCollisionProfile;                           // 0x068C(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bChangeCollisionProfileOnDrop;                     // 0x0694(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSimulatePhysicsOnDrop;                            // 0x0695(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_696[0x2];                                      // 0x0696(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FImpactEffectSelection                 HeldImpactEffect;                                  // 0x0698(0x0018)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	EFactsTransience                              FactsTransience;                                   // 0x06B0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_6B1[0x7];                                      // 0x06B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UProjectileBodyData>     BodyData;                                          // 0x06B8(0x0028)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<TSoftClassPtr<class UClass>>           Scripts;                                           // 0x06E0(0x0010)(Edit, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
};
DUMPER7_ASSERTS_FProjectileDef;

// ScriptStruct GbxGame.GbxTraceTrajectorySimulationData
// 0x0018 (0x0018 - 0x0000)
struct FGbxTraceTrajectorySimulationData final
{
public:
	float                                         StepTime;                                          // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxTime;                                           // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         initialspeed;                                      // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         maxspeed;                                          // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Acceleration;                                      // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GravityScale;                                      // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxTraceTrajectorySimulationData;

// ScriptStruct GbxGame.GbxBrainAspect_ClaimPerch
// 0x0008 (0x00E0 - 0x00D8)
struct FGbxBrainAspect_ClaimPerch : public FGbxBrainAspect
{
public:
	uint8                                         Pad_D8[0x8];                                       // 0x00D8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainAspect_ClaimPerch;

// ScriptStruct GbxGame.GbxSkillStateConditionData_ResourcePoolBase
// 0x0010 (0x0020 - 0x0010)
struct FGbxSkillStateConditionData_ResourcePoolBase : public FGbxSkillStateConditionData
{
public:
	EGbxSkillStateCondition_ResourcePool_Mode     EvalMode;                                          // 0x0010(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EGameResourcePoolState                        PoolState;                                         // 0x0011(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Value;                                             // 0x0014(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bAsPercent;                                        // 0x0018(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxSkillStateConditionData_ResourcePoolBase;

// ScriptStruct GbxGame.GbxSkillStateConditionData_ResourcePoolAlias
// 0x0018 (0x0038 - 0x0020)
struct FGbxSkillStateConditionData_ResourcePoolAlias final : public FGbxSkillStateConditionData_ResourcePoolBase
{
public:
	FGbxDefPtrProperty_                           PoolAlias;                                         // 0x0020(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxSkillStateConditionData_ResourcePoolAlias;

// ScriptStruct GbxGame.GbxBodyNodeState_Target
// 0x0098 (0x0100 - 0x0068)
struct FGbxBodyNodeState_Target final : public FGbxBodyNodeState
{
public:
	uint8                                         Pad_68[0x98];                                      // 0x0068(0x0098)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBodyNodeState_Target;

// ScriptStruct GbxGame.PartTypeSelectionPartRule
// 0x0018 (0x0018 - 0x0000)
struct alignas(0x08) FPartTypeSelectionPartRule final
{
public:
	class FName                                   part;                                              // 0x0000(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIgnoreMinGameStage;                               // 0x0008(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0xF];                                        // 0x0009(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FPartTypeSelectionPartRule;

// ScriptStruct GbxGame.PartTypeSelectionRules
// 0x0068 (0x0068 - 0x0000)
struct FPartTypeSelectionRules final
{
public:
	struct FInt32Interval                         PartCount;                                         // 0x0000(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxAttributeInit                      AdditionalPartChance;                              // 0x0008(0x0050)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FPartTypeSelectionPartRule>     parts;                                             // 0x0058(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FPartTypeSelectionRules;

// ScriptStruct GbxGame.PartTagGameStageSelectionData
// 0x0008 (0x0008 - 0x0000)
struct FPartTagGameStageSelectionData final
{
public:
	int32                                         mingamestage;                                      // 0x0000(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MAX;                                               // 0x0004(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FPartTagGameStageSelectionData;

// ScriptStruct GbxGame.PartTagSelectionRules
// 0x0038 (0x0038 - 0x0000)
struct FPartTagSelectionRules final
{
public:
	struct FInventoryTags                         tags;                                              // 0x0000(0x0020)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int32                                         MAX;                                               // 0x0020(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FPartTagGameStageSelectionData> GameStageRules;                                    // 0x0028(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FPartTagSelectionRules;

// ScriptStruct GbxGame.InventoryCompDef
// 0x0118 (0x0148 - 0x0030)
struct FInventoryCompDef final : public FGbxSerialNumberAwareDef
{
public:
	uint8                                         Pad_30[0x8];                                       // 0x0030(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ItemBaseName;                                      // 0x0038(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	FGbxDefPtrProperty_                           BaseComposition;                                   // 0x0048(0x0018)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	FGbxDefPtrProperty_                           Rarity;                                            // 0x0060(0x0018)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   ThumbnailSceneName;                                // 0x0078(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_80[0x8];                                       // 0x0080(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, struct FPartTypeSelectionRules> PartTypeSelectionRules;                        // 0x0088(0x0050)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FPartTagSelectionRules>         PartTagSelectionRules;                             // 0x00D8(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FGbxInlineStruct>               Aspects;                                           // 0x00E8(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	ECriterionCreationMethod                      CriterionMethod;                                   // 0x00F8(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CriterionTagDisplayName;                           // 0x0100(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_110[0x8];                                      // 0x0110(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	uint8                                         bExcludeFromGlobalPoolOverride : 1;                // 0x0118(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bExcludeFromGlobalPool : 1;                        // 0x0118(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_119[0xF];                                      // 0x0119(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	FGbxDefPtrProperty_                           params;                                            // 0x0128(0x0018)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_140[0x8];                                      // 0x0140(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FInventoryCompDef;

// ScriptStruct GbxGame.InventoryStatModifierData
// 0x0060 (0x0060 - 0x0000)
struct FInventoryStatModifierData final
{
public:
	class FName                                   stattagname;                                       // 0x0000(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxAttributeInit                      modifiervalue;                                     // 0x0008(0x0050)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_58[0x8];                                       // 0x0058(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FInventoryStatModifierData;

// ScriptStruct GbxGame.StatModifierAspect
// 0x0018 (0x0048 - 0x0030)
struct FStatModifierAspect : public FInventoryAspect
{
public:
	int32                                         usemodebitmask;                                    // 0x0030(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FInventoryStatModifierData>     StatModifiers;                                     // 0x0038(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
};
DUMPER7_ASSERTS_FStatModifierAspect;

// ScriptStruct GbxGame.MissionAliasType
// 0x0008 (0x0008 - 0x0000)
struct FMissionAliasType final
{
public:
	class FName                                   type;                                              // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FMissionAliasType;

// ScriptStruct GbxGame.GbxCondition_HasGameplayTags
// 0x0028 (0x0038 - 0x0010)
struct FGbxCondition_HasGameplayTags final : public FGbxConditionValueResolver
{
public:
	EGameplayContainerMatchType                   MatchType;                                         // 0x0010(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  GameplayTags;                                      // 0x0018(0x0020)(Edit, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxCondition_HasGameplayTags;

// ScriptStruct GbxGame.InventoryParamsDef
// 0x0010 (0x0028 - 0x0018)
struct FInventoryParamsDef final : public FGbxDef
{
public:
	TArray<struct FInventoryParam>                params;                                            // 0x0018(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FInventoryParamsDef;

// ScriptStruct GbxGame.GbxDiscoveryUnfogData
// 0x001C (0x001C - 0x0000)
struct FGbxDiscoveryUnfogData final
{
public:
	float                                         UnfogRadius;                                       // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         UnfogHeight;                                       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         UnfogRadiusVehicle;                                // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         UnfogHeightVehicle;                                // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PercentageOfUnfogRadiusThatIsFull;                 // 0x0010(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FIntVector2                            FODGridSize;                                       // 0x0014(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxDiscoveryUnfogData;

// ScriptStruct GbxGame.GbxDiscoveryViewableMapBehaviorDef
// 0x0020 (0x0038 - 0x0018)
struct FGbxDiscoveryViewableMapBehaviorDef : public FGbxDef
{
public:
	struct FGbxDiscoveryUnfogData                 UnfogData;                                         // 0x0018(0x001C)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxDiscoveryViewableMapBehaviorDef;

// ScriptStruct GbxGame.GbxBrainTaskSettings_MeleeAttack
// 0x02D0 (0x0468 - 0x0198)
struct FGbxBrainTaskSettings_MeleeAttack final : public FGbxBrainTaskSettings_Composite
{
public:
	struct FGbxParam                              target;                                            // 0x0198(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              DesiredDistance;                                   // 0x01D0(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              DesiredHeight;                                     // 0x0208(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              VerticalOffset;                                    // 0x0240(0x0038)(Edit, NativeAccessSpecifierPublic)
	bool                                          bRequireNavLoS;                                    // 0x0278(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRequireCanSee;                                    // 0x0279(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_27A[0x6];                                      // 0x027A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              RequireCanSeeTime;                                 // 0x0280(0x0038)(Edit, NativeAccessSpecifierPublic)
	EGbxBrainTerritoryRestriction                 TerritoryRestriction;                              // 0x02B8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGbxTerritoryArea                             TerritoryArea;                                     // 0x02B9(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2BA[0x2];                                      // 0x02BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TargetOutOfTerritoryFailTimer;                     // 0x02BC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseMeleeInterface;                                // 0x02C0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C1[0x7];                                      // 0x02C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxTrickRef                           Attack;                                            // 0x02C8(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FGbxParam                              Count;                                             // 0x02E0(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              PlayRate;                                          // 0x0318(0x0038)(Edit, NativeAccessSpecifierPublic)
	EAttackRotation_InPosition                    BodyRotation_InPosition;                           // 0x0350(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_351[0x7];                                      // 0x0351(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              BodyRotationAngle;                                 // 0x0358(0x0038)(Edit, AdvancedDisplay, NativeAccessSpecifierPublic)
	struct FGbxParam                              AfterTurnAngle;                                    // 0x0390(0x0038)(Edit, AdvancedDisplay, NativeAccessSpecifierPublic)
	bool                                          bUseAfterTurnAngle;                                // 0x03C8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLimitTurnAnims;                                   // 0x03C9(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3CA[0x6];                                      // 0x03CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              MaxTurnAnims;                                      // 0x03D0(0x0038)(Edit, AdvancedDisplay, NativeAccessSpecifierPublic)
	struct FGbxParam                              TargetRadius;                                      // 0x0408(0x0038)(Edit, AdvancedDisplay, NativeAccessSpecifierPublic)
	bool                                          bIncludeTargetRadius;                              // 0x0440(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_441[0x3];                                      // 0x0441(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	ETrickInterrupt                               InterruptRule;                                     // 0x0444(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAllowHeadLook_InPosition;                         // 0x0448(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAllowAimOffset_InPosition;                        // 0x0449(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bWaitForTurnAnimToStartAttack;                     // 0x044A(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCanMoveIntoPosition;                              // 0x044B(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAttackRotation_Moving                        BodyRotation_Moving;                               // 0x044C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAllowHeadLook_Moving;                             // 0x044D(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAllowAimOffset_Moving;                            // 0x044E(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44F[0x1];                                      // 0x044F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	FGbxDefPtrProperty_                           CharacterSoundTag_Moving;                          // 0x0450(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxBrainTaskSettings_MeleeAttack;

// ScriptStruct GbxGame.GbxSkillStateMachineStateAssurance_TimeOut_Condition
// 0x0020 (0x0020 - 0x0000)
struct FGbxSkillStateMachineStateAssurance_TimeOut_Condition final
{
public:
	struct FGbxInlineStruct                       ConditionData;                                     // 0x0000(0x0018)(Edit, NativeAccessSpecifierPublic)
	ESkillAssuranceTimeout_TimerMode              TimerMode;                                         // 0x0018(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxSkillStateMachineStateAssurance_TimeOut_Condition;

// ScriptStruct GbxGame.BreakDownPartAspect
// 0x0098 (0x00C8 - 0x0030)
struct FBreakDownPartAspect final : public FInventoryAspect
{
public:
	FGameDataHandleProperty_                      itempool;                                          // 0x0030(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxAttributeInit                      gamestage;                                         // 0x0048(0x0050)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      TypeDef;                                           // 0x0098(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      CompDef;                                           // 0x00B0(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FBreakDownPartAspect;

// ScriptStruct GbxGame.AvatarArchetypeDef
// 0x0078 (0x00A8 - 0x0030)
struct FAvatarArchetypeDef final : public FGbxSerialNumberAwareDef
{
public:
	uint8                                         Pad_30[0x1];                                       // 0x0030(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bTemplateOnly;                                     // 0x0031(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FNexusBitSet                           DesignTags;                                        // 0x0038(0x0020)(Edit, NativeAccessSpecifierPublic)
	TSet<FGbxDefPtrProperty_>                     Selectors;                                         // 0x0058(0x0050)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FAvatarArchetypeDef;

// ScriptStruct GbxGame.GbxSkillDelegateDamageFilter_HitDirectionData
// 0x00A0 (0x00A0 - 0x0000)
struct FGbxSkillDelegateDamageFilter_HitDirectionData final
{
public:
	struct FGbxAttributeInit                      HitDirectionAngle;                                 // 0x0000(0x0050)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FGbxAttributeInit                      HitDirectionAngleOffset;                           // 0x0050(0x0050)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxSkillDelegateDamageFilter_HitDirectionData;

// ScriptStruct GbxGame.FoleyImpactParams
// 0x0040 (0x0040 - 0x0000)
struct FFoleyImpactParams final
{
public:
	struct FGameplayTag                           GameplayTag;                                       // 0x0000(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Index;                                             // 0x0008(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   socket;                                            // 0x000C(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIgnorePerspective;                                // 0x0014(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ImpactVelocity;                                    // 0x0018(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDoTrace;                                          // 0x001C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                TraceDirection;                                    // 0x0020(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_38[0x8];                                       // 0x0038(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FFoleyImpactParams;

// ScriptStruct GbxGame.GbxSkillEffectDef
// 0x0028 (0x0040 - 0x0018)
struct FGbxSkillEffectDef final : public FGbxDef
{
public:
	FGbxDefPtrProperty_                           Outer;                                             // 0x0018(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<FGbxDefPtrProperty_>                   Exclusions;                                        // 0x0030(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxSkillEffectDef;

// ScriptStruct GbxGame.GbxColorBlindColor
// 0x0060 (0x0060 - 0x0000)
struct FGbxColorBlindColor final
{
public:
	struct FLinearColor                           Source;                                            // 0x0000(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<EColorBlindMode, struct FLinearColor>    ColorModes;                                        // 0x0010(0x0050)(Edit, Protected, NativeAccessSpecifierProtected)
};
DUMPER7_ASSERTS_FGbxColorBlindColor;

// ScriptStruct GbxGame.InventoryRarityDef
// 0x01F8 (0x0210 - 0x0018)
struct FInventoryRarityDef final : public FGbxDef
{
public:
	bool                                          bAddToCriteria;                                    // 0x0018(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   InternalName;                                      // 0x001C(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   DisplayName;                                       // 0x0028(0x0010)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FGbxColorBlindColor                    DisplayColor;                                      // 0x0038(0x0060)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UFXSystemAsset>          AttractEffect;                                     // 0x0098(0x0028)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FGbxParticleParameter>          AttractEffectParameters;                           // 0x00C0(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                         AttractEffectHeight;                               // 0x00D0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bPickupOutlineEnabled;                             // 0x00D4(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_D5[0x3];                                       // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxColorBlindColor                    PickupOutlineColor;                                // 0x00D8(0x0060)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	int32                                         PickupOutlineDepthStencilValue;                    // 0x0138(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EPickupLifespanType                           PickupLifespanType;                                // 0x013C(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_13D[0x3];                                      // 0x013D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SortValue;                                         // 0x0140(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         LootFeedDisplayDuration;                           // 0x0144(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bCanBeLostLoot;                                    // 0x0148(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxUEDataTableRowHandle               RarityBalanceTableRowHandle;                       // 0x0150(0x0020)(Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class FName                                   RarityMultiplierColumnName;                        // 0x0170(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   StatMultiplierColumnName;                          // 0x0178(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	FGbxDefPtrProperty_                           PickupAudioStinger;                                // 0x0180(0x0018)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          ShouldAttachPickupSpawnStinger;                    // 0x0198(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAttributeInit                      monetaryvaluemodifier;                             // 0x01A0(0x0050)(Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	FGbxDefPtrProperty_                           DiscoveryLocationType;                             // 0x01F0(0x0018)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_208[0x8];                                      // 0x0208(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FInventoryRarityDef;

// ScriptStruct GbxGame.GbxDiscoveryLocationTypeDef
// 0x01B0 (0x01C8 - 0x0018)
struct FGbxDiscoveryLocationTypeDef : public FGbxDef
{
public:
	FGbxDefPtrProperty_                           Category;                                          // 0x0018(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxDiscoveryOfflineArea               DefaultDiscoveryStateTerritories[0x3];             // 0x0030(0x0020)(Edit, NativeAccessSpecifierPublic)
	bool                                          bTrackLive;                                        // 0x0090(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsDynamic;                                        // 0x0091(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShareLiveActorDiscovery;                          // 0x0092(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDoNotGenerateMetaData;                            // 0x0093(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsParentLocation;                                 // 0x0094(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCanBeChildLocation;                               // 0x0095(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCanBeMarkedOnMap;                                 // 0x0096(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCountsTowardsAchievementProgress;                 // 0x0097(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowAsRegionLocationOnCompass;                    // 0x0098(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   AttachToSocket;                                    // 0x009C(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FGbxDefPtrProperty_                           LocationDisplayData;                               // 0x00A8(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSendDiscoveredNotificationMessage;                // 0x00C0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DiscoveredNotificationMessageDuration;             // 0x00C4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           DiscoveryStatePresentations[0x3];                  // 0x00C8(0x0018)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bDrivePresentationByState;                         // 0x0110(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_111[0x3];                                      // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxActorStateMachineKey               LocationPresentationControllingState;              // 0x0114(0x000C)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<struct FGbxActorStateMachineStateKey, FGbxDefPtrProperty_> StateToLocationPresentationMap;  // 0x0120(0x0050)(Edit, Protected, NativeAccessSpecifierProtected)
	int32                                         ShowOn;                                            // 0x0170(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FFloatRange                            DefaultWithinViewRanges[0x5];                      // 0x0174(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1C4[0x4];                                      // 0x01C4(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxDiscoveryLocationTypeDef;

// ScriptStruct GbxGame.GbxSymphonicAmbientAudioAction
// 0x0000 (0x0008 - 0x0008)
struct FGbxSymphonicAmbientAudioAction : public FGbxHasStructType
{
};
DUMPER7_ASSERTS_FGbxSymphonicAmbientAudioAction;

// ScriptStruct GbxGame.GbxSymphonicAmbientAudioAction_Hold
// 0x0008 (0x0010 - 0x0008)
struct FGbxSymphonicAmbientAudioAction_Hold final : public FGbxSymphonicAmbientAudioAction
{
public:
	float                                         HoldTime;                                          // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxSymphonicAmbientAudioAction_Hold;

// ScriptStruct GbxGame.GbxBrainAspect_IsSpawnCostAvailable
// 0x0000 (0x00D8 - 0x00D8)
struct FGbxBrainAspect_IsSpawnCostAvailable final : public FGbxBrainAspect
{
};
DUMPER7_ASSERTS_FGbxBrainAspect_IsSpawnCostAvailable;

// ScriptStruct GbxGame.BreadcrumbNode
// 0x0028 (0x0028 - 0x0000)
struct FBreadcrumbNode final
{
public:
	TSoftObjectPtr<class UBreadcrumbRouteComponent> NodeComponent;                                   // 0x0000(0x0028)(Edit, ExportObject, DisableEditOnTemplate, EditConst, InstancedReference, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FBreadcrumbNode;

// ScriptStruct GbxGame.GbxDiscoveryInWorldIndicatorMaterialParameter
// 0x0040 (0x0040 - 0x0000)
struct FGbxDiscoveryInWorldIndicatorMaterialParameter final
{
public:
	class FName                                   Name;                                              // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxParam                              Value;                                             // 0x0008(0x0038)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxDiscoveryInWorldIndicatorMaterialParameter;

// ScriptStruct GbxGame.GbxDiscoveryPerActorEffectData
// 0x001C (0x001C - 0x0000)
struct FGbxDiscoveryPerActorEffectData final
{
public:
	struct FLinearColor                           EffectColor;                                       // 0x0000(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bForceEdgeDetectionOff;                            // 0x0010(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CustomDepthStencilValue;                           // 0x0014(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCustomDepthOnView;                                // 0x0018(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRenderCustomDepth;                                // 0x0019(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bApplyNanitePatchForOldUnrealVersions;             // 0x001A(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B[0x1];                                       // 0x001B(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxDiscoveryPerActorEffectData;

// ScriptStruct GbxGame.GbxDiscoveryInWorldIndicatorDef
// 0x00C8 (0x00E0 - 0x0018)
struct FGbxDiscoveryInWorldIndicatorDef final : public FGbxDef
{
public:
	bool                                          bUseOverrideLifeTime;                              // 0x0018(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         OverrideLifeTime;                                  // 0x001C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UNiagaraSystem>          ParticleSystem;                                    // 0x0020(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGbxDiscoveryInWorldIndicatorMaterialParameter> MaterialParameters;                // 0x0048(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bApplyActorEffect;                                 // 0x0058(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxDiscoveryPerActorEffectData        ActorEffectData;                                   // 0x005C(0x001C)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bDoNotShowParticleSystemIfActorEffectWasApplied;   // 0x0078(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAudioEvent                         AudioEvent;                                        // 0x0080(0x0030)(Edit, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           AudioEventDistanceRtpc;                            // 0x00B0(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           DebugColor;                                        // 0x00C8(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DebugSize;                                         // 0x00D8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxDiscoveryInWorldIndicatorDef;

// ScriptStruct GbxGame.GbxGameModeModuleConfigScripts
// 0x0000 (0x0008 - 0x0008)
struct FGbxGameModeModuleConfigScripts : public FGbxHasStructType
{
};
DUMPER7_ASSERTS_FGbxGameModeModuleConfigScripts;

// ScriptStruct GbxGame.GbxGameModeModuleConfigScripts_Facts
// 0x0028 (0x0030 - 0x0008)
struct FGbxGameModeModuleConfigScripts_Facts final : public FGbxGameModeModuleConfigScripts
{
public:
	TSoftClassPtr<class UClass>                   HostScript;                                        // 0x0008(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxGameModeModuleConfigScripts_Facts;

// ScriptStruct GbxGame.GbxDecoAnimItem
// 0x0070 (0x0070 - 0x0000)
struct FGbxDecoAnimItem final
{
public:
	struct FGbxParam                              Weight;                                            // 0x0000(0x0038)(Edit, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAnimSequenceBase>       Animation;                                         // 0x0038(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           AnimationTag;                                      // 0x0060(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseAnimationTag;                                  // 0x0068(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxDecoAnimItem;

// ScriptStruct GbxGame.GbxDecoAnimTransition
// 0x0100 (0x0100 - 0x0000)
struct FGbxDecoAnimTransition final
{
public:
	class FName                                   NextStateName;                                     // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGbxDecoTrigger                               Trigger;                                           // 0x0008(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              TimerTriggerDuration;                              // 0x0010(0x0038)(Edit, NativeAccessSpecifierPublic)
	class FName                                   FactTriggerName;                                   // 0x0048(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAnimSequenceBase>       Animation;                                         // 0x0050(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           AnimationTag;                                      // 0x0078(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseAnimationTag;                                  // 0x0080(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAnimBlendOptions                   BlendIn;                                           // 0x0088(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FGbxAnimBlendOptions                   BlendOut;                                          // 0x00A8(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FGbxParam                              Condition;                                         // 0x00C8(0x0038)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxDecoAnimTransition;

// ScriptStruct GbxGame.GbxDecoAnimStateData
// 0x0060 (0x0060 - 0x0000)
struct FGbxDecoAnimStateData final
{
public:
	class FName                                   Name;                                              // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGbxDecoAnimItem>               Anims;                                             // 0x0008(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FGbxDecoAnimTransition>         Transitions;                                       // 0x0018(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                         NextAnimBlendTime;                                 // 0x0028(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGbxDecoAnimCycle                             DecoAnimCycle;                                     // 0x002C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FNumericRange                          MinStateTime;                                      // 0x0030(0x0008)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bUseMinStateTime;                                  // 0x0038(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGbxRotationMode                              RotationMode;                                      // 0x0039(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseAimChannel;                                    // 0x003A(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseHeadChannel;                                   // 0x003B(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  PlayTaggedDialogEventOnActivate;                   // 0x0040(0x0020)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxDecoAnimStateData;

// ScriptStruct GbxGame.CameraModeBehavior_BlendToFOV
// 0x00E0 (0x00F8 - 0x0018)
struct FCameraModeBehavior_BlendToFOV : public FCameraModeBehavior
{
public:
	struct FGbxFloatCurve                         FOVCurve;                                          // 0x0018(0x00B0)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	bool                                          bAddModifierToBaseFOV;                             // 0x00C8(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FOVModifier;                                       // 0x00CC(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MaxFOV;                                            // 0x00D0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         BlendInTime;                                       // 0x00D4(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         BlendOutTime;                                      // 0x00D8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         BlendInDelay;                                      // 0x00DC(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bBlendOutWhenBlendInFails;                         // 0x00E0(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CurrentDelay;                                      // 0x00E4(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         MaxFOVModifier;                                    // 0x00E8(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         BlendPct;                                          // 0x00EC(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bTransitioningToTargetFoV;                         // 0x00F0(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FCameraModeBehavior_BlendToFOV;

// ScriptStruct GbxGame.GbxSkillComponentData_TimerExtension
// 0x0000 (0x0008 - 0x0008)
struct FGbxSkillComponentData_TimerExtension : public FGbxHasStructType
{
};
DUMPER7_ASSERTS_FGbxSkillComponentData_TimerExtension;

// ScriptStruct GbxGame.GbxOrientedBone
// 0x0014 (0x0014 - 0x0000)
struct FGbxOrientedBone
{
public:
	struct FBoneReference                         bone;                                              // 0x0000(0x0010)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGbxAxisOption                                ForwardAxis;                                       // 0x0010(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGbxAxisOption                                UpAxis;                                            // 0x0011(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxOrientedBone;

// ScriptStruct GbxGame.GbxRotatingBone
// 0x0010 (0x0024 - 0x0014)
struct FGbxRotatingBone : public FGbxOrientedBone
{
public:
	struct FNumericRange                          YawClamp;                                          // 0x0014(0x0008)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FNumericRange                          PitchClamp;                                        // 0x001C(0x0008)(Edit, NoDestructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxRotatingBone;

// ScriptStruct GbxGame.GbxRotatingChainBone
// 0x0004 (0x0028 - 0x0024)
struct FGbxRotatingChainBone final : public FGbxRotatingBone
{
public:
	float                                         Weight;                                            // 0x0024(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxRotatingChainBone;

// ScriptStruct GbxGame.GameResourcePoolManager
// 0x0040 (0x0040 - 0x0000)
struct alignas(0x08) FGameResourcePoolManager final
{
public:
	uint8                                         Pad_0[0x40];                                       // 0x0000(0x0040)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGameResourcePoolManager;

// ScriptStruct GbxGame.GbxDiscoveryIconSizeDef
// 0x0018 (0x0030 - 0x0018)
struct FGbxDiscoveryIconSizeDef final : public FGbxDef
{
public:
	float                                         MapViewerIconHeightRems;                           // 0x0018(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MapViewerIconHighlightHeightRems;                  // 0x001C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MapViewerBlipIconHeightRems;                       // 0x0020(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BlipZoomRange;                                     // 0x0024(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HideZoomRange;                                     // 0x0028(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxDiscoveryIconSizeDef;

// ScriptStruct GbxGame.GbxStatusEffectAction
// 0x0000 (0x0008 - 0x0008)
struct FGbxStatusEffectAction : public FGbxHasStructType
{
};
DUMPER7_ASSERTS_FGbxStatusEffectAction;

// ScriptStruct GbxGame.GbxStatusEffectAction_PopResourceGroup
// 0x0008 (0x0010 - 0x0008)
struct FGbxStatusEffectAction_PopResourceGroup final : public FGbxStatusEffectAction
{
public:
	class FName                                   GroupName;                                         // 0x0008(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxStatusEffectAction_PopResourceGroup;

// ScriptStruct GbxGame.GibData
// 0x0020 (0x0020 - 0x0000)
struct FGibData final
{
public:
	int32                                         MaxCount;                                          // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SelectionWeight;                                   // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOverrideGlobalScale;                              // 0x0008(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MinScale;                                          // 0x000C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxScale;                                          // 0x0010(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            Mesh;                                              // 0x0018(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGibData;

// ScriptStruct GbxGame.AvatarOptionBudget
// 0x0008 (0x0008 - 0x0000)
struct FAvatarOptionBudget final
{
public:
	int16                                         MaxOptions;                                        // 0x0000(0x0002)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int16                                         MaxChoices;                                        // 0x0002(0x0002)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int16                                         MaxFallbacks;                                      // 0x0004(0x0002)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int16                                         FallbackThreshold;                                 // 0x0006(0x0002)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FAvatarOptionBudget;

// ScriptStruct GbxGame.AvatarTemplateNonDef
// 0x0010 (0x0040 - 0x0030)
struct FAvatarTemplateNonDef : public FGbxSerialNumberAwareDef
{
public:
	uint8                                         Pad_30[0x10];                                      // 0x0030(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FAvatarTemplateNonDef;

// ScriptStruct GbxGame.AvatarOptionDef
// 0x02F0 (0x0330 - 0x0040)
struct FAvatarOptionDef final : public FAvatarTemplateNonDef
{
public:
	uint8                                         Pad_40[0x1];                                       // 0x0040(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bTemplateOnly;                                     // 0x0041(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	FGbxDefPtrProperty_                           OwningOption;                                      // 0x0048(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAvatarChoiceType                             LinkType;                                          // 0x0060(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGbxInlineStruct>               BaseFeatures;                                      // 0x0068(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TSet<FGbxDefPtrProperty_>                     ExternalFeatures;                                  // 0x0078(0x0050)(Edit, NativeAccessSpecifierPublic)
	bool                                          RequireAspect;                                     // 0x00C8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          AllowAspectFallback;                               // 0x00C9(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_CA[0x6];                                       // 0x00CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAvatarOptionFeatures>          ByAspect;                                          // 0x00D0(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          ArchetypeSelectable;                               // 0x00E0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FNexusBitSet                           ViewTargets;                                       // 0x00E8(0x0020)(Edit, NativeAccessSpecifierPublic)
	struct FNexusBitSet                           DesignTags;                                        // 0x0108(0x0020)(Edit, NativeAccessSpecifierPublic)
	struct FNexusBitSet                           OptionTags;                                        // 0x0128(0x0020)(Edit, NativeAccessSpecifierPublic)
	struct FNexusBitSet                           OptionMaskTags;                                    // 0x0148(0x0020)(Edit, NativeAccessSpecifierPublic)
	uint8                                         Pad_168[0xCC];                                     // 0x0168(0x00CC)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         priority;                                          // 0x0234(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAvatarOptionBudget                    Budget;                                            // 0x0238(0x0008)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           UnlockedBy;                                        // 0x0240(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxInlineStruct                       GameData;                                          // 0x0258(0x0018)(Edit, NativeAccessSpecifierPublic)
	uint8                                         Pad_270[0xC0];                                     // 0x0270(0x00C0)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FAvatarOptionDef;

// ScriptStruct GbxGame.GbxGameModeModuleCheat
// 0x0018 (0x0018 - 0x0000)
struct FGbxGameModeModuleCheat final
{
public:
	class FName                                   Cheat;                                             // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         events;                                            // 0x0008(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxGameModeModuleCheat;

// ScriptStruct GbxGame.GbxGameModeModuleConfig
// 0x0090 (0x0098 - 0x0008)
struct FGbxGameModeModuleConfig : public FGbxHasStructType
{
public:
	class FName                                   Module;                                            // 0x0008(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGbxInlineStruct                       Scripts;                                           // 0x0010(0x0018)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FGbxGameModeModuleTags                 tags;                                              // 0x0028(0x0020)(Edit, Protected, NativeAccessSpecifierProtected)
	EGbxGameModeModuleLifecycle                   HostLifeCycle;                                     // 0x0048(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FGbxDefPtrProperty_                           StartGameModePhase;                                // 0x0050(0x0018)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	FGbxDefPtrProperty_                           EndGameModePhase;                                  // 0x0068(0x0018)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bCanBeUsed;                                        // 0x0080(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGbxGameModeModuleCheat>        Cheats;                                            // 0x0088(0x0010)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
};
DUMPER7_ASSERTS_FGbxGameModeModuleConfig;

// ScriptStruct GbxGame.GbxGameModeModuleConfig_Basic
// 0x0000 (0x0098 - 0x0098)
struct FGbxGameModeModuleConfig_Basic final : public FGbxGameModeModuleConfig
{
};
DUMPER7_ASSERTS_FGbxGameModeModuleConfig_Basic;

// ScriptStruct GbxGame.GbxUIDisplayDataBaseDef
// 0x0000 (0x0018 - 0x0018)
struct FGbxUIDisplayDataBaseDef : public FGbxDef
{
};
DUMPER7_ASSERTS_FGbxUIDisplayDataBaseDef;

// ScriptStruct GbxGame.DamageModifierData
// 0x0068 (0x0068 - 0x0000)
struct alignas(0x08) FDamageModifierData final
{
public:
	uint8                                         Pad_0[0x8];                                        // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAttributeFloat                     CriticalHitMultiplier;                             // 0x0008(0x000C)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_14[0x54];                                      // 0x0014(0x0054)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FDamageModifierData;

// ScriptStruct GbxGame.InventoryTypeDef
// 0x0498 (0x04C8 - 0x0030)
struct FInventoryTypeDef final : public FGbxSerialNumberAwareDef
{
public:
	uint8                                         Pad_30[0x18];                                      // 0x0030(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ItemBaseName;                                      // 0x0048(0x0010)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	FGbxDefPtrProperty_                           BaseType;                                          // 0x0058(0x0018)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UClass>                   Class;                                             // 0x0070(0x0028)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   slot;                                              // 0x0098(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   PlayerOnlySlot;                                    // 0x00A0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_A8[0x10];                                      // 0x00A8(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxInlineStruct                       ClassData;                                         // 0x00B8(0x0018)(Edit, Transient, DisableEditOnInstance, NoClear, Protected, NativeAccessSpecifierProtected)
	FGbxDefPtrProperty_                           Manufacturer;                                      // 0x00D0(0x0018)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	FGbxDefPtrProperty_                           Rarity;                                            // 0x00E8(0x0018)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	FGbxDefPtrProperty_                           stats;                                             // 0x0100(0x0018)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bInheritBaseUIStats;                               // 0x0118(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<FGbxDefPtrProperty_>                   UIStats;                                           // 0x0120(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	FGbxDefPtrProperty_                           NamingStrategyDef;                                 // 0x0130(0x0018)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bInventoryNameIsFullName;                          // 0x0148(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   InventoryName;                                     // 0x0150(0x0010)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	int32                                         MaxNumPrefixes;                                    // 0x0160(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         MaxNumSuffixes;                                    // 0x0164(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bInheritBasePartLists;                             // 0x0168(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<FGbxDefPtrProperty_>                   PrefixPartList;                                    // 0x0170(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<FGbxDefPtrProperty_>                   TitlePartList;                                     // 0x0180(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<FGbxDefPtrProperty_>                   SuffixPartList;                                    // 0x0190(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UObject>                 Body;                                              // 0x01A0(0x0028)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class FName>                           HiddenBones;                                       // 0x01C8(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint8                                         bThumbnailSceneNameOverride : 1;                   // 0x01D8(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_1D9[0x3];                                      // 0x01D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ThumbnailSceneName;                                // 0x01DC(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1E4[0x4];                                      // 0x01E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           ThumbnailHiddenBones;                              // 0x01E8(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint8                                         bDefaultStackSizeOverride : 1;                     // 0x01F8(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_1F9[0x3];                                      // 0x01F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	uint32                                        DefaultStackSize;                                  // 0x01FC(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         bInventoryStackNameOverride : 1;                   // 0x0200(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_201[0x3];                                      // 0x0201(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   InventoryStackName;                                // 0x0204(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_20C[0x2C];                                     // 0x020C(0x002C)(Fixing Size After Last Property [ Dumper-7 ])
	uint8                                         bInventorySlotCostOverride : 1;                    // 0x0238(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         InventorySlotCost;                                 // 0x0239(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ECriterionCreationMethod                      CriterionMethod;                                   // 0x023A(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_23B[0x5];                                      // 0x023B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CriterionTagDisplayName;                           // 0x0240(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                 CriterionDisplayName;                              // 0x0250(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   TypeCriterionName;                                 // 0x0260(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   CompositionCriterionName;                          // 0x0268(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_270[0x8];                                      // 0x0270(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	uint8                                         bInGlobalPoolOverride : 1;                         // 0x0278(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bInGlobalPool : 1;                                 // 0x0278(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bChildrenInGlobalPool : 1;                         // 0x0278(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	EInventoryPickupInteractionType               PickupInteractionType;                             // 0x0279(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_27A[0x6];                                      // 0x027A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<FGbxDefPtrProperty_>                   PickupConditions;                                  // 0x0280(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	FGbxDefPtrProperty_                           PickupPrompt;                                      // 0x0290(0x0018)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	FGbxDefPtrProperty_                           CantPickupPrompt;                                  // 0x02A8(0x0018)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	FGbxDefPtrProperty_                           PickupUsabilityDef;                                // 0x02C0(0x0018)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGbxAudioEvent                         PickupSound;                                       // 0x02D8(0x0030)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FGbxAudioEvent                         PickupEquipSound;                                  // 0x0308(0x0030)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	FGbxDefPtrProperty_                           PickupImpact;                                      // 0x0338(0x0018)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                               RotationInContainer;                               // 0x0350(0x0018)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                         bRotationInContainerOverride : 1;                  // 0x0368(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bAddToInventoryOverride : 1;                       // 0x0368(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bAddToInventory : 1;                               // 0x0368(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bEquipableOverride : 1;                            // 0x0368(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bEquipable : 1;                                    // 0x0368(0x0001)(BitIndex: 0x04, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bInstanceableOverride : 1;                         // 0x0368(0x0001)(BitIndex: 0x05, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bInstanceable : 1;                                 // 0x0368(0x0001)(BitIndex: 0x06, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bBumpOnPickupFailOverride : 1;                     // 0x0368(0x0001)(BitIndex: 0x07, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bBumpOnPickupFail : 1;                             // 0x0369(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bSharedWithAllPlayersOverride : 1;                 // 0x0369(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bSharedWithAllPlayers : 1;                         // 0x0369(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bSharedPlayersMustBeOnFriendlyTeamOverride : 1;    // 0x0369(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bSharedPlayersMustBeOnFriendlyTeam : 1;            // 0x0369(0x0001)(BitIndex: 0x04, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bSpawnWaterImpactEffectsOverride : 1;              // 0x0369(0x0001)(BitIndex: 0x05, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bSpawnWaterImpactEffects : 1;                      // 0x0369(0x0001)(BitIndex: 0x06, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_36A[0x2];                                      // 0x036A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSToken                                RegistryName;                                      // 0x036C(0x000C)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bOverrideBaseDefPickupMaxDrawDistance;             // 0x0378(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bOverrideDefaultPickupMaxDrawDistance;             // 0x0379(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_37A[0x2];                                      // 0x037A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PickupMaxDrawDistance;                             // 0x037C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_380[0x8];                                      // 0x0380(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         BaseMonetaryValueModifier;                         // 0x0388(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         bMonetaryValueOverride : 1;                        // 0x038C(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bBaseMonetaryValueModifierOverride : 1;            // 0x038C(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bIgnoreShopPriceMarkupOverride : 1;                // 0x038C(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bIgnoreShopPriceMarkup : 1;                        // 0x038C(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bCalculatePriceInShopUsingPlayerAsContextOverride : 1; // 0x038C(0x0001)(BitIndex: 0x04, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bCalculatePriceInShopUsingPlayerAsContext : 1;     // 0x038C(0x0001)(BitIndex: 0x05, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_38D[0x3];                                      // 0x038D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           PartTypes;                                         // 0x0390(0x0010)(Edit, ZeroConstructor, EditConst, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_3A0[0x78];                                     // 0x03A0(0x0078)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGbxInlineStruct>               Aspects;                                           // 0x0418(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UGbxBrainTaskData>       BrainTask;                                         // 0x0428(0x0028)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         bIsDebugBuildableOverride : 1;                     // 0x0450(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bIsDebugBuildable : 1;                             // 0x0450(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_451[0x7];                                      // 0x0451(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 DebugDisplayName;                                  // 0x0458(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         SortValue;                                         // 0x0468(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         bDisableItemCardOverride : 1;                      // 0x046C(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bDisableItemCard : 1;                              // 0x046C(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_46D[0x3];                                      // 0x046D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	FGbxDefPtrProperty_                           params;                                            // 0x0470(0x0018)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	FGbxDefPtrProperty_                           PingFeedback;                                      // 0x0488(0x0018)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                PingOffset;                                        // 0x04A0(0x0018)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         bDefaultContainerOverride : 1;                     // 0x04B8(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_4B9[0x3];                                      // 0x04B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   DefaultContainer;                                  // 0x04BC(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4C4[0x4];                                      // 0x04C4(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FInventoryTypeDef;

// ScriptStruct GbxGame.GbxSkillManagedResourceGroupDef
// 0x0018 (0x0030 - 0x0018)
struct FGbxSkillManagedResourceGroupDef final : public FGbxDef
{
public:
	bool                                          bDestroyOnDetach;                                  // 0x0018(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   AddedEventName;                                    // 0x001C(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                   RemovedEventName;                                  // 0x0024(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxSkillManagedResourceGroupDef;

// ScriptStruct GbxGame.AvatarOptionFeatureDisplaySwitch
// 0x0018 (0x0028 - 0x0010)
struct FAvatarOptionFeatureDisplaySwitch final : public FAvatarOptionFeatureByAspect
{
public:
	bool                                          bOwnerInherit;                                     // 0x0010(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ParameterName;                                     // 0x0014(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RangeLow;                                          // 0x001C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RangeHigh;                                         // 0x0020(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInverted;                                         // 0x0024(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FAvatarOptionFeatureDisplaySwitch;

// ScriptStruct GbxGame.GbxSkillEffect
// 0x0010 (0x0010 - 0x0000)
struct alignas(0x08) FGbxSkillEffect final
{
public:
	uint8                                         Pad_0[0x10];                                       // 0x0000(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxSkillEffect;

// ScriptStruct GbxGame.DamageTypeFilterData
// 0x0020 (0x0020 - 0x0000)
struct FDamageTypeFilterData final
{
public:
	bool                                          bExactType;                                        // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	EDamageFilterExprMode                         FilterMode;                                        // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<FGameDataHandleProperty_>              Filters;                                           // 0x0008(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FGameplayTag                           FilterTag;                                         // 0x0018(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FDamageTypeFilterData;

// ScriptStruct GbxGame.DamageSourceFilterData
// 0x0020 (0x0020 - 0x0000)
struct FDamageSourceFilterData final
{
public:
	bool                                          bExactType;                                        // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	EDamageFilterExprMode                         FilterMode;                                        // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<FGameDataHandleProperty_>              Filters;                                           // 0x0008(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FGameplayTag                           FilterTag;                                         // 0x0018(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FDamageSourceFilterData;

// ScriptStruct GbxGame.DamageTagsFilterData
// 0x0028 (0x0028 - 0x0000)
struct FDamageTagsFilterData final
{
public:
	bool                                          bExactMatch;                                       // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	EDamageFilterExprMode                         FilterMode;                                        // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDamageTags                            tags;                                              // 0x0008(0x0020)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FDamageTagsFilterData;

// ScriptStruct GbxGame.RandomChanceFilterData
// 0x0058 (0x0058 - 0x0000)
struct FRandomChanceFilterData final
{
public:
	bool                                          bUseChance;                                        // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAttributeInit                      Chance;                                            // 0x0008(0x0050)(Edit, NoDestructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FRandomChanceFilterData;

// ScriptStruct GbxGame.DamageModifierDef
// 0x0210 (0x0228 - 0x0018)
struct FDamageModifierDef : public FGbxDef
{
public:
	FGameDataHandleProperty_                      AttackerCondition;                                 // 0x0018(0x0018)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UGbxStatusEffectData>    AttackerStatusEffect;                              // 0x0030(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFilterAttackerStatusEffectByOwner;                // 0x0058(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	EDamageModifierConditionContext               AttackerContext;                                   // 0x005C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      DefenderCondition;                                 // 0x0060(0x0018)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UGbxStatusEffectData>    DefenderStatusEffect;                              // 0x0078(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFilterDefenderStatusEffectByOwner;                // 0x00A0(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	EDamageModifierConditionContext               DefenderContext;                                   // 0x00A4(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOwnerContextEnabled;                              // 0x00A8(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	EDamageModifierConditionContext               OwnerContext;                                      // 0x00AC(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDamageTypeFilterData                  DamageTypeFilter;                                  // 0x00B0(0x0020)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FDamageSourceFilterData                DamageSourceFilter;                                // 0x00D0(0x0020)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FDamageTagsFilterData                  DamageTagsFilter;                                  // 0x00F0(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                          bUseHitDirectionAngle;                             // 0x0118(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAttributeInit                      HitDirectionAngle;                                 // 0x0120(0x0050)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FGbxAttributeInit                      HitDirectionAngleOffset;                           // 0x0170(0x0050)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	EDamageCriticalFilter                         CriticalFilter;                                    // 0x01C0(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAreaDamageFilter                             AreaDamageFilter;                                  // 0x01C1(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C2[0x2];                                      // 0x01C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	EDamageFilterExprMode                         DamageOverTimeFilter;                              // 0x01C4(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRandomChanceFilterData                RandomChanceFilter;                                // 0x01C8(0x0058)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bCanTriggerOnBonusDamage;                          // 0x0220(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAppliesToInstigatorChildren;                      // 0x0221(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPassToChild;                                      // 0x0222(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_223[0x5];                                      // 0x0223(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FDamageModifierDef;

// ScriptStruct GbxGame.DamageModifierCriticalDef
// 0x0058 (0x0280 - 0x0228)
struct FDamageModifierCriticalDef final : public FDamageModifierDef
{
public:
	bool                                          bUseDefaultCriticalHitMultiplier;                  // 0x0228(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRandomChanceModifiesBaseChance;                   // 0x0229(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECriticalHitDamageOverride                    CriticalOverride;                                  // 0x022A(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_22B[0x5];                                      // 0x022B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAttributeInit                      AdditionalCriticalMultiplier;                      // 0x0230(0x0050)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FDamageModifierCriticalDef;

// ScriptStruct GbxGame.PingFeedbackDef
// 0x0130 (0x0148 - 0x0018)
struct FPingFeedbackDef final : public FGbxDef
{
public:
	TSoftObjectPtr<class UTexture2D>              IconTexture;                                       // 0x0018(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   State;                                             // 0x0040(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           DiscoveryType;                                     // 0x0048(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PingDuration;                                      // 0x0060(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAudioEvent                         AudioEvent;                                        // 0x0068(0x0030)(Edit, NativeAccessSpecifierPublic)
	struct FGbxAudioEvent                         ResponseAudioEvent;                                // 0x0098(0x0030)(Edit, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           DialogEvent;                                       // 0x00C8(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDialogEventParameters                 DialogEventParams;                                 // 0x00E0(0x0050)(Edit, NativeAccessSpecifierPublic)
	bool                                          bUseOutline;                                       // 0x0130(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_131[0x3];                                      // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         StencilBitmask;                                    // 0x0134(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           EffectColor;                                       // 0x0138(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FPingFeedbackDef;

// ScriptStruct GbxGame.FeedbackScaleAxis
// 0x0003 (0x0003 - 0x0000)
struct FFeedbackScaleAxis final
{
public:
	bool                                          bScaleOnX;                                         // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bScaleOnY;                                         // 0x0001(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bScaleOnZ;                                         // 0x0002(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FFeedbackScaleAxis;

// ScriptStruct GbxGame.ProjectileFeedbackEffect
// 0x00C8 (0x00C8 - 0x0000)
struct FProjectileFeedbackEffect final
{
public:
	bool                                          bEnableComponentModification;                      // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EProjectileFeedbackBehavior                   ComponentTypeOfFeedback;                           // 0x0001(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bUseWorldScale;                                    // 0x0002(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FFeedbackScaleAxis                     FeedbackAxis;                                      // 0x0003(0x0003)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ProjectileLink_ComponentName;                      // 0x0008(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                   ProjectileLink_MeshMaterialParameterName;          // 0x0010(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGbxFloatCurve                         RatioCurve;                                        // 0x0018(0x00B0)(Edit, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FProjectileFeedbackEffect;

// ScriptStruct GbxGame.GbxSkillDelegateHitActorFilter
// 0x0008 (0x0010 - 0x0008)
struct FGbxSkillDelegateHitActorFilter : public FGbxHasStructType
{
public:
	bool                                          bInvertFilter;                                     // 0x0008(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxSkillDelegateHitActorFilter;

// ScriptStruct GbxGame.GbxSkillDelegateHitActorFilter_HitCharacter
// 0x0008 (0x0018 - 0x0010)
struct FGbxSkillDelegateHitActorFilter_HitCharacter final : public FGbxSkillDelegateHitActorFilter
{
public:
	bool                                          bFilterByAttitude;                                 // 0x0010(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ETeamAttitude                                 AttitudeTowards;                                   // 0x0011(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxSkillDelegateHitActorFilter_HitCharacter;

// ScriptStruct GbxGame.GbxDialogParameterDef
// 0x0008 (0x0020 - 0x0018)
struct FGbxDialogParameterDef final : public FGbxDef
{
public:
	EDialogParameterType                          type;                                              // 0x0018(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bForceDecisionsToAlwaysRetest;                     // 0x0019(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxDialogParameterDef;

// ScriptStruct GbxGame.GbxBrainAspectSettings_Melee
// 0x0000 (0x0080 - 0x0080)
struct FGbxBrainAspectSettings_Melee final : public FGbxBrainAspectSettings
{
};
DUMPER7_ASSERTS_FGbxBrainAspectSettings_Melee;

// ScriptStruct GbxGame.ItemPoolGameDataCategories_DONTUSE
// 0x0001 (0x0001 - 0x0000)
struct FItemPoolGameDataCategories_DONTUSE final
{
public:
	uint8                                         Pad_0[0x1];                                        // 0x0000(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FItemPoolGameDataCategories_DONTUSE;

// ScriptStruct GbxGame.AvatarPartGameData
// 0x0000 (0x0030 - 0x0030)
struct FAvatarPartGameData final : public FAvatarGameDataBase
{
};
DUMPER7_ASSERTS_FAvatarPartGameData;

// ScriptStruct GbxGame.ProjectileHomingTargetData
// 0x0038 (0x0038 - 0x0000)
struct FProjectileHomingTargetData final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneComponent*                        Component;                                         // 0x0008(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   socket;                                            // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Location;                                          // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bTargetIsUntargetable;                             // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FProjectileHomingTargetData;

// ScriptStruct GbxGame.GbxMomentNodeSettings_CinematicMode
// 0x0030 (0x00B0 - 0x0080)
struct FGbxMomentNodeSettings_CinematicMode final : public FGbxMomentNodeSettings
{
public:
	EGbxMomentCinematicModeAction                 Action;                                            // 0x0080(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FGbxDefPtrProperty_                           CinematicMode;                                     // 0x0088(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPopWhenMomentEnds;                                // 0x00A0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   reason;                                            // 0x00A4(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxMomentNodeSettings_CinematicMode;

// ScriptStruct GbxGame.GbxMomentNodeSettings_Start
// 0x0000 (0x0080 - 0x0080)
struct FGbxMomentNodeSettings_Start final : public FGbxMomentNodeSettings
{
};
DUMPER7_ASSERTS_FGbxMomentNodeSettings_Start;

// ScriptStruct GbxGame.GbxDialogEventDef
// 0x0050 (0x0068 - 0x0018)
struct FGbxDialogEventDef final : public FGbxDef
{
public:
	FGbxDefPtrProperty_                           Style;                                             // 0x0018(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OutputDelay;                                       // 0x0030(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ChanceToPlay;                                      // 0x0034(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TriggerDelay;                                      // 0x0038(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FGbxDefPtrProperty_                           QuietTimeDef;                                      // 0x0040(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ELineScorePriorityMode                        ScorePriorityMode;                                 // 0x0058(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Weight;                                            // 0x005C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bForceNoMood;                                      // 0x0060(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bForceNoGesture;                                   // 0x0061(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxDialogEventDef;

// ScriptStruct GbxGame.GbxDialogQuietTimeDef
// 0x0020 (0x0038 - 0x0018)
struct FGbxDialogQuietTimeDef final : public FGbxDef
{
public:
	struct FFloatInterval                         SpeakerCooldownTime;                               // 0x0018(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFloatInterval                         EventCooldownTime;                                 // 0x0020(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFloatInterval                         DialogKindCooldownTime;                            // 0x0028(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGbxDialogQuietTimeScope                      QuietTimeScope;                                    // 0x0030(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxDialogQuietTimeDef;

// ScriptStruct GbxGame.GbxSerialNumberClass
// 0x0028 (0x0028 - 0x0000)
struct alignas(0x08) FGbxSerialNumberClass
{
public:
	uint8                                         Pad_0[0x28];                                       // 0x0000(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxSerialNumberClass;

// ScriptStruct GbxGame.GbxSkillDelegateHitActorFilter_HitWorld
// 0x0000 (0x0010 - 0x0010)
struct FGbxSkillDelegateHitActorFilter_HitWorld final : public FGbxSkillDelegateHitActorFilter
{
};
DUMPER7_ASSERTS_FGbxSkillDelegateHitActorFilter_HitWorld;

// ScriptStruct GbxGame.GbxDialogStyleDef
// 0x0040 (0x0058 - 0x0018)
struct FGbxDialogStyleDef final : public FGbxDef
{
public:
	EGbxDialogSocialStrategy                      SocialStrategy;                                    // 0x0018(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          InterruptSamePriority;                             // 0x0019(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGbxDialogInterruptStrategy                   InterruptStrategy;                                 // 0x001A(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B[0x1];                                       // 0x001B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         priority;                                          // 0x001C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int8                                          SubtitlePriority;                                  // 0x0020(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PatientWaitTime;                                   // 0x0024(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxWaitTime;                                       // 0x0028(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          SpeakableWhenDead;                                 // 0x002C(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          InterruptableByHighPriorityVox;                    // 0x002D(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          PlayableWhenPaused;                                // 0x002E(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          PlayableDuringCinematic;                           // 0x002F(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   Kind;                                              // 0x0030(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsCallout;                                         // 0x0038(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsLocalOnly;                                       // 0x0039(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          StopConversationIfInterrupted;                     // 0x003A(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3B[0x5];                                       // 0x003B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	FGbxDefPtrProperty_                           QuietTimeDef;                                      // 0x0040(0x0018)(Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxDialogStyleDef;

// ScriptStruct GbxGame.ReplicatedDamageRequest
// 0x0040 (0x0050 - 0x0010)
struct FReplicatedDamageRequest final : public FCosmeticReplicationRequest
{
public:
	uint8                                         Pad_10[0x40];                                      // 0x0010(0x0040)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FReplicatedDamageRequest;

// ScriptStruct GbxGame.AvatarParameterExport
// 0x0020 (0x0028 - 0x0008)
struct FAvatarParameterExport final : public FGbxHasStructType
{
public:
	class FName                                   Param;                                             // 0x0008(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   System;                                            // 0x0010(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   target;                                            // 0x0018(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   Name;                                              // 0x0020(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FAvatarParameterExport;

// ScriptStruct GbxGame.AvatarFormDef
// 0x0240 (0x0270 - 0x0030)
struct FAvatarFormDef final : public FGbxSerialNumberAwareDef
{
public:
	uint8                                         Pad_30[0x1];                                       // 0x0030(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bTemplateOnly;                                     // 0x0031(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSet<FGbxDefPtrProperty_>                     Aspects;                                           // 0x0038(0x0050)(Edit, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           FallbackAspect;                                    // 0x0088(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSet<FGbxDefPtrProperty_>                     parts;                                             // 0x00A0(0x0050)(Edit, NativeAccessSpecifierPublic)
	struct FNexusBitSet                           DesignTags;                                        // 0x00F0(0x0020)(Edit, NativeAccessSpecifierPublic)
	struct FNexusBitSet                           OptionRequireTags;                                 // 0x0110(0x0020)(Edit, NativeAccessSpecifierPublic)
	ENexusBitSetOperator                          OptionRequireMode;                                 // 0x0130(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FNexusBitSet                           OptionRejectTags;                                  // 0x0138(0x0020)(Edit, NativeAccessSpecifierPublic)
	ENexusBitSetOperator                          OptionRejectMode;                                  // 0x0158(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FNexusBitSet                           OptionMaskTags;                                    // 0x0160(0x0020)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FAvatarParameterSource>         params;                                            // 0x0180(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_190[0xA0];                                     // 0x0190(0x00A0)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAvatarParameterExport>         Exports;                                           // 0x0230(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           UnlockedBy;                                        // 0x0240(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxInlineStruct                       GameData;                                          // 0x0258(0x0018)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FAvatarFormDef;

// ScriptStruct GbxGame.GbxSkillActionSequenceData_TransitionLink
// 0x0008 (0x0008 - 0x0000)
struct FGbxSkillActionSequenceData_TransitionLink final
{
public:
	EGbxSkillActionSequenceDataExecType           ExecType;                                          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ExecID;                                            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxSkillActionSequenceData_TransitionLink;

// ScriptStruct GbxGame.ImpactAudioEvent
// 0x00B0 (0x00B0 - 0x0000)
struct FImpactAudioEvent final
{
public:
	FGbxDefPtrProperty_                           Event;                                             // 0x0000(0x0018)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           StopEvent;                                         // 0x0018(0x0018)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           TypeSwitch;                                        // 0x0030(0x0018)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           TypeRtpc;                                          // 0x0048(0x0018)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TypeRtpcValue;                                     // 0x0060(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FGbxDefPtrProperty_                           SizeRtpc;                                          // 0x0068(0x0018)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bUsesPhysicalMaterialSwitch : 1;                   // 0x0080(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bHeardOnlyByInstigator : 1;                        // 0x0080(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FGbxDefPtrProperty_                           HardImpactEvent;                                   // 0x0088(0x0018)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        HardImpactHeightTrigger;                           // 0x00A0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A8[0x8];                                       // 0x00A8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FImpactAudioEvent;

// ScriptStruct GbxGame.RigidBodyImpactResponseEffectProperties
// 0x0008 (0x0008 - 0x0000)
struct FRigidBodyImpactResponseEffectProperties final
{
public:
	float                                         MinimumVelocityThreshold;                          // 0x0000(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RefireDelay;                                       // 0x0004(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FRigidBodyImpactResponseEffectProperties;

// ScriptStruct GbxGame.PhysicalImpactResponseEffect
// 0x0040 (0x0040 - 0x0000)
struct FPhysicalImpactResponseEffect final
{
public:
	TSoftObjectPtr<class UPhysicalMaterial>       PhysicalMaterial;                                  // 0x0000(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxInlineStruct                       response;                                          // 0x0028(0x0018)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FPhysicalImpactResponseEffect;

// ScriptStruct GbxGame.ImpactEffectDef
// 0x01F0 (0x0208 - 0x0018)
struct FImpactEffectDef final : public FGbxDef
{
public:
	FGameDataHandleProperty_                      base;                                              // 0x0018(0x0018)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGbxParticleParameter>          ParticleParameters;                                // 0x0030(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FGbxParticleParameter>          DecalParameters;                                   // 0x0040(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FVector2f                              VelocityInputRange;                                // 0x0050(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   VelocityParam;                                     // 0x0058(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOverrideBaseUnconditionalResponse;                // 0x0060(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOverrideBaseDefaultResponse;                      // 0x0061(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOverrideBaseCensoredUnconditionalResponse;        // 0x0062(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOverrideBaseCensoredDefaultResponse;              // 0x0063(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FImpactAudioEvent                      DefaultPhysicalAudioEvent;                         // 0x0068(0x00B0)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	EImpactEffectUsage                            Usage;                                             // 0x0118(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bUseBaseStreamingGroup;                            // 0x0119(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_11A[0x6];                                      // 0x011A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UStreamingEffectsGroup>  streaminggroup;                                    // 0x0120(0x0028)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGbxInlineStruct                       unconditionalresponse;                             // 0x0148(0x0018)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FGbxInlineStruct                       defaultresponse;                                   // 0x0160(0x0018)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FPhysicalImpactResponseEffect>  physicalresponses;                                 // 0x0178(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FGbxInlineStruct                       CensoredUnconditionalResponse;                     // 0x0188(0x0018)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FGbxInlineStruct                       CensoredDefaultResponse;                           // 0x01A0(0x0018)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FPhysicalImpactResponseEffect>  CensoredPhysicalResponses;                         // 0x01B8(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FRigidBodyImpactResponseEffectProperties RigidBodyResponseProperties;                     // 0x01C8(0x0008)(Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                          bUseGlobalRelevance;                               // 0x01D0(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1D1[0x7];                                      // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FGameDataHandleProperty_                      RelevanceData;                                     // 0x01D8(0x0018)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bOverrideBaseProximityLimit;                       // 0x01F0(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bEnableProximityLimit;                             // 0x01F1(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bProximityLimitRadiusOverride;                     // 0x01F2(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1F3[0x1];                                      // 0x01F3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ProximityLimitRadius;                              // 0x01F4(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bOverrideBaseHighPriority;                         // 0x01F8(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bHighPriority;                                     // 0x01F9(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1FA[0xE];                                      // 0x01FA(0x000E)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FImpactEffectDef;

// ScriptStruct GbxGame.GbxDiscoveryDetailedMapSection
// 0x0038 (0x0038 - 0x0000)
struct FGbxDiscoveryDetailedMapSection final
{
public:
	TArray<FGbxDefPtrProperty_>                   AssociatedRegions;                                 // 0x0000(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           ViewableMapData;                                   // 0x0010(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              SwitchOutOutCenter;                                // 0x0028(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxDiscoveryDetailedMapSection;

// ScriptStruct GbxGame.GbxUnlockConditionDataProgressGraph
// 0x0000 (0x0008 - 0x0008)
struct FGbxUnlockConditionDataProgressGraph : public FGbxUnlockConditionData
{
};
DUMPER7_ASSERTS_FGbxUnlockConditionDataProgressGraph;

// ScriptStruct GbxGame.DialogParameterContainer
// 0x0050 (0x0050 - 0x0000)
struct FDialogParameterContainer final
{
public:
	TMap<FGbxDefPtrProperty_, struct FDialogParameterValue> Parameters;                              // 0x0000(0x0050)(Edit, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FDialogParameterContainer;

// ScriptStruct GbxGame.GbxUnlockableGroupRef
// 0x0020 (0x0020 - 0x0000)
struct alignas(0x08) FGbxUnlockableGroupRef final
{
public:
	FGbxDefPtrProperty_                           ProgressGraph;                                     // 0x0000(0x0018)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                   GroupName;                                         // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxUnlockableGroupRef;

// ScriptStruct GbxGame.ImpactResponseEffect
// 0x0208 (0x0210 - 0x0008)
struct FImpactResponseEffect : public FGbxHasStructType
{
public:
	bool                                          bCensored;                                         // 0x0008(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UFXSystemAsset>          Particles;                                         // 0x0010(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGbxParticleParameter>          ParticleParameters;                                // 0x0038(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	uint8                                         Pad_48[0x8];                                       // 0x0048(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             ParticleTransform;                                 // 0x0050(0x0060)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ParticleReferenceSize;                             // 0x00B0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ParticleSizeParam;                                 // 0x00B4(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         BitPad_BC_0 : 1;                                   // 0x00BC(0x0001)(Fixing Bit-Field Size Between Bits [ Dumper-7 ])
	uint8                                         bAttachParticleToHitActor : 1;                     // 0x00BC(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bAttachParticleToHitBone : 1;                      // 0x00BC(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bSnapParticleToHitBone : 1;                        // 0x00BC(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bHideEffectFromHitActor : 1;                       // 0x00BC(0x0001)(BitIndex: 0x04, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bSpawnAtImpactPoint : 1;                           // 0x00BC(0x0001)(BitIndex: 0x05, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_BD[0x3];                                       // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class UMaterialInterface>> DecalMaterials;                                 // 0x00C0(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	struct FVector2D                              DecalSize;                                         // 0x00D0(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DecalThickness;                                    // 0x00E0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FadeScreenSize;                                    // 0x00E4(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DecalMinScale;                                     // 0x00E8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DecalMaxScale;                                     // 0x00EC(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DecalRandomRotationLimit;                          // 0x00F0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DecalLifetime;                                     // 0x00F4(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DecalFadeDuration;                                 // 0x00F8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bNoOverlapDecal : 1;                               // 0x00FC(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bAttachDecalToHitActor : 1;                        // 0x00FC(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bDecalRandomRotation : 1;                          // 0x00FC(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_FD[0x3];                                       // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   NoOverlapDecalGroupName;                           // 0x0100(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bOverrideDefaultAudioEvent : 1;                    // 0x0108(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FImpactAudioEvent                      AudioEvent;                                        // 0x0110(0x00B0)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	uint8                                         bPlayFeedbackOnHitActor : 1;                       // 0x01C0(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_1C1[0x7];                                      // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FGameDataHandleProperty_                      HitFeedback;                                       // 0x01C8(0x0018)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         HitFeedbackFlags;                                  // 0x01E0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1E4[0x4];                                      // 0x01E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FGameDataHandleProperty_                      AreaFeedback;                                      // 0x01E8(0x0018)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         AreaFeedbackFlags;                                 // 0x0200(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AreaFeedbackDistance;                              // 0x0204(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AreaFeedbackFalloffPercent;                        // 0x0208(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_20C[0x4];                                      // 0x020C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FImpactResponseEffect;

// ScriptStruct GbxGame.GbxBrainAspect_Melee
// 0x0010 (0x00E8 - 0x00D8)
struct FGbxBrainAspect_Melee final : public FGbxBrainAspect
{
public:
	uint8                                         Pad_D8[0x10];                                      // 0x00D8(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainAspect_Melee;

// ScriptStruct GbxGame.CameraModeBehavior_AbsoluteOffset
// 0x0018 (0x0030 - 0x0018)
struct FCameraModeBehavior_AbsoluteOffset : public FCameraModeBehavior
{
public:
	struct FVector                                LocationOffset;                                    // 0x0018(0x0018)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
};
DUMPER7_ASSERTS_FCameraModeBehavior_AbsoluteOffset;

// ScriptStruct GbxGame.GbxDiscoveryMarkOnMapItem
// 0x0068 (0x0068 - 0x0000)
struct FGbxDiscoveryMarkOnMapItem final
{
public:
	struct FFactsSystemActorReference             ActorFactAddress;                                  // 0x0000(0x0030)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FFactAddress                           MarkedFact;                                        // 0x0030(0x0038)(Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxDiscoveryMarkOnMapItem;

// ScriptStruct GbxGame.GbxSerialNumberCustomParams
// 0x0000 (0x0008 - 0x0008)
struct FGbxSerialNumberCustomParams : public FGbxHasStructType
{
};
DUMPER7_ASSERTS_FGbxSerialNumberCustomParams;

// ScriptStruct GbxGame.AvatarSerialNumberRequirements
// 0x0018 (0x0020 - 0x0008)
struct FAvatarSerialNumberRequirements final : public FGbxSerialNumberCustomParams
{
public:
	uint8                                         Pad_8[0x18];                                       // 0x0008(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FAvatarSerialNumberRequirements;

// ScriptStruct GbxGame.GbxFlyToActorConfigDef
// 0x00C8 (0x00E0 - 0x0018)
struct FGbxFlyToActorConfigDef final : public FGbxDef
{
public:
	struct FFloatRange                            DurationRange;                                     // 0x0018(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FlyToSocketSpeed;                                  // 0x0028(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRuntimeFloatCurve                     SpeedCurve;                                        // 0x0030(0x0088)(Edit, NativeAccessSpecifierPublic)
	float                                         PickupTimeout;                                     // 0x00B8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bWarnIfFlightTimedOut;                             // 0x00BC(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_BD[0x3];                                       // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   FlyingActorLinkSocket;                             // 0x00C0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   FlyingComponentTag;                                // 0x00C8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDisableCollisionOnEntireActor;                    // 0x00D0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   TargetSocket;                                      // 0x00D4(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxFlyToActorConfigDef;

// ScriptStruct GbxGame.GbxUnlockConditionData_NodeActivated
// 0x0010 (0x0018 - 0x0008)
struct FGbxUnlockConditionData_NodeActivated final : public FGbxUnlockConditionDataProgressGraph
{
public:
	class FName                                   NodeRefName;                                       // 0x0008(0x0008)(Edit, ZeroConstructor, NoClear, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bInvert;                                           // 0x0010(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxUnlockConditionData_NodeActivated;

// ScriptStruct GbxGame.AvatarMaterialSlot
// 0x00A0 (0x00A8 - 0x0008)
struct FAvatarMaterialSlot final : public FGbxHasStructType
{
public:
	class FName                                   Name;                                              // 0x0008(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterialInterface>      Material;                                          // 0x0010(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   MaterialParam;                                     // 0x0038(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           MaterialDriver;                                    // 0x0040(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FName, class FName>                paramremaps;                                       // 0x0058(0x0050)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FAvatarMaterialSlot;

// ScriptStruct GbxGame.AvatarOptionFeatureMaterials
// 0x0010 (0x0020 - 0x0010)
struct FAvatarOptionFeatureMaterials final : public FAvatarOptionFeatureByAspect
{
public:
	TArray<struct FAvatarMaterialSlot>            materials;                                         // 0x0010(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FAvatarOptionFeatureMaterials;

// ScriptStruct GbxGame.GbxGameModeModuleConfig_Timer_Event
// 0x0014 (0x0014 - 0x0000)
struct FGbxGameModeModuleConfig_Timer_Event final
{
public:
	class FName                                   Event;                                             // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGbxGameModeModuleConfig_Timer_Event          type;                                              // 0x0008(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         time;                                              // 0x000C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsPercentage;                                     // 0x0010(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxGameModeModuleConfig_Timer_Event;

// ScriptStruct GbxGame.GbxGameModeModuleConfig_Timer
// 0x0038 (0x00D0 - 0x0098)
struct FGbxGameModeModuleConfig_Timer final : public FGbxGameModeModuleConfig
{
public:
	int32                                         TimeLimit;                                         // 0x0098(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGbxGameModeModuleConfig_Timer_Event> TimeEvents;                                  // 0x00A0(0x0010)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	bool                                          bAutoDisableOnTimerEnd;                            // 0x00B0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FGbxDefPtrProperty_                           GameModePhaseOnTimerEnd;                           // 0x00B8(0x0018)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
};
DUMPER7_ASSERTS_FGbxGameModeModuleConfig_Timer;

// ScriptStruct GbxGame.GbxSkillActionExecResults
// 0x0050 (0x0050 - 0x0000)
struct FGbxSkillActionExecResults final
{
public:
	TMap<class FName, struct FGbxParam>           Results;                                           // 0x0000(0x0050)(NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxSkillActionExecResults;

// ScriptStruct GbxGame.AvatarOptionGameData
// 0x0000 (0x0030 - 0x0030)
struct FAvatarOptionGameData final : public FAvatarGameDataBase
{
};
DUMPER7_ASSERTS_FAvatarOptionGameData;

// ScriptStruct GbxGame.GbxSkillActionState
// 0x0000 (0x0008 - 0x0008)
struct FGbxSkillActionState : public FGbxHasStructType
{
};
DUMPER7_ASSERTS_FGbxSkillActionState;

// ScriptStruct GbxGame.GbxSkillActionState_ControlledMove
// 0x0030 (0x0038 - 0x0008)
struct FGbxSkillActionState_ControlledMove final : public FGbxSkillActionState
{
public:
	uint8                                         Pad_8[0x30];                                       // 0x0008(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxSkillActionState_ControlledMove;

// ScriptStruct GbxGame.AvatarOptionFeatureForwardDynamics
// 0x01E8 (0x01F8 - 0x0010)
struct FAvatarOptionFeatureForwardDynamics final : public FAvatarOptionFeatureByAspect
{
public:
	struct FGameplayTag                           TargetTag;                                         // 0x0010(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FForwardDynamicsSettings               settings;                                          // 0x0018(0x01E0)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FAvatarOptionFeatureForwardDynamics;

// ScriptStruct GbxGame.IncomingDamageAudioData
// 0x0088 (0x0088 - 0x0000)
struct alignas(0x08) FIncomingDamageAudioData final
{
public:
	bool                                          bLooping;                                          // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MinimumLoopTime;                                   // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LoopFadeTime;                                      // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FGbxDefPtrProperty_                           HealthAudioEvent;                                  // 0x0010(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           ShieldAudioEvent;                                  // 0x0028(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           OvershieldAudioEvent;                              // 0x0040(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           ArmorAudioEvent;                                   // 0x0058(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           WeaponShieldAudioEvent;                            // 0x0070(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FIncomingDamageAudioData;

// ScriptStruct GbxGame.IncomingDamagePresentationDataDef
// 0x0210 (0x0210 - 0x0000)
struct FIncomingDamagePresentationDataDef final
{
public:
	struct FGbxAttributeInit                      DamageThreshold;                                   // 0x0000(0x0050)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FGbxAttributeInit                      DamageScore;                                       // 0x0050(0x0050)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FGbxAttributeInit                      DamageScoreThreshold;                              // 0x00A0(0x0050)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      FeedbackDef;                                       // 0x00F0(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         FeedbackFlags;                                     // 0x0108(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FIncomingDamageAudioData               AudioData;                                         // 0x0110(0x0088)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           HealthAudioEvent;                                  // 0x0198(0x0018)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           ShieldAudioEvent;                                  // 0x01B0(0x0018)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           ArmorAudioEvent;                                   // 0x01C8(0x0018)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DamageSeverityParticleParamValue;                  // 0x01E0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ArmsAnimationFlinchStrength;                       // 0x01E4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPlayScreenParticle;                               // 0x01E8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseRadialBlur;                                    // 0x01E9(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1EA[0x6];                                      // 0x01EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	FGameDataHandleProperty_                      RadialBlur;                                        // 0x01F0(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PerInstigatorDamageAudioRateLimit;                 // 0x0208(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_20C[0x4];                                      // 0x020C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FIncomingDamagePresentationDataDef;

// ScriptStruct GbxGame.IncomingDamagePresentationGroupDef
// 0x0848 (0x0848 - 0x0000)
struct FIncomingDamagePresentationGroupDef final
{
public:
	uint8                                         Pad_0[0x8];                                        // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FIncomingDamagePresentationDataDef     PresentationLevels[0x4];                           // 0x0008(0x0210)(Edit, NoDestructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FIncomingDamagePresentationGroupDef;

// ScriptStruct GbxGame.IncomingDamagePresentationSourceDef
// 0x0858 (0x0858 - 0x0000)
struct FIncomingDamagePresentationSourceDef final
{
public:
	TArray<FGameDataHandleProperty_>              DamageSources;                                     // 0x0000(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FIncomingDamagePresentationGroupDef    PresentationGroup;                                 // 0x0010(0x0848)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FIncomingDamagePresentationSourceDef;

// ScriptStruct GbxGame.ManufacturerDef
// 0x00E8 (0x0100 - 0x0018)
struct FManufacturerDef final : public FGbxDef
{
public:
	struct FGbxAttributeInit                      mingamestage;                                      // 0x0018(0x0050)(Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FGbxAttributeInit                      aimingamestage;                                    // 0x0068(0x0050)(Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class FText                                   DisplayName;                                       // 0x00B8(0x0010)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class FText                                   Description;                                       // 0x00C8(0x0010)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	int32                                         SortValue;                                         // 0x00D8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Identifier;                                        // 0x00E0(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_F0[0x10];                                      // 0x00F0(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FManufacturerDef;

// ScriptStruct GbxGame.GbxActorAvatarInstanceData
// 0x0058 (0x0070 - 0x0018)
struct FGbxActorAvatarInstanceData final : public FGbxActorInstanceData
{
public:
	uint8                                         Pad_18[0x58];                                      // 0x0018(0x0058)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxActorAvatarInstanceData;

// ScriptStruct GbxGame.GbxSkillComponentData_DelegateData
// 0x0000 (0x0008 - 0x0008)
struct FGbxSkillComponentData_DelegateData : public FGbxHasStructType
{
};
DUMPER7_ASSERTS_FGbxSkillComponentData_DelegateData;

// ScriptStruct GbxGame.GbxBrainAspectTeleportSettings
// 0x0098 (0x0098 - 0x0000)
struct FGbxBrainAspectTeleportSettings final
{
public:
	ETeleportGround                               TraceToGround;                                     // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bClearVelocity;                                    // 0x0004(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	ETeleportTravel                               TravelType;                                        // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              TravelTime;                                        // 0x0010(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              CustomTravelSpeed;                                 // 0x0048(0x0038)(Edit, NativeAccessSpecifierPublic)
	bool                                          bHideDuringTravel;                                 // 0x0080(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAlwaysFinishTravel;                               // 0x0081(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCanBeInterrupted;                                 // 0x0082(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCanStartIfAlreadyAtGoal;                          // 0x0083(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseTeleportTrick;                                 // 0x0084(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UGbxTrick_Teleport*                     TeleportTrick;                                     // 0x0088(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUpdateGoalDuringTravelStart;                      // 0x0090(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainAspectTeleportSettings;

// ScriptStruct GbxGame.GbxSkillStateConditionData_SkillParam_IsDefault
// 0x0028 (0x0038 - 0x0010)
struct FGbxSkillStateConditionData_SkillParam_IsDefault final : public FGbxSkillStateConditionData
{
public:
	TSoftObjectPtr<class UGbxSkillParamData>      ParamData;                                         // 0x0010(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxSkillStateConditionData_SkillParam_IsDefault;

// ScriptStruct GbxGame.HazardInteractionTransitionData
// 0x0040 (0x0040 - 0x0000)
struct alignas(0x08) FHazardInteractionTransitionData final
{
public:
	FGameDataHandleProperty_                      SourceState;                                       // 0x0000(0x0018)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      TargetState;                                       // 0x0018(0x0018)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TransitionTime;                                    // 0x0030(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DamageTriggeredTransitionTime;                     // 0x0034(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_38[0x8];                                       // 0x0038(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FHazardInteractionTransitionData;

// ScriptStruct GbxGame.MissionSubAliasInfo
// 0x0018 (0x0018 - 0x0000)
struct FMissionSubAliasInfo final
{
public:
	struct FGbxInlineStruct                       data;                                              // 0x0000(0x0018)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FMissionSubAliasInfo;

// ScriptStruct GbxGame.FactChangeValue
// 0x0030 (0x0030 - 0x0000)
struct alignas(0x08) FFactChangeValue final
{
public:
	EFactChangeValueType                          type;                                              // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   NameValue;                                         // 0x0004(0x0008)(Edit, ZeroConstructor, NoClear, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FGameDataHandleProperty_                      GbxDefValue;                                       // 0x0010(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FFactChangeValue;

// ScriptStruct GbxGame.ContingentFactChange
// 0x0040 (0x0040 - 0x0000)
struct FContingentFactChange final
{
public:
	struct FSToken                                Fact;                                              // 0x0000(0x000C)(Edit, NoClear, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFactChangeValue                       Value;                                             // 0x0010(0x0030)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FContingentFactChange;

// ScriptStruct GbxGame.MissionGraphAliasTypeData
// 0x0000 (0x0008 - 0x0008)
struct FMissionGraphAliasTypeData : public FGbxHasStructType
{
};
DUMPER7_ASSERTS_FMissionGraphAliasTypeData;

// ScriptStruct GbxGame.MissionGraphAliasTypeData_FactBase
// 0x0010 (0x0018 - 0x0008)
struct FMissionGraphAliasTypeData_FactBase : public FMissionGraphAliasTypeData
{
public:
	TArray<struct FContingentFactChange>          EndStates;                                         // 0x0008(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FMissionGraphAliasTypeData_FactBase;

// ScriptStruct GbxGame.MissionGraphAliasTypeData_FactsActor
// 0x0040 (0x0058 - 0x0018)
struct FMissionGraphAliasTypeData_FactsActor final : public FMissionGraphAliasTypeData_FactBase
{
public:
	struct FFactsSystemActorReference             Actor;                                             // 0x0018(0x0030)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FMissionSubAliasInfo>           SubAliases;                                        // 0x0048(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FMissionGraphAliasTypeData_FactsActor;

// ScriptStruct GbxGame.GbxAnimNode_Rotation_Head
// 0x0068 (0x0138 - 0x00D0)
struct FGbxAnimNode_Rotation_Head final : public FAnimNode_SkeletalControlBase
{
public:
	uint8                                         Pad_D0[0x68];                                      // 0x00D0(0x0068)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxAnimNode_Rotation_Head;

// ScriptStruct GbxGame.UsabilityPromptDef
// 0x0020 (0x0038 - 0x0018)
struct FUsabilityPromptDef final : public FGbxDef
{
public:
	class FText                                   PromptText;                                        // 0x0018(0x0010)(Edit, NativeAccessSpecifierPublic)
	struct FGameplayTag                           InputGlyphOverride;                                // 0x0028(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsLockedPrompt;                                   // 0x0030(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FUsabilityPromptDef;

// ScriptStruct GbxGame.InventoryNamePartDef
// 0x00A8 (0x00C0 - 0x0018)
struct FInventoryNamePartDef final : public FGbxDef
{
public:
	class FText                                   PartName;                                          // 0x0018(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                         priority;                                          // 0x0028(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         mingamestage;                                      // 0x002C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxGameStage;                                      // 0x0030(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInventoryTags                         RequiredBaseTags;                                  // 0x0038(0x0020)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FInventoryTags                         ExcludedBaseTags;                                  // 0x0058(0x0020)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           MinRarity;                                         // 0x0078(0x0018)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           MaxRarity;                                         // 0x0090(0x0018)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           RequiredManufacturer;                              // 0x00A8(0x0018)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FInventoryNamePartDef;

// ScriptStruct GbxGame.InventoryNamingStrategy
// 0x0000 (0x0008 - 0x0008)
struct FInventoryNamingStrategy : public FGbxHasStructType
{
};
DUMPER7_ASSERTS_FInventoryNamingStrategy;

// ScriptStruct GbxGame.GbxAINodeStanceData
// 0x0018 (0x0018 - 0x0000)
struct alignas(0x08) FGbxAINodeStanceData
{
public:
	uint8                                         Pad_0[0x8];                                        // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	EGbxAINodeStanceRestriction                   Restriction;                                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           TaskTag;                                           // 0x000C(0x0008)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxAINodeStanceData;

// ScriptStruct GbxGame.UIStatDisplayGroupDef
// 0x0008 (0x0020 - 0x0018)
struct FUIStatDisplayGroupDef final : public FGbxDef
{
public:
	EUIStatGroupOrder                             order;                                             // 0x0018(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FUIStatDisplayGroupDef;

// ScriptStruct GbxGame.GbxStatusEffectNotifyEventData
// 0x0028 (0x0030 - 0x0008)
struct FGbxStatusEffectNotifyEventData : public FGbxHasStructType
{
public:
	class FName                                   DefaultEventName;                                  // 0x0008(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                 DisplayName;                                       // 0x0010(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGuid                                  EventID;                                           // 0x0020(0x0010)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxStatusEffectNotifyEventData;

// ScriptStruct GbxGame.GbxDecoCharacterBodySettings
// 0x0008 (0x0230 - 0x0228)
struct FGbxDecoCharacterBodySettings : public FInteractiveObjectBodySettings
{
public:
	class UFaceFXActor*                           FaceFXActor;                                       // 0x0228(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxDecoCharacterBodySettings;

// ScriptStruct GbxGame.InventoryStatTags
// 0x0000 (0x0020 - 0x0020)
struct FInventoryStatTags final : public FNexusBitSet
{
};
DUMPER7_ASSERTS_FInventoryStatTags;

// ScriptStruct GbxGame.InventoryStatCategoryData
// 0x0030 (0x0030 - 0x0000)
struct FInventoryStatCategoryData final
{
public:
	class FName                                   Category;                                          // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        DisplayGroup;                                      // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInventoryStatTags                     stats;                                             // 0x0010(0x0020)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FInventoryStatCategoryData;

// ScriptStruct GbxGame.InventoryStatAttributeData
// 0x0040 (0x0040 - 0x0000)
struct alignas(0x08) FInventoryStatAttributeData final
{
public:
	class FName                                   attribute;                                         // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   stat;                                              // 0x0008(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           definition;                                        // 0x0010(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_28[0x4];                                       // 0x0028(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	EInventoryStatsRoundingMode                   RoundingMode;                                      // 0x002C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGbxAttributeModifierType                     ModifierType;                                      // 0x002D(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bZeroIsBetter;                                     // 0x002E(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPositiveLimitSet;                                 // 0x002F(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNegativeLimitSet;                                 // 0x0030(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0xF];                                       // 0x0031(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FInventoryStatAttributeData;

// ScriptStruct GbxGame.InventoryStatsDef
// 0x0080 (0x0098 - 0x0018)
struct FInventoryStatsDef : public FGbxDef
{
public:
	TArray<struct FInventoryStatCategoryData>     Categories;                                        // 0x0018(0x0010)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FInventoryStatAttributeData>    Attributes;                                        // 0x0028(0x0010)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_38[0x60];                                      // 0x0038(0x0060)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FInventoryStatsDef;

// ScriptStruct GbxGame.GbxSkillSharedResource
// 0x0020 (0x0028 - 0x0008)
struct FGbxSkillSharedResource : public FGbxHasStructType
{
public:
	uint8                                         Pad_8[0x20];                                       // 0x0008(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxSkillSharedResource;

// ScriptStruct GbxGame.InventoryDialogAspect
// 0x0050 (0x0080 - 0x0030)
struct FInventoryDialogAspect : public FInventoryAspect
{
public:
	FGbxDefPtrProperty_                           DialogNameTag;                                     // 0x0030(0x0018)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	FGameDataHandleProperty_                      AudioProviderDef;                                  // 0x0048(0x0018)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	FGbxDefPtrProperty_                           DialogIdleEvent;                                   // 0x0060(0x0018)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         IdleEventSecondsTrigger;                           // 0x0078(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FInventoryDialogAspect;

// ScriptStruct GbxGame.GoreDamageInfo
// 0x0150 (0x0150 - 0x0000)
struct FGoreDamageInfo final
{
public:
	struct FVector                                HitLocation;                                       // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                HitDirection;                                      // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                HitForce;                                          // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DamageSeverity;                                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             HitResult;                                         // 0x0050(0x0100)(IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGoreDamageInfo;

// ScriptStruct GbxGame.GoreStateData
// 0x0160 (0x0160 - 0x0000)
struct FGoreStateData final
{
public:
	int32                                         GoreRegionStateIndex;                              // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        GoreId;                                            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGoreType                                     GoreType;                                          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bTriggerAudioImpactEffects;                        // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGoreDamageInfo                        GoreDamageInfo;                                    // 0x0010(0x0150)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGoreStateData;

// ScriptStruct GbxGame.GoreState
// 0x0490 (0x0498 - 0x0008)
struct FGoreState : public FGbxHasStructType
{
public:
	uint8                                         Pad_8[0x18];                                       // 0x0008(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	class AGbxCharacter*                          owner;                                             // 0x0020(0x0008)(ZeroConstructor, Transient, RepSkip, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_28[0x150];                                     // 0x0028(0x0150)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGoreStateData                         CachedGoreStateData;                               // 0x0178(0x0160)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	EGoreFlags                                    EnabledGoreFlags;                                  // 0x02D8(0x0004)(ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2DC[0x14];                                     // 0x02DC(0x0014)(Fixing Size After Last Property [ Dumper-7 ])
	FGbxDefPtrProperty_                           CachedDamageEffectsDef;                            // 0x02F0(0x0018)(Transient, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EGoreModifiers                                GoreModifiers;                                     // 0x0308(0x0001)(ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_309[0x3F];                                     // 0x0309(0x003F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGoreDamageInfo                        PrevGoreDamageInfo;                                // 0x0348(0x0150)(Transient, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGoreState;

// ScriptStruct GbxGame.GbxBodyState
// 0x00F0 (0x0220 - 0x0130)
struct alignas(0x10) FGbxBodyState : public FGbxGraphState
{
public:
	uint8                                         Pad_130[0x30];                                     // 0x0130(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UGbxActorStateSequencePlayer*>   ActorStateSequencePlayers;                         // 0x0160(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPrivate)
	uint8                                         Pad_170[0xA0];                                     // 0x0170(0x00A0)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UGbxAttachableBodyData*>         BodyParts;                                         // 0x0210(0x0010)(ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxBodyState;

// ScriptStruct GbxGame.InteractiveObjectBodyState
// 0x0000 (0x0220 - 0x0220)
struct FInteractiveObjectBodyState : public FGbxBodyState
{
};
DUMPER7_ASSERTS_FInteractiveObjectBodyState;

// ScriptStruct GbxGame.ClimbableBodyState
// 0x0000 (0x0220 - 0x0220)
struct FClimbableBodyState final : public FInteractiveObjectBodyState
{
};
DUMPER7_ASSERTS_FClimbableBodyState;

// ScriptStruct GbxGame.GbxLevelRoadSegmentDefKey
// 0x000C (0x000C - 0x0000)
struct FGbxLevelRoadSegmentDefKey final
{
public:
	class FName                                   Name;                                              // 0x0000(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Index;                                             // 0x0008(0x0004)(Edit, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxLevelRoadSegmentDefKey;

// ScriptStruct GbxGame.GbxLevelRoadControlPointDefKey
// 0x000C (0x000C - 0x0000)
struct FGbxLevelRoadControlPointDefKey final
{
public:
	class FName                                   Name;                                              // 0x0000(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Index;                                             // 0x0008(0x0004)(Edit, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxLevelRoadControlPointDefKey;

// ScriptStruct GbxGame.GbxLevelRoadRef
// 0x0030 (0x0030 - 0x0000)
struct alignas(0x08) FGbxLevelRoadRef final
{
public:
	FGbxDefPtrProperty_                           Road;                                              // 0x0000(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxLevelRoadSegmentDefKey             Segment;                                           // 0x0018(0x000C)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FGbxLevelRoadControlPointDefKey        ControlPoint;                                      // 0x0024(0x000C)(Edit, NoDestructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxLevelRoadRef;

// ScriptStruct GbxGame.GbxLevelRoadConnectorDef
// 0x0010 (0x0028 - 0x0018)
struct FGbxLevelRoadConnectorDef final : public FGbxDef
{
public:
	TArray<struct FGbxLevelRoadRef>               ConnectedRoads;                                    // 0x0018(0x0010)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxLevelRoadConnectorDef;

// ScriptStruct GbxGame.ObjectiveStatesData
// 0x0248 (0x0248 - 0x0000)
struct FObjectiveStatesData
{
public:
	uint8                                         Pad_0[0x8];                                        // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMissionActionSequenceDef              setup;                                             // 0x0008(0x0028)(NativeAccessSpecifierPublic)
	struct FMissionActionSequenceDef              MissionPreKickoff;                                 // 0x0030(0x0028)(NativeAccessSpecifierPublic)
	struct FMissionActionSequenceDef              Reset;                                             // 0x0058(0x0028)(NativeAccessSpecifierPublic)
	struct FMissionLatentPhaseDef                 kickoff;                                           // 0x0080(0x0030)(NativeAccessSpecifierPublic)
	struct FMissionLatentPhaseDef                 Start;                                             // 0x00B0(0x0030)(NativeAccessSpecifierPublic)
	struct FMissionLatentPhaseDef                 failure;                                           // 0x00E0(0x0030)(NativeAccessSpecifierPublic)
	struct FMissionLatentPhaseDef                 deactivate;                                        // 0x0110(0x0030)(NativeAccessSpecifierPublic)
	struct FMissionLatentPhaseDef                 success;                                           // 0x0140(0x0030)(NativeAccessSpecifierPublic)
	struct FMissionLatentPhaseDef                 finish;                                            // 0x0170(0x0030)(NativeAccessSpecifierPublic)
	struct FMissionLatentPhaseDef                 postfinish;                                        // 0x01A0(0x0030)(NativeAccessSpecifierPublic)
	struct FMissionActionSequenceDef              dormant;                                           // 0x01D0(0x0028)(NativeAccessSpecifierPublic)
	struct FMissionActionSequenceDef              undormant;                                         // 0x01F8(0x0028)(NativeAccessSpecifierPublic)
	struct FMissionActionSequenceDef              missioncompleted;                                  // 0x0220(0x0028)(NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FObjectiveStatesData;

// ScriptStruct GbxGame.GbxSkillComponentActivationStrategy
// 0x0000 (0x0008 - 0x0008)
struct FGbxSkillComponentActivationStrategy : public FGbxHasStructType
{
};
DUMPER7_ASSERTS_FGbxSkillComponentActivationStrategy;

// ScriptStruct GbxGame.ClimbableBodySettings
// 0x0148 (0x0370 - 0x0228)
struct FClimbableBodySettings final : public FInteractiveObjectBodySettings
{
public:
	uint8                                         bIsRootAtBottom : 1;                               // 0x0228(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_229[0x7];                                      // 0x0229(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            SegmentMesh;                                       // 0x0230(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UMaterialInterface*>             SegmentMeshMaterialOverrides;                      // 0x0238(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	class UStaticMesh*                            TopMesh;                                           // 0x0248(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<ETopEdgeBehavior, class UStaticMesh*>    TopMeshByEdgeBehavior;                             // 0x0250(0x0050)(Edit, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class UMaterialInterface*>             TopMeshMaterialOverrides;                          // 0x02A0(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	class UStaticMesh*                            BottomMesh;                                        // 0x02B0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UMaterialInterface*>             BottomMeshMaterialOverrides;                       // 0x02B8(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	float                                         SegmentHeight;                                     // 0x02C8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SegmentWidth;                                      // 0x02CC(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                SegmentOffset;                                     // 0x02D0(0x0018)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SegmentRotation;                                   // 0x02E8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2EC[0x4];                                      // 0x02EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                TopOffset;                                         // 0x02F0(0x0018)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TopRotation;                                       // 0x0308(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_30C[0x4];                                      // 0x030C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                BottomOffset;                                      // 0x0310(0x0018)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BottomRotation;                                    // 0x0328(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         VolumeDepth;                                       // 0x032C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         VolumeWidth;                                       // 0x0330(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         VolumeExtraTopHeight;                              // 0x0334(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         VolumeExtraBottomHeight;                           // 0x0338(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TopVolumeDepth;                                    // 0x033C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                VolumeOffset;                                      // 0x0340(0x0018)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CharacterOffset;                                   // 0x0358(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bAllowHorizontalMovement : 1;                      // 0x035C(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bIsOrdoniteClimbingWall : 1;                       // 0x035C(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_35D[0x3];                                      // 0x035D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CurveAngle;                                        // 0x0360(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CurveRadius;                                       // 0x0364(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CurveSegments;                                     // 0x0368(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36C[0x4];                                      // 0x036C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FClimbableBodySettings;

// ScriptStruct GbxGame.GbxLevelRoadConnectionDef
// 0x0008 (0x0008 - 0x0000)
struct FGbxLevelRoadConnectionDef final
{
public:
	int32                                         SegmentIndex;                                      // 0x0000(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ConnectionIndex;                                   // 0x0004(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxLevelRoadConnectionDef;

// ScriptStruct GbxGame.GbxLevelRoadControlPointDef
// 0x0050 (0x0050 - 0x0000)
struct FGbxLevelRoadControlPointDef final
{
public:
	class FName                                   Name;                                              // 0x0000(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGbxLevelRoadConnectionDef>     Connections;                                       // 0x0008(0x0010)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	struct FVector                                Location;                                          // 0x0018(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               Rotation;                                          // 0x0030(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                         Width;                                             // 0x0048(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxLevelRoadControlPointDef;

// ScriptStruct GbxGame.VariantDetailsCommonProp_Int8
// 0x0001 (0x0001 - 0x0000)
struct FVariantDetailsCommonProp_Int8 final
{
public:
	int8                                          Int8Value;                                         // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FVariantDetailsCommonProp_Int8;

// ScriptStruct GbxGame.GbxSkillComponent_Input
// 0x0010 (0x0068 - 0x0058)
struct FGbxSkillComponent_Input final : public FGbxSkillComponent_Activatable
{
public:
	uint8                                         Pad_58[0x10];                                      // 0x0058(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxSkillComponent_Input;

// ScriptStruct GbxGame.InventoryTypeClassData
// 0x0000 (0x0008 - 0x0008)
struct FInventoryTypeClassData : public FGbxHasStructType
{
};
DUMPER7_ASSERTS_FInventoryTypeClassData;

// ScriptStruct GbxGame.CineInventoryActorInstanceData
// 0x00F0 (0x0108 - 0x0018)
struct FCineInventoryActorInstanceData final : public FGbxActorInstanceData
{
public:
	uint8                                         Pad_18[0xF0];                                      // 0x0018(0x00F0)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FCineInventoryActorInstanceData;

// ScriptStruct GbxGame.RefreshActorState
// 0x0050 (0x0050 - 0x0000)
struct FRefreshActorState final
{
public:
	TMulticastInlineDelegate<void()>              OnRefreshed;                                       // 0x0000(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                          bIsConsumed;                                       // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x27];                                      // 0x0011(0x0027)(Fixing Size After Last Property [ Dumper-7 ])
	uint8                                         channel;                                           // 0x0038(0x0001)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TimerCost;                                         // 0x003C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         BudgetCost;                                        // 0x0040(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AActor>                  owner;                                             // 0x0044(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FRefreshActorState;

// ScriptStruct GbxGame.DamageArea_Sphere
// 0x0000 (0x00A0 - 0x00A0)
struct FDamageArea_Sphere final : public FDamageArea_BaseRound
{
};
DUMPER7_ASSERTS_FDamageArea_Sphere;

// ScriptStruct GbxGame.GbxMomentNodeState_PlaySequence
// 0x0128 (0x0198 - 0x0070)
struct FGbxMomentNodeState_PlaySequence : public FGbxMomentNodeState
{
public:
	uint8                                         Pad_70[0x128];                                     // 0x0070(0x0128)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxMomentNodeState_PlaySequence;

// ScriptStruct GbxGame.GbxContextParam_PlayerUsingObject
// 0x0010 (0x0018 - 0x0008)
struct FGbxContextParam_PlayerUsingObject final : public FGbxContextParam
{
public:
	uint8                                         Pad_8[0x10];                                       // 0x0008(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxContextParam_PlayerUsingObject;

// ScriptStruct GbxGame.ConsoleCommandGroup
// 0x0030 (0x0030 - 0x0000)
struct FConsoleCommandGroup final
{
public:
	class FString                                 CommandName;                                       // 0x0000(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         ConsoleCommands;                                   // 0x0010(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	class FString                                 Description;                                       // 0x0020(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FConsoleCommandGroup;

// ScriptStruct GbxGame.GbxSkillStateMachineStateAction_MachineOp
// 0x0008 (0x0010 - 0x0008)
struct FGbxSkillStateMachineStateAction_MachineOp final : public FGbxSkillStateMachineStateAction
{
public:
	EGbxSkillStateMachineAction_MachineOp         MachineOp;                                         // 0x0008(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxSkillStateMachineStateAction_MachineOp;

// ScriptStruct GbxGame.GbxDestructibleFractureEffectsSettings
// 0x00C0 (0x00C0 - 0x0000)
struct FGbxDestructibleFractureEffectsSettings final
{
public:
	class UFXSystemAsset*                         OnFractureParticleEffect;                          // 0x0000(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGbxParticleParameter>          ParticleParameters;                                // 0x0008(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                         bAttachParticleToHitActor : 1;                     // 0x0018(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   SocketName;                                        // 0x001C(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0xC];                                       // 0x0024(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Transform;                                         // 0x0030(0x0060)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           OnFractureWwiseEvent;                              // 0x0090(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAllowRetriggerFractureEffects;                    // 0x00A8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        FractureEffectsRetriggerDelay;                     // 0x00B0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B8[0x8];                                       // 0x00B8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxDestructibleFractureEffectsSettings;

// ScriptStruct GbxGame.GbxSkillTickableManager
// 0x0018 (0x0040 - 0x0028)
struct FGbxSkillTickableManager final : public FGbxSkillSharedResource
{
public:
	uint8                                         Pad_28[0x18];                                      // 0x0028(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxSkillTickableManager;

// ScriptStruct GbxGame.SwimmingAnimState
// 0x0008 (0x0008 - 0x0000)
struct FSwimmingAnimState final
{
public:
	float                                         SubmergedDepth;                                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DistanceToFloor;                                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSwimmingAnimState;

// ScriptStruct GbxGame.GbxFoleyAudioProvider
// 0x03B0 (0x06B0 - 0x0300)
#pragma pack(push, 0x1)
struct alignas(0x10) FGbxFoleyAudioProvider : public FGbxAudioProvider
{
public:
	uint8                                         Pad_300[0x60];                                     // 0x0300(0x0060)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFoleyLoopInfo>                 FoleyLoopInfo;                                     // 0x0360(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	int32                                         MaxFoleyLoops;                                     // 0x0370(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_374[0x4];                                      // 0x0374(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFoleyImpactInfo>               Feet;                                              // 0x0378(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TMap<struct FGameplayTag, struct FFoleyImpactGroup> FoleyImpactGroups;                           // 0x0388(0x0050)(Edit, NativeAccessSpecifierPrivate)
	bool                                          bCharacterRolls;                                   // 0x03D8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3D9[0x7];                                      // 0x03D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFoleyRollingLoopInfo                  RollingLoopInfo;                                   // 0x03E0(0x0050)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	float                                         HighDetailFoleyRadius;                             // 0x0430(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         FoleyTraceLength;                                  // 0x0434(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         FootstepBlendValue;                                // 0x0438(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector2f                              FootSpeedInputRange;                               // 0x043C(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         FootstepRetriggerDelay;                            // 0x0444(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	FGbxDefPtrProperty_                           CharacterSpeedRtpcName;                            // 0x0448(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                   CharacterSpeedTrackingSocket;                      // 0x0460(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	FGbxDefPtrProperty_                           IsHiddenGameParameter;                             // 0x0468(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_480[0x228];                                    // 0x0480(0x0228)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
#pragma pack(pop)
DUMPER7_ASSERTS_FGbxFoleyAudioProvider;

// ScriptStruct GbxGame.IOAudioProvider
// 0x0050 (0x0700 - 0x06B0)
struct FIOAudioProvider final : public FGbxFoleyAudioProvider
{
public:
	uint8                                         Pad_6A8[0x58];                                     // 0x06A8(0x0058)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FIOAudioProvider;

// ScriptStruct GbxGame.VariantDetailsCommonProp_Int16
// 0x0002 (0x0002 - 0x0000)
struct FVariantDetailsCommonProp_Int16 final
{
public:
	int16                                         Int16Value;                                        // 0x0000(0x0002)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FVariantDetailsCommonProp_Int16;

// ScriptStruct GbxGame.MissionGbxDef
// 0x0030 (0x0030 - 0x0000)
struct alignas(0x08) FMissionGbxDef final
{
public:
	EMissionGbxDefType                            type;                                              // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FGameDataHandleProperty_                      def;                                               // 0x0008(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMissionAliasRef                       alias;                                             // 0x0020(0x000C)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FMissionGbxDef;

// ScriptStruct GbxGame.MissionDisplayText
// 0x0060 (0x0060 - 0x0000)
struct FMissionDisplayText final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0010)(Edit, NativeAccessSpecifierPrivate)
	TMap<class FString, struct FMissionGbxDef>    keys;                                              // 0x0010(0x0050)(Edit, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FMissionDisplayText;

// ScriptStruct GbxGame.GbxReward
// 0x0040 (0x0040 - 0x0000)
struct alignas(0x08) FGbxReward final
{
public:
	uint8                                         Pad_0[0x40];                                       // 0x0000(0x0040)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxReward;

// ScriptStruct GbxGame.MissionRewardInfo
// 0x0058 (0x0058 - 0x0000)
struct FMissionRewardInfo final
{
public:
	EMissionRewardInfoType                        DataType;                                          // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxReward                             reward;                                            // 0x0008(0x0040)(Edit, NativeAccessSpecifierPublic)
	struct FMissionAliasRef                       alias;                                             // 0x0048(0x000C)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FMissionRewardInfo;

// ScriptStruct GbxGame.MissionObjectiveReward
// 0x0060 (0x0060 - 0x0000)
struct FMissionObjectiveReward final
{
public:
	struct FMissionRewardInfo                     reward;                                            // 0x0000(0x0058)(Edit, NativeAccessSpecifierPublic)
	bool                                          bGrantImmediately;                                 // 0x0058(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FMissionObjectiveReward;

// ScriptStruct GbxGame.MissionScopes
// 0x0000 (0x0020 - 0x0020)
struct FMissionScopes final : public FNexusBitSet
{
};
DUMPER7_ASSERTS_FMissionScopes;

// ScriptStruct GbxGame.MissionObjectiveDef
// 0x04C0 (0x04D8 - 0x0018)
struct FMissionObjectiveDef : public FGbxDef
{
public:
	uint8                                         Pad_18[0x398];                                     // 0x0018(0x0398)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMissionDisplayText                    Ux_Display;                                        // 0x03B0(0x0060)(Edit, NativeAccessSpecifierPublic)
	bool                                          Optional;                                          // 0x0410(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Ux_Hidden;                                         // 0x0411(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bThwartable;                                       // 0x0412(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMissionOwnershipFilter                       OwnershipFilter;                                   // 0x0413(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSToken                                PreviousObjective;                                 // 0x0414(0x000C)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFactsDependencyList                   dependencies;                                      // 0x0420(0x0010)(Edit, NativeAccessSpecifierPublic)
	struct FGbxInlineStruct                       ShouldExistCondition;                              // 0x0430(0x0018)(Edit, NativeAccessSpecifierPublic)
	class FName                                   DormancyGroup;                                     // 0x0448(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FMissionObjectiveReward>        rewards;                                           // 0x0450(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	class FName                                   DecisionGroup;                                     // 0x0460(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMissionObjectiveResolveType                  ResolveOnLoadBehavior;                             // 0x0468(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRememberEndStateInAlias;                          // 0x0469(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bRememberEndStateForever;                          // 0x046A(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bCustomRememberEndStateFactName;                   // 0x046B(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bCompletingMissionImpliesObjectiveIsComplete;      // 0x046C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_46D[0x3];                                      // 0x046D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSToken                                RememberEndStateAliasName;                         // 0x0470(0x000C)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FSToken                                ParentObjective;                                   // 0x047C(0x000C)(Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FNexusBitSet                           tags;                                              // 0x0488(0x0020)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                          bOverrideHUDOrder;                                 // 0x04A8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4A9[0x3];                                      // 0x04A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         OverrideHUDOrder;                                  // 0x04AC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMissionScopes                         MissionScopes;                                     // 0x04B0(0x0020)(Edit, NativeAccessSpecifierPublic)
	uint8                                         Pad_4D0[0x8];                                      // 0x04D0(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FMissionObjectiveDef;

// ScriptStruct GbxGame.GbxCondition_SkillStateSoft
// 0x0020 (0x0030 - 0x0010)
struct FGbxCondition_SkillStateSoft final : public FGbxConditionValueResolver
{
public:
	struct FSToken                                SkillDefName;                                      // 0x0010(0x000C)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FSToken                                StateDefName;                                      // 0x001C(0x000C)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bIsEnabled;                                        // 0x0028(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxCondition_SkillStateSoft;

// ScriptStruct GbxGame.GbxTriggerBehaviorMod
// 0x0018 (0x0030 - 0x0018)
struct FGbxTriggerBehaviorMod : public FFactsBinderBehaviorMod
{
public:
	uint8                                         Pad_18[0x18];                                      // 0x0018(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxTriggerBehaviorMod;

// ScriptStruct GbxGame.TimedTriggerBehaviorMod
// 0x0008 (0x0038 - 0x0030)
struct FTimedTriggerBehaviorMod final : public FGbxTriggerBehaviorMod
{
public:
	uint8                                         Pad_30[0x8];                                       // 0x0030(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FTimedTriggerBehaviorMod;

// ScriptStruct GbxGame.GbxSkillActionExecFilter_SkillCondition_Entry
// 0x0020 (0x0020 - 0x0000)
struct alignas(0x08) FGbxSkillActionExecFilter_SkillCondition_Entry final
{
public:
	FGbxDefPtrProperty_                           ConditionDef;                                      // 0x0000(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnabled;                                          // 0x0018(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxSkillActionExecFilter_SkillCondition_Entry;

// ScriptStruct GbxGame.DynamicUsabilityInteractionInfo
// 0x0180 (0x0180 - 0x0000)
struct FDynamicUsabilityInteractionInfo final
{
public:
	EUsabilityType                                UseType;                                           // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHoldToUse;                                        // 0x0001(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         HoldToUseTime;                                     // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      Prompt;                                            // 0x0008(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FUsabilityCost                         CostRequirements;                                  // 0x0020(0x0160)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FDynamicUsabilityInteractionInfo;

// ScriptStruct GbxGame.RegisteredDynamicUsabilityInteractionParams
// 0x01A8 (0x01A8 - 0x0000)
struct FRegisteredDynamicUsabilityInteractionParams final
{
public:
	struct FDynamicUsabilityInteractionInfo       data;                                              // 0x0000(0x0180)(NativeAccessSpecifierPublic)
	struct FSToken                                MissionContext;                                    // 0x0180(0x000C)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_18C[0x1C];                                     // 0x018C(0x001C)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FRegisteredDynamicUsabilityInteractionParams;

// ScriptStruct GbxGame.RegisteredDynamicUsabilityInteractionInfo
// 0x01B8 (0x01B8 - 0x0000)
struct FRegisteredDynamicUsabilityInteractionInfo final
{
public:
	uint8                                         Pad_0[0x8];                                        // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRegisteredDynamicUsabilityInteractionParams UsabilityParams;                             // 0x0008(0x01A8)(NativeAccessSpecifierPublic)
	uint8                                         priority;                                          // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B1[0x7];                                      // 0x01B1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FRegisteredDynamicUsabilityInteractionInfo;

// ScriptStruct GbxGame.UsableActorState
// 0x00D0 (0x00D0 - 0x0000)
struct FUsableActorState final
{
public:
	TMulticastInlineDelegate<void(class AActor* User, EUsabilityType UseType, bool bWasHeld)> K2_OnUsed; // 0x0000(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, RepSkip, BlueprintAuthorityOnly, NativeAccessSpecifierPublic)
	uint8                                         Pad_10[0x18];                                      // 0x0010(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class AActor* User, EUsabilityType UseType)> K2_OnObjectHostedUseStarted; // 0x0028(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, RepSkip, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class AActor* User, EUsabilityType UseType)> K2_OnObjectHostedUseStopped; // 0x0038(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, RepSkip, NativeAccessSpecifierPublic)
	uint8                                         Pad_48[0x50];                                      // 0x0048(0x0050)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bInteractabilityLockedReplicated;                  // 0x0098(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FRegisteredDynamicUsabilityInteractionInfo> ReplicatedDynamicInteractions;         // 0x00A0(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                         Pad_B0[0x20];                                      // 0x00B0(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FUsableActorState;

// ScriptStruct GbxGame.ScreenParticleInitParams
// 0x0038 (0x0038 - 0x0000)
struct FScreenParticleInitParams final
{
public:
	class UFXSystemAsset*                         Template;                                          // 0x0000(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bHideWhenFinished : 1;                             // 0x0008(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bDestroyWhenFinished : 1;                          // 0x0008(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bOnlyOwnerSee : 1;                                 // 0x0008(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bAlwaysVisible : 1;                                // 0x0008(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bAllowMultipleInstances : 1;                       // 0x0008(0x0001)(BitIndex: 0x04, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bTickEvenWhenPaused : 1;                           // 0x0008(0x0001)(BitIndex: 0x05, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bHideDuringInGameMenu : 1;                         // 0x0008(0x0001)(BitIndex: 0x06, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bHideDuringCinematic : 1;                          // 0x0008(0x0001)(BitIndex: 0x07, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bDisableScalability : 1;                           // 0x0009(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bDepthPriorityWorld : 1;                           // 0x0009(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bHideInThirdPerson : 1;                            // 0x0009(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bHideInFirstPerson : 1;                            // 0x0009(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              ContentDims;                                       // 0x0010(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ParticleDepth;                                     // 0x0020(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EScreenParticleScalingMode                    ScalingMode;                                       // 0x0024(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Tag;                                               // 0x0028(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 OwnerOverride;                                     // 0x0030(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FScreenParticleInitParams;

// ScriptStruct GbxGame.IOAudioBehavior
// 0x0058 (0x0058 - 0x0000)
struct alignas(0x08) FIOAudioBehavior final
{
public:
	class FName                                   TargetEmitter;                                     // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   socket;                                            // 0x0008(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           WwiseEvent;                                        // 0x0010(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           StopEvent;                                         // 0x0028(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_40[0x18];                                      // 0x0040(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FIOAudioBehavior;

// ScriptStruct GbxGame.IOAudioBehaviorStateSet
// 0x0050 (0x0050 - 0x0000)
struct FIOAudioBehaviorStateSet final
{
public:
	TMap<class FName, struct FIOAudioBehavior>    StateValues;                                       // 0x0000(0x0050)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FIOAudioBehaviorStateSet;

// ScriptStruct GbxGame.IOAudioProviderDef
// 0x0050 (0x0330 - 0x02E0)
struct FIOAudioProviderDef final : public FGbxFoleyAudioProviderDef
{
public:
	TMap<class FName, struct FIOAudioBehaviorStateSet> IOStates;                                     // 0x02E0(0x0050)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FIOAudioProviderDef;

// ScriptStruct GbxGame.CoordinatedEffectFilterDef
// 0x0038 (0x0050 - 0x0018)
struct FCoordinatedEffectFilterDef : public FGbxDef
{
public:
	class FName                                   ComponentTag;                                      // 0x0018(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                           ComponentNames;                                    // 0x0020(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	ECoordinatedRegionFilterType                  MeshRegionFilter;                                  // 0x0030(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           MeshRegions;                                       // 0x0038(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bAppliesToGore;                                    // 0x0048(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FCoordinatedEffectFilterDef;

// ScriptStruct GbxGame.GbxSkillActionExecFilter
// 0x0000 (0x0008 - 0x0008)
struct FGbxSkillActionExecFilter : public FGbxHasStructType
{
};
DUMPER7_ASSERTS_FGbxSkillActionExecFilter;

// ScriptStruct GbxGame.GbxSkillActionExecFilter_SkillCondition
// 0x0010 (0x0018 - 0x0008)
struct FGbxSkillActionExecFilter_SkillCondition final : public FGbxSkillActionExecFilter
{
public:
	TArray<struct FGbxSkillActionExecFilter_SkillCondition_Entry> Entries;                           // 0x0008(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxSkillActionExecFilter_SkillCondition;

// ScriptStruct GbxGame.GbxStatusEffectPresentationSeverityRate
// 0x0000 (0x0008 - 0x0008)
struct FGbxStatusEffectPresentationSeverityRate : public FGbxHasStructType
{
};
DUMPER7_ASSERTS_FGbxStatusEffectPresentationSeverityRate;

// ScriptStruct GbxGame.GbxSkillStateBinding
// 0x0028 (0x0028 - 0x0000)
struct alignas(0x08) FGbxSkillStateBinding final
{
public:
	FGameDataHandleProperty_                      SkillState;                                        // 0x0000(0x0018)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGbxSkillStateOp                              BindingOp;                                         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   EventName;                                         // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGbxSkillEventNetFilter                       NetFilter;                                         // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxSkillStateBinding;

// ScriptStruct GbxGame.FactsConduitMissionReference
// 0x0014 (0x0014 - 0x0000)
struct FFactsConduitMissionReference final
{
public:
	class FName                                   mission;                                           // 0x0000(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   Referencer;                                        // 0x0008(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_10[0x4];                                       // 0x0010(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FFactsConduitMissionReference;

// ScriptStruct GbxGame.GbxMomentNodeState_LookAt_Base
// 0x00D8 (0x0148 - 0x0070)
struct FGbxMomentNodeState_LookAt_Base : public FGbxMomentNodeState
{
public:
	uint8                                         Pad_70[0xD8];                                      // 0x0070(0x00D8)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxMomentNodeState_LookAt_Base;

// ScriptStruct GbxGame.GbxMovingPlatformDestination
// 0x00B0 (0x00B0 - 0x0000)
struct FGbxMovingPlatformDestination final
{
public:
	EGbxMovingPlatformDestinationType             DestinationType;                                   // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0xC];                                        // 0x0004(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RelativeTransform;                                 // 0x0010(0x0060)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxParam                              TargetActor;                                       // 0x0070(0x0038)(Edit, NativeAccessSpecifierPublic)
	float                                         FollowSplineSpeedMultiplier;                       // 0x00A8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxMovingPlatformDestination;

// ScriptStruct GbxGame.GbxMovingPlatformInstanceConfig
// 0x00D0 (0x00D0 - 0x0000)
struct FGbxMovingPlatformInstanceConfig final
{
public:
	TArray<struct FGbxMovingPlatformDestination>  Destinations;                                      // 0x0000(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	class AActor*                                 MovementSpline;                                    // 0x0010(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGbxMovingPlatformDestinationCondition        DestinationConditionType;                          // 0x0018(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOverrideDestinationConditionType;                 // 0x001C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOverrideSpeedMode;                                // 0x001D(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOverrideSpeedCurve;                               // 0x001E(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1F[0x1];                                       // 0x001F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	EGbxMovingPlatformSpeedMode                   SpeedMode;                                         // 0x0020(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MoveSpeed;                                         // 0x0024(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MoveTime;                                          // 0x0028(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRuntimeFloatCurve                     SpeedCurve;                                        // 0x0030(0x0088)(Edit, NativeAccessSpecifierPublic)
	bool                                          bOverrideTeleportToInitialDestination;             // 0x00B8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bTeleportToInitialDestination;                     // 0x00B9(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOverrideSplineMovementSpeedMode;                  // 0x00BA(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_BB[0x1];                                       // 0x00BB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	EGbxMovingPlatformSplineMovementSpeedMode     SplineMovementSpeedMode;                           // 0x00BC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSplineMovementUsesSpeedCurveValueBoundsAsSplineEndPoints; // 0x00C0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOverrideMovementSplineKeepSpawnRotation;          // 0x00C1(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bMovementSplineKeepSpawnRotation;                  // 0x00C2(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOverrideMovementSplineRotationType;               // 0x00C3(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGbxMovingPlatformSplineMovementRotationType  MovementSplineRotationType;                        // 0x00C4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOverrideTeleportToStartOfSpline;                  // 0x00C8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bTeleportToStartOfSpline;                          // 0x00C9(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOverrideTeleportToStartOfSplineThreshold;         // 0x00CA(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_CB[0x1];                                       // 0x00CB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TeleportToStartOfSplineThreshold;                  // 0x00CC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxMovingPlatformInstanceConfig;

// ScriptStruct GbxGame.GbxExperienceProgressionFunction
// 0x0010 (0x0018 - 0x0008)
struct FGbxExperienceProgressionFunction : public FGbxHasStructType
{
public:
	int32                                         MaxLevel;                                          // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0xC];                                        // 0x000C(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxExperienceProgressionFunction;

// ScriptStruct GbxGame.GbxExperienceFunction_Sum
// 0x0018 (0x0030 - 0x0018)
struct FGbxExperienceFunction_Sum final : public FGbxExperienceProgressionFunction
{
public:
	double                                        Multiplier;                                        // 0x0018(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        LevelOffset;                                       // 0x0020(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        Offset;                                            // 0x0028(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxExperienceFunction_Sum;

// ScriptStruct GbxGame.GbxDiscoveryLocationInstanceConfig
// 0x03F8 (0x03F8 - 0x0000)
struct FGbxDiscoveryLocationInstanceConfig
{
public:
	uint8                                         Pad_0[0x8];                                        // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	FGbxDefPtrProperty_                           LocationType;                                      // 0x0008(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseOverrideDoNotGenerateMetaData;                 // 0x0020(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOverrideDoNotGenerateMetaData;                    // 0x0021(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseOverrideDiscoveryStateTerritories;             // 0x0022(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseOverrideWithinViewRanges;                      // 0x0023(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxTerritoryAreaData                  OverrideDiscoveryStateTerritories[0x3];            // 0x0028(0x0120)(Edit, NativeAccessSpecifierPublic)
	struct FFloatRange                            OverrideWithinViewRanges[0x5];                     // 0x0388(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                InWorldIndicatorOffset;                            // 0x03D8(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AActor>                  InWorldIndicatorAttachToActor;                     // 0x03F0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxDiscoveryLocationInstanceConfig;

// ScriptStruct GbxGame.GbxStatusEffectRuleImmunityData
// 0x0000 (0x0008 - 0x0008)
struct FGbxStatusEffectRuleImmunityData : public FGbxHasStructType
{
};
DUMPER7_ASSERTS_FGbxStatusEffectRuleImmunityData;

// ScriptStruct GbxGame.GbxStatusEffectRuleImmunityData_Full
// 0x0000 (0x0008 - 0x0008)
struct FGbxStatusEffectRuleImmunityData_Full final : public FGbxStatusEffectRuleImmunityData
{
};
DUMPER7_ASSERTS_FGbxStatusEffectRuleImmunityData_Full;

// ScriptStruct GbxGame.MissionSingleType
// 0x0000 (0x0010 - 0x0010)
struct FMissionSingleType final : public FNexusBitSingleTag
{
};
DUMPER7_ASSERTS_FMissionSingleType;

// ScriptStruct GbxGame.MissionDevMapInfo
// 0x0030 (0x0030 - 0x0000)
struct alignas(0x08) FMissionDevMapInfo final
{
public:
	FGameDataHandleProperty_                      ProductionMap;                                     // 0x0000(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      developmentmap;                                    // 0x0018(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FMissionDevMapInfo;

// ScriptStruct GbxGame.MissionSpecialEventTrigger
// 0x0048 (0x0048 - 0x0000)
struct FMissionSpecialEventTrigger final
{
public:
	struct FMissionAliasRef                       Trigger;                                           // 0x0000(0x000C)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bRememberIfTriggered;                              // 0x000C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFactExpression                        Condition;                                         // 0x0010(0x0010)(Edit, NativeAccessSpecifierPublic)
	struct FMissionActionSequenceDef              actions;                                           // 0x0020(0x0028)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FMissionSpecialEventTrigger;

// ScriptStruct GbxGame.MissionStatesData
// 0x0120 (0x0120 - 0x0000)
struct FMissionStatesData final
{
public:
	struct FMissionActionSequenceDef              setup;                                             // 0x0000(0x0028)(Edit, NativeAccessSpecifierPublic)
	struct FMissionActionSequenceDef              unlocked;                                          // 0x0028(0x0028)(Edit, NativeAccessSpecifierPublic)
	struct FMissionLatentPhaseDef                 kickoff;                                           // 0x0050(0x0030)(Edit, NativeAccessSpecifierPublic)
	struct FMissionActionSequenceDef              Replay;                                            // 0x0080(0x0028)(Edit, NativeAccessSpecifierPublic)
	struct FMissionActionSequenceDef              completed;                                         // 0x00A8(0x0028)(Edit, NativeAccessSpecifierPublic)
	struct FMissionActionSequenceDef              Abandoned;                                         // 0x00D0(0x0028)(Edit, NativeAccessSpecifierPublic)
	struct FMissionActionSequenceDef              Cleanup;                                           // 0x00F8(0x0028)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FMissionStatesData;

// ScriptStruct GbxGame.MissionDef
// 0x0778 (0x07D0 - 0x0058)
struct FMissionDef : public FMissionEntityParentBase
{
public:
	uint8                                         Pad_58[0x480];                                     // 0x0058(0x0480)(Fixing Size After Last Property [ Dumper-7 ])
	FGameDataHandleProperty_                      missionset;                                        // 0x04D8(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMissionSingleType                     MissionType;                                       // 0x04F0(0x0010)(Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMissionScopes                         MissionScopes;                                     // 0x0500(0x0020)(Edit, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           MissionArchetype;                                  // 0x0520(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMissionReplicationType                       ReplicationType;                                   // 0x0538(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_539[0x7];                                      // 0x0539(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMissionDisplayText                    Ux_Display;                                        // 0x0540(0x0060)(Edit, NativeAccessSpecifierPublic)
	bool                                          bUntrackable;                                      // 0x05A0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5A1[0x7];                                      // 0x05A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FMissionDevMapInfo>             DevMapInfo;                                        // 0x05A8(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FMissionGbxDef                         zone;                                              // 0x05B8(0x0030)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      ReplayTravelStation;                               // 0x05E8(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FNexusBitSet                           tags;                                              // 0x0600(0x0020)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FUserDefinedMissionBinderInfo>  UserDefinedBinders;                                // 0x0620(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FMissionSpecialEventTrigger>    SpecialEventTriggers;                              // 0x0630(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FFactsDependencyList                   dependencies;                                      // 0x0640(0x0010)(Edit, NativeAccessSpecifierPublic)
	struct FMissionEntityOrderData                OrderData;                                         // 0x0650(0x0014)(Edit, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_664[0x4];                                      // 0x0664(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FGbxDefPtrProperty_                           ParentMission;                                     // 0x0668(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMissionStatesData                     States;                                            // 0x0680(0x0120)(Edit, NativeAccessSpecifierPublic)
	bool                                          bIsGeneratedMission;                               // 0x07A0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMissionOwnershipType                         OwnershipType;                                     // 0x07A1(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bGeneratedMissionIsPersistent;                     // 0x07A2(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_7A3[0x5];                                      // 0x07A3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	FGbxDefPtrProperty_                           MissionDialogScript;                               // 0x07A8(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<FGbxDefPtrProperty_>                   AdditionalDialogScripts;                           // 0x07C0(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FMissionDef;

// ScriptStruct GbxGame.CameraModeBehavior_InterpCrouch
// 0x0010 (0x0028 - 0x0018)
struct FCameraModeBehavior_InterpCrouch final : public FCameraModeBehavior
{
public:
	float                                         InterpSpeed;                                       // 0x0018(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1C[0xC];                                       // 0x001C(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FCameraModeBehavior_InterpCrouch;

// ScriptStruct GbxGame.GbxDialogTriggeredLineSlot
// 0x0030 (0x0030 - 0x0000)
struct alignas(0x08) FGbxDialogTriggeredLineSlot final
{
public:
	FGbxDefPtrProperty_                           TriggeringEvent;                                   // 0x0000(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           TriggeredLineSlot;                                 // 0x0018(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxDialogTriggeredLineSlot;

// ScriptStruct GbxGame.DialogMoodRef
// 0x0010 (0x0010 - 0x0000)
struct FDialogMoodRef final
{
public:
	bool                                          bForceNoMood;                                      // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   MoodName;                                          // 0x0004(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         Weight;                                            // 0x000C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FDialogMoodRef;

// ScriptStruct GbxGame.DialogGestureRef
// 0x0040 (0x0040 - 0x0000)
struct FDialogGestureRef final
{
public:
	bool                                          bForceNoGesture;                                   // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UGbxTrick>               GestureTrick;                                      // 0x0008(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         Weight;                                            // 0x0030(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bStopGestureWhenLineEnds;                          // 0x0034(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PercentOfLineToUseForEnd;                          // 0x0038(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         StartDelaySeconds;                                 // 0x003C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FDialogGestureRef;

// ScriptStruct GbxGame.GbxDialogMoodsGesturesDefaults
// 0x00A0 (0x00A0 - 0x0000)
struct FGbxDialogMoodsGesturesDefaults final
{
public:
	TMap<FGbxDefPtrProperty_, struct FDialogMoodRef> MoodDefaultsPerCharacter;                       // 0x0000(0x0050)(Edit, NativeAccessSpecifierPrivate)
	TMap<FGbxDefPtrProperty_, struct FDialogGestureRef> GestureDefaultsPerCharacter;                 // 0x0050(0x0050)(Edit, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxDialogMoodsGesturesDefaults;

// ScriptStruct GbxGame.GbxDialogScriptDef
// 0x0128 (0x0140 - 0x0018)
struct FGbxDialogScriptDef final : public FGbxDef
{
public:
	class FString                                 voworkunit;                                        // 0x0018(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           QuietTimeDef;                                      // 0x0028(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           DefaultScriptStyle;                                // 0x0040(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGbxDialogTriggeredLineSlot>    TriggeredLineSlots;                                // 0x0058(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FGbxDialogMoodsGesturesDefaults        DefaultMoodsAndGestures;                           // 0x0068(0x00A0)(Edit, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UFaceFXAnimSet>          FaceFXAnimSet;                                     // 0x0108(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UGbxDialogFunction>> RequiredDialogFunctions;                        // 0x0130(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxDialogScriptDef;

// ScriptStruct GbxGame.GbxSkillAnimTrickResolver
// 0x0000 (0x0008 - 0x0008)
struct FGbxSkillAnimTrickResolver : public FGbxHasStructType
{
};
DUMPER7_ASSERTS_FGbxSkillAnimTrickResolver;

// ScriptStruct GbxGame.FactsConduitSingleActorEditorMetaData
// 0x0020 (0x0020 - 0x0000)
struct FFactsConduitSingleActorEditorMetaData final
{
public:
	TArray<struct FFactsConduitMissionReference>  MissionReferences;                                 // 0x0000(0x0010)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UGbxMomentData>>  MomentReferences;                                  // 0x0010(0x0010)(Edit, ZeroConstructor, EditConst, UObjectWrapper, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FFactsConduitSingleActorEditorMetaData;

// ScriptStruct GbxGame.FactsConduitEditorMetaData
// 0x0040 (0x0040 - 0x0000)
struct FFactsConduitEditorMetaData final
{
public:
	struct FFactsConduitSingleActorEditorMetaData References;                                        // 0x0000(0x0020)(Edit, EditConst, NativeAccessSpecifierPublic)
	struct FFactsConduitSingleActorEditorMetaData SpawnedActorReferences;                            // 0x0020(0x0020)(Edit, EditConst, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FFactsConduitEditorMetaData;

// ScriptStruct GbxGame.GbxMomentNodeSettings_MoveTo
// 0x0070 (0x00F0 - 0x0080)
struct FGbxMomentNodeSettings_MoveTo : public FGbxMomentNodeSettings
{
public:
	struct FGbxParam                              Actor;                                             // 0x0080(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              target;                                            // 0x00B8(0x0038)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxMomentNodeSettings_MoveTo;

// ScriptStruct GbxGame.InventoryBodySettings
// 0x0000 (0x0228 - 0x0228)
struct FInventoryBodySettings final : public FGbxBodySettings
{
};
DUMPER7_ASSERTS_FInventoryBodySettings;

// ScriptStruct GbxGame.GbxMomentNodeSettings_StopTrick
// 0x0058 (0x00D8 - 0x0080)
struct FGbxMomentNodeSettings_StopTrick final : public FGbxMomentNodeSettings
{
public:
	struct FGbxParam                              Actor;                                             // 0x0080(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxTrickRef                           Trick;                                             // 0x00B8(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bAbortLoopAndPerchTricks;                          // 0x00D0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAllowLoopTrickStartToFinish;                      // 0x00D1(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bWaitForPerchTrickLoop;                            // 0x00D2(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D3[0x5];                                       // 0x00D3(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxMomentNodeSettings_StopTrick;

// ScriptStruct GbxGame.GbxInputAxisKey
// 0x0030 (0x0030 - 0x0000)
struct FGbxInputAxisKey final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(Edit, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Scale3D;                                           // 0x0018(0x0018)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxInputAxisKey;

// ScriptStruct GbxGame.GbxInputAxis
// 0x0010 (0x0018 - 0x0008)
struct FGbxInputAxis final : public FGbxInputKey
{
public:
	TArray<struct FGbxInputAxisKey>               keys;                                              // 0x0008(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxInputAxis;

// ScriptStruct GbxGame.GbxInputRebind_Axis
// 0x0030 (0x0030 - 0x0000)
struct FGbxInputRebind_Axis final
{
public:
	FGameDataHandleProperty_                      Binding;                                           // 0x0000(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxInputAxis                          Axis;                                              // 0x0018(0x0018)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxInputRebind_Axis;

// ScriptStruct GbxGame.GbxDialogWwiseRtpcParams
// 0x0020 (0x0020 - 0x0000)
struct alignas(0x08) FGbxDialogWwiseRtpcParams final
{
public:
	FGbxDefPtrProperty_                           Parameter;                                         // 0x0000(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         Value;                                             // 0x0018(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         FadeDurationMs;                                    // 0x001C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxDialogWwiseRtpcParams;

// ScriptStruct GbxGame.GbxDialogNameTagDef
// 0x00A8 (0x00C0 - 0x0018)
struct FGbxDialogNameTagDef final : public FGbxDef
{
public:
	bool                                          UsableForPureEchoes;                               // 0x0018(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          DistributedSpeaker;                                // 0x0019(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInt32Interval                         VoicePitchOffsetInterval;                          // 0x001C(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FGbxDefPtrProperty_                           EchoData;                                          // 0x0028(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGbxDialogWwiseRtpcParams>      CustomWwiseRtpcs;                                  // 0x0040(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           CharacterSounds;                                   // 0x0050(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<FGbxDefPtrProperty_>                   ScriptDefs;                                        // 0x0068(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           RestrictedRegion;                                  // 0x0078(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UFaceFXAnimSet>>  FaceFXAnimSetsToLoad;                              // 0x0090(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	uint8                                         Pad_A0[0x20];                                      // 0x00A0(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxDialogNameTagDef;

// ScriptStruct GbxGame.GbxCondition_SkillState
// 0x0038 (0x0048 - 0x0010)
struct FGbxCondition_SkillState final : public FGbxConditionValueResolver
{
public:
	FGbxDefPtrProperty_                           StateDef;                                          // 0x0010(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	FGbxDefPtrProperty_                           SkillDef;                                          // 0x0028(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bIsEnabled;                                        // 0x0040(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxCondition_SkillState;

// ScriptStruct GbxGame.DesiredLayoutByName
// 0x0020 (0x0020 - 0x0000)
struct alignas(0x08) FDesiredLayoutByName final
{
public:
	int32                                         DesiredAmount;                                     // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FGbxDefPtrProperty_                           Layout;                                            // 0x0008(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FDesiredLayoutByName;

// ScriptStruct GbxGame.GbxWorldRegionDef
// 0x00D0 (0x00E8 - 0x0018)
struct FGbxWorldRegionDef : public FGbxDef
{
public:
	FGbxDefPtrProperty_                           LoadingScreenDef;                                  // 0x0018(0x0018)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      ZoneHandle;                                        // 0x0030(0x0018)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         priority;                                          // 0x0048(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   DisplayName;                                       // 0x0050(0x0010)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_60[0x88];                                      // 0x0060(0x0088)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxWorldRegionDef;

// ScriptStruct GbxGame.CameraModeBehavior_Freeze
// 0x0070 (0x0088 - 0x0018)
struct FCameraModeBehavior_Freeze final : public FCameraModeBehavior
{
public:
	float                                         Duration;                                          // 0x0018(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1C[0x6C];                                      // 0x001C(0x006C)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FCameraModeBehavior_Freeze;

// ScriptStruct GbxGame.GbxInputEvent_Button_PressRelease
// 0x0000 (0x0100 - 0x0100)
struct FGbxInputEvent_Button_PressRelease final : public FGbxInputEvent_Button_Core
{
};
DUMPER7_ASSERTS_FGbxInputEvent_Button_PressRelease;

// ScriptStruct GbxGame.GbxMomentNodeSettings_TravelToAINode
// 0x0070 (0x00F0 - 0x0080)
struct FGbxMomentNodeSettings_TravelToAINode : public FGbxMomentNodeSettings
{
public:
	struct FGbxParam                              Actor;                                             // 0x0080(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              AINode;                                            // 0x00B8(0x0038)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxMomentNodeSettings_TravelToAINode;

// ScriptStruct GbxGame.LootConfigSocket
// 0x0110 (0x0110 - 0x0000)
struct FLootConfigSocket final
{
public:
	class FName                                   socket;                                            // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FInventoryItemSelectionData            item;                                              // 0x0008(0x0068)(Edit, NativeAccessSpecifierPublic)
	struct FGbxAttributeInit                      probability;                                       // 0x0070(0x0050)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FGbxAttributeInit                      mingamestage;                                      // 0x00C0(0x0050)(Edit, NoDestructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FLootConfigSocket;

// ScriptStruct GbxGame.LootConfiguration
// 0x00A0 (0x00A0 - 0x0000)
struct FLootConfiguration final
{
public:
	class FName                                   Name;                                              // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxAttributeInit                      Weight;                                            // 0x0008(0x0050)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FLootConfigSocket>              sockets;                                           // 0x0058(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FGbxParam                              GameStageVarianceFormula;                          // 0x0068(0x0038)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FLootConfiguration;

// ScriptStruct GbxGame.GbxLevelZoneDef
// 0x0020 (0x0038 - 0x0018)
struct FGbxLevelZoneDef final : public FGbxDef
{
public:
	TArray<TSoftObjectPtr<class UDataLayerAsset>> DynamicDataLayerAssets;                            // 0x0018(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	class FText                                   DisplayName;                                       // 0x0028(0x0010)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxLevelZoneDef;

// ScriptStruct GbxGame.GbxLoadingScreenDef
// 0x0060 (0x0078 - 0x0018)
struct FGbxLoadingScreenDef final : public FGbxDef
{
public:
	TSoftObjectPtr<class UMaterialInterface>      Material;                                          // 0x0018(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              Texture;                                           // 0x0040(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           Color;                                             // 0x0068(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxLoadingScreenDef;

// ScriptStruct GbxGame.MantleCheckTypeData
// 0x0158 (0x0158 - 0x0000)
struct alignas(0x08) FMantleCheckTypeData
{
public:
	uint8                                         Pad_0[0x158];                                      // 0x0000(0x0158)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FMantleCheckTypeData;

// ScriptStruct GbxGame.GbxRewardsSetCustomData
// 0x0000 (0x0008 - 0x0008)
struct FGbxRewardsSetCustomData : public FGbxHasStructType
{
};
DUMPER7_ASSERTS_FGbxRewardsSetCustomData;

// ScriptStruct GbxGame.GbxDroneOrbitValues
// 0x0090 (0x0090 - 0x0000)
struct FGbxDroneOrbitValues final
{
public:
	float                                         OrbitSpeed;                                        // 0x0000(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OrbitLagSpeed;                                     // 0x0004(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseOrbitLagSpeed;                                 // 0x0008(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FNumericRange                          OrbitAltitude;                                     // 0x000C(0x0008)(BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FNumericRange                          OrbitRadius;                                       // 0x0014(0x0008)(BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	float                                         OrbitAltitudeThreshold;                            // 0x001C(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OrbitRadiusThreshold;                              // 0x0020(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGbxDroneOrbitDirection                       OrbitDirection;                                    // 0x0024(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bVaryRadius;                                       // 0x0025(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bVaryAltitude;                                     // 0x0026(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_27[0x1];                                       // 0x0027(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         OrbitRadiusVaryRate;                               // 0x0028(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OrbitAltitudeVaryRate;                             // 0x002C(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bVaryOrbitRadiusDirection;                         // 0x0030(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bVaryOrbitAltitudeDirection;                       // 0x0031(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RandomRadiusDirectionInterval;                     // 0x0034(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RandomAltitudeDirectionInterval;                   // 0x0038(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OrbitDirectionValue;                               // 0x003C(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInOrbit;                                          // 0x0040(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                OrbitRelativeLocation;                             // 0x0048(0x0018)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ChosenOrbitAltitude;                               // 0x0060(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CurrentOrbitAltitude;                              // 0x0064(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ChosenOrbitRadius;                                 // 0x0068(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CurrentOrbitRadius;                                // 0x006C(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                PrevOrbitPos;                                      // 0x0070(0x0018)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RadiusVaryTimePassed;                              // 0x0088(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AltitudeVaryTimePassed;                            // 0x008C(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxDroneOrbitValues;

// ScriptStruct GbxGame.GbxActorPartState_Gestalt
// 0x0060 (0x0078 - 0x0018)
struct FGbxActorPartState_Gestalt final : public FGbxActorPartState
{
public:
	uint8                                         Pad_18[0x60];                                      // 0x0018(0x0060)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxActorPartState_Gestalt;

// ScriptStruct GbxGame.CharacterSoundConditionData
// 0x0048 (0x0048 - 0x0000)
struct FCharacterSoundConditionData final
{
public:
	struct FGbxInlineStruct                       Condition;                                         // 0x0000(0x0018)(Edit, NativeAccessSpecifierPrivate)
	struct FGbxAudioEvent                         AudioEvent;                                        // 0x0018(0x0030)(Edit, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FCharacterSoundConditionData;

// ScriptStruct GbxGame.CharacterSoundData
// 0x0040 (0x0040 - 0x0000)
struct FCharacterSoundData final
{
public:
	struct FGbxAudioEvent                         DefaultAudioEvent;                                 // 0x0000(0x0030)(Edit, NativeAccessSpecifierPrivate)
	TArray<struct FCharacterSoundConditionData>   ConditionOverrides;                                // 0x0030(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FCharacterSoundData;

// ScriptStruct GbxGame.CharacterVocalLoopData
// 0x00B8 (0x00B8 - 0x0000)
struct FCharacterVocalLoopData final
{
public:
	class FName                                   LoopName;                                          // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPainLoop;                                         // 0x0008(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  LoopID;                                            // 0x000C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxInlineStruct                       Condition;                                         // 0x0020(0x0018)(Edit, NativeAccessSpecifierPublic)
	bool                                          bPlayOnce;                                         // 0x0038(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         StopTryingToRunAfterXSeconds;                      // 0x003C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxInlineStruct                       WhileCondition;                                    // 0x0040(0x0018)(Edit, NativeAccessSpecifierPublic)
	struct FGbxAudioEvent                         StartEvent;                                        // 0x0058(0x0030)(Edit, NativeAccessSpecifierPublic)
	struct FGbxAudioEvent                         StopEvent;                                         // 0x0088(0x0030)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FCharacterVocalLoopData;

// ScriptStruct GbxGame.CharacterSoundDef
// 0x0060 (0x0078 - 0x0018)
struct FCharacterSoundDef final : public FGbxDef
{
public:
	TMap<FGbxDefPtrProperty_, struct FCharacterSoundData> Sounds;                                    // 0x0018(0x0050)(Edit, NativeAccessSpecifierPrivate)
	TArray<struct FCharacterVocalLoopData>        VocalLoops;                                        // 0x0068(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FCharacterSoundDef;

// ScriptStruct GbxGame.GbxSkillComponentActivationStrategy_AlwaysActive
// 0x0000 (0x0008 - 0x0008)
struct FGbxSkillComponentActivationStrategy_AlwaysActive final : public FGbxSkillComponentActivationStrategy
{
};
DUMPER7_ASSERTS_FGbxSkillComponentActivationStrategy_AlwaysActive;

// ScriptStruct GbxGame.CharacterSoundTagDef
// 0x0028 (0x0040 - 0x0018)
struct FCharacterSoundTagDef final : public FGbxDef
{
public:
	ECharacterSoundType                           SoundType;                                         // 0x0018(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ECharacterSoundVocalizationType               VocalizationType;                                  // 0x0019(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ChanceToPlay;                                      // 0x001C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bHighPriorityInterruptingVox;                      // 0x0020(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bHighPriorityBlockingVox;                          // 0x0021(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFloatInterval                         QuietTime;                                         // 0x0024(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                   SoundEmitterTag;                                   // 0x002C(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                   PlaybackSocket;                                    // 0x0034(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FCharacterSoundTagDef;

// ScriptStruct GbxGame.GbxRandomOverrideSequenceEntry
// 0x0070 (0x0070 - 0x0000)
struct FGbxRandomOverrideSequenceEntry final
{
public:
	struct FGbxAnimSeqRef                         Anim;                                              // 0x0000(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	float                                         Weight;                                            // 0x0018(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FNumericRange                          PlayRate;                                          // 0x001C(0x0008)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bOverrideBlendIn;                                  // 0x0024(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAnimBlendOptions                   BlendInOverride;                                   // 0x0028(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bOverrideBlendOut;                                 // 0x0048(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAnimBlendOptions                   BlendOutOverride;                                  // 0x0050(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxRandomOverrideSequenceEntry;

// ScriptStruct GbxGame.LootConfigDef
// 0x0028 (0x0040 - 0x0018)
struct FLootConfigDef final : public FGbxDef
{
public:
	TArray<struct FLootConfiguration>             Configurations;                                    // 0x0018(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           DefSelector;                                       // 0x0028(0x0018)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
};
DUMPER7_ASSERTS_FLootConfigDef;

// ScriptStruct GbxGame.GbxSkillTargetListDef
// 0x0000 (0x0018 - 0x0018)
struct FGbxSkillTargetListDef final : public FGbxDef
{
};
DUMPER7_ASSERTS_FGbxSkillTargetListDef;

// ScriptStruct GbxGame.GbxSkillComponent_InputEx
// 0x0010 (0x0060 - 0x0050)
struct FGbxSkillComponent_InputEx final : public FGbxSkillComponent
{
public:
	uint8                                         Pad_50[0x10];                                      // 0x0050(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxSkillComponent_InputEx;

// ScriptStruct GbxGame.GbxAnimNode_BlendListByFloatComparison
// 0x0020 (0x0068 - 0x0048)
struct FGbxAnimNode_BlendListByFloatComparison final : public FAnimNode_BlendListBase
{
public:
	float                                         ValueA;                                            // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ValueB;                                            // 0x004C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFloatComparisonType                          Comparison;                                        // 0x0050(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_51[0x17];                                      // 0x0051(0x0017)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxAnimNode_BlendListByFloatComparison;

// ScriptStruct GbxGame.GbxSceneViewerDef
// 0x0040 (0x0058 - 0x0018)
struct FGbxSceneViewerDef : public FGbxDef
{
public:
	struct FIntPoint                              FallbackRenderTargetSize;                          // 0x0018(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              SceneViewOffset_4way;                              // 0x0020(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              SceneViewOffset_Vertical;                          // 0x0030(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETextureRenderTargetFormat                    RenderTargetPixelFormat;                           // 0x0040(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         WarmupFrameNumber;                                 // 0x0044(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           WarmupBackgroundColor;                             // 0x0048(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxSceneViewerDef;

// ScriptStruct GbxGame.GbxStandInViewerDef
// 0x0010 (0x0068 - 0x0058)
struct FGbxStandInViewerDef final : public FGbxSceneViewerDef
{
public:
	float                                         MinFOV;                                            // 0x0058(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxFOV;                                            // 0x005C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CameraTransitionTime;                              // 0x0060(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CameraTransitionEaseInExponent;                    // 0x0064(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxStandInViewerDef;

// ScriptStruct GbxGame.GbxDialogEchoPresentationDef
// 0x0028 (0x0040 - 0x0018)
struct FGbxDialogEchoPresentationDef : public FGbxDef
{
public:
	TSoftObjectPtr<class UTexture2D>              SpeakerPortrait;                                   // 0x0018(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxDialogEchoPresentationDef;

// ScriptStruct GbxGame.MeleeDefReboundData
// 0x0028 (0x0028 - 0x0000)
struct FMeleeDefReboundData final
{
public:
	EMeleeReboundTrigger                          ReboundTrigger;                                    // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseLaunchRebound;                                 // 0x0004(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         HitReboundDuration;                                // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReboundDistance;                                   // 0x000C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReboundZLift;                                      // 0x0010(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseFlyingRebound;                                 // 0x0014(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDoNotReboundFurtherThanClosingDistance;           // 0x0015(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ReboundLaunchPower;                                // 0x0018(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGbxMovementMode                              LaunchReboundMovementMode;                         // 0x001C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAllowJumpingDuringLaunchRebound;                  // 0x001D(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MaxSpeedCooldown;                                  // 0x0020(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         maxspeed;                                          // 0x0024(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FMeleeDefReboundData;

// ScriptStruct GbxGame.GbxGameModeTags
// 0x0000 (0x0020 - 0x0020)
struct FGbxGameModeTags final : public FNexusBitSet
{
};
DUMPER7_ASSERTS_FGbxGameModeTags;

// ScriptStruct GbxGame.MissionDependencyCondition
// 0x0000 (0x0008 - 0x0008)
struct FMissionDependencyCondition : public FGbxHasStructType
{
};
DUMPER7_ASSERTS_FMissionDependencyCondition;

// ScriptStruct GbxGame.MissionDependencyCondition_Objective
// 0x0028 (0x0030 - 0x0008)
struct FMissionDependencyCondition_Objective final : public FMissionDependencyCondition
{
public:
	FGbxDefPtrProperty_                           mission;                                           // 0x0008(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSToken                                Objective;                                         // 0x0020(0x000C)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMissionDependencyConditionObjectiveStatus    ConditionStatus;                                   // 0x002C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FMissionDependencyCondition_Objective;

// ScriptStruct GbxGame.DangerZoneCrack
// 0x0020 (0x0020 - 0x0000)
struct FDangerZoneCrack final
{
public:
	TArray<class UStaticMeshComponent*>           CrackComponents;                                   // 0x0000(0x0010)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPublic)
	uint8                                         Pad_10[0x10];                                      // 0x0010(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FDangerZoneCrack;

// ScriptStruct GbxGame.EffectivePlayerCountData
// 0x0008 (0x0008 - 0x0000)
struct FEffectivePlayerCountData final
{
public:
	int32                                         EffectiveNumPlayers;                               // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEffectivePlayerCountSetting                  Setting;                                           // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FEffectivePlayerCountData;

// ScriptStruct GbxGame.GbxDialogLineData
// 0x0060 (0x0060 - 0x0000)
struct FGbxDialogLineData final
{
public:
	uint8                                         Pad_0[0x8];                                        // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   LineName;                                          // 0x0008(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_10[0x8];                                       // 0x0010(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Text;                                              // 0x0018(0x0010)(Edit, NativeAccessSpecifierPrivate)
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAudioEvent                         DialogAudioEvent;                                  // 0x0030(0x0030)(Edit, Transient, EditConst, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxDialogLineData;

// ScriptStruct GbxGame.GbxDialogLineSlotDef
// 0x0030 (0x0048 - 0x0018)
struct FGbxDialogLineSlotDef final : public FGbxDef
{
public:
	TArray<struct FGbxDialogLineData>             Lines;                                             // 0x0018(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_28[0x20];                                      // 0x0028(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxDialogLineSlotDef;

// ScriptStruct GbxGame.GbxGlobalsProgression
// 0x0030 (0x0050 - 0x0020)
struct FGbxGlobalsProgression final : public FGbxGlobalDef
{
public:
	FGbxDefPtrProperty_                           DefaultProgressPointsPool;                         // 0x0020(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	FGbxDefPtrProperty_                           GlobalProgressGraphs;                              // 0x0038(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxGlobalsProgression;

// ScriptStruct GbxGame.ProjectileMovementModifierData
// 0x0000 (0x0008 - 0x0008)
struct FProjectileMovementModifierData : public FGbxHasStructType
{
};
DUMPER7_ASSERTS_FProjectileMovementModifierData;

// ScriptStruct GbxGame.GbxEntitlementStrategy
// 0x0000 (0x0008 - 0x0008)
struct FGbxEntitlementStrategy : public FGbxHasStructType
{
};
DUMPER7_ASSERTS_FGbxEntitlementStrategy;

// ScriptStruct GbxGame.GbxEntitlementStrategy_Reward
// 0x0000 (0x0008 - 0x0008)
struct FGbxEntitlementStrategy_Reward final : public FGbxEntitlementStrategy
{
};
DUMPER7_ASSERTS_FGbxEntitlementStrategy_Reward;

// ScriptStruct GbxGame.GbxAudioBodyAction
// 0x0000 (0x0008 - 0x0008)
struct FGbxAudioBodyAction : public FGbxHasStructType
{
};
DUMPER7_ASSERTS_FGbxAudioBodyAction;

// ScriptStruct GbxGame.GbxStatusEffectDOTResourceStrategy
// 0x0000 (0x0008 - 0x0008)
struct FGbxStatusEffectDOTResourceStrategy : public FGbxHasStructType
{
};
DUMPER7_ASSERTS_FGbxStatusEffectDOTResourceStrategy;

// ScriptStruct GbxGame.GbxStatusEffectDOTResourceStrategy_Capped
// 0x0008 (0x0010 - 0x0008)
struct FGbxStatusEffectDOTResourceStrategy_Capped final : public FGbxStatusEffectDOTResourceStrategy
{
public:
	int32                                         CapSize;                                           // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EGbxStatusEffectDOTSelectionCriteria          SelectionCriteria;                                 // 0x000C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EGbxStatusEffectDOTReplaceCriteria            ReplaceCriteria;                                   // 0x000D(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxStatusEffectDOTResourceStrategy_Capped;

// ScriptStruct GbxGame.GbxUnlockableNodeData
// 0x0080 (0x0080 - 0x0000)
struct FGbxUnlockableNodeData final
{
public:
	class FName                                   alias;                                             // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bUseMaxProgressPoints;                             // 0x0008(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MaxProgressPoints;                                 // 0x000C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bUseMaxProgressPointsAsActivationCost;             // 0x0010(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxInlineStruct                       ItemData;                                          // 0x0018(0x0018)(Edit, NativeAccessSpecifierPrivate)
	struct FGbxInlineStruct                       Condition;                                         // 0x0030(0x0018)(Edit, NativeAccessSpecifierPrivate)
	FGbxDefPtrProperty_                           DisplayData;                                       // 0x0048(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTagContainer                  GameplayTags;                                      // 0x0060(0x0020)(Edit, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxUnlockableNodeData;

// ScriptStruct GbxGame.GbxUnlockableGroupData
// 0x0110 (0x0110 - 0x0000)
struct FGbxUnlockableGroupData final
{
public:
	class FName                                   alias;                                             // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class FName>                           nodes;                                             // 0x0008(0x0010)(Edit, ZeroConstructor, NoClear, NativeAccessSpecifierPrivate)
	struct FGbxInlineStruct                       Condition;                                         // 0x0018(0x0018)(Edit, NativeAccessSpecifierPrivate)
	struct FGbxAttributeInit                      MaxNodesCanBeActiveAtOneTime;                      // 0x0030(0x0050)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	bool                                          bHasNodeActivationlevel;                           // 0x0080(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAttributeInit                      NodeActivationLevel;                               // 0x0088(0x0050)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	FGbxDefPtrProperty_                           DisplayData;                                       // 0x00D8(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTagContainer                  GameplayTags;                                      // 0x00F0(0x0020)(Edit, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxUnlockableGroupData;

// ScriptStruct GbxGame.GbxProgressGraphDef
// 0x0130 (0x0148 - 0x0018)
struct FGbxProgressGraphDef final : public FGbxDef
{
public:
	EGbxProgressGraphType                         GraphType;                                         // 0x0018(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FGbxDefPtrProperty_                           PointPool;                                         // 0x0020(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGbxInlineStruct                       Condition;                                         // 0x0038(0x0018)(Edit, NativeAccessSpecifierPrivate)
	struct FGbxInlineStruct                       ActivationCondition;                               // 0x0050(0x0018)(Edit, NativeAccessSpecifierPrivate)
	TMap<class FName, struct FGbxUnlockableNodeData> nodes;                                          // 0x0068(0x0050)(Edit, NativeAccessSpecifierPrivate)
	TMap<class FName, struct FGbxUnlockableGroupData> Groups;                                        // 0x00B8(0x0050)(Edit, NativeAccessSpecifierPrivate)
	bool                                          bDeactivateNodesWhenLocked;                        // 0x0108(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bAllowNodesInMultipleGroups;                       // 0x0109(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_10A[0x6];                                      // 0x010A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	FGbxDefPtrProperty_                           DisplayData;                                       // 0x0110(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTagContainer                  GameplayTags;                                      // 0x0128(0x0020)(Edit, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxProgressGraphDef;

// ScriptStruct GbxGame.GameResourcePoolContextResolver
// 0x0018 (0x0020 - 0x0008)
struct FGameResourcePoolContextResolver final : public FAttributeContextResolver
{
public:
	FGameDataHandleProperty_                      ResourceDef;                                       // 0x0008(0x0018)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
};
DUMPER7_ASSERTS_FGameResourcePoolContextResolver;

// ScriptStruct GbxGame.BreadcrumbDef
// 0x0030 (0x0048 - 0x0018)
struct FBreadcrumbDef final : public FGbxDef
{
public:
	struct FVector                                Location;                                          // 0x0018(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                           Links;                                             // 0x0030(0x0010)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	uint8                                         BreadcrumbGroup;                                   // 0x0040(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPrioritized;                                      // 0x0041(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FBreadcrumbDef;

// ScriptStruct GbxGame.GbxSkillComponent_TimerEx
// 0x0010 (0x0060 - 0x0050)
struct FGbxSkillComponent_TimerEx final : public FGbxSkillComponent
{
public:
	uint8                                         Pad_50[0x10];                                      // 0x0050(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxSkillComponent_TimerEx;

// ScriptStruct GbxGame.MissionActionCondition
// 0x0008 (0x0010 - 0x0008)
struct FMissionActionCondition : public FGbxHasStructType
{
public:
	bool                                          bInvert;                                           // 0x0008(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FMissionActionCondition;

// ScriptStruct GbxGame.FiringPatternSample
// 0x0068 (0x0068 - 0x0000)
struct FFiringPatternSample final
{
public:
	struct FRotator                               StartRotation;                                     // 0x0000(0x0018)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                               EndRotation;                                       // 0x0018(0x0018)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                StartLocation;                                     // 0x0030(0x0018)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                EndLocation;                                       // 0x0048(0x0018)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseEndRotation;                                   // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseEndLocation;                                   // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseID;                                            // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         ID;                                                // 0x0063(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FFiringPatternSample;

// ScriptStruct GbxGame.FiringPatternDef
// 0x0028 (0x0040 - 0x0018)
struct FFiringPatternDef final : public FGbxDef
{
public:
	TArray<struct FFiringPatternSample>           Samples;                                           // 0x0018(0x0010)(Edit, EditFixedSize, ZeroConstructor, DisableEditOnInstance, NoClear, Protected, NativeAccessSpecifierProtected)
	bool                                          bFireRandomlyFromPattern;                          // 0x0028(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bResetPatternAfterEachShot;                        // 0x0029(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bScalePattern;                                     // 0x002A(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bLerpAcrossFiringLineBasedOnProjectileCountWithinEachShot; // 0x002B(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bSuppressWeaponSpread;                             // 0x002C(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bSingleWeaponSpread;                               // 0x002D(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bDisableTracerThrottling;                          // 0x002E(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2F[0x1];                                       // 0x002F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         BasePatternScale;                                  // 0x0030(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MinPatternScale;                                   // 0x0034(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         RequiredProjectilesPerShot;                        // 0x0038(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FFiringPatternDef;

// ScriptStruct GbxGame.BinderBehaviorMod_RegisterFactEvaluator
// 0x0070 (0x0088 - 0x0018)
struct FBinderBehaviorMod_RegisterFactEvaluator final : public FFactsBinderBehaviorMod
{
public:
	uint8                                         Pad_18[0x70];                                      // 0x0018(0x0070)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FBinderBehaviorMod_RegisterFactEvaluator;

// ScriptStruct GbxGame.GbxRotationTargetModifierData
// 0x0000 (0x0008 - 0x0008)
struct FGbxRotationTargetModifierData : public FGbxHasStructType
{
};
DUMPER7_ASSERTS_FGbxRotationTargetModifierData;

// ScriptStruct GbxGame.GbxRotationTargetModifierData_AlphaScale
// 0x0008 (0x0010 - 0x0008)
struct FGbxRotationTargetModifierData_AlphaScale final : public FGbxRotationTargetModifierData
{
public:
	float                                         AlphaScale;                                        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxRotationTargetModifierData_AlphaScale;

// ScriptStruct GbxGame.AvatarSettingChannel
// 0x0018 (0x0018 - 0x0000)
struct FAvatarSettingChannel final
{
public:
	class FName                                   Name;                                              // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAvatarSerialNumberBuilder             SerialNumber;                                      // 0x0008(0x0010)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FAvatarSettingChannel;

// ScriptStruct GbxGame.AvatarSettings
// 0x0038 (0x0038 - 0x0000)
struct FAvatarSettings final
{
public:
	uint8                                         Pad_0[0x8];                                        // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bForceAvatarUse;                                   // 0x0008(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FGbxDefPtrProperty_                           Requirements;                                      // 0x0010(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FAvatarSettingChannel>          Channels;                                          // 0x0028(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FAvatarSettings;

// ScriptStruct GbxGame.GbxDroneDef
// 0x0608 (0x0CF8 - 0x06F0)
struct FGbxDroneDef : public FProjectileDef
{
public:
	bool                                          bUseInitialVelocity;                               // 0x06F0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGbxDroneMovementMode                         MovementMode;                                      // 0x06F1(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGbxDroneOrientationMode                      OrientationMode;                                   // 0x06F2(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_6F3[0x5];                                      // 0x06F3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              RotationInterpSpeed;                               // 0x06F8(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              DroneSpeed;                                        // 0x0730(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              HoverSpeed;                                        // 0x0768(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              DroneAccelerationTime;                             // 0x07A0(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              HoverAltitude;                                     // 0x07D8(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              HoverRadius;                                       // 0x0810(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              HoverAngle;                                        // 0x0848(0x0038)(Edit, NativeAccessSpecifierPublic)
	bool                                          bUseHoverAngle;                                    // 0x0880(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_881[0x7];                                      // 0x0881(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UGpsQueryAsset>          HoverQuery;                                        // 0x0888(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UGpsQueryAsset>          WaypointQuery;                                     // 0x08B0(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseHoverQuery;                                    // 0x08D8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8D9[0x7];                                      // 0x08D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              HoverQueryTolerance;                               // 0x08E0(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              StopFlyAtTargetDistance;                           // 0x0918(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              DecelerateToTargetDistance;                        // 0x0950(0x0038)(Edit, NativeAccessSpecifierPublic)
	bool                                          bUseDecelerateToTargetDistance;                    // 0x0988(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGbxDroneMovementMode                         TargetReachedMovementMode;                         // 0x0989(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCollideWhileFlyingToTarget;                       // 0x098A(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_98B[0x5];                                      // 0x098B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	FGbxDefPtrProperty_                           PerchUser;                                         // 0x0990(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxParam                              OrbitSpeed;                                        // 0x09A8(0x0038)(Edit, NativeAccessSpecifierPublic)
	bool                                          bUseOrbitLagSpeed;                                 // 0x09E0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9E1[0x7];                                      // 0x09E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              OrbitLagSpeed;                                     // 0x09E8(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              OrbitAltitude;                                     // 0x0A20(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              OrbitRadius;                                       // 0x0A58(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              OrbitAltitudeThreshold;                            // 0x0A90(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              OrbitRadiusThreshold;                              // 0x0AC8(0x0038)(Edit, NativeAccessSpecifierPublic)
	EGbxDroneOrbitDirection                       OrbitDirection;                                    // 0x0B00(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bVaryOrbitRadius;                                  // 0x0B01(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B02[0x6];                                      // 0x0B02(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              OrbitRadiusVaryRate;                               // 0x0B08(0x0038)(Edit, NativeAccessSpecifierPublic)
	bool                                          bVaryOrbitRadiusDirection;                         // 0x0B40(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B41[0x7];                                      // 0x0B41(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              RandomRadiusDirectionInterval;                     // 0x0B48(0x0038)(Edit, NativeAccessSpecifierPublic)
	bool                                          bVaryOrbitAltitude;                                // 0x0B80(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B81[0x7];                                      // 0x0B81(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              OrbitAltitudeVaryRate;                             // 0x0B88(0x0038)(Edit, NativeAccessSpecifierPublic)
	bool                                          bVaryOrbitAltitudeDirection;                       // 0x0BC0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_BC1[0x7];                                      // 0x0BC1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              RandomAltitudeDirectionInterval;                   // 0x0BC8(0x0038)(Edit, NativeAccessSpecifierPublic)
	EGbxDroneDeactivateMode                       DeactivateMode;                                    // 0x0C00(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDeactivateWhenTargetDies;                         // 0x0C01(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDeactivateWhenInstigatorDies;                     // 0x0C02(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGbxDroneDeactivateMode                       DeathMode;                                         // 0x0C03(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bTargetingEnabled;                                 // 0x0C04(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C05[0x3];                                      // 0x0C05(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAttributeInit                      TargetingDelay;                                    // 0x0C08(0x0050)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bUseTargetingForMovement;                          // 0x0C58(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseTargetingForOrientation;                       // 0x0C59(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C5A[0x6];                                      // 0x0C5A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UGpsQueryAsset>          TargetingQuery;                                    // 0x0C60(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      Perception;                                        // 0x0C88(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxActorPartOwnerData                 GbxActorPartOwnerData;                             // 0x0CA0(0x0020)(Edit, NativeAccessSpecifierPublic)
	struct FAvatarSettings                        AvatarSettings;                                    // 0x0CC0(0x0038)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxDroneDef;

// ScriptStruct GbxGame.GbxMusicAudioProviderDef
// 0x0000 (0x0148 - 0x0148)
struct FGbxMusicAudioProviderDef final : public FGbxAudioProviderDef
{
};
DUMPER7_ASSERTS_FGbxMusicAudioProviderDef;

// ScriptStruct GbxGame.GbxCapitalDef
// 0x0030 (0x0048 - 0x0018)
struct FGbxCapitalDef : public FGbxDef
{
public:
	struct FGbxInlineStruct                       GameData;                                          // 0x0018(0x0018)(Edit, NativeAccessSpecifierPublic)
	class FText                                   DisplayName;                                       // 0x0030(0x0010)(Edit, NativeAccessSpecifierPublic)
	EGbxCapitalType                               CapitalType;                                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EGbxCapitalSource                             SourceType;                                        // 0x0041(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxCapitalDef;

// ScriptStruct GbxGame.GbxExperienceDef
// 0x0058 (0x00A0 - 0x0048)
struct FGbxExperienceDef final : public FGbxCapitalDef
{
public:
	FGbxDefPtrProperty_                           progression;                                       // 0x0048(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bStartLocked;                                      // 0x0060(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFactAddress                           UnlockFactAddress;                                 // 0x0068(0x0038)(Edit, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
};
DUMPER7_ASSERTS_FGbxExperienceDef;

// ScriptStruct GbxGame.WaypointAttachmentStrategyState
// 0x0020 (0x0028 - 0x0008)
struct FWaypointAttachmentStrategyState : public FGbxHasStructType
{
public:
	uint8                                         Pad_8[0x20];                                       // 0x0008(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FWaypointAttachmentStrategyState;

// ScriptStruct GbxGame.GbxMomentNodeSettings_And
// 0x0000 (0x0080 - 0x0080)
struct FGbxMomentNodeSettings_And final : public FGbxMomentNodeSettings
{
};
DUMPER7_ASSERTS_FGbxMomentNodeSettings_And;

// ScriptStruct GbxGame.GbxStatusEffectApplicationDefaults
// 0x0000 (0x0008 - 0x0008)
struct FGbxStatusEffectApplicationDefaults : public FTableRowBase
{
};
DUMPER7_ASSERTS_FGbxStatusEffectApplicationDefaults;

// ScriptStruct GbxGame.GbxBrainAspectSettings_Event
// 0x0030 (0x00B0 - 0x0080)
struct FGbxBrainAspectSettings_Event final : public FGbxBrainAspectSettings
{
public:
	class FName                                   OnStartEvent;                                      // 0x0080(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   OnStopEvent;                                       // 0x0088(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   OnSucceededEvent;                                  // 0x0090(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   OnFailedEvent;                                     // 0x0098(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   OnInterruptedEvent;                                // 0x00A0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   OnAbortedEvent;                                    // 0x00A8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxBrainAspectSettings_Event;

// ScriptStruct GbxGame.GbxLevelStationTags
// 0x0000 (0x0020 - 0x0020)
struct FGbxLevelStationTags final : public FNexusBitSet
{
};
DUMPER7_ASSERTS_FGbxLevelStationTags;

// ScriptStruct GbxGame.GbxGameModeIdent
// 0x0028 (0x0028 - 0x0000)
struct FGbxGameModeIdent final
{
public:
	struct FSName                                 Ident;                                             // 0x0000(0x0028)(HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxGameModeIdent;

// ScriptStruct GbxGame.GbxLevelStationDef
// 0x01A0 (0x01B8 - 0x0018)
struct FGbxLevelStationDef final : public FGbxDef
{
public:
	FGbxDefPtrProperty_                           TypeDef;                                           // 0x0018(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsDefaultInstance;                                // 0x0030(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAllowInDemoMode;                                  // 0x0031(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxInlineStruct                       GameSpecificData;                                  // 0x0038(0x0018)(Edit, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      ZoneHandle;                                        // 0x0050(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                loc;                                               // 0x0068(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               rot;                                               // 0x0080(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class FText                                   DisplayName;                                       // 0x0098(0x0010)(Edit, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      Dest;                                              // 0x00A8(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Dest_Options;                                      // 0x00C0(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxGameModeIdent                      Dest_Mode;                                         // 0x00D0(0x0028)(Edit, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      Dest_Team;                                         // 0x00F8(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxLevelStationTags                   Dest_Tags;                                         // 0x0110(0x0020)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      Team;                                              // 0x0130(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxLevelStationTags                   tags;                                              // 0x0148(0x0020)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FFactExpression                        dependency;                                        // 0x0168(0x0010)(Edit, NativeAccessSpecifierPublic)
	struct FGbxInlineStruct                       MissionDependency;                                 // 0x0178(0x0018)(Edit, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      PreviousStation;                                   // 0x0190(0x0018)(Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A8[0x10];                                     // 0x01A8(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxLevelStationDef;

// ScriptStruct GbxGame.UIDisplayDataDef_RewardType
// 0x0058 (0x0070 - 0x0018)
struct FUIDisplayDataDef_RewardType final : public FGbxDef
{
public:
	struct FGameplayTag                           CategoryTag;                                       // 0x0018(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   CategoryText;                                      // 0x0020(0x0010)(Edit, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>              ItemCardIcon;                                      // 0x0030(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           TooltipData;                                       // 0x0058(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FUIDisplayDataDef_RewardType;

// ScriptStruct GbxGame.RegistryJunkModifier
// 0x0058 (0x0060 - 0x0008)
struct FRegistryJunkModifier : public FGbxHasStructType
{
public:
	uint8                                         Pad_8[0x58];                                       // 0x0008(0x0058)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FRegistryJunkModifier;

// ScriptStruct GbxGame.RegistryJunkModifier_MissionPickup
// 0x0020 (0x0080 - 0x0060)
struct FRegistryJunkModifier_MissionPickup : public FRegistryJunkModifier
{
public:
	uint8                                         Pad_60[0x20];                                      // 0x0060(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FRegistryJunkModifier_MissionPickup;

// ScriptStruct GbxGame.GbxRotationContextualOverrideSettings
// 0x0220 (0x0258 - 0x0038)
struct FGbxRotationContextualOverrideSettings final : public FGbxRotationNodeBaseSettings
{
public:
	struct FGbxParam                              Condition;                                         // 0x0038(0x0038)(Edit, NativeAccessSpecifierPublic)
	bool                                          bCheckConditionOnInit;                             // 0x0070(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGbxRotationInterpType                        InterpType;                                        // 0x0071(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              RotationRate;                                      // 0x0078(0x0038)(Edit, NativeAccessSpecifierPublic)
	class FName                                   PivotBone;                                         // 0x00B0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxParam                              BlendInTime;                                       // 0x00B8(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              BlendOutTime;                                      // 0x00F0(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              AlphaBlendSpeed;                                   // 0x0128(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FNumericRange                          ClampYawRange;                                     // 0x0160(0x0008)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FNumericRange                          ClampPitchRange;                                   // 0x0168(0x0008)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FGbxParam                              BoostWithParentRotation;                           // 0x0170(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              DragParentIfClamped;                               // 0x01A8(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              Disable;                                           // 0x01E0(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              Pause;                                             // 0x0218(0x0038)(Edit, NativeAccessSpecifierPublic)
	uint8                                         bOverrideInterpType : 1;                           // 0x0250(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bOverrideRotationRate : 1;                         // 0x0250(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bOverridePivotBone : 1;                            // 0x0250(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bOverrideBlendInTime : 1;                          // 0x0250(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bOverrideBlendOutTime : 1;                         // 0x0250(0x0001)(BitIndex: 0x04, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bOverrideAlphaBlendSpeed : 1;                      // 0x0250(0x0001)(BitIndex: 0x05, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bOverrideClampYawRange : 1;                        // 0x0250(0x0001)(BitIndex: 0x06, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bOverrideClampPitchRange : 1;                      // 0x0250(0x0001)(BitIndex: 0x07, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bOverrideBoostWithParentRotation : 1;              // 0x0251(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bOverrideDragParentIfClamped : 1;                  // 0x0251(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_252[0x6];                                      // 0x0252(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxRotationContextualOverrideSettings;

// ScriptStruct GbxGame.GbxSkillActionBinding
// 0x0014 (0x0014 - 0x0000)
struct FGbxSkillActionBinding final
{
public:
	int32                                         ActionID;                                          // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ActionEventName;                                   // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   EventName;                                         // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxSkillActionBinding;

// ScriptStruct GbxGame.GbxActorStateMachineAspect_PlayTrick
// 0x0008 (0x0058 - 0x0050)
struct FGbxActorStateMachineAspect_PlayTrick final : public FGbxActorStateMachineAspect
{
public:
	uint8                                         Pad_50[0x8];                                       // 0x0050(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxActorStateMachineAspect_PlayTrick;

// ScriptStruct GbxGame.GbxBrainAspect_EngagePlayers
// 0x0010 (0x00E8 - 0x00D8)
struct FGbxBrainAspect_EngagePlayers final : public FGbxBrainAspect
{
public:
	uint8                                         Pad_D8[0x10];                                      // 0x00D8(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainAspect_EngagePlayers;

// ScriptStruct GbxGame.GbxSequencePlaybackSettings
// 0x0010 (0x0010 - 0x0000)
struct FGbxSequencePlaybackSettings final
{
public:
	struct FMovieSceneSequenceLoopCount           LoopCount;                                         // 0x0000(0x0004)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	float                                         PlayRate;                                          // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StartTime;                                         // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bRandomStartTime : 1;                              // 0x000C(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bRestoreState : 1;                                 // 0x000C(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bPauseAtEnd : 1;                                   // 0x000C(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bReversePlayback : 1;                              // 0x000C(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxSequencePlaybackSettings;

// ScriptStruct GbxGame.VariantDetailsCommonProp_Text
// 0x0010 (0x0010 - 0x0000)
struct FVariantDetailsCommonProp_Text final
{
public:
	class FText                                   TextValue;                                         // 0x0000(0x0010)(NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FVariantDetailsCommonProp_Text;

// ScriptStruct GbxGame.GbxStatusEffectDriverInstanceStackStrategy
// 0x0000 (0x0008 - 0x0008)
struct FGbxStatusEffectDriverInstanceStackStrategy : public FGbxHasStructType
{
};
DUMPER7_ASSERTS_FGbxStatusEffectDriverInstanceStackStrategy;

// ScriptStruct GbxGame.GbxLevelStationProjectSpecific
// 0x0000 (0x0008 - 0x0008)
struct FGbxLevelStationProjectSpecific : public FGbxHasStructType
{
};
DUMPER7_ASSERTS_FGbxLevelStationProjectSpecific;

// ScriptStruct GbxGame.PlatformGameplaySessionInfo
// 0x0030 (0x0030 - 0x0000)
struct FPlatformGameplaySessionInfo final
{
public:
	class FString                                 platformname;                                      // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 SessionOwner;                                      // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 SessionId;                                         // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FPlatformGameplaySessionInfo;

// ScriptStruct GbxGame.GbxUnlockableItemData
// 0x0000 (0x0008 - 0x0008)
struct FGbxUnlockableItemData : public FGbxHasStructType
{
};
DUMPER7_ASSERTS_FGbxUnlockableItemData;

// ScriptStruct GbxGame.GbxLevelStationTypeDef
// 0x0040 (0x0058 - 0x0018)
struct FGbxLevelStationTypeDef final : public FGbxDef
{
public:
	class FString                                 DebugDisplayName;                                  // 0x0018(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNexusLocationIsFinal;                             // 0x0028(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsHoldingStation;                                 // 0x0029(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsMainMenuStation;                                // 0x002A(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsCharacterSelectStation;                         // 0x002B(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsVirtualStation;                                 // 0x002C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCanBePlayerStart;                                 // 0x002D(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCanDoPlayerRespawn;                               // 0x002E(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCanDoPlayerRespawnForSeamlessTravel;              // 0x002F(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCanBePlayerCheckpoint;                            // 0x0030(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCanBeHostCheckpoint;                              // 0x0031(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDisableAreaComponent;                             // 0x0032(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDoesLevelTravel;                                  // 0x0033(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDoesFastTravel;                                   // 0x0034(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSendOnly;                                         // 0x0035(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxInlineStruct                       GameSpecificData;                                  // 0x0038(0x0018)(Edit, NativeAccessSpecifierPublic)
	EStationLockStatus                            DefaultLockStatus;                                 // 0x0050(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxLevelStationTypeDef;

// ScriptStruct GbxGame.GbxLevelStationTypeProjectSpecific
// 0x0000 (0x0008 - 0x0008)
struct FGbxLevelStationTypeProjectSpecific : public FGbxHasStructType
{
};
DUMPER7_ASSERTS_FGbxLevelStationTypeProjectSpecific;

// ScriptStruct GbxGame.MissionGraphAliasTypeData_MissionFact
// 0x0008 (0x0020 - 0x0018)
struct FMissionGraphAliasTypeData_MissionFact final : public FMissionGraphAliasTypeData_FactBase
{
public:
	EMissionGraphMissionFactLifetime              FactLifetime;                                      // 0x0018(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FMissionGraphAliasTypeData_MissionFact;

// ScriptStruct GbxGame.GbxAnimNode_RiderController
// 0x00B8 (0x0188 - 0x00D0)
struct FGbxAnimNode_RiderController final : public FAnimNode_SkeletalControlBase
{
public:
	uint8                                         Pad_D0[0x8C];                                      // 0x00D0(0x008C)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MaxDisplacement;                                   // 0x015C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LinearDamping;                                     // 0x0160(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GravityMag;                                        // 0x0164(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CollisionDamping;                                  // 0x0168(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AlphaRotation;                                     // 0x016C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FNumericRange                          PitchClamp;                                        // 0x0170(0x0008)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FNumericRange                          RollClamp;                                         // 0x0178(0x0008)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         bLimitDisplacement : 1;                            // 0x0180(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bTranslateX : 1;                                   // 0x0180(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bTranslateY : 1;                                   // 0x0180(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bTranslateZ : 1;                                   // 0x0180(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxAnimNode_RiderController;

// ScriptStruct GbxGame.AvatarAppearance
// 0x01C8 (0x01C8 - 0x0000)
struct alignas(0x08) FAvatarAppearance final
{
public:
	uint8                                         Pad_0[0x1C8];                                      // 0x0000(0x01C8)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FAvatarAppearance;

// ScriptStruct GbxGame.GbxGameSpawnerBehaviorMod
// 0x0430 (0x0448 - 0x0018)
struct FGbxGameSpawnerBehaviorMod : public FFactsBinderBehaviorMod
{
public:
	uint8                                         Pad_18[0x430];                                     // 0x0018(0x0430)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxGameSpawnerBehaviorMod;

// ScriptStruct GbxGame.GbxStatusEffectPresentationGraphNodeSettings_Effect
// 0x0000 (0x0038 - 0x0038)
struct FGbxStatusEffectPresentationGraphNodeSettings_Effect : public FGbxStatusEffectPresentationGraphNodeSettings
{
};
DUMPER7_ASSERTS_FGbxStatusEffectPresentationGraphNodeSettings_Effect;

// ScriptStruct GbxGame.GbxStatusEffectPresentationGraphNodeSettings_Effect_NiagaraScreen
// 0x0048 (0x0080 - 0x0038)
struct FGbxStatusEffectPresentationGraphNodeSettings_Effect_NiagaraScreen final : public FGbxStatusEffectPresentationGraphNodeSettings_Effect
{
public:
	struct FScreenParticleInitParams              ParticleParams;                                    // 0x0038(0x0038)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	TArray<struct FGbxInlineStruct>               params;                                            // 0x0070(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxStatusEffectPresentationGraphNodeSettings_Effect_NiagaraScreen;

// ScriptStruct GbxGame.GbxLevelStreamingDef
// 0x0090 (0x00A8 - 0x0018)
struct FGbxLevelStreamingDef final : public FGbxDef
{
public:
	bool                                          bEnabled;                                          // 0x0018(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CustomMenuCategory;                                // 0x001C(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   Filename;                                          // 0x0024(0x0008)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UWorld>                  mappath;                                           // 0x0030(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGbxInlineStruct                       auto_save_infos;                                   // 0x0058(0x0018)(Edit, NativeAccessSpecifierPrivate)
	struct FVector2D                              NorthVector;                                       // 0x0070(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_80[0x28];                                      // 0x0080(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxLevelStreamingDef;

// ScriptStruct GbxGame.GbxActorStateMachineAspect_PlayAnim
// 0x0000 (0x0050 - 0x0050)
struct FGbxActorStateMachineAspect_PlayAnim final : public FGbxActorStateMachineAspect
{
};
DUMPER7_ASSERTS_FGbxActorStateMachineAspect_PlayAnim;

// ScriptStruct GbxGame.GbxTwoBoneIKState
// 0x02D0 (0x02D0 - 0x0000)
struct FGbxTwoBoneIKState
{
public:
	uint8                                         Pad_0[0x10];                                       // 0x0000(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBoneReference                         IKBone;                                            // 0x0010(0x0010)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBoneReference                         OffsetBone;                                        // 0x0020(0x0010)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StartStretchRatio;                                 // 0x0030(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxStretchScale;                                   // 0x0034(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAxis                                  TwistAxis;                                         // 0x0038(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_58[0x8];                                       // 0x0058(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBoneSocketTarget                      EffectorTargetOverride;                            // 0x0060(0x0090)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                EffectorLocationOverride;                          // 0x00F0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EBoneControlSpace                             EffectorLocationSpaceOverride;                     // 0x0108(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	EBoneControlSpace                             JointTargetLocationSpace;                          // 0x0110(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_111[0xF];                                      // 0x0111(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBoneSocketTarget                      JointTarget;                                       // 0x0120(0x0090)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                JointTargetLocation;                               // 0x01B0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C8[0x4];                                      // 0x01C8(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TakeRotationFromEffectorSpace;                     // 0x01CC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaintainEffectorRelRot;                            // 0x01D0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SoftPercentLength;                                 // 0x01D4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SoftAlpha;                                         // 0x01D8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bAllowStretching : 1;                              // 0x01DC(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bAllowTwist : 1;                                   // 0x01DC(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bOverrideEffector : 1;                             // 0x01DC(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bOverrideAlpha : 1;                                // 0x01DC(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_1DD[0x3];                                      // 0x01DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AlphaOverride;                                     // 0x01E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1E4[0xEC];                                     // 0x01E4(0x00EC)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxTwoBoneIKState;

// ScriptStruct GbxGame.GbxMomentNodeState_StopDialogLoop
// 0x0000 (0x0070 - 0x0070)
struct FGbxMomentNodeState_StopDialogLoop final : public FGbxMomentNodeState
{
};
DUMPER7_ASSERTS_FGbxMomentNodeState_StopDialogLoop;

// ScriptStruct GbxGame.MissionArchetypeDef
// 0x0028 (0x0040 - 0x0018)
struct FMissionArchetypeDef final : public FGbxDef
{
public:
	struct FMissionTransitionPersistence          TransitionPersistence;                             // 0x0018(0x0020)(Edit, NativeAccessSpecifierPublic)
	EMissionNetScope                              NetScope;                                          // 0x0038(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FMissionArchetypeDef;

// ScriptStruct GbxGame.GameResourcePoolValueResolver
// 0x0020 (0x0028 - 0x0008)
struct FGameResourcePoolValueResolver final : public FAttributeValueResolver
{
public:
	EGameResourcePoolValueType                    ValueType;                                         // 0x0008(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FGameDataHandleProperty_                      ResourceDef;                                       // 0x0010(0x0018)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
};
DUMPER7_ASSERTS_FGameResourcePoolValueResolver;

// ScriptStruct GbxGame.SpawnPatternDef
// 0x00C8 (0x00E0 - 0x0018)
struct FSpawnPatternDef final : public FGbxDef
{
public:
	uint8                                         bEnableSpeedRange : 1;                             // 0x0018(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bEnableAngularSpeedRange : 1;                      // 0x0018(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bApplySpeedAsImpulse : 1;                          // 0x0018(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bApplyAngularSpeedAsImpulse : 1;                   // 0x0018(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bPickRandomPointInActorBounds : 1;                 // 0x0018(0x0001)(BitIndex: 0x04, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bScaleSpeedByIncomingImpulse : 1;                  // 0x0018(0x0001)(BitIndex: 0x05, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         speed;                                             // 0x001C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         maxspeed;                                          // 0x0020(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxRelativeRotation                   Direction;                                         // 0x0028(0x0030)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	float                                         AngularSpeed;                                      // 0x0058(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxAngularSpeed;                                   // 0x005C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxRelativeRotation                   RotationAxis;                                      // 0x0060(0x0030)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                ActorBoundsScale;                                  // 0x0090(0x0018)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bEnableRadius : 1;                                 // 0x00A8(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bEnableRadiusRange : 1;                            // 0x00A8(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Radius;                                            // 0x00AC(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxRadius;                                         // 0x00B0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UGbxTrick_CoordinatedEffect> SpawnTrick;                                    // 0x00B8(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSpawnPatternDef;

// ScriptStruct GbxGame.AIDodgeBasicInfo
// 0x0118 (0x0118 - 0x0000)
struct FAIDodgeBasicInfo
{
public:
	struct FGbxParam                              cooldown;                                          // 0x0000(0x0038)(Edit, NativeAccessSpecifierPublic)
	class UGbxTrick*                              Action;                                            // 0x0038(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxInlineStruct                       Condition;                                         // 0x0040(0x0018)(Edit, NativeAccessSpecifierPublic)
	struct FGbxAITicketUseData                    TicketSettings;                                    // 0x0058(0x00B8)(Edit, NativeAccessSpecifierPublic)
	bool                                          bUseTicketSettings;                                // 0x0110(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FAIDodgeBasicInfo;

// ScriptStruct GbxGame.AIDodgeInfo
// 0x0088 (0x01A0 - 0x0118)
struct FAIDodgeInfo final : public FAIDodgeBasicInfo
{
public:
	struct FGbxParam                              Chance;                                            // 0x0118(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              delay;                                             // 0x0150(0x0038)(Edit, NativeAccessSpecifierPublic)
	float                                         MaxAngle;                                          // 0x0188(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxDistance;                                       // 0x018C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinShooterDistance;                                // 0x0190(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxShooterDistance;                                // 0x0194(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRemoveAllDelay;                                   // 0x0198(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLimitAngle;                                       // 0x0199(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLimitDistance;                                    // 0x019A(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLimitMinShooterDistance;                          // 0x019B(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLimitMaxShooterDistance;                          // 0x019C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19D[0x3];                                      // 0x019D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FAIDodgeInfo;

// ScriptStruct GbxGame.AIDodgeInstance
// 0x0030 (0x0030 - 0x0000)
struct FAIDodgeInstance final
{
public:
	class UGbxTrick*                              Action;                                            // 0x0000(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 SourceActor;                                       // 0x0008(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_10[0x20];                                      // 0x0010(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FAIDodgeInstance;

// ScriptStruct GbxGame.AIDodgeState
// 0x0910 (0x0910 - 0x0000)
struct FAIDodgeState final
{
public:
	uint8                                         Pad_0[0x30];                                       // 0x0000(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 OwnerActor;                                        // 0x0030(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TScriptInterface<class IAIDodger>             owner;                                             // 0x0038(0x0010)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_48[0x78];                                      // 0x0048(0x0078)(Fixing Size After Last Property [ Dumper-7 ])
	class UAIDodgeData*                           CurrentDodgeData;                                  // 0x00C0(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FAIDodgeInfo                           DodgeBullet;                                       // 0x00C8(0x01A0)(Edit, NativeAccessSpecifierPrivate)
	struct FAIDodgeInfo                           DodgeGrenade;                                      // 0x0268(0x01A0)(Edit, NativeAccessSpecifierPrivate)
	struct FAIDodgeBasicInfo                      DodgeRandom;                                       // 0x0408(0x0118)(Edit, NativeAccessSpecifierPrivate)
	struct FAIDodgeInfo                           DodgeZone;                                         // 0x0520(0x01A0)(Edit, NativeAccessSpecifierPrivate)
	struct FGbxParam                              GlobalCooldown;                                    // 0x06C0(0x0038)(Edit, NativeAccessSpecifierPrivate)
	struct FGbxParam                              CombatStartedWarmup;                               // 0x06F8(0x0038)(Edit, NativeAccessSpecifierPrivate)
	struct FGbxParam                              IsMovingSpeed;                                     // 0x0730(0x0038)(Edit, NativeAccessSpecifierPrivate)
	uint8                                         Pad_768[0x10];                                     // 0x0768(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAIDodgeInstance                       PendingDodge;                                      // 0x0778(0x0030)(Transient, NoDestructor, NativeAccessSpecifierPrivate)
	struct FAIDodgeInstance                       ActiveDodge;                                       // 0x07A8(0x0030)(Transient, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_7D8[0x28];                                     // 0x07D8(0x0028)(Fixing Size After Last Property [ Dumper-7 ])
	class UGbxCharacterMovementComponent*         MovementComponent;                                 // 0x0800(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_808[0x40];                                     // 0x0808(0x0040)(Fixing Size After Last Property [ Dumper-7 ])
	class UGbxNavCharacterMovementComponent*      NavComponent;                                      // 0x0848(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_850[0xC0];                                     // 0x0850(0x00C0)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FAIDodgeState;

// ScriptStruct GbxGame.ReplicatedMissionMessage
// 0x0008 (0x0010 - 0x0008)
struct FReplicatedMissionMessage : public FGbxHasStructType
{
public:
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FReplicatedMissionMessage;

// ScriptStruct GbxGame.ReplicatedMissionFactSetBase
// 0x0018 (0x0028 - 0x0010)
struct FReplicatedMissionFactSetBase : public FReplicatedMissionMessage
{
public:
	uint8                                         Pad_10[0x18];                                      // 0x0010(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FReplicatedMissionFactSetBase;

// ScriptStruct GbxGame.ReplicatedMissionFactChange
// 0x0000 (0x0028 - 0x0028)
struct FReplicatedMissionFactChange final : public FReplicatedMissionFactSetBase
{
};
DUMPER7_ASSERTS_FReplicatedMissionFactChange;

// ScriptStruct GbxGame.RegisteredMissionGiverType
// 0x0180 (0x0188 - 0x0008)
struct FRegisteredMissionGiverType : public FGbxHasStructType
{
public:
	uint8                                         Pad_8[0x180];                                      // 0x0008(0x0180)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FRegisteredMissionGiverType;

// ScriptStruct GbxGame.RegisteredMissionGiverType_Basic
// 0x00A8 (0x0230 - 0x0188)
struct FRegisteredMissionGiverType_Basic final : public FRegisteredMissionGiverType
{
public:
	uint8                                         Pad_188[0xA8];                                     // 0x0188(0x00A8)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FRegisteredMissionGiverType_Basic;

// ScriptStruct GbxGame.GbxCurrencyDef
// 0x0008 (0x0050 - 0x0048)
struct FGbxCurrencyDef final : public FGbxCapitalDef
{
public:
	bool                                          bManagedByShift;                                   // 0x0048(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxCurrencyDef;

// ScriptStruct GbxGame.UnlockableLedgerDef
// 0x0038 (0x0050 - 0x0018)
struct FUnlockableLedgerDef final : public FGbxDef
{
public:
	uint8                                         Pad_18[0x1];                                       // 0x0018(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	EFUnlockableLedgerType                        type;                                              // 0x0019(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ProfileRoot;                                       // 0x001C(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShouldCompress;                                   // 0x0024(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	FGbxDefPtrProperty_                           AssociatedCharacter;                               // 0x0028(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_40[0x10];                                      // 0x0040(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FUnlockableLedgerDef;

// ScriptStruct GbxGame.BinderBehaviorMod_DeathListener
// 0x0018 (0x0030 - 0x0018)
struct FBinderBehaviorMod_DeathListener final : public FFactsBinderBehaviorMod
{
public:
	uint8                                         Pad_18[0x18];                                      // 0x0018(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FBinderBehaviorMod_DeathListener;

// ScriptStruct GbxGame.GbxSkillComponentData_TargetableItem
// 0x0010 (0x0038 - 0x0028)
struct FGbxSkillComponentData_TargetableItem : public FGbxSkillComponentDataItem
{
public:
	TArray<struct FGbxInlineStruct>               Strategies;                                        // 0x0028(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxSkillComponentData_TargetableItem;

// ScriptStruct GbxGame.GbxSkillComponentData_Delegate_Event
// 0x0018 (0x0050 - 0x0038)
struct FGbxSkillComponentData_Delegate_Event final : public FGbxSkillComponentData_TargetableItem
{
public:
	struct FGbxInlineStruct                       Delegate;                                          // 0x0038(0x0018)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxSkillComponentData_Delegate_Event;

// ScriptStruct GbxGame.GbxSkillComponentData_Targetable
// 0x0010 (0x0060 - 0x0050)
struct FGbxSkillComponentData_Targetable : public FGbxSkillComponentData_Activatable
{
public:
	TArray<struct FGbxInlineStruct>               Strategies;                                        // 0x0050(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxSkillComponentData_Targetable;

// ScriptStruct GbxGame.GbxSkillComponentData_Delegate
// 0x0010 (0x0070 - 0x0060)
struct FGbxSkillComponentData_Delegate final : public FGbxSkillComponentData_Targetable
{
public:
	TArray<struct FGbxSkillComponentData_Delegate_Event> events;                                     // 0x0060(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxSkillComponentData_Delegate;

// ScriptStruct GbxGame.DamageSourceHealthTypeModifier
// 0x0030 (0x0030 - 0x0000)
struct alignas(0x08) FDamageSourceHealthTypeModifier final
{
public:
	FGameDataHandleProperty_                      HealthType;                                        // 0x0000(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      InstigatedFriendlyFireHealingModifier;             // 0x0018(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FDamageSourceHealthTypeModifier;

// ScriptStruct GbxGame.InventoryItemFilterData
// 0x0048 (0x0048 - 0x0000)
struct FInventoryItemFilterData final
{
public:
	uint8                                         Pad_0[0x8];                                        // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	FGameDataHandleProperty_                      item;                                              // 0x0008(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FInventorySelectionCriteria            Criteria;                                          // 0x0020(0x0028)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FInventoryItemFilterData;

// ScriptStruct GbxGame.InventoryCustomizationDef
// 0x00E0 (0x0110 - 0x0030)
struct FInventoryCustomizationDef : public FGbxSerialNumberAwareDef
{
public:
	bool                                          bRemoveOnDrop;                                     // 0x0030(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FGbxDefPtrProperty_                           unlockable;                                        // 0x0038(0x0018)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FInventoryItemFilterData               FilterData;                                        // 0x0050(0x0048)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   UIName;                                            // 0x0098(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                   UIDescription;                                     // 0x00A8(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                          bIsDebugBuildable;                                 // 0x00B8(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B9[0x17];                                      // 0x00B9(0x0017)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   DisplayName;                                       // 0x00D0(0x0010)(Edit, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UTexture2D>              icon;                                              // 0x00E0(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         SortOrder;                                         // 0x0108(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FInventoryCustomizationDef;

// ScriptStruct GbxGame.AvatarParameterPreset
// 0x0060 (0x0068 - 0x0008)
struct FAvatarParameterPreset final : public FGbxHasStructType
{
public:
	class FName                                   Name;                                              // 0x0008(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAvatarParameterType                          type;                                              // 0x0010(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Number;                                            // 0x0014(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture>                Texture;                                           // 0x0018(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterialInterface>      Material;                                          // 0x0040(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FAvatarParameterPreset;

// ScriptStruct GbxGame.AvatarParameterPresetVector
// 0x0038 (0x0040 - 0x0008)
struct FAvatarParameterPresetVector final : public FGbxHasStructType
{
public:
	class FName                                   label;                                             // 0x0008(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           Vector;                                            // 0x0010(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   TargetParameters[0x4];                             // 0x0020(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FAvatarParameterPresetVector;

// ScriptStruct GbxGame.AvatarOptionFeaturePresets
// 0x0020 (0x0030 - 0x0010)
struct FAvatarOptionFeaturePresets final : public FAvatarOptionFeatureByAspect
{
public:
	TArray<struct FAvatarParameterPreset>         presets;                                           // 0x0010(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FAvatarParameterPresetVector>   VectorPresets;                                     // 0x0020(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FAvatarOptionFeaturePresets;

// ScriptStruct GbxGame.GbxGameBrainDef
// 0x0000 (0x0088 - 0x0088)
struct FGbxGameBrainDef final : public FGbxBrainDef
{
};
DUMPER7_ASSERTS_FGbxGameBrainDef;

// ScriptStruct GbxGame.GbxWeightedMaterialParameter
// 0x0020 (0x0020 - 0x0000)
struct alignas(0x08) FGbxWeightedMaterialParameter final
{
public:
	FGbxDefPtrProperty_                           MaterialParameters;                                // 0x0000(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Weight;                                            // 0x0018(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxWeightedMaterialParameter;

// ScriptStruct GbxGame.GbxCharacterDef
// 0x0548 (0x0668 - 0x0120)
struct FGbxCharacterDef : public FGbxNavActorDef
{
public:
	float                                         Mass;                                              // 0x0120(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UPhysicsAsset>           HitDetectionPhysicsAsset;                          // 0x0128(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<struct FGameplayTag, struct FForwardDynamicsSettings> ForwardDynamics;                      // 0x0150(0x0050)(Edit, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      DefaultRagdollImpactEffect;                        // 0x01A0(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bTeamCollision;                                    // 0x01B8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIgnoreCollisionWithTeam;                          // 0x01B9(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bProjectilesCollideWithTeam;                       // 0x01BA(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseLagCompensation;                               // 0x01BB(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1BC[0x4];                                      // 0x01BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FGbxDefPtrProperty_                           PerchUser;                                         // 0x01C0(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUsePushComponent;                                 // 0x01D8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsPlayerCharacterClass;                           // 0x01D9(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bShareGestaltTransientMesh;                        // 0x01DA(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1DB[0x5];                                      // 0x01DB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UGbxCharacterBodyData>   Body;                                              // 0x01E0(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<TSoftObjectPtr<class UGbxAttachableBodyData>> AdditionalBodies;                           // 0x0208(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class USkeleton>               TargetPrimarySkeleton;                             // 0x0218(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGbxActorPartOwnerData                 GbxActorPartOwnerData;                             // 0x0240(0x0020)(Edit, NativeAccessSpecifierPrivate)
	struct FGbxGraphParamOverrides                BodyParameters;                                    // 0x0260(0x0080)(Edit, NativeAccessSpecifierPrivate)
	EGbxCharacterOverlapsOptimization             OverlapsOptimization;                              // 0x02E0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2E1[0x7];                                      // 0x02E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FGameDataHandleProperty_                      Rotation;                                          // 0x02E8(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UGbxRotationData>        RotationData;                                      // 0x0300(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<TSoftClassPtr<class UClass>>           Scripts;                                           // 0x0328(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	FGameDataHandleProperty_                      Team;                                              // 0x0338(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_350[0x8];                                      // 0x0350(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGbxBlackboardEntryRef>         FactsSettableBlackboardKeys;                       // 0x0358(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	FGameDataHandleProperty_                      CharacterMovementDef;                              // 0x0368(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bPlayJumpAndLandImpactsOnAllFeet;                  // 0x0380(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_381[0x7];                                      // 0x0381(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FGameDataHandleProperty_                      LandingDef;                                        // 0x0388(0x0018)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                           JumpGameplayTag;                                   // 0x03A0(0x0008)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                   VisibilityPhase;                                   // 0x03A8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	FGameDataHandleProperty_                      OxygenResourcePoolDef;                             // 0x03B0(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGbxGameBrainDef                       brain;                                             // 0x03C8(0x0088)(Edit, NativeAccessSpecifierPrivate)
	EGbxAwarenessLevelBehavior                    AwarenessLevelBehavior;                            // 0x0450(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_451[0x7];                                      // 0x0451(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              PlayerInfamyPercentage;                            // 0x0458(0x0038)(Edit, NativeAccessSpecifierPrivate)
	EGbxNpcPlayerAwarenessLevel                   StaticAwarenessLevel;                              // 0x0490(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_491[0x7];                                      // 0x0491(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UAIDodgeData>            Dodges;                                            // 0x0498(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bTargetingEnabled;                                 // 0x04C0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_4C1[0x7];                                      // 0x04C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UGpsQueryAsset>          TargetingQuery;                                    // 0x04C8(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	FGameDataHandleProperty_                      Perception;                                        // 0x04F0(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGbxNavAvoidData                       NavAvoidance;                                      // 0x0508(0x0024)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FSToken                                RegistryName;                                      // 0x052C(0x000C)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bLockRegistryName;                                 // 0x0538(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EFactsTransience                              FactsTransience;                                   // 0x0539(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_53A[0x6];                                      // 0x053A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	FGbxDefPtrProperty_                           GoreDef;                                           // 0x0540(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FGbxWeightedMaterialParameter>  WeightedMaterialParameters;                        // 0x0558(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	FGbxDefPtrProperty_                           MaterialParameters;                                // 0x0568(0x0018)(Deprecated, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bTargetableByAI;                                   // 0x0580(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bTargetableByPlayers;                              // 0x0581(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bWantsFriendlyWeaponsLowered;                      // 0x0582(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_583[0x5];                                      // 0x0583(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAvatarSettings                        AvatarSettings;                                    // 0x0588(0x0038)(Edit, NativeAccessSpecifierPrivate)
	TArray<FGbxDefPtrProperty_>                   RandomDialogNameTags;                              // 0x05C0(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	FGbxDefPtrProperty_                           DialogNameTagDef;                                  // 0x05D0(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<struct FGameplayTag, FGbxDefPtrProperty_> StanceTaggedDialogNameTags;                       // 0x05E8(0x0050)(Edit, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UFaceFXActor>            OverrideFaceFXActor;                               // 0x0638(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bDisableFaceFXComponentForOptimizedBuilds;         // 0x0660(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_661[0x7];                                      // 0x0661(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxCharacterDef;

// ScriptStruct GbxGame.CMMotionData
// 0x0198 (0x0198 - 0x0000)
struct FCMMotionData final
{
public:
	struct FRuntimeFloatCurve                     X;                                                 // 0x0000(0x0088)(Edit, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                     Y;                                                 // 0x0088(0x0088)(Edit, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                     Z;                                                 // 0x0110(0x0088)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FCMMotionData;

// ScriptStruct GbxGame.GbxBrainAspectSettings_UseUsable
// 0x0040 (0x00C0 - 0x0080)
struct FGbxBrainAspectSettings_UseUsable final : public FGbxBrainAspectSettings
{
public:
	struct FGbxParam                              Usable;                                            // 0x0080(0x0038)(Edit, NativeAccessSpecifierPublic)
	bool                                          bCanUseBeInterrupted;                              // 0x00B8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainAspectSettings_UseUsable;

// ScriptStruct GbxGame.GbxSkillComponentData_ResourcePool_Item
// 0x0018 (0x0040 - 0x0028)
struct FGbxSkillComponentData_ResourcePool_Item final : public FGbxSkillComponentDataItem
{
public:
	FGameDataHandleProperty_                      PoolDef;                                           // 0x0028(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxSkillComponentData_ResourcePool_Item;

// ScriptStruct GbxGame.UnlockableEntryDef
// 0x0038 (0x0050 - 0x0018)
struct FUnlockableEntryDef final : public FGbxDef
{
public:
	uint8                                         Pad_18[0x4];                                       // 0x0018(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Assigned_Bit;                                      // 0x001C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSToken                                FactName;                                          // 0x0020(0x000C)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   UnlockMethod;                                      // 0x0030(0x0010)(Edit, NativeAccessSpecifierPublic)
	struct FGameplayTag                           TypeTag;                                           // 0x0040(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCanPreview;                                       // 0x0048(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FUnlockableEntryDef;

// ScriptStruct GbxGame.ClimbablePresentationSetParticleSystemProperties
// 0x0020 (0x0020 - 0x0000)
struct FClimbablePresentationSetParticleSystemProperties final
{
public:
	class UNiagaraSystem*                         ParticleSystem;                                    // 0x0000(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   AttachToSocket;                                    // 0x0008(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   StaticMeshInputVariable;                           // 0x0010(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   TransformMatrixInputVariable;                      // 0x0018(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FClimbablePresentationSetParticleSystemProperties;

// ScriptStruct GbxGame.ClimbablePresenationSet
// 0x00C8 (0x00C8 - 0x0000)
struct FClimbablePresenationSet final
{
public:
	class UStaticMesh*                            SegmentMesh;                                       // 0x0000(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClimbablePresentationSetParticleSystemProperties SegmentMeshParticleSystem;              // 0x0008(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	class UStaticMesh*                            TopMesh;                                           // 0x0028(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClimbablePresentationSetParticleSystemProperties TopMeshParticleSystem;                  // 0x0030(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	TMap<ETopEdgeBehavior, class UStaticMesh*>    TopMeshByEdgeBehavior;                             // 0x0050(0x0050)(Edit, UObjectWrapper, NativeAccessSpecifierPublic)
	class UStaticMesh*                            BottomMesh;                                        // 0x00A0(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FClimbablePresentationSetParticleSystemProperties BottomMeshParticleSystem;               // 0x00A8(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FClimbablePresenationSet;

// ScriptStruct GbxGame.AvatarRequirementsHandler
// 0x0000 (0x0008 - 0x0008)
struct FAvatarRequirementsHandler final : public FGbxHasStructType
{
};
DUMPER7_ASSERTS_FAvatarRequirementsHandler;

// ScriptStruct GbxGame.GbxSkillComponentInputHandler
// 0x0000 (0x0008 - 0x0008)
struct FGbxSkillComponentInputHandler : public FGbxHasStructType
{
};
DUMPER7_ASSERTS_FGbxSkillComponentInputHandler;

// ScriptStruct GbxGame.GbxSkillComponentInputHandler_Hold
// 0x0068 (0x0070 - 0x0008)
struct FGbxSkillComponentInputHandler_Hold final : public FGbxSkillComponentInputHandler
{
public:
	FGameDataHandleProperty_                      InputAction;                                       // 0x0008(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGbxAttributeInit                      HoldDuration;                                      // 0x0020(0x0050)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxSkillComponentInputHandler_Hold;

// ScriptStruct GbxGame.GbxMaterialParameterBase
// 0x000C (0x000C - 0x0000)
struct FGbxMaterialParameterBase
{
public:
	bool                                          bOverrideValue;                                    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ParameterName;                                     // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxMaterialParameterBase;

// ScriptStruct GbxGame.GbxVectorMaterialParameter
// 0x0010 (0x001C - 0x000C)
struct FGbxVectorMaterialParameter final : public FGbxMaterialParameterBase
{
public:
	struct FLinearColor                           Value;                                             // 0x000C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxVectorMaterialParameter;

// ScriptStruct GbxGame.GbxScalarMaterialParameter
// 0x0004 (0x0010 - 0x000C)
struct FGbxScalarMaterialParameter final : public FGbxMaterialParameterBase
{
public:
	float                                         Value;                                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxScalarMaterialParameter;

// ScriptStruct GbxGame.GbxMaterialParameterInfo
// 0x0080 (0x0080 - 0x0000)
struct FGbxMaterialParameterInfo final
{
public:
	class FName                                   ParameterName;                                     // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   Category;                                          // 0x0008(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ToolTip;                                           // 0x0010(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGbxMaterialParameterType                     type;                                              // 0x0020(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           LinearColorValue;                                  // 0x0024(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FloatValue;                                        // 0x0034(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_38[0x8];                                       // 0x0038(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector4f                              Vector4fValue;                                     // 0x0040(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture>                TextureValue;                                      // 0x0050(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_78[0x8];                                       // 0x0078(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxMaterialParameterInfo;

// ScriptStruct GbxGame.GbxMaterialParameterDef
// 0x0078 (0x0090 - 0x0018)
struct FGbxMaterialParameterDef : public FGbxDef
{
public:
	TArray<struct FGbxVectorMaterialParameter>    VectorParameters;                                  // 0x0018(0x0010)(ZeroConstructor, Deprecated, NativeAccessSpecifierPublic)
	TArray<struct FGbxScalarMaterialParameter>    ScalarParameters;                                  // 0x0028(0x0010)(ZeroConstructor, Deprecated, NativeAccessSpecifierPublic)
	TArray<struct FVectorParameterValue>          OverriddenVectorParameters;                        // 0x0038(0x0010)(ZeroConstructor, Deprecated, NativeAccessSpecifierPublic)
	TArray<struct FScalarParameterValue>          OverriddenScalarParameters;                        // 0x0048(0x0010)(ZeroConstructor, Deprecated, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UGbxMaterialParameterTemplateData> TemplateData;                            // 0x0058(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGbxMaterialParameterInfo>      OverriddenParameters;                              // 0x0080(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxMaterialParameterDef;

// ScriptStruct GbxGame.GbxGameInstancePhases
// 0x00D8 (0x00D8 - 0x0000)
struct alignas(0x08) FGbxGameInstancePhases final
{
public:
	uint8                                         Pad_0[0xD8];                                       // 0x0000(0x00D8)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxGameInstancePhases;

// ScriptStruct GbxGame.GoreLimbData
// 0x0098 (0x0098 - 0x0000)
struct FGoreLimbData final
{
public:
	TSoftObjectPtr<class UStaticMesh>             StaticMesh;                                        // 0x0000(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UFXSystemAsset>          FXSystem;                                          // 0x0028(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEulerTransform                        FXSystemRelativeTransform;                         // 0x0050(0x0048)(Edit, NoDestructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGoreLimbData;

// ScriptStruct GbxGame.GoreSelectionResults
// 0x0280 (0x0280 - 0x0000)
struct FGoreSelectionResults final
{
public:
	class FName                                   BoneToModify;                                      // 0x0000(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                            StumpMesh;                                         // 0x0008(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                             StumpRelativeTransform;                            // 0x0010(0x0060)(Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFXSystemAsset*                         StumpParticleSystem;                               // 0x0070(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                     StumpDecal;                                        // 0x0078(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                             StumpDecalRelativeTransform;                       // 0x0080(0x0060)(Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                BoneScale;                                         // 0x00E0(0x0018)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGoreLimbData                          LimbData;                                          // 0x00F8(0x0098)(Transient, NativeAccessSpecifierPublic)
	struct FTransform                             LimbRelativeTransform;                             // 0x0190(0x0060)(Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   LimbActorIdent;                                    // 0x01F0(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           SplatterImpactEffect;                              // 0x01F8(0x0018)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLimbImpactEffectData                  LimbImpactEffectDataOverride;                      // 0x0210(0x0020)(Transient, NoDestructor, NativeAccessSpecifierPublic)
	int32                                         GoreModifiers;                                     // 0x0230(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_234[0x4];                                      // 0x0234(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 ChildGoreRegionStateIndicesToTrigger;              // 0x0238(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           MaterialParameters;                                // 0x0248(0x0018)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	FGbxDefPtrProperty_                           OverrideMaterialParameters;                        // 0x0260(0x0018)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_278[0x8];                                      // 0x0278(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGoreSelectionResults;

// ScriptStruct GbxGame.GbxMomentNodeSettings_WeaponAttack
// 0x00B0 (0x0130 - 0x0080)
struct FGbxMomentNodeSettings_WeaponAttack final : public FGbxMomentNodeSettings
{
public:
	struct FGbxParam                              Actor;                                             // 0x0080(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              target;                                            // 0x00B8(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              Duration;                                          // 0x00F0(0x0038)(Edit, NativeAccessSpecifierPublic)
	bool                                          bUseDurationForStop;                               // 0x0128(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxMomentNodeSettings_WeaponAttack;

// ScriptStruct GbxGame.GbxSkillStateMachineManagedRegister
// 0x0030 (0x0030 - 0x0000)
struct FGbxSkillStateMachineManagedRegister final
{
public:
	struct FGbxInlineStruct                       Condition;                                         // 0x0000(0x0018)(Edit, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           RegisterDef;                                       // 0x0018(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxSkillStateMachineManagedRegister;

// ScriptStruct GbxGame.GbxSkillStateMachineDef
// 0x00A0 (0x00B8 - 0x0018)
struct FGbxSkillStateMachineDef final : public FGbxDef
{
public:
	EGbxSkillStateMachineMode                     Mode;                                              // 0x0018(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FGbxDefPtrProperty_                           StartingState;                                     // 0x0020(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGbxInlineStruct                       Condition;                                         // 0x0038(0x0018)(Edit, NativeAccessSpecifierPrivate)
	FGbxDefPtrProperty_                           EnabledState;                                      // 0x0050(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<FGbxDefPtrProperty_>                   ParentStates;                                      // 0x0068(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<FGbxDefPtrProperty_>                   DeclaredStates;                                    // 0x0078(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FGbxSkillStateMachineManagedRegister> ManagedRegisters;                            // 0x0088(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FGbxSkillStateMachineGlobalTransitionData> GlobalTransitions;                      // 0x0098(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FGbxSkillStateMachineDebugCommand> DebugCommands;                                  // 0x00A8(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxSkillStateMachineDef;

// ScriptStruct GbxGame.GbxStandInScene_CameraPerspective
// 0x0010 (0x0080 - 0x0070)
struct FGbxStandInScene_CameraPerspective : public FGbxStandInScene_Element
{
public:
	class FName                                   PerspectiveName;                                   // 0x0070(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOverrideFOV;                                      // 0x0078(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         fov;                                               // 0x007C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxStandInScene_CameraPerspective;

// ScriptStruct GbxGame.MissionActionCondition_Attribute
// 0x0048 (0x0058 - 0x0010)
struct FMissionActionCondition_Attribute final : public FMissionActionCondition
{
public:
	struct FMissionAliasRef                       Context;                                           // 0x0010(0x000C)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAttributeEvaluator                 attribute;                                         // 0x0020(0x0038)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FMissionActionCondition_Attribute;

// ScriptStruct GbxGame.GbxAnimNode_Mirror
// 0x0018 (0x0028 - 0x0010)
struct FGbxAnimNode_Mirror final : public FAnimNode_Base
{
public:
	struct FPoseLink                              InPose;                                            // 0x0010(0x0010)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	class UGbxMirrorBoneMapping*                  BoneMappingAsset;                                  // 0x0020(0x0008)(ZeroConstructor, Deprecated, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxAnimNode_Mirror;

// ScriptStruct GbxGame.AnimTaggedDialogEvent
// 0x0088 (0x0088 - 0x0000)
struct FAnimTaggedDialogEvent final
{
public:
	struct FGameplayTagContainer                  AnimMatchTags;                                     // 0x0000(0x0020)(Edit, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           DialogEvent;                                       // 0x0020(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDialogEventParameters                 DialogEventParams;                                 // 0x0038(0x0050)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FAnimTaggedDialogEvent;

// ScriptStruct GbxGame.GbxBrainTaskSettings_Orbit
// 0x0298 (0x0430 - 0x0198)
struct FGbxBrainTaskSettings_Orbit final : public FGbxBrainTaskSettings_Composite
{
public:
	struct FOrbitSettings                         OrbitSettings;                                     // 0x0198(0x0250)(Edit, NativeAccessSpecifierPrivate)
	bool                                          bWaitForStop;                                      // 0x03E8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EOrbitRotation                                RotationTarget;                                    // 0x03E9(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3EA[0x6];                                      // 0x03EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              CustomRotationTarget;                              // 0x03F0(0x0038)(Edit, NativeAccessSpecifierPrivate)
	bool                                          bAllowAimOffset;                                   // 0x0428(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bAllowHeadLook;                                    // 0x0429(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EGbxBrainTerritoryRestriction                 TerritoryRestriction;                              // 0x042A(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EGbxTerritoryArea                             TerritoryArea;                                     // 0x042B(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         TargetOutOfTerritoryFailTimer;                     // 0x042C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxBrainTaskSettings_Orbit;

// ScriptStruct GbxGame.GbxSkillComponent_AttributeEffectEx
// 0x0020 (0x0070 - 0x0050)
struct FGbxSkillComponent_AttributeEffectEx final : public FGbxSkillComponent
{
public:
	uint8                                         Pad_50[0x20];                                      // 0x0050(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxSkillComponent_AttributeEffectEx;

// ScriptStruct GbxGame.GoreDef
// 0x0050 (0x0068 - 0x0018)
struct FGoreDef final : public FGbxDef
{
public:
	float                                         DefaultTriggerThreshold;                           // 0x0018(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<FGbxDefPtrProperty_>                   GoreRegions;                                       // 0x0020(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<FGbxDefPtrProperty_>                   ForcedGibGoreRegions;                              // 0x0030(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	int32                                         MaxAdditionalGibGoreRegions;                       // 0x0040(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FGbxDefPtrProperty_                           MaterialParameters;                                // 0x0048(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         BoneInfluenceThresholdForCloth;                    // 0x0060(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         RatioOfClothHighInfluence;                         // 0x0064(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGoreDef;

// ScriptStruct GbxGame.GoreRegionDef
// 0x01E0 (0x01F8 - 0x0018)
struct FGoreRegionDef final : public FGbxDef
{
public:
	class FName                                   GoreBone;                                          // 0x0018(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bShouldOverrideBoneToModify;                       // 0x0020(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   BoneToModify;                                      // 0x0024(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bIncludeChildBones;                                // 0x002C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bTriggerOnlyOnDeath;                               // 0x002D(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bGoreChildGoreRegions;                             // 0x002E(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bShouldOverrideTriggerTheshold;                    // 0x002F(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         OverrideTriggerThreshold;                          // 0x0030(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         GoreModifiers;                                     // 0x0034(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<TSoftObjectPtr<class UStaticMesh>>     StumpMeshList;                                     // 0x0038(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	struct FEulerTransform                        StumpRelativeTransform;                            // 0x0048(0x0048)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	TArray<TSoftObjectPtr<class UFXSystemAsset>>  StumpParticleSystemList;                           // 0x0090(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	struct FVector                                BoneScale3D;                                       // 0x00A0(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         BoneScale;                                         // 0x00B8(0x0004)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class UMaterialInterface>> StumpDecals;                                    // 0x00C0(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	struct FEulerTransform                        StumpDecalRelativeTransform;                       // 0x00D0(0x0048)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	TArray<TSoftObjectPtr<class UStaticMesh>>     LimbMeshList;                                      // 0x0118(0x0010)(ZeroConstructor, Deprecated, UObjectWrapper, NativeAccessSpecifierPrivate)
	TArray<struct FGoreLimbData>                  LimbDataList;                                      // 0x0128(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	struct FEulerTransform                        LimbRelativeTransform;                             // 0x0138(0x0048)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	FGbxDefPtrProperty_                           LimbActor;                                         // 0x0180(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	FGbxDefPtrProperty_                           SplatterImpactEffect;                              // 0x0198(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bOverrideLimbImpactEffect;                         // 0x01B0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1B1[0x7];                                      // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLimbImpactEffectData                  LimbImpactEffectDataOverride;                      // 0x01B8(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	bool                                          bOverrideMaterialParameters;                       // 0x01D8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1D9[0x7];                                      // 0x01D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FGbxDefPtrProperty_                           OverrideMaterialParameters;                        // 0x01E0(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGoreRegionDef;

// ScriptStruct GbxGame.GpsGenerator_Projectiles
// 0x0000 (0x0448 - 0x0448)
struct FGpsGenerator_Projectiles final : public FGpsGenerator_Actors
{
};
DUMPER7_ASSERTS_FGpsGenerator_Projectiles;

// ScriptStruct GbxGame.GoreLimbActorDef
// 0x0030 (0x00C0 - 0x0090)
struct FGoreLimbActorDef final : public FGbxActorDef
{
public:
	float                                         MassScale;                                         // 0x0090(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLimbImpactEffectData                  LimbImpactEffectData;                              // 0x0098(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	float                                         AngularDamping;                                    // 0x00B8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LinearDamping;                                     // 0x00BC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGoreLimbActorDef;

// ScriptStruct GbxGame.GbxActorPartRandomMatch
// 0x0028 (0x0028 - 0x0000)
struct FGbxActorPartRandomMatch final
{
public:
	float                                         Weight;                                            // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  matchtags;                                         // 0x0008(0x0020)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxActorPartRandomMatch;

// ScriptStruct GbxGame.GbxBodyNodeSettings_Switch
// 0x0040 (0x0078 - 0x0038)
struct FGbxBodyNodeSettings_Switch : public FGbxBodyNodeSettings
{
public:
	class FName                                   StateMachinePrefix;                                // 0x0038(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bApplyBeforeStateChanges;                          // 0x0040(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41[0xB];                                       // 0x0041(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         DefaultState;                                      // 0x004C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                           States;                                            // 0x0050(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FGbxParam>                      StateValues;                                       // 0x0060(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bIsValueSwitch;                                    // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBodyNodeSettings_Switch;

// ScriptStruct GbxGame.GbxBodyNodeSettings_FactSwitch
// 0x0038 (0x00B0 - 0x0078)
struct FGbxBodyNodeSettings_FactSwitch final : public FGbxBodyNodeSettings_Switch
{
public:
	struct FFactAddress                           FactAddress;                                       // 0x0078(0x0038)(Edit, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxBodyNodeSettings_FactSwitch;

// ScriptStruct GbxGame.AvatarViewableFeatureState
// 0x0010 (0x0018 - 0x0008)
struct FAvatarViewableFeatureState final : public FGbxHasStructType
{
public:
	uint8                                         Pad_8[0x10];                                       // 0x0008(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FAvatarViewableFeatureState;

// ScriptStruct GbxGame.GameResourceDef
// 0x0008 (0x0020 - 0x0018)
struct FGameResourceDef final : public FGbxDef
{
public:
	bool                                          bIntegerOnlyUpdates;                               // 0x0018(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSerializeInSavegame;                              // 0x0019(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGameResourceDef;

// ScriptStruct GbxGame.GbxBodyNodeState_Param
// 0x0030 (0x0098 - 0x0068)
struct FGbxBodyNodeState_Param final : public FGbxBodyNodeState
{
public:
	uint8                                         Pad_68[0x30];                                      // 0x0068(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBodyNodeState_Param;

// ScriptStruct GbxGame.PuddleHazardTransitionConfigurationData
// 0x0040 (0x0040 - 0x0000)
struct FPuddleHazardTransitionConfigurationData final
{
public:
	class UMaterialInterface*                     DecalMaterial;                                     // 0x0000(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                     MeshMaterial;                                      // 0x0008(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           AudioLoop;                                         // 0x0010(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPhysicalMaterial*                      PhysMatOverride;                                   // 0x0028(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                           EmitterNames;                                      // 0x0030(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FPuddleHazardTransitionConfigurationData;

// ScriptStruct GbxGame.GbxInputEvent_Button_DoubleTap
// 0x0048 (0x00A8 - 0x0060)
struct FGbxInputEvent_Button_DoubleTap : public FGbxInputEvent
{
public:
	uint8                                         Pad_60[0x48];                                      // 0x0060(0x0048)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxInputEvent_Button_DoubleTap;

// ScriptStruct GbxGame.MissionGiverTypeBase
// 0x0010 (0x0018 - 0x0008)
struct FMissionGiverTypeBase : public FGbxHasStructType
{
public:
	struct FSToken                                waypoint;                                          // 0x0008(0x000C)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMissionGiverWaypointOption                   WaypointOption;                                    // 0x0014(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FMissionGiverTypeBase;

// ScriptStruct GbxGame.MissionGiverType_FactConditionBase
// 0x0010 (0x0028 - 0x0018)
struct FMissionGiverType_FactConditionBase : public FMissionGiverTypeBase
{
public:
	uint8                                         Pad_18[0x10];                                      // 0x0018(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FMissionGiverType_FactConditionBase;

// ScriptStruct GbxGame.MissionFactEvaluatorInfo
// 0x0030 (0x0030 - 0x0000)
struct FMissionFactEvaluatorInfo final
{
public:
	EFactEvaluatorContextType                     ContextType;                                       // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMissionAliasRef                       ContextActor;                                      // 0x0004(0x000C)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	EFactEvaluatorContextCombineType              ContextCombineType;                                // 0x0010(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxInlineStruct                       Evaluator;                                         // 0x0018(0x0018)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FMissionFactEvaluatorInfo;

// ScriptStruct GbxGame.MissionGiverType_CustomEvaluator
// 0x0030 (0x0058 - 0x0028)
struct FMissionGiverType_CustomEvaluator final : public FMissionGiverType_FactConditionBase
{
public:
	struct FMissionFactEvaluatorInfo              CustomEvaluator;                                   // 0x0028(0x0030)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FMissionGiverType_CustomEvaluator;

// ScriptStruct GbxGame.DamageGameDataCategories_DONTUSE
// 0x0001 (0x0001 - 0x0000)
struct FDamageGameDataCategories_DONTUSE final
{
public:
	uint8                                         Pad_0[0x1];                                        // 0x0000(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FDamageGameDataCategories_DONTUSE;

// ScriptStruct GbxGame.GbxMomentDialogLineSlotPlayData
// 0x0070 (0x0070 - 0x0000)
struct FGbxMomentDialogLineSlotPlayData final
{
public:
	FGbxDefPtrProperty_                           LineSlot;                                          // 0x0000(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StartDelaySeconds;                                 // 0x0018(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              OptionalSpecificSpeaker;                           // 0x0020(0x0038)(Edit, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           OverrideNameTag;                                   // 0x0058(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxMomentDialogLineSlotPlayData;

// ScriptStruct GbxGame.PerchUserDef
// 0x0050 (0x0068 - 0x0018)
struct FPerchUserDef final : public FGbxDef
{
public:
	TMap<struct FGameplayTag, TSoftObjectPtr<class UGbxTrick>> TrickMap;                             // 0x0018(0x0050)(Edit, UObjectWrapper, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FPerchUserDef;

// ScriptStruct GbxGame.MissionObjectiveSetObjectiveEntry
// 0x0010 (0x0010 - 0x0000)
struct FMissionObjectiveSetObjectiveEntry final
{
public:
	struct FSToken                                Objective;                                         // 0x0000(0x000C)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsProxy;                                          // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDisableWaypoint;                                  // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FMissionObjectiveSetObjectiveEntry;

// ScriptStruct GbxGame.MissionObjectiveSet
// 0x0010 (0x0010 - 0x0000)
struct FMissionObjectiveSet final
{
public:
	TArray<struct FMissionObjectiveSetObjectiveEntry> objectives;                                    // 0x0000(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FMissionObjectiveSet;

// ScriptStruct GbxGame.GbxBodyNodeState_BoneMod
// 0x0090 (0x00F8 - 0x0068)
struct FGbxBodyNodeState_BoneMod final : public FGbxBodyNodeState
{
public:
	uint8                                         Pad_68[0x90];                                      // 0x0068(0x0090)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBodyNodeState_BoneMod;

// ScriptStruct GbxGame.GbxCinematicModeDef
// 0x0070 (0x0088 - 0x0018)
struct FGbxCinematicModeDef : public FGbxDef
{
public:
	bool                                          bCinematicMode;                                    // 0x0018(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FGbxDefPtrProperty_                           BeginCinematicWwiseEvent;                          // 0x0020(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           EndCinematicWwiseEvent;                            // 0x0038(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHidePlayer;                                       // 0x0050(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHideHUD;                                          // 0x0051(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowVoice;                                        // 0x0052(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCanSkip;                                          // 0x0053(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHideScreenParticles;                              // 0x0054(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDisableSplitScreen;                               // 0x0055(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_56[0x2];                                       // 0x0056(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   VisibilityPhase;                                   // 0x0058(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDisableInput;                                     // 0x0060(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDisableMovementInput;                             // 0x0061(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDisableLookInput;                                 // 0x0062(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDisableDamage;                                    // 0x0063(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDisableTargetability;                             // 0x0064(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CameraMode;                                        // 0x0068(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   CameraTransitionIn;                                // 0x0070(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   CameraTransitionOut;                               // 0x0078(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDisableGbxFeedback;                               // 0x0080(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bReapCorpses;                                      // 0x0081(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHidePickups;                                      // 0x0082(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_83[0x5];                                       // 0x0083(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxCinematicModeDef;

// ScriptStruct GbxGame.CameraModeBehavior_Blueprint
// 0x0028 (0x0040 - 0x0018)
struct FCameraModeBehavior_Blueprint final : public FCameraModeBehavior
{
public:
	struct FSoftClassPath                         BlueprintPath;                                     // 0x0018(0x0020)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBlueprintableCameraModeBehavior*       BlueprintObject;                                   // 0x0038(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
};
DUMPER7_ASSERTS_FCameraModeBehavior_Blueprint;

// ScriptStruct GbxGame.ItemPoolInstanceData
// 0x0080 (0x0080 - 0x0000)
struct FItemPoolInstanceData final
{
public:
	FGameDataHandleProperty_                      SharedPool;                                        // 0x0000(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FInventoryItemSelectionData            item;                                              // 0x0018(0x0068)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FItemPoolInstanceData;

// ScriptStruct GbxGame.GbxTriggerData
// 0x00B8 (0x00B8 - 0x0000)
struct alignas(0x08) FGbxTriggerData final
{
public:
	uint8                                         Pad_0[0x18];                                       // 0x0000(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MaxTriggerEvents;                                  // 0x0018(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RetriggerDelay;                                    // 0x0020(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bPlayerInstigatedEventsOnly;                       // 0x0028(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x37];                                      // 0x0029(0x0037)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bEnabledByDefault;                                 // 0x0060(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_61[0x57];                                      // 0x0061(0x0057)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxTriggerData;

// ScriptStruct GbxGame.GbxVisibilityPhaseRules
// 0x0020 (0x0020 - 0x0000)
struct FGbxVisibilityPhaseRules final
{
public:
	class FName                                   PhaseName;                                         // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGbxViewFlag                                  ViewFlag;                                          // 0x0008(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           VisiblePhases;                                     // 0x0010(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxVisibilityPhaseRules;

// ScriptStruct GbxGame.GbxGlobalsVisibilityPhase
// 0x0030 (0x0050 - 0x0020)
struct FGbxGlobalsVisibilityPhase final : public FGbxGlobalDef
{
public:
	struct FGbxVisibilityPhaseRules               DefaultRules;                                      // 0x0020(0x0020)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FGbxVisibilityPhaseRules>       Ruleset;                                           // 0x0040(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxGlobalsVisibilityPhase;

// ScriptStruct GbxGame.SEPEvent
// 0x0038 (0x0038 - 0x0000)
struct FSEPEvent final
{
public:
	struct FGbxInlineStruct                       Policy;                                            // 0x0000(0x0018)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FGbxInlineStruct>               Triggers;                                          // 0x0018(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FGbxInlineStruct>               actions;                                           // 0x0028(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSEPEvent;

// ScriptStruct GbxGame.GbxStatusEffectPresentationGraphNodeSettings_Driver
// 0x0028 (0x0060 - 0x0038)
struct FGbxStatusEffectPresentationGraphNodeSettings_Driver : public FGbxStatusEffectPresentationGraphNodeSettings
{
public:
	struct FGbxInlineStruct                       SeverityRateOverride;                              // 0x0038(0x0018)(Edit, NativeAccessSpecifierPrivate)
	TArray<struct FSEPEvent>                      events;                                            // 0x0050(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxStatusEffectPresentationGraphNodeSettings_Driver;

// ScriptStruct GbxGame.GbxStatusEffectPresentationGraphNodeSettings_Driver_Severity
// 0x0010 (0x0070 - 0x0060)
struct FGbxStatusEffectPresentationGraphNodeSettings_Driver_Severity final : public FGbxStatusEffectPresentationGraphNodeSettings_Driver
{
public:
	struct FGuid                                  ChannelID;                                         // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxStatusEffectPresentationGraphNodeSettings_Driver_Severity;

// ScriptStruct GbxGame.CineInventoryActorDef
// 0x00F0 (0x0180 - 0x0090)
struct FCineInventoryActorDef final : public FGbxActorDef
{
public:
	struct FInventoryItemSelectionData            inventory;                                         // 0x0090(0x0068)(Edit, NativeAccessSpecifierPublic)
	struct FGbxAttributeInit                      gamestage;                                         // 0x00F8(0x0050)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bGenerateSerialNumber;                             // 0x0148(0x0001)(Edit, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseSerialNumber;                                  // 0x0149(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14A[0x6];                                      // 0x014A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 SerialNumber;                                      // 0x0150(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFilterStreamingContent;                           // 0x0160(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_161[0x3];                                      // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   StreamingContentFilterName;                        // 0x0164(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFirstPersonMode;                                  // 0x016C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_16D[0x3];                                      // 0x016D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           StartEffects;                                      // 0x0170(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FCineInventoryActorDef;

// ScriptStruct GbxGame.InventoryItemProviderDef
// 0x0000 (0x0018 - 0x0018)
struct FInventoryItemProviderDef : public FGbxDef
{
};
DUMPER7_ASSERTS_FInventoryItemProviderDef;

// ScriptStruct GbxGame.GbxDialogSpeakerInfo
// 0x0018 (0x0018 - 0x0000)
struct alignas(0x08) FGbxDialogSpeakerInfo final
{
public:
	FGbxDefPtrProperty_                           DialogName;                                        // 0x0000(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxDialogSpeakerInfo;

// ScriptStruct GbxGame.ActorTaggedDialogNameData
// 0x0030 (0x0030 - 0x0000)
struct FActorTaggedDialogNameData final
{
public:
	struct FGameplayTagContainer                  ActorMatchTags;                                    // 0x0000(0x0020)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FGbxDialogSpeakerInfo>          RandomSpeakerChoices;                              // 0x0020(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FActorTaggedDialogNameData;

// ScriptStruct GbxGame.GbxActorPartDef_DialogName
// 0x0010 (0x0090 - 0x0080)
struct FGbxActorPartDef_DialogName final : public FGbxActorPartDef
{
public:
	TArray<struct FActorTaggedDialogNameData>     TaggedDialogNameDataOptions;                       // 0x0080(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxActorPartDef_DialogName;

// ScriptStruct GbxGame.GbxMomentNodeSettings_GbxFeedback
// 0x0058 (0x00D8 - 0x0080)
struct FGbxMomentNodeSettings_GbxFeedback final : public FGbxMomentNodeSettings
{
public:
	FGbxDefPtrProperty_                           feedback;                                          // 0x0080(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         FeedbackFlags;                                     // 0x0098(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              SourceActor;                                       // 0x00A0(0x0038)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxMomentNodeSettings_GbxFeedback;

// ScriptStruct GbxGame.GbxProgressionManager
// 0x0128 (0x0128 - 0x0000)
struct FGbxProgressionManager final
{
public:
	uint8                                         Pad_0[0x90];                                       // 0x0000(0x0090)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Actor;                                             // 0x0090(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UGbxProgressGraph*>              ProgressGraphs;                                    // 0x0098(0x0010)(ZeroConstructor, RepSkip, UObjectWrapper, NativeAccessSpecifierPrivate)
	uint8                                         ProgressGraphsArrayDirty;                          // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_A9[0x2F];                                      // 0x00A9(0x002F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxProgressPointsContainer            ProgressPointsContainer;                           // 0x00D8(0x0038)(NativeAccessSpecifierPrivate)
	uint8                                         Pad_110[0x1];                                      // 0x0110(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bIsInitializedOnServer;                            // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_112[0xE];                                      // 0x0112(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	class UGbxProgressionDataManager*             DataMgr;                                           // 0x0120(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxProgressionManager;

// ScriptStruct GbxGame.GbxRewardsSet
// 0x0038 (0x0038 - 0x0000)
struct FGbxRewardsSet final
{
public:
	TArray<struct FGbxInlineStruct>               rewarddata;                                        // 0x0000(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	struct FGbxInlineStruct                       CustomData;                                        // 0x0010(0x0018)(Edit, NativeAccessSpecifierPrivate)
	bool                                          bIsUnique;                                         // 0x0028(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   UniqueName;                                        // 0x002C(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxRewardsSet;

// ScriptStruct GbxGame.GbxRewardsDef
// 0x0078 (0x0090 - 0x0018)
struct FGbxRewardsDef final : public FGbxDef
{
public:
	struct FGbxRewardsSet                         reward;                                            // 0x0018(0x0038)(Edit, NativeAccessSpecifierPrivate)
	bool                                          bAlwaysGiveAsPackage;                              // 0x0050(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   packagename;                                       // 0x0058(0x0010)(Edit, NativeAccessSpecifierPrivate)
	class FText                                   PackageCategory;                                   // 0x0068(0x0010)(Edit, NativeAccessSpecifierPrivate)
	class FText                                   PackageDescription;                                // 0x0078(0x0010)(Edit, NativeAccessSpecifierPrivate)
	class FName                                   PackageCategoryIdent;                              // 0x0088(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxRewardsDef;

// ScriptStruct GbxGame.GbxAOEComponentTargetHandler
// 0x0000 (0x0008 - 0x0008)
struct FGbxAOEComponentTargetHandler : public FGbxHasStructType
{
};
DUMPER7_ASSERTS_FGbxAOEComponentTargetHandler;

// ScriptStruct GbxGame.GbxAOEComponentTargetHandler_Basic
// 0x0010 (0x0018 - 0x0008)
struct FGbxAOEComponentTargetHandler_Basic final : public FGbxAOEComponentTargetHandler
{
public:
	uint8                                         Pad_8[0x10];                                       // 0x0008(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxAOEComponentTargetHandler_Basic;

// ScriptStruct GbxGame.MeleeCustomNotifications
// 0x000C (0x000C - 0x0000)
struct FMeleeCustomNotifications final
{
public:
	float                                         BeginTime;                                         // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ImpactTime;                                        // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         EndTime;                                           // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FMeleeCustomNotifications;

// ScriptStruct GbxGame.MeleeDef
// 0x02B8 (0x02D0 - 0x0018)
struct FMeleeDef : public FGbxDef
{
public:
	FGameDataHandleProperty_                      OverrideCondition;                                 // 0x0018(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OverridePriority;                                  // 0x0030(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOnlyOverrideOnSuccess;                            // 0x0034(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCanHitUntargetables;                              // 0x0035(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnableGroundHoming;                               // 0x0036(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_37[0x1];                                       // 0x0037(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMeleeDefHomingData                    GroundHomingSettings;                              // 0x0038(0x0088)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bEnableAirHoming;                                  // 0x00C0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMeleeDefHomingData                    AirHomingSettings;                                 // 0x00C8(0x0088)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bCanInterruptRebound;                              // 0x0150(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_151[0x3];                                      // 0x0151(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CooldownTime_Hit;                                  // 0x0154(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CooldownTime_Miss;                                 // 0x0158(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   BodyActionTag;                                     // 0x015C(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   BodyActionName_Hit;                                // 0x0164(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   BodyActionName_Miss;                               // 0x016C(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseCustomNotifications;                           // 0x0174(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_175[0x3];                                      // 0x0175(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMeleeCustomNotifications              CustomNotifications;                               // 0x0178(0x000C)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_184[0x4];                                      // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FGameDataHandleProperty_                      DamageDef;                                         // 0x0188(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      IndirectDamageDef;                                 // 0x01A0(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      DirectMeleeFeedback;                               // 0x01B8(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         DirectFeedbackFlags;                               // 0x01D0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D4[0x4];                                      // 0x01D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FGameDataHandleProperty_                      IndirectMeleeFeedback;                             // 0x01D8(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         IndirectFeedbackFlags;                             // 0x01F0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1F4[0x4];                                      // 0x01F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FImpactEffectSelection                 IndirectMeleeImpact;                               // 0x01F8(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bIsExecution;                                      // 0x0210(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_211[0x3];                                      // 0x0211(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   BodyActionName_Execute;                            // 0x0214(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21C[0x4];                                      // 0x021C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FForceSelection                        ExecuteForce;                                      // 0x0220(0x0048)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	float                                         ExecutionTimeout;                                  // 0x0268(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ExecutionInvinciblityExtraTime;                    // 0x026C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ExecutionUntargetableExtraTime;                    // 0x0270(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnableGroundRebounds;                             // 0x0274(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_275[0x3];                                      // 0x0275(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMeleeDefReboundData                   GroundReboundSettings;                             // 0x0278(0x0028)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bEnableAirRebounds;                                // 0x02A0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2A1[0x3];                                      // 0x02A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMeleeDefReboundData                   AirReboundSettings;                                // 0x02A4(0x0028)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_2CC[0x4];                                      // 0x02CC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FMeleeDef;

// ScriptStruct GbxGame.GbxRewardData_UnlockableLedger
// 0x0018 (0x0038 - 0x0020)
struct FGbxRewardData_UnlockableLedger final : public FGbxRewardData
{
public:
	FGbxDefPtrProperty_                           UnlockableLedgerDef;                               // 0x0020(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxRewardData_UnlockableLedger;

// ScriptStruct GbxGame.GbxRotatingBoneChain
// 0x0028 (0x0028 - 0x0000)
struct FGbxRotatingBoneChain final
{
public:
	struct FGbxOrientedBone                       ParentBone;                                        // 0x0000(0x0014)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGbxRotatingChainBone>          Bones;                                             // 0x0018(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxRotatingBoneChain;

// ScriptStruct GbxGame.GbxHealthStateValueResolver
// 0x0010 (0x0018 - 0x0008)
struct FGbxHealthStateValueResolver final : public FAttributeValueResolver
{
public:
	EGbxHealthStateResolverValue                  Value;                                             // 0x0008(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         layer;                                             // 0x0009(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   HitRegionId;                                       // 0x000C(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxHealthStateValueResolver;

// ScriptStruct GbxGame.AimAssistParameters
// 0x0000 (0x0018 - 0x0018)
struct FAimAssistParameters : public FGbxDef
{
};
DUMPER7_ASSERTS_FAimAssistParameters;

// ScriptStruct GbxGame.GbxProgressGraphGroupDef
// 0x0028 (0x0040 - 0x0018)
struct FGbxProgressGraphGroupDef final : public FGbxDef
{
public:
	class FName                                   GroupName;                                         // 0x0018(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<FGbxDefPtrProperty_>                   ProgressGraphs;                                    // 0x0020(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<FGbxDefPtrProperty_>                   DisplayData;                                       // 0x0030(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxProgressGraphGroupDef;

// ScriptStruct GbxGame.GbxCameraVignetteData
// 0x001C (0x001C - 0x0000)
struct FGbxCameraVignetteData final
{
public:
	bool                                          bEnableColorVignette;                              // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOverrideStartColorVignetteSize;                   // 0x0001(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOverrideColorVignetteSharpness;                   // 0x0002(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOverrideLongitudinalMotionScale;                  // 0x0003(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOverrideLateralMotionScale;                       // 0x0004(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ColorVignetteSize;                                 // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StartColorVignetteSize;                            // 0x000C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ColorVignetteSharpness;                            // 0x0010(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LongitudinalMotionScale;                           // 0x0014(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LateralMotionScale;                                // 0x0018(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxCameraVignetteData;

// ScriptStruct GbxGame.GbxFootPlantingData
// 0x0018 (0x0018 - 0x0000)
struct FGbxFootPlantingData final
{
public:
	class FName                                   FootSpeedCurveName;                                // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SpeedToPlant;                                      // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SpeedToUnplant;                                    // 0x000C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         UnplantTime;                                       // 0x0010(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxPlantedDisplacement;                            // 0x0014(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxFootPlantingData;

// ScriptStruct GbxGame.GbxCharacterLegDefinition
// 0x0058 (0x0058 - 0x0000)
struct FGbxCharacterLegDefinition final
{
public:
	struct FBoneReference                         IKBone;                                            // 0x0000(0x0010)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBoneReference                         FootBone;                                          // 0x0010(0x0010)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBoneReference                         ToeBone;                                           // 0x0020(0x0010)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FootBoneHeightOffset;                              // 0x0030(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         NumBonesInLimb;                                    // 0x0034(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAxis                                         FootBoneForwardAxis;                               // 0x0035(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAxis                                         HingeRotationAxis;                                 // 0x0036(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_37[0x1];                                       // 0x0037(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ToePointAngle;                                     // 0x0038(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FloorAngleClamp;                                   // 0x003C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxFootPlantingData                   PlantingData;                                      // 0x0040(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxCharacterLegDefinition;

// ScriptStruct GbxGame.BinderBehaviorMod_DropMissionPickupBase
// 0x0148 (0x0160 - 0x0018)
struct alignas(0x10) FBinderBehaviorMod_DropMissionPickupBase : public FFactsBinderBehaviorMod
{
public:
	uint8                                         Pad_18[0x148];                                     // 0x0018(0x0148)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FBinderBehaviorMod_DropMissionPickupBase;

// ScriptStruct GbxGame.BinderBehaviorMod_DropMissionPickup_OnDeath
// 0x0000 (0x0160 - 0x0160)
struct FBinderBehaviorMod_DropMissionPickup_OnDeath final : public FBinderBehaviorMod_DropMissionPickupBase
{
};
DUMPER7_ASSERTS_FBinderBehaviorMod_DropMissionPickup_OnDeath;

// ScriptStruct GbxGame.GbxProgressPointPoolDef
// 0x0020 (0x0038 - 0x0018)
struct FGbxProgressPointPoolDef final : public FGbxDef
{
public:
	FGbxDefPtrProperty_                           AssociatedExperienceDef;                           // 0x0018(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bGenerateProgressState;                            // 0x0030(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxProgressPointPoolDef;

// ScriptStruct GbxGame.BreadcrumbPathPlayerData
// 0x0030 (0x0030 - 0x0000)
struct FBreadcrumbPathPlayerData final
{
public:
	bool                                          bObjectiveIconVisibilityHandled;                   // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PathTimeOfCreation;                                // 0x0004(0x0004)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UBreadcrumbRouteComponent*>      CurrentPath;                                       // 0x0008(0x0010)(Edit, ExportObject, ZeroConstructor, DisableEditOnTemplate, EditConst, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPublic)
	struct FVector                                ObjectiveLocation;                                 // 0x0018(0x0018)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FBreadcrumbPathPlayerData;

// ScriptStruct GbxGame.BreadcrumbPathData
// 0x0028 (0x0028 - 0x0000)
struct FBreadcrumbPathData final
{
public:
	struct FGuid                                  BreadcrumbGuid;                                    // 0x0000(0x0010)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EBreadcrumbType                               BreadcrumbType;                                    // 0x0010(0x0001)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDebugDrawPath;                                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBreadcrumbPathPlayerData>      PathPlayerData;                                    // 0x0018(0x0010)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FBreadcrumbPathData;

// ScriptStruct GbxGame.MissionExitEndState
// 0x0050 (0x0050 - 0x0000)
struct FMissionExitEndState final
{
public:
	struct FMissionAliasRef                       alias;                                             // 0x0000(0x000C)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContingentFactChange                  FactChange;                                        // 0x0010(0x0040)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FMissionExitEndState;

// ScriptStruct GbxGame.MissionExitPoint
// 0x0060 (0x0060 - 0x0000)
struct FMissionExitPoint final
{
public:
	class FName                                   ExitName;                                          // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSToken                                Objective;                                         // 0x0008(0x000C)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FMissionExitEndState>           EndStates;                                         // 0x0018(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_28[0x28];                                      // 0x0028(0x0028)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FMissionRewardInfo>             rewards;                                           // 0x0050(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FMissionExitPoint;

// ScriptStruct GbxGame.GbxExperienceProgressionDef
// 0x0018 (0x0030 - 0x0018)
struct FGbxExperienceProgressionDef final : public FGbxDef
{
public:
	TArray<struct FGbxInlineStruct>               Functions;                                         // 0x0018(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                         LevelCap;                                          // 0x0028(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxExperienceProgressionDef;

// ScriptStruct GbxGame.GbxSkillMessageDataParam
// 0x000C (0x000C - 0x0000)
struct FGbxSkillMessageDataParam final
{
public:
	class FName                                   ParamName;                                         // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGbxType                                      type;                                              // 0x0008(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxSkillMessageDataParam;

// ScriptStruct GbxGame.GbxSkillActionData_NetEvent
// 0x0010 (0x0010 - 0x0000)
struct FGbxSkillActionData_NetEvent final
{
public:
	class FName                                   EventName;                                         // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGbxSkillEventRepType                         RepType;                                           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bReliable;                                         // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NetIndex;                                          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxSkillActionData_NetEvent;

// ScriptStruct GbxGame.GbxSkillActionData_NetMessage
// 0x0038 (0x0038 - 0x0000)
struct FGbxSkillActionData_NetMessage final
{
public:
	class FName                                   MessageName;                                       // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   MessageType;                                       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MessageID;                                         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ActionID;                                          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGbxSkillMessageDataParam>      Signature;                                         // 0x0018(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FGbxSkillActionData_NetEvent>   events;                                            // 0x0028(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxSkillActionData_NetMessage;

// ScriptStruct GbxGame.IntMinMaxRange
// 0x0008 (0x0008 - 0x0000)
struct FIntMinMaxRange final
{
public:
	int32                                         MinValue;                                          // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxValue;                                          // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FIntMinMaxRange;

// ScriptStruct GbxGame.GbxSkillStateMachineStateAction_ResourcePoolBase
// 0x0008 (0x0010 - 0x0008)
struct FGbxSkillStateMachineStateAction_ResourcePoolBase : public FGbxSkillStateMachineStateAction
{
public:
	EGbxSkillStateMachineAction_ResourcePool      PoolOp;                                            // 0x0008(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Value;                                             // 0x000C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxSkillStateMachineStateAction_ResourcePoolBase;

// ScriptStruct GbxGame.GbxProgressionBehaviorData
// 0x0000 (0x0008 - 0x0008)
struct FGbxProgressionBehaviorData : public FGbxHasStructType
{
};
DUMPER7_ASSERTS_FGbxProgressionBehaviorData;

// ScriptStruct GbxGame.GbxAINodeCoverSettings
// 0x0138 (0x0138 - 0x0000)
struct FGbxAINodeCoverSettings final
{
public:
	TSoftObjectPtr<class ACover>                  StayCover;                                         // 0x0000(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FNumericRange                          StayCoverDuration;                                 // 0x0028(0x0008)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bUseStayCoverDuration;                             // 0x0030(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              IdleTimeOverride;                                  // 0x0038(0x0038)(Edit, NativeAccessSpecifierPublic)
	bool                                          bOverrideIdleTime;                                 // 0x0070(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              FireTimeOverride;                                  // 0x0078(0x0038)(Edit, NativeAccessSpecifierPublic)
	bool                                          bOverrideFireTime;                                 // 0x00B0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              Fidgeting;                                         // 0x00B8(0x0038)(Edit, NativeAccessSpecifierPublic)
	bool                                          bOverrideFidgeting;                                // 0x00F0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              Combat;                                            // 0x00F8(0x0038)(Edit, NativeAccessSpecifierPublic)
	bool                                          bOverrideCombat;                                   // 0x0130(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bStayCoverIsRequired;                              // 0x0131(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_132[0x6];                                      // 0x0132(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxAINodeCoverSettings;

// ScriptStruct GbxGame.GbxPrimaryCharacterContextResolver
// 0x0000 (0x0008 - 0x0008)
struct FGbxPrimaryCharacterContextResolver final : public FAttributeContextResolver
{
};
DUMPER7_ASSERTS_FGbxPrimaryCharacterContextResolver;

// ScriptStruct GbxGame.GbxStatusEffectRuleData
// 0x0000 (0x0008 - 0x0008)
struct FGbxStatusEffectRuleData : public FGbxStatusEffectRuleBaseData
{
};
DUMPER7_ASSERTS_FGbxStatusEffectRuleData;

// ScriptStruct GbxGame.GbxDestructibleCollisionEventSettings
// 0x0040 (0x0040 - 0x0000)
struct alignas(0x08) FGbxDestructibleCollisionEventSettings final
{
public:
	ECollisionAudioBehavior                       AudioBehavior;                                     // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FGbxDefPtrProperty_                           AudioEventOverride;                                // 0x0008(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RetriggerDelay;                                    // 0x0020(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         IgnoreRetriggerMassRatio;                          // 0x0024(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinSpeedThreshold;                                 // 0x0028(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinMassThreshold;                                  // 0x002C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAllowFractureOnCollision;                         // 0x0030(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FractureOnCollisionThreshold;                      // 0x0034(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinDisplacementChunkIsAwakeThreshold;              // 0x0038(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxDestructibleCollisionEventSettings;

// ScriptStruct GbxGame.GbxStatusEffectRuleData_Immunity
// 0x0010 (0x0018 - 0x0008)
struct FGbxStatusEffectRuleData_Immunity final : public FGbxStatusEffectRuleData
{
public:
	TArray<struct FGbxInlineStruct>               Immunities;                                        // 0x0008(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxStatusEffectRuleData_Immunity;

// ScriptStruct GbxGame.ProtectionTimerSettings
// 0x000C (0x000C - 0x0000)
struct FProtectionTimerSettings final
{
public:
	float                                         TimerDuration;                                     // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Threshold;                                         // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaintainedMaxHealthPct;                            // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FProtectionTimerSettings;

// ScriptStruct GbxGame.GbxDiscoveryCustomWaypointSettings
// 0x00B8 (0x00B8 - 0x0000)
struct FGbxDiscoveryCustomWaypointSettings final
{
public:
	FGbxDefPtrProperty_                           LocationTypeDef;                                   // 0x0000(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           PinPresentation;                                   // 0x0018(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           PlayerOwnedPinPresentation;                        // 0x0030(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AdditionalZTranslation;                            // 0x0048(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RangeToRecalculateLocation;                        // 0x004C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RecalculateTraceFromHeight;                        // 0x0050(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RecalculateTraceDistance;                          // 0x0054(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         NavCylinderRadius;                                 // 0x0058(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         NavCylinderHalfHeight;                             // 0x005C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DistMovedToForceEvaulatePinZ;                      // 0x0060(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UGbxNavAreaUserData>     NavAreas;                                          // 0x0068(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UGbxNavEdgeUserData>     NavEdges;                                          // 0x0090(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxDiscoveryCustomWaypointSettings;

// ScriptStruct GbxGame.GbxDiscoveryPinConfig
// 0x0014 (0x0014 - 0x0000)
struct FGbxDiscoveryPinConfig final
{
public:
	bool                                          bPinsShareMaxPool;                                 // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MaxCustomWaypoints;                                // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxPinnedLocations;                                // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxPins;                                           // 0x000C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGbxDiscoveryMaxPinBehavior                   MaxPinBehavior;                                    // 0x0010(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxDiscoveryPinConfig;

// ScriptStruct GbxGame.GbxDiscoveryPPSettings
// 0x0030 (0x0030 - 0x0000)
struct FGbxDiscoveryPPSettings final
{
public:
	TSoftObjectPtr<class UMaterialInterface>      PostProcessingMaterial;                            // 0x0000(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         EffectWeight;                                      // 0x0028(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BlendWeight;                                       // 0x002C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxDiscoveryPPSettings;

// ScriptStruct GbxGame.GbxDiscoveryGlobals
// 0x0210 (0x0230 - 0x0020)
struct FGbxDiscoveryGlobals : public FGbxGlobalDef
{
public:
	FGbxDefPtrProperty_                           DefaultMapViewerBehavior;                          // 0x0020(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           PlayerDiscovererDef;                               // 0x0038(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           MapViewerDiscovererDef;                            // 0x0050(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   TravelStationCanTravelToState;                     // 0x0068(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   TravelStationCannotTravelToState;                  // 0x0070(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         UnfogRate;                                         // 0x0078(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         UnfogSaveRate;                                     // 0x007C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         UnfogMovementThreshold;                            // 0x0080(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxDiscoveryCustomWaypointSettings    CustomWaypointSettings;                            // 0x0088(0x00B8)(Edit, NativeAccessSpecifierPublic)
	struct FGbxDiscoveryPinConfig                 PinnnigConfigs[0x2];                               // 0x0140(0x0014)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	float                                         DistanceFromPinToAutoRemove;                       // 0x0168(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAutoRemoveLocationPins;                           // 0x016C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAutoRemoveCustomWaypoints;                        // 0x016D(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_16E[0x2];                                      // 0x016E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFloatRange                            MinimalWorldZExtents;                              // 0x0170(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           DefaultRegion;                                     // 0x0180(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxDiscoveryPPSettings                ActorEffectSettings;                               // 0x0198(0x0030)(Edit, NativeAccessSpecifierPublic)
	struct FGbxDiscoveryPPSettings                RadialPingEffectSettings;                          // 0x01C8(0x0030)(Edit, NativeAccessSpecifierPublic)
	class FName                                   RadialPingParameterOriginName;                     // 0x01F8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   RadialPingParameterRadiusName;                     // 0x0200(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<FGbxDefPtrProperty_>                   LiveActorReplicationTypes;                         // 0x0208(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                         MetricsMinutesToMakePeriodicReport;                // 0x0218(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21C[0x4];                                      // 0x021C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGbxDiscoveryMarkOnMapItem>     MarkedOnMapDataBase;                               // 0x0220(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxDiscoveryGlobals;

// ScriptStruct GbxGame.GbxUnlockConditionDataNoGraph
// 0x0000 (0x0008 - 0x0008)
struct FGbxUnlockConditionDataNoGraph : public FGbxUnlockConditionData
{
};
DUMPER7_ASSERTS_FGbxUnlockConditionDataNoGraph;

// ScriptStruct GbxGame.GbxUnlockConditionData_Fact
// 0x0010 (0x0018 - 0x0008)
struct FGbxUnlockConditionData_Fact final : public FGbxUnlockConditionDataNoGraph
{
public:
	struct FFactExpression                        FactExpression;                                    // 0x0008(0x0010)(Edit, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxUnlockConditionData_Fact;

// ScriptStruct GbxGame.GbxStatusEffectPresentationEffect_MaterialParam
// 0x0008 (0x0010 - 0x0008)
struct FGbxStatusEffectPresentationEffect_MaterialParam : public FGbxHasStructType
{
public:
	class FName                                   ParamName;                                         // 0x0008(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxStatusEffectPresentationEffect_MaterialParam;

// ScriptStruct GbxGame.DialogParameterValueProp_DefValue
// 0x0018 (0x0018 - 0x0000)
struct alignas(0x08) FDialogParameterValueProp_DefValue final
{
public:
	FGbxDefPtrProperty_                           DefValue;                                          // 0x0000(0x0018)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FDialogParameterValueProp_DefValue;

// ScriptStruct GbxGame.GbxSkillDefComponent
// 0x0020 (0x0020 - 0x0000)
struct FGbxSkillDefComponent final
{
public:
	class FName                                   ComponentName;                                     // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxInlineStruct                       ComponentData;                                     // 0x0008(0x0018)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxSkillDefComponent;

// ScriptStruct GbxGame.GbxSkillStateData
// 0x0020 (0x0020 - 0x0000)
struct FGbxSkillStateData final
{
public:
	bool                                          bIsEnabledByDefault;                               // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxInlineStruct                       Condition;                                         // 0x0008(0x0018)(Edit, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxSkillStateData;

// ScriptStruct GbxGame.GbxSkillDef
// 0x0110 (0x0128 - 0x0018)
struct FGbxSkillDef final : public FGbxDef
{
public:
	TArray<struct FGbxSkillDefComponent>          Components;                                        // 0x0018(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<TSoftObjectPtr<class UGbxSkillComponentSetData>> SharedComponents;                        // 0x0028(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	TArray<TSoftClassPtr<class UClass>>           SkillScripts;                                      // 0x0038(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	TMap<FGameDataHandleProperty_, struct FGbxSkillStateData> SkillStates;                           // 0x0048(0x0050)(Edit, NativeAccessSpecifierPrivate)
	FGbxDefPtrProperty_                           StateMachine;                                      // 0x0098(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<FGbxDefPtrProperty_>                   ChildStateMachines;                                // 0x00B0(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FGbxSkillDefConditionData>      Conditions;                                        // 0x00C0(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	EGbxSkillNetType                              NetType;                                           // 0x00D0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<FGbxDefPtrProperty_, struct FGbxInlineStruct> aliases;                                      // 0x00D8(0x0050)(Edit, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxSkillDef;

// ScriptStruct GbxGame.GbxSkillConditionDef
// 0x0000 (0x0018 - 0x0018)
struct FGbxSkillConditionDef final : public FGbxDef
{
};
DUMPER7_ASSERTS_FGbxSkillConditionDef;

// ScriptStruct GbxGame.GbxBrainTaskSettings_Perch
// 0x01E8 (0x0380 - 0x0198)
struct FGbxBrainTaskSettings_Perch final : public FGbxBrainTaskSettings_CompositeQuery
{
public:
	struct FGpsQueryRunData                       PerchQuery;                                        // 0x0198(0x01E0)(Edit, NativeAccessSpecifierPublic)
	EPerchRotationMode                            RotationTarget;                                    // 0x0378(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EGbxBrainRotationPreset                       RotationPreset;                                    // 0x0379(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_37A[0x6];                                      // 0x037A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainTaskSettings_Perch;

// ScriptStruct GbxGame.GbxDiscoveryReplicationData
// 0x03C8 (0x03C8 - 0x0000)
struct alignas(0x08) FGbxDiscoveryReplicationData final
{
public:
	uint8                                         Pad_0[0x3C8];                                      // 0x0000(0x03C8)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxDiscoveryReplicationData;

// ScriptStruct GbxGame.GxInputEventActionCondition_HasUsable
// 0x0008 (0x0030 - 0x0028)
struct FGxInputEventActionCondition_HasUsable final : public FGxInputEventActionCondition
{
public:
	bool                                          bSecondaryUse;                                     // 0x0028(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGxInputEventActionCondition_HasUsable;

// ScriptStruct GbxGame.GbxSequenceDialogKey
// 0x0018 (0x0018 - 0x0000)
struct alignas(0x08) FGbxSequenceDialogKey final
{
public:
	FGbxDefPtrProperty_                           LineSlot;                                          // 0x0000(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxSequenceDialogKey;

// ScriptStruct GbxGame.GbxSequenceDialogChannel
// 0x00A8 (0x00F8 - 0x0050)
struct FGbxSequenceDialogChannel final : public FMovieSceneChannel
{
public:
	TArray<struct FFrameNumber>                   KeyTimes;                                          // 0x0050(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FGbxSequenceDialogKey>          KeyValues;                                         // 0x0060(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	struct FMovieSceneKeyHandleMap                KeyHandles;                                        // 0x0070(0x0088)(Transient, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxSequenceDialogChannel;

// ScriptStruct GbxGame.GbxActivityAreaStampLayoutSwitch
// 0x0000 (0x0008 - 0x0008)
struct FGbxActivityAreaStampLayoutSwitch : public FGbxHasStructType
{
};
DUMPER7_ASSERTS_FGbxActivityAreaStampLayoutSwitch;

// ScriptStruct GbxGame.GbxActivityAreaStampLayoutSwitchNamed
// 0x0078 (0x0080 - 0x0008)
struct FGbxActivityAreaStampLayoutSwitchNamed : public FGbxActivityAreaStampLayoutSwitch
{
public:
	TSoftObjectPtr<class UWorld>                  Default;                                           // 0x0008(0x0028)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<class FName, TSoftObjectPtr<class UWorld>> choices;                                         // 0x0030(0x0050)(Edit, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
};
DUMPER7_ASSERTS_FGbxActivityAreaStampLayoutSwitchNamed;

// ScriptStruct GbxGame.GbxActivityAreaStampLayoutSwitchFact
// 0x0038 (0x00B8 - 0x0080)
struct FGbxActivityAreaStampLayoutSwitchFact final : public FGbxActivityAreaStampLayoutSwitchNamed
{
public:
	struct FFactAddress                           FactAddress;                                       // 0x0080(0x0038)(Edit, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxActivityAreaStampLayoutSwitchFact;

// ScriptStruct GbxGame.GbxMomentNodeState_PlayTrick
// 0x0010 (0x0080 - 0x0070)
struct FGbxMomentNodeState_PlayTrick final : public FGbxMomentNodeState
{
public:
	uint8                                         Pad_70[0x10];                                      // 0x0070(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxMomentNodeState_PlayTrick;

// ScriptStruct GbxGame.GbxSkillStateMachineRegisterDef
// 0x0000 (0x0018 - 0x0018)
struct FGbxSkillStateMachineRegisterDef final : public FGbxDef
{
};
DUMPER7_ASSERTS_FGbxSkillStateMachineRegisterDef;

// ScriptStruct GbxGame.GbxSkillStateMachineStateDef_Transition
// 0x0070 (0x0070 - 0x0000)
struct FGbxSkillStateMachineStateDef_Transition final
{
public:
	class FString                                 TransitionName;                                    // 0x0000(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           State;                                             // 0x0010(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<FGbxDefPtrProperty_>                   Registers;                                         // 0x0028(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FGbxInlineStruct                       Condition;                                         // 0x0038(0x0018)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FGbxSkillStateMachineStateDef_RegisterOp> RegisterOps;                             // 0x0050(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FGbxInlineStruct>               TransitionActions;                                 // 0x0060(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxSkillStateMachineStateDef_Transition;

// ScriptStruct GbxGame.GbxSkillStateMachineStateDef_Assurance
// 0x0028 (0x0028 - 0x0000)
struct FGbxSkillStateMachineStateDef_Assurance final
{
public:
	struct FGbxInlineStruct                       Assurance;                                         // 0x0000(0x0018)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FGbxInlineStruct>               actions;                                           // 0x0018(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxSkillStateMachineStateDef_Assurance;

// ScriptStruct GbxGame.GbxSkillStateMachineStateDef
// 0x0098 (0x00B0 - 0x0018)
struct FGbxSkillStateMachineStateDef final : public FGbxDef
{
public:
	FGbxDefPtrProperty_                           LinkedSkillState;                                  // 0x0018(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGbxSkillStateMachineStateDef_SkillStateData SkillStateData;                              // 0x0030(0x0018)(Edit, NativeAccessSpecifierPrivate)
	TArray<struct FGbxSkillStateMachineStateDef_Transition> Transitions;                             // 0x0048(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FGbxSkillStateMachineStateDef_Assurance> Assurances;                               // 0x0058(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FGbxInlineStruct>               StartActions;                                      // 0x0068(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FGbxInlineStruct>               EndActions;                                        // 0x0078(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	EGbxSkillStateMachineRegisterPolicy           StartRegisterPolicy;                               // 0x0088(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EGbxSkillStateMachineRegisterPolicy           EndRegisterPolicy;                                 // 0x0089(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_8A[0x6];                                       // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGbxSkillStateMachineStateDef_RegisterOp> StartRegisterOps;                        // 0x0090(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FGbxSkillStateMachineStateDef_RegisterOp> EndRegisterOps;                          // 0x00A0(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxSkillStateMachineStateDef;

// ScriptStruct GbxGame.DamageArea_Radiate
// 0x0258 (0x02A0 - 0x0048)
struct FDamageArea_Radiate final : public FDamageArea
{
public:
	bool                                          bOverrideDamageAreaActorClass;                     // 0x0048(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   ActorClass;                                        // 0x0050(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class URadiateDamageAreaBodyData> Body;                                           // 0x0078(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EDamageAreaRadiateMethod                      RadiateMethod;                                     // 0x00A0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAttributeInit                      Velocity;                                          // 0x00A8(0x0050)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FGbxAttributeInit                      MinDistance;                                       // 0x00F8(0x0050)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FGbxAttributeInit                      MaxDistance;                                       // 0x0148(0x0050)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	EDamageAreaRadiateMovementType                RadiateMovementType;                               // 0x0198(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAttributeInit                      MaxStepUpHeight;                                   // 0x01A0(0x0050)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FGbxAttributeInit                      MaxStepDownHeight;                                 // 0x01F0(0x0050)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FGbxAttributeInit                      InitialStepDownHeight;                             // 0x0240(0x0050)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	float                                         GroundZOffset;                                     // 0x0290(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOffsetGroundByCollisionExtents;                   // 0x0294(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseContextRotation;                               // 0x0295(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_296[0x2];                                      // 0x0296(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         EffectTraceDownHeight;                             // 0x0298(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         EffectZOffset;                                     // 0x029C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FDamageArea_Radiate;

// ScriptStruct GbxGame.GbxDiscoveryReplicatedLiveActorArrayItem
// 0x002C (0x0038 - 0x000C)
struct FGbxDiscoveryReplicatedLiveActorArrayItem final : public FFastArraySerializerItem
{
public:
	uint8                                         Pad_C[0xC];                                        // 0x000C(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	uint8                                         TypeIndex;                                         // 0x0018(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector_NetQuantize                    Location;                                          // 0x0020(0x0018)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxDiscoveryReplicatedLiveActorArrayItem;

// ScriptStruct GbxGame.GbxDiscoveryReplicatedLiveActorArray
// 0x0010 (0x0120 - 0x0110)
struct FGbxDiscoveryReplicatedLiveActorArray final : public FFastArraySerializer
{
public:
	TArray<struct FGbxDiscoveryReplicatedLiveActorArrayItem> Array;                                  // 0x0110(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxDiscoveryReplicatedLiveActorArray;

// ScriptStruct GbxGame.GbxLevelRoadSegmentDef
// 0x0024 (0x0024 - 0x0000)
struct FGbxLevelRoadSegmentDef final
{
public:
	class FName                                   Name;                                              // 0x0000(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxLevelRoadSegmentConnectionDef      Connections[0x2];                                  // 0x0008(0x000C)(Edit, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_20[0x4];                                       // 0x0020(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxLevelRoadSegmentDef;

// ScriptStruct GbxGame.GbxLevelRoadDef
// 0x0070 (0x0088 - 0x0018)
struct FGbxLevelRoadDef final : public FGbxDef
{
public:
	TArray<struct FGbxLevelRoadControlPointDef>   ControlPoints;                                     // 0x0018(0x0010)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<struct FGbxLevelRoadSegmentDef>        Segments;                                          // 0x0028(0x0010)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  tags;                                              // 0x0038(0x0020)(Edit, EditConst, NativeAccessSpecifierPublic)
	uint8                                         Pad_58[0x30];                                      // 0x0058(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxLevelRoadDef;

// ScriptStruct GbxGame.GbxRotationTargetPreviewData
// 0x0090 (0x0090 - 0x0000)
struct FGbxRotationTargetPreviewData final
{
public:
	EGbxRotationTargetPreviewBehavior             TargetBehavior;                                    // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bTargetOriginTransformSet;                         // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2[0xE];                                        // 0x0002(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             TargetOriginTransform;                             // 0x0010(0x0060)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                 TargetColor;                                       // 0x0070(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TargetSize;                                        // 0x0074(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TargetOrbitRadius;                                 // 0x0078(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TargetOrbitSpeed;                                  // 0x007C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PingPongTime;                                      // 0x0080(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PingPongCenter;                                    // 0x0084(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PingPongSpread;                                    // 0x0088(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxRotationTargetPreviewData;

// ScriptStruct GbxGame.GbxSkillStateMachineStateAssurance
// 0x0000 (0x0008 - 0x0008)
struct FGbxSkillStateMachineStateAssurance : public FGbxHasStructType
{
};
DUMPER7_ASSERTS_FGbxSkillStateMachineStateAssurance;

// ScriptStruct GbxGame.GbxMomentNodeState_CinematicMode
// 0x0000 (0x0070 - 0x0070)
struct FGbxMomentNodeState_CinematicMode final : public FGbxMomentNodeState
{
};
DUMPER7_ASSERTS_FGbxMomentNodeState_CinematicMode;

// ScriptStruct GbxGame.GbxBodyNodeState_AvatarParameter
// 0x0000 (0x0068 - 0x0068)
struct FGbxBodyNodeState_AvatarParameter final : public FGbxBodyNodeState
{
};
DUMPER7_ASSERTS_FGbxBodyNodeState_AvatarParameter;

// ScriptStruct GbxGame.GbxInputEventSchema_Button_PressHoldRelease
// 0x0008 (0x0050 - 0x0048)
struct FGbxInputEventSchema_Button_PressHoldRelease final : public FGbxInputEventSchema_Button_Core
{
public:
	float                                         HoldTime;                                          // 0x0048(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxInputEventSchema_Button_PressHoldRelease;

// ScriptStruct GbxGame.GbxStatusEffectGraphNodeSettings_Push
// 0x0000 (0x0038 - 0x0038)
struct FGbxStatusEffectGraphNodeSettings_Push final : public FGbxStatusEffectGraphNodeSettings
{
};
DUMPER7_ASSERTS_FGbxStatusEffectGraphNodeSettings_Push;

// ScriptStruct GbxGame.GpsGenerator_InventoryPickups
// 0x0000 (0x0448 - 0x0448)
struct FGpsGenerator_InventoryPickups final : public FGpsGenerator_Actors
{
};
DUMPER7_ASSERTS_FGpsGenerator_InventoryPickups;

// ScriptStruct GbxGame.GbxBodyNodeSettings_AttachableRoot
// 0x0018 (0x0050 - 0x0038)
struct FGbxBodyNodeSettings_AttachableRoot final : public FGbxBodyNodeSettings
{
public:
	class UScriptStruct*                          ParentNodeType;                                    // 0x0038(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ParentNodeName;                                    // 0x0040(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ParentOutputName;                                  // 0x0048(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxBodyNodeSettings_AttachableRoot;

// ScriptStruct GbxGame.StampAlwaysLoadedActor
// 0x00A8 (0x00B0 - 0x0008)
struct FStampAlwaysLoadedActor final : public FGbxHasStructType
{
public:
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Transform;                                         // 0x0010(0x0060)(Edit, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UFXSystemAsset>          VFXTemplate;                                       // 0x0070(0x0028)(Edit, EditConst, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGbxParticleParameter>          ParticleParameters;                                // 0x0098(0x0010)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	uint8                                         Pad_A8[0x8];                                       // 0x00A8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FStampAlwaysLoadedActor;

// ScriptStruct GbxGame.GbxActivityAreaStampLayoutDef
// 0x0088 (0x00A0 - 0x0018)
struct FGbxActivityAreaStampLayoutDef final : public FGbxDef
{
public:
	TArray<struct FStampAlwaysLoadedActor>        AlwaysLoadedActors;                                // 0x0018(0x0010)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UWorld>                  Map;                                               // 0x0028(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FNexusBitSet                           AreaTags;                                          // 0x0050(0x0020)(Edit, NativeAccessSpecifierPrivate)
	struct FNexusBitSet                           mandatoryactivityareatags;                         // 0x0070(0x0020)(Edit, NativeAccessSpecifierPrivate)
	TArray<struct FGbxInlineStruct>               Switches;                                          // 0x0090(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxActivityAreaStampLayoutDef;

// ScriptStruct GbxGame.GbxAnimNode_RandomOverride
// 0x0190 (0x02B8 - 0x0128)
struct FGbxAnimNode_RandomOverride final : public FGbxAnimNode_StateMachine
{
public:
	struct FPoseLink                              PassThrough;                                       // 0x0128(0x0010)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FNumericRange                          PassthroughTime;                                   // 0x0138(0x0008)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FGbxRandomOverrideSequenceEntry> Entries;                                          // 0x0140(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FGbxAnimBlendOptions                   PassthroughToOverride;                             // 0x0150(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FGbxAnimBlendOptions                   OverrideToPassthrough;                             // 0x0170(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_190[0x128];                                    // 0x0190(0x0128)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxAnimNode_RandomOverride;

// ScriptStruct GbxGame.AvatarAppearanceNetChannel
// 0x004C (0x0058 - 0x000C)
struct FAvatarAppearanceNetChannel final : public FFastArraySerializerItem
{
public:
	class FName                                   Name;                                              // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         priority;                                          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAvatarAppearanceStatus                       status;                                            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	uint32                                        SerialRevision;                                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 SerialNumber;                                      // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        ParamsRevision;                                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int16>                                 NumberParams;                                      // 0x0038(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_48[0x10];                                      // 0x0048(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FAvatarAppearanceNetChannel;

// ScriptStruct GbxGame.GbxSkillStreamingAsset
// 0x0000 (0x0008 - 0x0008)
struct FGbxSkillStreamingAsset : public FGbxHasStructType
{
};
DUMPER7_ASSERTS_FGbxSkillStreamingAsset;

// ScriptStruct GbxGame.GbxSkillStreamingAsset_GbxActorDef
// 0x0010 (0x0018 - 0x0008)
struct FGbxSkillStreamingAsset_GbxActorDef final : public FGbxSkillStreamingAsset
{
public:
	TArray<FGameDataHandleProperty_>              Defs;                                              // 0x0008(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxSkillStreamingAsset_GbxActorDef;

// ScriptStruct GbxGame.GbxActivityAreaStampContextDef
// 0x0188 (0x01A0 - 0x0018)
struct FGbxActivityAreaStampContextDef final : public FGbxDef
{
public:
	TSoftObjectPtr<class UWorld>                  base;                                              // 0x0018(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           DefaultStampLayout;                                // 0x0040(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FNexusBitSet                           ActivityAreaTags;                                  // 0x0058(0x0020)(Edit, NativeAccessSpecifierPublic)
	struct FNexusBitSet                           mandatoryactivityareatags;                         // 0x0078(0x0020)(Edit, NativeAccessSpecifierPublic)
	TSet<FGbxDefPtrProperty_>                     Layouts;                                           // 0x0098(0x0050)(Edit, NativeAccessSpecifierPublic)
	TSet<FGbxDefPtrProperty_>                     LayoutGroups;                                      // 0x00E8(0x0050)(Edit, NativeAccessSpecifierPublic)
	bool                                          bUsesNavMesh;                                      // 0x0138(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                NavSize;                                           // 0x0140(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          UseDebugTexts;                                     // 0x0158(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_159[0x3];                                      // 0x0159(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         StampContextTextSize;                              // 0x015C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                StampContextTextOffset;                            // 0x0160(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                 StampContextTextColor;                             // 0x0178(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StampLayoutTextSize;                               // 0x017C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                StampLayoutTextOffset;                             // 0x0180(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                 StampLayoutTextColor;                              // 0x0198(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19C[0x4];                                      // 0x019C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxActivityAreaStampContextDef;

// ScriptStruct GbxGame.HealthTypeState
// 0x0088 (0x0088 - 0x0000)
struct FHealthTypeState final
{
public:
	uint8                                         Pad_0[0x18];                                       // 0x0000(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	FGameDataHandleProperty_                      HealthType;                                        // 0x0018(0x0018)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameResourcePoolReference             HealthPool;                                        // 0x0030(0x0020)(NoDestructor, NativeAccessSpecifierPrivate)
	struct FGbxAttributeFloat                     SimpleMaxHealth;                                   // 0x0050(0x000C)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGbxAttributeFloat>             Segments;                                          // 0x0060(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	struct FGbxAttributeFloat                     SimpleCurrentHealth;                               // 0x0070(0x000C)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bTakeAllDamageCharged;                             // 0x0080(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FHealthTypeState;

// ScriptStruct GbxGame.GbxHealthState
// 0x00F0 (0x00F8 - 0x0008)
struct FGbxHealthState : public FGbxHasStructType
{
public:
	TMulticastInlineDelegate<void()>              OnInitHealth;                                      // 0x0008(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, RepSkip, BlueprintAuthorityOnly, NativeAccessSpecifierPublic)
	uint8                                         Pad_18[0x18];                                      // 0x0018(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 owner;                                             // 0x0030(0x0008)(ZeroConstructor, RepSkip, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FHealthTypeState>               HealthTypeStates;                                  // 0x0038(0x0010)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	struct FGbxAttributeInteger                   HealingDisabled;                                   // 0x0048(0x000C)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                         HealthTypesRepKey;                                 // 0x0054(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         BitPad_55_0 : 2;                                   // 0x0055(0x0001)(Fixing Bit-Field Size Between Bits [ Dumper-7 ])
	uint8                                         bCurrentlyDead : 1;                                // 0x0055(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate))
	uint8                                         Pad_56[0xA2];                                      // 0x0056(0x00A2)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxHealthState;

// ScriptStruct GbxGame.GbxAnimNode_BlendSpaceEvaluator
// 0x0010 (0x00A8 - 0x0098)
struct FGbxAnimNode_BlendSpaceEvaluator final : public FAnimNode_BlendSpaceEvaluator_Standalone
{
public:
	struct FGameplayTag                           AnimAssetKey;                                      // 0x0098(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A0[0x8];                                       // 0x00A0(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxAnimNode_BlendSpaceEvaluator;

// ScriptStruct GbxGame.GbxActorPartAnimSet
// 0x00A0 (0x00A0 - 0x0000)
struct FGbxActorPartAnimSet
{
public:
	struct FGbxActorPartAnimList                  Anims3rd;                                          // 0x0000(0x0050)(Edit, NativeAccessSpecifierPublic)
	TMap<struct FGameplayTag, struct FGbxActorPartAnimList> ViewTargetAnims;                         // 0x0050(0x0050)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxActorPartAnimSet;

// ScriptStruct GbxGame.GbxActorPartAnimMatchSet
// 0x0020 (0x00C0 - 0x00A0)
struct FGbxActorPartAnimMatchSet final : public FGbxActorPartAnimSet
{
public:
	struct FGameplayTagContainer                  matchtags;                                         // 0x00A0(0x0020)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxActorPartAnimMatchSet;

// ScriptStruct GbxGame.ParameterizedScreenParticle
// 0x0068 (0x0068 - 0x0000)
struct FParameterizedScreenParticle
{
public:
	TSoftObjectPtr<class UFXSystemAsset>          ScreenParticle;                                    // 0x0000(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGbxParticleParameter>          ParticleParameters;                                // 0x0028(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bHideWhenFinished;                                 // 0x0038(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              ContentDims;                                       // 0x0040(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ParticleDepth;                                     // 0x0050(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EScreenParticleScalingMode                    ScalingMode;                                       // 0x0054(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOnlyOwnerSees;                                    // 0x0055(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAlwaysVisible;                                    // 0x0056(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_57[0x1];                                       // 0x0057(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ScreenEffectTag;                                   // 0x0058(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAllowMultipleScreenEffectInstances;               // 0x0060(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bTickWhenPaused;                                   // 0x0061(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHideDuringInGameMenu;                             // 0x0062(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHideDuringCinematic;                              // 0x0063(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHideInThirdPerson;                                // 0x0064(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHideInFirstPerson;                                // 0x0065(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_66[0x2];                                       // 0x0066(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FParameterizedScreenParticle;

// ScriptStruct GbxGame.ParameterizedScreenParticleCollection
// 0x0018 (0x0080 - 0x0068)
struct FParameterizedScreenParticleCollection final : public FParameterizedScreenParticle
{
public:
	FGbxDefPtrProperty_                           ScreenParticleCollection;                          // 0x0068(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FParameterizedScreenParticleCollection;

// ScriptStruct GbxGame.DamageDef
// 0x0348 (0x0360 - 0x0018)
struct alignas(0x10) FDamageDef final : public FGbxDef
{
public:
	FGameDataHandleProperty_                      DamageType;                                        // 0x0018(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_30[0x4];                                       // 0x0030(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bGetDamageTypeFromCauser;                          // 0x0034(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDamageSourceContainer                 DamageSource;                                      // 0x0038(0x0040)(Edit, NativeAccessSpecifierPublic)
	TArray<FGameDataHandleProperty_>              DamageModifiers;                                   // 0x0078(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FDamageTags                            DamageTags;                                        // 0x0088(0x0020)(Edit, NativeAccessSpecifierPublic)
	uint8                                         bSimulatedOnClient : 1;                            // 0x00A8(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bCanExecuteAsync : 1;                              // 0x00A8(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bForceNoCrit : 1;                                  // 0x00A8(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bRadiusDamage : 1;                                 // 0x00A8(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	bool                                          bUseTargetAsDamageEvaluationContext;               // 0x00A9(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLevelSyncDamage;                                  // 0x00AA(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_AB[0x1];                                       // 0x00AB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MaxAsyncExecutionDelay;                            // 0x00AC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   SourceSocketName;                                  // 0x00B0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESourceSocketRotationStyle                    SourceSocketRotationStyle;                         // 0x00B8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                SourceLocationOffset;                              // 0x00C0(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               SourceRotationOffset;                              // 0x00D8(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         bUseActorTransformAsSource : 1;                    // 0x00F0(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bZeroSourceRotationRoll : 1;                       // 0x00F0(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bZeroSourceRotationPitch : 1;                      // 0x00F0(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bZeroSourceRotationPitchBeforeApplyingOffset : 1;  // 0x00F0(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	EHitDirectionStyle                            HitDirectionStyle;                                 // 0x00F1(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F2[0x6];                                       // 0x00F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               HitRotationOffset;                                 // 0x00F8(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_110[0x20];                                     // 0x0110(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	struct FForceSelection                        ImpactForce;                                       // 0x0130(0x0048)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	float                                         UpwardForceScalar;                                 // 0x0178(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bApplyUpwardForce : 1;                             // 0x017C(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bImpactForceFallsOff : 1;                          // 0x017C(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_17D[0x3];                                      // 0x017D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAttitudeDamageRules                   AttitudeDamageRules;                               // 0x0180(0x0028)(Edit, NativeAccessSpecifierPublic)
	uint8                                         bCanHurtSelf : 1;                                  // 0x01A8(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bCanHurtInstigator : 1;                            // 0x01A8(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bEnforceAttitudeRulesForHealing : 1;               // 0x01A8(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bCausesDamageOverTime : 1;                         // 0x01A8(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bAllowMultipleInstances : 1;                       // 0x01A8(0x0001)(BitIndex: 0x04, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bHitEachTargetOnlyOnce : 1;                        // 0x01A8(0x0001)(BitIndex: 0x05, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bCacheSourceParams : 1;                            // 0x01A8(0x0001)(BitIndex: 0x06, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bCancelDamageOverTimeWhenOwnerDies : 1;            // 0x01A8(0x0001)(BitIndex: 0x07, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bStopSourceEffectOnEnd : 1;                        // 0x01A9(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bUpdateDamageWhenApplied : 1;                      // 0x01A9(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bApplyDamageOvertimeMaxValue : 1;                  // 0x01A9(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_1AA[0xE];                                      // 0x01AA(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FImpactEffectSelection                 ImpactEffect;                                      // 0x01B8(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactEffectSelection                 SourceEffect;                                      // 0x01D0(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	float                                         SourceEffectOffset;                                // 0x01E8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOffsetSourceEffectAlongImpact;                    // 0x01EC(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSpawnSourceEffectAtImpact;                        // 0x01ED(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1EE[0x2];                                      // 0x01EE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FParameterizedScreenParticleCollection ScreenEffect;                                      // 0x01F0(0x0080)(Edit, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UGbxStatusEffectData>    StatusEffectData;                                  // 0x0270(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxStatusEffectApplicationModifierSet StatusEffectModifierSet;                           // 0x0298(0x0010)(Edit, NativeAccessSpecifierPublic)
	struct FAttitudeDamageRules                   StatusEffectAttitude;                              // 0x02A8(0x0028)(Edit, NativeAccessSpecifierPublic)
	uint8                                         bSpawnPuddleHazard : 1;                            // 0x02D0(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bUsePuddleHazardRadius : 1;                        // 0x02D0(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bScalePuddleHazardRadiusByDamageRadius : 1;        // 0x02D0(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bSpawnPuddleHazardOnce : 1;                        // 0x02D0(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bPuddleCanDamageInstigator : 1;                    // 0x02D0(0x0001)(BitIndex: 0x04, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bPuddleCanDamageFriendlies : 1;                    // 0x02D0(0x0001)(BitIndex: 0x05, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bPuddleInheritsDamageSource : 1;                   // 0x02D0(0x0001)(BitIndex: 0x06, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bUsePuddleHazardAsFallback : 1;                    // 0x02D0(0x0001)(BitIndex: 0x07, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_2D1[0x7];                                      // 0x02D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FGameDataHandleProperty_                      PuddleHazard;                                      // 0x02D8(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                PuddleHazardOffset;                                // 0x02F0(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EPuddleDamageSourceType                       PuddleDamageSource;                                // 0x0308(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_309[0x3];                                      // 0x0309(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PuddleHazardRadius;                                // 0x030C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_310[0x8];                                      // 0x0310(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   Script;                                            // 0x0318(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bForceOverkillOnDeath;                             // 0x0340(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOverkillChance;                                   // 0x0341(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_342[0x2];                                      // 0x0342(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         OverkillChance;                                    // 0x0344(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxInlineStruct                       DamageArea;                                        // 0x0348(0x0018)(Edit, Protected, NativeAccessSpecifierProtected)
};
DUMPER7_ASSERTS_FDamageDef;

// ScriptStruct GbxGame.HitRegionComponentData
// 0x0068 (0x0068 - 0x0000)
struct FHitRegionComponentData final
{
public:
	class USceneComponent*                        Component;                                         // 0x0000(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8[0x60];                                       // 0x0008(0x0060)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FHitRegionComponentData;

// ScriptStruct GbxGame.HitRegionState
// 0x0080 (0x0080 - 0x0000)
struct FHitRegionState final
{
public:
	uint8                                         Pad_0[0x60];                                       // 0x0000(0x0060)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FHitRegionComponentData>        ComponentToRegionList;                             // 0x0060(0x0010)(ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_70[0x10];                                      // 0x0070(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FHitRegionState;

// ScriptStruct GbxGame.GbxDamageEventBindings
// 0x0010 (0x0010 - 0x0000)
struct FGbxDamageEventBindings final
{
public:
	class UObject*                                Instance;                                          // 0x0000(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDamageableEventBinding*                Binder;                                            // 0x0008(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxDamageEventBindings;

// ScriptStruct GbxGame.GbxDamageState
// 0x04F0 (0x04F8 - 0x0008)
struct FGbxDamageState : public FGbxHasStructType
{
public:
	uint8                                         Pad_8[0x40];                                       // 0x0008(0x0040)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAttributeFloat                     DamageTakenMultiplier;                             // 0x0048(0x000C)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	struct FGbxAttributeFloat                     RadiusDamageTakenMultiplier;                       // 0x0054(0x000C)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	struct FGbxAttributeFloat                     HealingReceivedMultiplier;                         // 0x0060(0x000C)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	uint8                                         Pad_6C[0x94];                                      // 0x006C(0x0094)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class AActor* DamageReceiver, const struct FReceivedDamageDetails& Details)> OnTakeAnyDamage; // 0x0100(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_110[0x18];                                     // 0x0110(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class AActor* HealReceiver, float Healing, class AActor* HealInstigator)> OnTakeAnyHealing; // 0x0128(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class AActor* DamageReceiver, class AActor* DamageCauser)> OnHealthDepleted; // 0x0138(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_148[0x18];                                     // 0x0148(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnHealthAndDamageReset;                            // 0x0160(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class AActor* DamageReceiver, class AActor* DamageCauser)> OnDeath; // 0x0170(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_180[0x30];                                     // 0x0180(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(const struct FHitByFriendlyEventDetails& Details)> OnHitByFriendly; // 0x01B0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C0[0x18];                                     // 0x01C0(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class AActor* DamageReceiver, class AActor* DamageCauser)> OnInjury; // 0x01D8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_1E8[0x30];                                     // 0x01E8(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAttributeInteger                   DisableElementalResistance;                        // 0x0218(0x000C)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	uint8                                         Pad_224[0x4];                                      // 0x0224(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 owner;                                             // 0x0228(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TScriptInterface<class IDamageableInterface>  DamageableOwner;                                   // 0x0230(0x0010)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AActor*                                 DamageParent;                                      // 0x0240(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FHitRegionState                        HitRegionState;                                    // 0x0248(0x0080)(Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_2C8[0x10];                                     // 0x02C8(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      LastHitByPlayer;                                   // 0x02D8(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FReceivedDamageDetails                 DeathDetails;                                      // 0x02E0(0x0140)(Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_420[0x30];                                     // 0x0420(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            LastHitBy;                                         // 0x0450(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGbxAttributeFloat                     AvertDeathChance;                                  // 0x0458(0x000C)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                         Pad_464[0x4];                                      // 0x0464(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         IntrinsicArmor;                                    // 0x0468(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGbxAttributeFloat                     SelfReflectionChance;                              // 0x046C(0x000C)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	struct FGbxAttributeFloat                     SelfReflectionDamageTakenScale;                    // 0x0478(0x000C)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	struct FGbxAttributeFloat                     SelfReflectionDamageScale;                         // 0x0484(0x000C)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	struct FGbxAttributeInteger                   SelfReflectionTowardsAttacker;                     // 0x0490(0x000C)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                         Pad_49C[0x2C];                                     // 0x049C(0x002C)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGbxDamageEventBindings>        StateMachineDamageEventBindings;                   // 0x04C8(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                         Pad_4D8[0x20];                                     // 0x04D8(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxDamageState;

// ScriptStruct GbxGame.GbxFastReplicatedBitArrayItem
// 0x0008 (0x0014 - 0x000C)
struct FGbxFastReplicatedBitArrayItem final : public FFastArraySerializerItem
{
public:
	uint32                                        BitField;                                          // 0x000C(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint16                                        ArrayIndex;                                        // 0x0010(0x0002)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxFastReplicatedBitArrayItem;

// ScriptStruct GbxGame.GbxFastReplicatedBitArray
// 0x0010 (0x0120 - 0x0110)
struct FGbxFastReplicatedBitArray final : public FFastArraySerializer
{
public:
	TArray<struct FGbxFastReplicatedBitArrayItem> items;                                             // 0x0110(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxFastReplicatedBitArray;

// ScriptStruct GbxGame.InventoryStatsContainerContextResolver
// 0x0000 (0x0008 - 0x0008)
struct FInventoryStatsContainerContextResolver final : public FAttributeContextResolver
{
};
DUMPER7_ASSERTS_FInventoryStatsContainerContextResolver;

// ScriptStruct GbxGame.GbxBrainTaskSettings_LeapAttack
// 0x07E8 (0x0980 - 0x0198)
struct FGbxBrainTaskSettings_LeapAttack final : public FGbxBrainTaskSettings_CompositeQuery
{
public:
	ELeapAttackTargetMode                         Mode;                                              // 0x0198(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              target;                                            // 0x01A0(0x0038)(Edit, NativeAccessSpecifierPrivate)
	EGbxBrainTerritoryRestriction                 TerritoryRestriction;                              // 0x01D8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EGbxTerritoryArea                             TerritoryArea;                                     // 0x01D9(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1DA[0x2];                                      // 0x01DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TargetOutOfTerritoryFailTimer;                     // 0x01DC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGpsQueryRunData                       FindEndPosGpsQuery;                                // 0x01E0(0x01E0)(Edit, NativeAccessSpecifierPrivate)
	struct FGpsQueryRunData                       Query;                                             // 0x03C0(0x01E0)(Edit, NativeAccessSpecifierPrivate)
	struct FGpsQueryRunData                       ValidateEndPosQuery;                               // 0x05A0(0x01E0)(NativeAccessSpecifierPrivate)
	class UGbxTrick_Leap*                         LeapTrick;                                         // 0x0780(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EAttackRotation_InPosition                    BodyRotation_InPosition;                           // 0x0788(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ELeapAttackRotationTarget                     BodyRotationTarget_InPosition;                     // 0x0789(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_78A[0x6];                                      // 0x078A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              CustomBodyRotationTarget_InPosition;               // 0x0790(0x0038)(Edit, NativeAccessSpecifierPrivate)
	TArray<struct FGbxRotationChannelDataOverride> BodyRotationOverrides_InPosition;                 // 0x07C8(0x0010)(Edit, ZeroConstructor, AdvancedDisplay, NativeAccessSpecifierPrivate)
	struct FGbxParam                              BodyRotationAngle;                                 // 0x07D8(0x0038)(Edit, AdvancedDisplay, NativeAccessSpecifierPrivate)
	struct FGbxParam                              AfterTurnAngle;                                    // 0x0810(0x0038)(Edit, AdvancedDisplay, NativeAccessSpecifierPrivate)
	bool                                          bUseAfterTurnAngle;                                // 0x0848(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bLimitTurnAnims;                                   // 0x0849(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_84A[0x6];                                      // 0x084A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              MaxTurnAnims;                                      // 0x0850(0x0038)(Edit, AdvancedDisplay, NativeAccessSpecifierPrivate)
	struct FGbxParam                              TargetRadius;                                      // 0x0888(0x0038)(Edit, AdvancedDisplay, NativeAccessSpecifierPrivate)
	bool                                          bIncludeTargetRadius;                              // 0x08C0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_8C1[0x7];                                      // 0x08C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              TraceExtent;                                       // 0x08C8(0x0038)(Edit, AdvancedDisplay, NativeAccessSpecifierPrivate)
	bool                                          bUseTraceExtent;                                   // 0x0900(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bCanMoveIntoPosition;                              // 0x0901(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_902[0x6];                                      // 0x0902(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              ArrivalRadius;                                     // 0x0908(0x0038)(Edit, NativeAccessSpecifierPrivate)
	struct FGbxParam                              ArrivalHalfHeight;                                 // 0x0940(0x0038)(Edit, NativeAccessSpecifierPrivate)
	EAttackRotation_Moving                        BodyRotation_Moving;                               // 0x0978(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bAllowHeadLook_Moving;                             // 0x0979(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bAllowAimOffset_Moving;                            // 0x097A(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_97B[0x5];                                      // 0x097B(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainTaskSettings_LeapAttack;

// ScriptStruct GbxGame.RegistryJunkModifier_MissionGiverPickup
// 0x0000 (0x0080 - 0x0080)
struct FRegistryJunkModifier_MissionGiverPickup final : public FRegistryJunkModifier_MissionPickup
{
};
DUMPER7_ASSERTS_FRegistryJunkModifier_MissionGiverPickup;

// ScriptStruct GbxGame.GbxStatusEffectPushSpec
// 0x0048 (0x0048 - 0x0000)
struct FGbxStatusEffectPushSpec final
{
public:
	class UGbxStatusEffectData*                   StatusEffectData;                                  // 0x0000(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                owner;                                             // 0x0008(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  tags;                                              // 0x0010(0x0020)(BlueprintVisible, NativeAccessSpecifierPublic)
	struct FGbxStatusEffectSpec_Params            params;                                            // 0x0030(0x0018)(BlueprintVisible, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxStatusEffectPushSpec;

// ScriptStruct GbxGame.GbxStatusEffectPopAllData
// 0x0004 (0x0004 - 0x0000)
struct FGbxStatusEffectPopAllData
{
public:
	int32                                         PopFlagMask;                                       // 0x0000(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxStatusEffectPopAllData;

// ScriptStruct GbxGame.GbxStatusEffectPopAllSpec
// 0x004C (0x0050 - 0x0004)
struct FGbxStatusEffectPopAllSpec final : public FGbxStatusEffectPopAllData
{
public:
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagQuery                      TagQuery;                                          // 0x0008(0x0048)(BlueprintVisible, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxStatusEffectPopAllSpec;

// ScriptStruct GbxGame.GbxAudioGraphState_If
// 0x0020 (0x0198 - 0x0178)
struct FGbxAudioGraphState_If final : public FGbxAudioGraphState_Sequencer
{
public:
	uint8                                         Pad_178[0x20];                                     // 0x0178(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxAudioGraphState_If;

// ScriptStruct GbxGame.AvatarAppearanceNetChannels
// 0x0010 (0x0120 - 0x0110)
struct FAvatarAppearanceNetChannels final : public FFastArraySerializer
{
public:
	TArray<struct FAvatarAppearanceNetChannel>    Channels;                                          // 0x0110(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FAvatarAppearanceNetChannels;

// ScriptStruct GbxGame.GbxInputEvent_Axis_Core
// 0x0018 (0x0078 - 0x0060)
struct FGbxInputEvent_Axis_Core : public FGbxInputEvent
{
public:
	uint8                                         Pad_60[0x18];                                      // 0x0060(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxInputEvent_Axis_Core;

// ScriptStruct GbxGame.GbxStatusEffectPresentationGraphNodeSettings_Effect_Trick
// 0x0008 (0x0040 - 0x0038)
struct FGbxStatusEffectPresentationGraphNodeSettings_Effect_Trick final : public FGbxStatusEffectPresentationGraphNodeSettings_Effect
{
public:
	class UGbxTrick*                              Trick;                                             // 0x0038(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxStatusEffectPresentationGraphNodeSettings_Effect_Trick;

// ScriptStruct GbxGame.GbxAINodeStanceData_Default
// 0x0008 (0x0020 - 0x0018)
struct FGbxAINodeStanceData_Default final : public FGbxAINodeStanceData
{
public:
	EGbxAINodeStanceStyle                         Style;                                             // 0x0018(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EGbxAINodeStanceSpeed                         speed;                                             // 0x0019(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxAINodeStanceData_Default;

// ScriptStruct GbxGame.GbxAINodeStanceData_Aggro
// 0x0008 (0x0020 - 0x0018)
struct FGbxAINodeStanceData_Aggro final : public FGbxAINodeStanceData
{
public:
	EGbxAINodeStanceStyle                         Style;                                             // 0x0018(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EGbxAINodeStanceSpeed                         speed;                                             // 0x0019(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxAINodeStanceData_Aggro;

// ScriptStruct GbxGame.GbxAINodeStance
// 0x0080 (0x0080 - 0x0000)
struct FGbxAINodeStance final
{
public:
	struct FGbxAINodeStanceData_Default           Default;                                           // 0x0000(0x0020)(Edit, NativeAccessSpecifierPrivate)
	struct FGbxAINodeStanceData_Aggro             Aggro;                                             // 0x0020(0x0020)(Edit, NativeAccessSpecifierPrivate)
	FGbxDefPtrProperty_                           StanceMapOverrideDef;                              // 0x0040(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           StanceOverrideTag;                                 // 0x0058(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      StanceOverrideDef;                                 // 0x0060(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseTagOverride;                                   // 0x0078(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseStanceDefOverride;                             // 0x0079(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_7A[0x6];                                       // 0x007A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxAINodeStance;

// ScriptStruct GbxGame.GbxMomentNodeState_SetStance
// 0x0010 (0x0080 - 0x0070)
struct FGbxMomentNodeState_SetStance final : public FGbxMomentNodeState
{
public:
	uint8                                         Pad_70[0x10];                                      // 0x0070(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxMomentNodeState_SetStance;

// ScriptStruct GbxGame.OxygenConsumerState
// 0x0148 (0x0148 - 0x0000)
struct FOxygenConsumerState final
{
public:
	uint8                                         Pad_0[0x18];                                       // 0x0000(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class AActor* OxygenConsumer)> OnOxygenDepletedEvent;              // 0x0018(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, RepSkip, NativeAccessSpecifierPublic)
	uint8                                         Pad_28[0x18];                                      // 0x0028(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class AActor* OxygenConsumer)> OnOxygenNotDepletedEvent;           // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, RepSkip, NativeAccessSpecifierPublic)
	uint8                                         Pad_50[0xE0];                                      // 0x0050(0x00E0)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAttributeFloat                     OxygenConsumptionRateScalar;                       // 0x0130(0x000C)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	struct FGbxAttributeFloat                     OxygenRegenerationRateScalar;                      // 0x013C(0x000C)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
};
DUMPER7_ASSERTS_FOxygenConsumerState;

// ScriptStruct GbxGame.GbxAudioBodyAction_GetNamedEmitter
// 0x0008 (0x0010 - 0x0008)
struct FGbxAudioBodyAction_GetNamedEmitter final : public FGbxAudioBodyAction
{
public:
	class FName                                   EmitterTag;                                        // 0x0008(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxAudioBodyAction_GetNamedEmitter;

// ScriptStruct GbxGame.VisibilityPhaseState
// 0x0008 (0x0008 - 0x0000)
struct FVisibilityPhaseState final
{
public:
	class FName                                   PhaseName;                                         // 0x0000(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FVisibilityPhaseState;

// ScriptStruct GbxGame.GbxActorScriptDelegateData
// 0x0024 (0x0024 - 0x0000)
struct FGbxActorScriptDelegateData final
{
public:
	class FName                                   DelegateName;                                      // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   FunctionName;                                      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   StructPropertyName;                                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ComponentPropertyName;                             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsScriptDelegate;                                 // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxActorScriptDelegateData;

// ScriptStruct GbxGame.RepProjectileVelocity
// 0x0020 (0x0020 - 0x0000)
struct alignas(0x08) FRepProjectileVelocity final
{
public:
	uint8                                         Pad_0[0x20];                                       // 0x0000(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FRepProjectileVelocity;

// ScriptStruct GbxGame.CameraModeBehavior_FOV
// 0x0008 (0x0020 - 0x0018)
struct FCameraModeBehavior_FOV : public FCameraModeBehavior
{
public:
	float                                         fov;                                               // 0x0018(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FCameraModeBehavior_FOV;

// ScriptStruct GbxGame.GbxInputGameDataCategories_DONTUSE
// 0x0001 (0x0001 - 0x0000)
struct FGbxInputGameDataCategories_DONTUSE final
{
public:
	uint8                                         Pad_0[0x1];                                        // 0x0000(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxInputGameDataCategories_DONTUSE;

// ScriptStruct GbxGame.ObjectiveBoundarySettings
// 0x0020 (0x0020 - 0x0000)
struct FObjectiveBoundarySettings final
{
public:
	EObjectiveBoundaryType                        type;                                              // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMissionAliasRef                       TriggerBoundary;                                   // 0x0004(0x000C)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FMissionAliasRef                       DynamicBoundary;                                   // 0x0010(0x000C)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	float                                         DynamicBoundaryRadius;                             // 0x001C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FObjectiveBoundarySettings;

// ScriptStruct GbxGame.ObjectiveValueEvaluator_FactExpressionBase
// 0x0000 (0x0008 - 0x0008)
struct FObjectiveValueEvaluator_FactExpressionBase : public FObjectiveValueEvaluator
{
};
DUMPER7_ASSERTS_FObjectiveValueEvaluator_FactExpressionBase;

// ScriptStruct GbxGame.ObjectiveValueEvaluator_Boundary
// 0x0028 (0x0030 - 0x0008)
struct FObjectiveValueEvaluator_Boundary final : public FObjectiveValueEvaluator_FactExpressionBase
{
public:
	struct FObjectiveBoundarySettings             Boundary;                                          // 0x0008(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	EObjectiveTriggerPlayerEventType              EventType;                                         // 0x0028(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FObjectiveValueEvaluator_Boundary;

// ScriptStruct GbxGame.GbxBrainAspectSettings_HasSkill
// 0x0020 (0x00A0 - 0x0080)
struct FGbxBrainAspectSettings_HasSkill final : public FGbxBrainAspectSettings
{
public:
	FGameDataHandleProperty_                      Skill;                                             // 0x0080(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInvert;                                           // 0x0098(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainAspectSettings_HasSkill;

// ScriptStruct GbxGame.ReplicatedGestaltPartsData
// 0x0020 (0x0020 - 0x0000)
struct alignas(0x08) FReplicatedGestaltPartsData final
{
public:
	uint8                                         Pad_0[0x20];                                       // 0x0000(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FReplicatedGestaltPartsData;

// ScriptStruct GbxGame.FactsBinderEventFilter
// 0x0000 (0x0008 - 0x0008)
struct FFactsBinderEventFilter final : public FGbxHasStructType
{
};
DUMPER7_ASSERTS_FFactsBinderEventFilter;

// ScriptStruct GbxGame.GbxCurrency
// 0x0018 (0x0018 - 0x0000)
struct FGbxCurrency final
{
public:
	struct FSToken                                type;                                              // 0x0000(0x000C)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	uint64                                        Amount;                                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxCurrency;

// ScriptStruct GbxGame.InventoryIdentity
// 0x00D8 (0x00D8 - 0x0000)
struct alignas(0x08) FInventoryIdentity final
{
public:
	uint8                                         Pad_0[0xD8];                                       // 0x0000(0x00D8)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FInventoryIdentity;

// ScriptStruct GbxGame.CoordinatedEffectFilterDefCategory_DONTUSE
// 0x0001 (0x0001 - 0x0000)
struct FCoordinatedEffectFilterDefCategory_DONTUSE final
{
public:
	uint8                                         Pad_0[0x1];                                        // 0x0000(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FCoordinatedEffectFilterDefCategory_DONTUSE;

// ScriptStruct GbxGame.GbxBrainTaskSettings_OnAggro
// 0x0158 (0x02F0 - 0x0198)
struct FGbxBrainTaskSettings_OnAggro : public FGbxBrainTaskSettings_Composite
{
public:
	uint8                                         Pad_198[0x4];                                      // 0x0198(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ChanceOfPlaying;                                   // 0x019C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGbxAITicketUseData                    Ticket;                                            // 0x01A0(0x00B8)(Edit, NativeAccessSpecifierPrivate)
	struct FGbxTrickRef                           Trick;                                             // 0x0258(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FGbxParam                              Count;                                             // 0x0270(0x0038)(Edit, NativeAccessSpecifierPrivate)
	struct FGbxParam                              PlayRate;                                          // 0x02A8(0x0038)(Edit, NativeAccessSpecifierPrivate)
	struct FNumericRange                          delay;                                             // 0x02E0(0x0008)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	ETrickInterrupt                               InterruptRule;                                     // 0x02E8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2EC[0x4];                                      // 0x02EC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainTaskSettings_OnAggro;

// ScriptStruct GbxGame.GbxStandInBodyNode
// 0x0010 (0x0018 - 0x0008)
struct FGbxStandInBodyNode : public FGbxHasStructType
{
public:
	class FName                                   Component;                                         // 0x0008(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIncludeAllNodeParents;                            // 0x0010(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIncludeAllNodeChildren;                           // 0x0011(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxStandInBodyNode;

// ScriptStruct GbxGame.RepZoomHandlerState
// 0x0002 (0x0002 - 0x0000)
struct FRepZoomHandlerState final
{
public:
	uint8                                         Pad_0[0x2];                                        // 0x0000(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FRepZoomHandlerState;

// ScriptStruct GbxGame.GbxActorPartSerialNumber
// 0x0010 (0x0038 - 0x0028)
struct FGbxActorPartSerialNumber final : public FGbxSerialNumberClass
{
public:
	uint8                                         Pad_28[0x10];                                      // 0x0028(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxActorPartSerialNumber;

// ScriptStruct GbxGame.ZoomHandlerState
// 0x0048 (0x0048 - 0x0000)
struct alignas(0x08) FZoomHandlerState final
{
public:
	EZoomState                                    State;                                             // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Level;                                             // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPendingZoom;                                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bWantsToZoom;                                      // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bTickingZoom;                                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ZoomStartTime;                                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ZoomTransitionStartTime;                           // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         DesiredZoomLevel;                                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x37];                                      // 0x0011(0x0037)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FZoomHandlerState;

// ScriptStruct GbxGame.GbxMomentNodeState_SetBlackboardValue
// 0x0038 (0x00A8 - 0x0070)
struct FGbxMomentNodeState_SetBlackboardValue : public FGbxMomentNodeState
{
public:
	uint8                                         Pad_70[0x38];                                      // 0x0070(0x0038)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxMomentNodeState_SetBlackboardValue;

// ScriptStruct GbxGame.GbxMomentNodeState_SetBlackboardValue_NPC
// 0x0000 (0x00A8 - 0x00A8)
struct FGbxMomentNodeState_SetBlackboardValue_NPC final : public FGbxMomentNodeState_SetBlackboardValue
{
};
DUMPER7_ASSERTS_FGbxMomentNodeState_SetBlackboardValue_NPC;

// ScriptStruct GbxGame.InventoryCriterionPresetTagData
// 0x00C8 (0x00C8 - 0x0000)
struct FInventoryCriterionPresetTagData final
{
public:
	struct FInventoryTags                         tags;                                              // 0x0000(0x0020)(Edit, NativeAccessSpecifierPublic)
	bool                                          bNoneSet;                                          // 0x0020(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, struct FGbxAttributeInit>   TagWeights;                                        // 0x0028(0x0050)(Edit, NativeAccessSpecifierPublic)
	TMap<class FName, struct FGbxAttributeInit>   TagMinGameStages;                                  // 0x0078(0x0050)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FInventoryCriterionPresetTagData;

// ScriptStruct GbxGame.GbxDiscoveryPinningPinData
// 0x0078 (0x0078 - 0x0000)
struct FGbxDiscoveryPinningPinData final
{
public:
	TWeakObjectPtr<class APlayerState>            OwningPlayer;                                      // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGbxDiscoveryPinType                          pintype;                                           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         pintypeindex;                                      // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   PinnedCustomWaypointWorldName;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                PinnedCustomWaypointLocation;                      // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_30[0x38];                                      // 0x0030(0x0038)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   pinneddiscoverylocationmetadataname;               // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_70[0x8];                                       // 0x0070(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxDiscoveryPinningPinData;

// ScriptStruct GbxGame.GbxDiscoveryPinningState
// 0x0028 (0x0028 - 0x0000)
struct FGbxDiscoveryPinningState final
{
public:
	TArray<struct FGbxDiscoveryPinningPinData>    PinnedDatas;                                       // 0x0000(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_10[0x18];                                      // 0x0010(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxDiscoveryPinningState;

// ScriptStruct GbxGame.ReplicatedMeleeState
// 0x0038 (0x0038 - 0x0000)
struct FReplicatedMeleeState final
{
public:
	int32                                         Counter;                                           // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   BodyActionName;                                    // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSName                                 MeleeDefIdentifier;                                // 0x0010(0x0028)(HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FReplicatedMeleeState;

// ScriptStruct GbxGame.MeleeState
// 0x0188 (0x0188 - 0x0000)
struct FMeleeState
{
public:
	uint8                                         Pad_0[0xB4];                                       // 0x0000(0x00B4)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAttributeFloat                     PlayRate;                                          // 0x00B4(0x000C)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	struct FGbxAttributeFloat                     CooldownScale;                                     // 0x00C0(0x000C)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	uint8                                         Pad_CC[0x3C];                                      // 0x00CC(0x003C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FReplicatedMeleeState                  ReplicatedMeleeState;                              // 0x0108(0x0038)(Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_140[0x48];                                     // 0x0140(0x0048)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FMeleeState;

// ScriptStruct GbxGame.MovementGrantCondition
// 0x0048 (0x0048 - 0x0000)
struct FMovementGrantCondition final
{
public:
	bool                                          bCanBeGranted;                                     // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bGrantedByDefault;                                 // 0x0001(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCanBeGrantedByFact;                               // 0x0002(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFactAddress                           FactAddress;                                       // 0x0008(0x0038)(Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bGrantedByDefaultInPIE;                            // 0x0040(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FMovementGrantCondition;

// ScriptStruct GbxGame.BinderBehaviorMod_OverrideDialogNameTag
// 0x0030 (0x0048 - 0x0018)
struct FBinderBehaviorMod_OverrideDialogNameTag final : public FFactsBinderBehaviorMod
{
public:
	struct FMissionGbxDef                         OverrideNameTag;                                   // 0x0018(0x0030)(Edit, NoDestructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FBinderBehaviorMod_OverrideDialogNameTag;

// ScriptStruct GbxGame.GbxSkillComponentDataItem_DamageModifier
// 0x0018 (0x0050 - 0x0038)
struct FGbxSkillComponentDataItem_DamageModifier final : public FGbxSkillComponentData_TargetableItem
{
public:
	TArray<FGameDataHandleProperty_>              ModifierDefs;                                      // 0x0038(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	EGbxSkillComponentDamageModifierMode          ModifierMode;                                      // 0x0048(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxSkillComponentDataItem_DamageModifier;

// ScriptStruct GbxGame.GbxSkillComponentData_DamageModifier
// 0x0010 (0x0070 - 0x0060)
struct FGbxSkillComponentData_DamageModifier final : public FGbxSkillComponentData_Targetable
{
public:
	TArray<struct FGbxSkillComponentDataItem_DamageModifier> Profiles;                               // 0x0060(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxSkillComponentData_DamageModifier;

// ScriptStruct GbxGame.InventoryItemHandle
// 0x0004 (0x0004 - 0x0000)
struct FInventoryItemHandle final
{
public:
	int32                                         Handle;                                            // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FInventoryItemHandle;

// ScriptStruct GbxGame.GbxEquippedInventorySlot
// 0x0014 (0x0020 - 0x000C)
struct FGbxEquippedInventorySlot : public FFastArraySerializerItem
{
public:
	struct FInventoryItemHandle                   SourceItemHandle;                                  // 0x000C(0x0004)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLocked;                                           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0xF];                                       // 0x0011(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxEquippedInventorySlot;

// ScriptStruct GbxGame.GbxGameModeConfigUniqueData
// 0x0020 (0x0028 - 0x0008)
struct FGbxGameModeConfigUniqueData final : public FGbxHasStructType
{
public:
	class FName                                   Name;                                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           DisplayData;                                       // 0x0010(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxGameModeConfigUniqueData;

// ScriptStruct GbxGame.CameraModeBehavior_ViewModelOffset
// 0x0048 (0x0060 - 0x0018)
struct FCameraModeBehavior_ViewModelOffset : public FCameraModeBehavior
{
public:
	struct FVector                                LocationOffset;                                    // 0x0018(0x0018)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                               RotationOffset;                                    // 0x0030(0x0018)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FVector                                SplitScreenLocationOffset;                         // 0x0048(0x0018)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
};
DUMPER7_ASSERTS_FCameraModeBehavior_ViewModelOffset;

// ScriptStruct GbxGame.GbxLevelRoadAreaEntry
// 0x0060 (0x0060 - 0x0000)
struct FGbxLevelRoadAreaEntry final
{
public:
	TSoftObjectPtr<class AActor>                  RoadActor;                                         // 0x0000(0x0028)(Edit, EditConst, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TScriptInterface<class IGbxSplineSegment>     RoadSegment;                                       // 0x0028(0x0010)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TScriptInterface<class IGbxSplineControlPoint> RoadControlPoint;                                 // 0x0038(0x0010)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                RoadLocation;                                      // 0x0048(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxLevelRoadAreaEntry;

// ScriptStruct GbxGame.ObjectiveValueEvaluator_TaskFinished
// 0x0010 (0x0018 - 0x0008)
struct FObjectiveValueEvaluator_TaskFinished final : public FObjectiveValueEvaluator_FactExpressionBase
{
public:
	struct FMissionAliasRef                       TaskAlias;                                         // 0x0008(0x000C)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FObjectiveValueEvaluator_TaskFinished;

// ScriptStruct GbxGame.GbxAudioBodyAction_SpawnEmitter
// 0x00B8 (0x00C0 - 0x0008)
struct FGbxAudioBodyAction_SpawnEmitter final : public FGbxAudioBodyAction
{
public:
	class FName                                   OptionalEmitterTag;                                // 0x0008(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxAudioEmitterSource                 SourceInfo;                                        // 0x0010(0x0080)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bAttached;                                         // 0x0090(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_91[0x2F];                                      // 0x0091(0x002F)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxAudioBodyAction_SpawnEmitter;

// ScriptStruct GbxGame.GbxSkillContainer
// 0x0210 (0x0210 - 0x0000)
struct FGbxSkillContainer
{
public:
	uint8                                         Pad_0[0x20];                                       // 0x0000(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGbxSkillOwner>        OwnerInterface;                                    // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AActor*                                 NetOwner;                                          // 0x0030(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UGbxSkill*>                      skills;                                            // 0x0038(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	TArray<class UGbxSkill*>                      PendingReplicatedSkills;                           // 0x0048(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	uint8                                         Pad_58[0x1B8];                                     // 0x0058(0x01B8)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxSkillContainer;

// ScriptStruct GbxGame.GbxPickupObjectiveSpawnStrategy
// 0x0000 (0x0008 - 0x0008)
struct FGbxPickupObjectiveSpawnStrategy : public FGbxHasStructType
{
};
DUMPER7_ASSERTS_FGbxPickupObjectiveSpawnStrategy;

// ScriptStruct GbxGame.GbxBrainTask_OnAggro
// 0x0020 (0x0288 - 0x0268)
struct FGbxBrainTask_OnAggro final : public FGbxBrainTask_Composite
{
public:
	uint8                                         Pad_268[0x20];                                     // 0x0268(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainTask_OnAggro;

// ScriptStruct GbxGame.CameraModeBehavior_SprintFOV
// 0x00D0 (0x00E8 - 0x0018)
struct FCameraModeBehavior_SprintFOV : public FCameraModeBehavior
{
public:
	float                                         FOVModifier;                                       // 0x0018(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         BlendInDelay;                                      // 0x001C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         BlendInDuration;                                   // 0x0020(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         BlendOutDuration;                                  // 0x0024(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGbxFloatCurve                         BlendCurve;                                        // 0x0028(0x00B0)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_D8[0x10];                                      // 0x00D8(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FCameraModeBehavior_SprintFOV;

// ScriptStruct GbxGame.GbxSkillComponentExportID
// 0x0028 (0x0028 - 0x0000)
struct FGbxSkillComponentExportID final
{
public:
	struct FGuid                                  ComponentID;                                       // 0x0000(0x0010)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                  ComponentItemID;                                   // 0x0010(0x0010)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ExportName;                                        // 0x0020(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxSkillComponentExportID;

// ScriptStruct GbxGame.GbxStatusEffectPushEventBind
// 0x0020 (0x0020 - 0x0000)
struct alignas(0x08) FGbxStatusEffectPushEventBind final
{
public:
	FGbxDefPtrProperty_                           EventDef;                                          // 0x0000(0x0018)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   EventName;                                         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxStatusEffectPushEventBind;

// ScriptStruct GbxGame.GbxStatusEffectModifierData
// 0x0010 (0x0010 - 0x0000)
struct alignas(0x08) FGbxStatusEffectModifierData
{
public:
	uint8                                         Pad_0[0x8];                                        // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bUseInstigatorAsSource;                            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxStatusEffectModifierData;

// ScriptStruct GbxGame.GbxStatusEffectPresentationListItem
// 0x002C (0x0038 - 0x000C)
struct FGbxStatusEffectPresentationListItem final : public FFastArraySerializerItem
{
public:
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGbxStatusEffectPresentationAsset*      Asset;                                             // 0x0010(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint64                                        RepData;                                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_20[0x18];                                      // 0x0020(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxStatusEffectPresentationListItem;

// ScriptStruct GbxGame.GbxStatusEffectPresentationList
// 0x0028 (0x0138 - 0x0110)
struct FGbxStatusEffectPresentationList final : public FFastArraySerializer
{
public:
	TArray<struct FGbxStatusEffectPresentationListItem> items;                                       // 0x0110(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TScriptInterface<class IGbxStatusEffectOwner> OwnerInterface;                                    // 0x0120(0x0010)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_130[0x8];                                      // 0x0130(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxStatusEffectPresentationList;

// ScriptStruct GbxGame.GbxBodyNodeSettings_GbxAudioEmitter
// 0x0078 (0x00B0 - 0x0038)
struct FGbxBodyNodeSettings_GbxAudioEmitter final : public FGbxBodyNodeSettings
{
public:
	bool                                          MuteInPreviewWindow;                               // 0x0038(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAudioEvent                         Start;                                             // 0x0040(0x0030)(Edit, NativeAccessSpecifierPublic)
	struct FGbxAudioEvent                         Stop;                                              // 0x0070(0x0030)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FGbxAudioEmitterSource>         Sources;                                           // 0x00A0(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxBodyNodeSettings_GbxAudioEmitter;

// ScriptStruct GbxGame.GbxAINodeGlobals
// 0x0090 (0x00B0 - 0x0020)
struct FGbxAINodeGlobals final : public FGbxGlobalDef
{
public:
	FGameDataHandleProperty_                      DistanceTarget;                                    // 0x0020(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         UpdatePeriod;                                      // 0x0038(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                StayCombatIconRelativeLocation;                    // 0x0040(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                TravelCombatIconRelativeLocation;                  // 0x0058(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CombatIconsScale;                                  // 0x0070(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FGbxDefPtrProperty_                           DefaultFollowDistancesDef;                         // 0x0078(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           DefaultLeadDistancesDef;                           // 0x0090(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           DefaultDespawnAnimTag;                             // 0x00A8(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxAINodeGlobals;

// ScriptStruct GbxGame.GbxStatusEffectContainer
// 0x0098 (0x0098 - 0x0000)
struct FGbxStatusEffectContainer
{
public:
	uint8                                         Pad_0[0x8];                                        // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGbxStatusEffectOwner> OwnerInterface;                                    // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UGbxStatusEffectScript_Instanced*> InstancedScripts;                                // 0x0018(0x0010)(ZeroConstructor, RepSkip, UObjectWrapper, NativeAccessSpecifierPrivate)
	uint8                                         Pad_28[0x70];                                      // 0x0028(0x0070)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxStatusEffectContainer;

// ScriptStruct GbxGame.DamageArea_Circle
// 0x00A0 (0x0140 - 0x00A0)
struct FDamageArea_Circle final : public FDamageArea_BaseRound
{
public:
	struct FGbxAttributeInit                      Width;                                             // 0x00A0(0x0050)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FGbxAttributeInit                      Height;                                            // 0x00F0(0x0050)(Edit, NoDestructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FDamageArea_Circle;

// ScriptStruct GbxGame.GbxRotationTargetModifierSettings_BlendBase
// 0x0010 (0x0048 - 0x0038)
struct FGbxRotationTargetModifierSettings_BlendBase : public FGbxRotationTargetModifierSettings
{
public:
	float                                         BlendFromPitch;                                    // 0x0038(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BlendFromYaw;                                      // 0x003C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSplitBlendAlphas;                                 // 0x0040(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         EdgeHysteresis;                                    // 0x0044(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxRotationTargetModifierSettings_BlendBase;

// ScriptStruct GbxGame.GbxRotationTargetModifierSettings_DistanceBasedBlend
// 0x0028 (0x0070 - 0x0048)
struct FGbxRotationTargetModifierSettings_DistanceBasedBlend final : public FGbxRotationTargetModifierSettings_BlendBase
{
public:
	struct FNumericRange                          BlendAlphaRange;                                   // 0x0048(0x0008)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FNumericRange                          PitchBlendAlphaRange;                              // 0x0050(0x0008)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FNumericRange                          YawBlendAlphaRange;                                // 0x0058(0x0008)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FNumericRange                          DistanceRange;                                     // 0x0060(0x0008)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bInvertScaling;                                    // 0x0068(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxRotationTargetModifierSettings_DistanceBasedBlend;

// ScriptStruct GbxGame.AvatarGenerationContributors
// 0x0020 (0x0020 - 0x0000)
struct FAvatarGenerationContributors final
{
public:
	TArray<TSoftObjectPtr<class UDataAsset>>      RelatedGenAssets;                                  // 0x0000(0x0010)(ZeroConstructor, AdvancedDisplay, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UObject>>         RelatedAssets;                                     // 0x0010(0x0010)(ZeroConstructor, AdvancedDisplay, UObjectWrapper, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FAvatarGenerationContributors;

// ScriptStruct GbxGame.GbxStatusEffectPresentationGraphNodeSettings_Effect_Niagara
// 0x0078 (0x00B0 - 0x0038)
struct FGbxStatusEffectPresentationGraphNodeSettings_Effect_Niagara final : public FGbxStatusEffectPresentationGraphNodeSettings_Effect
{
public:
	class UNiagaraSystem*                         NiagaraSystem;                                     // 0x0038(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FGbxInlineStruct>               params;                                            // 0x0040(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	bool                                          bHideFirstPerson;                                  // 0x0050(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bHideThirdPerson;                                  // 0x0051(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EAttachLocation                               LocationType;                                      // 0x0052(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_53[0x5];                                       // 0x0053(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Offset;                                            // 0x0058(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FRotator                               Rotation;                                          // 0x0070(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	struct FVector                                scale;                                             // 0x0088(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                   SocketName;                                        // 0x00A0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UGbxSceneComponentResolver> Resolver;                                          // 0x00A8(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxStatusEffectPresentationGraphNodeSettings_Effect_Niagara;

// ScriptStruct GbxGame.GbxCharacterMovementDef
// 0x0248 (0x0260 - 0x0018)
struct FGbxCharacterMovementDef : public FGbxDef
{
public:
	float                                         FallingFloorUpdateInterval;                        // 0x0018(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FallingFloorTraceDistance;                         // 0x001C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AirControl;                                        // 0x0020(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseJumpGoals;                                     // 0x0024(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	FGbxDefPtrProperty_                           JumpGoalCollection;                                // 0x0028(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         JumpQueueTime;                                     // 0x0040(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FallDelayTime;                                     // 0x0044(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FallDelayGravityScale;                             // 0x0048(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FGameDataHandleProperty_                      MantleDef;                                         // 0x0050(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      DefaultClimbableInteractDef;                       // 0x0068(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<struct FGameplayTag, FGameDataHandleProperty_> ClimbableInteractDefs;                       // 0x0080(0x0050)(Edit, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      GbxSwimmingDef;                                    // 0x00D0(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      SlidingDef;                                        // 0x00E8(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMovementGrantCondition                SprintGrantCondition;                              // 0x0100(0x0048)(Edit, NativeAccessSpecifierPublic)
	struct FMovementGrantCondition                SlideGrantCondition;                               // 0x0148(0x0048)(Edit, NativeAccessSpecifierPublic)
	struct FMovementGrantCondition                ClimbGrantCondition;                               // 0x0190(0x0048)(Edit, NativeAccessSpecifierPublic)
	struct FMovementGrantCondition                MantleGrantCondition;                              // 0x01D8(0x0048)(Edit, NativeAccessSpecifierPublic)
	uint8                                         bCenterOnLadder : 1;                               // 0x0220(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bSlideAlongLadderCollision : 1;                    // 0x0220(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_221[0x3];                                      // 0x0221(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LadderFriction;                                    // 0x0224(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxLadderAscendSpeed;                              // 0x0228(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxLadderDescendSpeed;                             // 0x022C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxLadderForwardSpeed;                             // 0x0230(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxLadderReverseSpeed;                             // 0x0234(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LadderBrakingDeceleration;                         // 0x0238(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LadderInterpSpeed;                                 // 0x023C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LadderJumpVelocity;                                // 0x0240(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxSprintAngle;                                    // 0x0244(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SprintAnalogInputThreshold;                        // 0x0248(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIgnoreAnalogInputWhenSprinting;                   // 0x024C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24D[0x3];                                      // 0x024D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MaxInheritedSpeedFromMovementBase;                 // 0x0250(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxInheritedSpeedFromSimulatingPhysicsMovementBase; // 0x0254(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxInheritedSpeedFromMovingPlatform;               // 0x0258(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25C[0x4];                                      // 0x025C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxCharacterMovementDef;

// ScriptStruct GbxGame.JunkId
// 0x0004 (0x0004 - 0x0000)
struct alignas(0x04) FJunkId final
{
public:
	uint8                                         Pad_0[0x4];                                        // 0x0000(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FJunkId;

// ScriptStruct GbxGame.LightProjectileExplodeState
// 0x0020 (0x0020 - 0x0000)
struct FLightProjectileExplodeState final
{
public:
	bool                                          bHitActor;                                         // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector_NetQuantize                    Location;                                          // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FLightProjectileExplodeState;

// ScriptStruct GbxGame.ActivityTags
// 0x0000 (0x0020 - 0x0020)
struct FActivityTags final : public FNexusBitSet
{
};
DUMPER7_ASSERTS_FActivityTags;

// ScriptStruct GbxGame.ActivityRequestDef
// 0x00B8 (0x00D0 - 0x0018)
struct FActivityRequestDef final : public FGbxDef
{
public:
	FGbxDefPtrProperty_                           SettingsDef;                                       // 0x0018(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<FGbxDefPtrProperty_>                   ForcedActivities;                                  // 0x0030(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	EMatchTypeActivityTags                        RequiredTagsMatchType;                             // 0x0040(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActivityTags                          RequiredActivityTags;                              // 0x0048(0x0020)(Edit, NativeAccessSpecifierPublic)
	struct FActivityTags                          ExcludedActivityTags;                              // 0x0068(0x0020)(Edit, NativeAccessSpecifierPublic)
	EAdditionalAreaTags                           AdditionalAreaTagsMode;                            // 0x0088(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FNexusBitSet                           AdditionalAreaTags;                                // 0x0090(0x0020)(Edit, NativeAccessSpecifierPublic)
	bool                                          bSaveToProfile;                                    // 0x00B0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShouldDisplayLogs;                                // 0x00B1(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRestrictAreasToRequesterAreas;                    // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B3[0x5];                                       // 0x00B3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFactExpression                        StartConditionFacts;                               // 0x00B8(0x0010)(Edit, NativeAccessSpecifierPublic)
	EStartConditionFailBehavior                   StartConditionFailBehavior;                        // 0x00C8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FActivityRequestDef;

// ScriptStruct GbxGame.CameraModeBehavior_OffsetCrosshair
// 0x0000 (0x0018 - 0x0018)
struct FCameraModeBehavior_OffsetCrosshair : public FCameraModeBehavior
{
};
DUMPER7_ASSERTS_FCameraModeBehavior_OffsetCrosshair;

// ScriptStruct GbxGame.GbxInputKeyRebindDef
// 0x0000 (0x0018 - 0x0018)
struct FGbxInputKeyRebindDef final : public FGbxDef
{
};
DUMPER7_ASSERTS_FGbxInputKeyRebindDef;

// ScriptStruct GbxGame.GbxMomentNodeSettings_Wait
// 0x0070 (0x00F0 - 0x0080)
struct FGbxMomentNodeSettings_Wait final : public FGbxMomentNodeSettings
{
public:
	struct FGbxParam                              Context;                                           // 0x0080(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              Condition;                                         // 0x00B8(0x0038)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxMomentNodeSettings_Wait;

// ScriptStruct GbxGame.ActivityProbability
// 0x0080 (0x0080 - 0x0000)
struct FActivityProbability final
{
public:
	FGbxDefPtrProperty_                           MissionDef;                                        // 0x0000(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxParam                              Weight;                                            // 0x0018(0x0038)(Edit, NativeAccessSpecifierPublic)
	TArray<FGbxDefPtrProperty_>                   StartConditions;                                   // 0x0050(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<FGbxDefPtrProperty_>                   StartConditionsFromRequester;                      // 0x0060(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FFactExpression                        StartConditionFacts;                               // 0x0070(0x0010)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FActivityProbability;

// ScriptStruct GbxGame.GbxActivityDef
// 0x0238 (0x0250 - 0x0018)
struct FGbxActivityDef final : public FGbxDef
{
public:
	struct FGbxParam                              probability;                                       // 0x0018(0x0038)(Edit, NativeAccessSpecifierPrivate)
	struct FGbxParam                              MaxActiveInstances;                                // 0x0050(0x0038)(Edit, NativeAccessSpecifierPrivate)
	struct FGbxParam                              SpawnCost;                                         // 0x0088(0x0038)(Edit, NativeAccessSpecifierPrivate)
	EActivitySpawnImportance                      SpawnImportance;                                   // 0x00C0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              MaxAliveTime;                                      // 0x00C8(0x0038)(Edit, NativeAccessSpecifierPrivate)
	struct FGbxParam                              DeactivateDistance;                                // 0x0100(0x0038)(Edit, NativeAccessSpecifierPrivate)
	struct FGbxParam                              AbortDistance;                                     // 0x0138(0x0038)(Edit, NativeAccessSpecifierPrivate)
	TArray<FGbxDefPtrProperty_>                   StartConditions;                                   // 0x0170(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<FGbxDefPtrProperty_>                   StartConditionsFromRequester;                      // 0x0180(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	struct FFactExpression                        StartConditionFacts;                               // 0x0190(0x0010)(Edit, NativeAccessSpecifierPrivate)
	EGbxActivityMissionSource                     MissionSource;                                     // 0x01A0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1A1[0x7];                                      // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FGbxDefPtrProperty_                           MissionDef;                                        // 0x01A8(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FActivityProbability>           MissionWeightedList;                               // 0x01C0(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FGbxInlineStruct>               effects;                                           // 0x01D0(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	struct FNexusWeightedBitsInstance             ActivityTags;                                      // 0x01E0(0x0070)(Edit, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxActivityDef;

// ScriptStruct GbxGame.CameraModeBehavior_RestoreControllerRotation
// 0x0000 (0x0018 - 0x0018)
struct FCameraModeBehavior_RestoreControllerRotation : public FCameraModeBehavior
{
};
DUMPER7_ASSERTS_FCameraModeBehavior_RestoreControllerRotation;

// ScriptStruct GbxGame.ActivityRequestSettingsDef
// 0x0128 (0x0140 - 0x0018)
struct FActivityRequestSettingsDef final : public FGbxDef
{
public:
	struct FGbxParam                              IntervalRequest;                                   // 0x0018(0x0038)(Edit, NativeAccessSpecifierPublic)
	bool                                          bUseDifferentIntervalWhenRequestFailed;            // 0x0050(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              IntervalRequestWhenFailed;                         // 0x0058(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              IntervalNbActivitiesToStart;                       // 0x0090(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              Warmup;                                            // 0x00C8(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              Budget;                                            // 0x0100(0x0038)(Edit, NativeAccessSpecifierPublic)
	EActivityRequestExecutionType                 ExecutionType;                                     // 0x0138(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FActivityRequestSettingsDef;

// ScriptStruct GbxGame.GbxSkillActionSequenceStateRule_Timeout
// 0x0050 (0x0058 - 0x0008)
struct FGbxSkillActionSequenceStateRule_Timeout final : public FGbxSkillActionSequenceStateRule
{
public:
	struct FGbxAttributeInit                      DurationInit;                                      // 0x0008(0x0050)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxSkillActionSequenceStateRule_Timeout;

// ScriptStruct GbxGame.CameraModeBehavior_DefaultFOV
// 0x0008 (0x0020 - 0x0018)
struct FCameraModeBehavior_DefaultFOV : public FCameraModeBehavior
{
public:
	float                                         scale;                                             // 0x0018(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MaxFOV;                                            // 0x001C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
};
DUMPER7_ASSERTS_FCameraModeBehavior_DefaultFOV;

// ScriptStruct GbxGame.CameraModeBehavior_ZoomFOV
// 0x0000 (0x0020 - 0x0020)
struct FCameraModeBehavior_ZoomFOV : public FCameraModeBehavior_DefaultFOV
{
};
DUMPER7_ASSERTS_FCameraModeBehavior_ZoomFOV;

// ScriptStruct GbxGame.GbxItemData
// 0x00E8 (0x00E8 - 0x0000)
struct FGbxItemData final
{
public:
	uint32                                        InstanceId;                                        // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInventoryIdentity                     Identity;                                          // 0x0008(0x00D8)(NativeAccessSpecifierPrivate)
	uint8                                         Pad_E0[0x8];                                       // 0x00E0(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxItemData;

// ScriptStruct GbxGame.GbxItemState
// 0x0008 (0x0008 - 0x0000)
struct FGbxItemState final
{
public:
	uint32                                        Quantity;                                          // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint32                                        Flags;                                             // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxItemState;

// ScriptStruct GbxGame.GbxItem
// 0x00F8 (0x00F8 - 0x0000)
struct FGbxItem final
{
public:
	struct FGbxItemData                           data;                                              // 0x0000(0x00E8)(Protected, NativeAccessSpecifierProtected)
	struct FGbxItemState                          State;                                             // 0x00E8(0x0008)(NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_F0[0x8];                                       // 0x00F0(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxItem;

// ScriptStruct GbxGame.GbxUnlockableNodeRef
// 0x0020 (0x0020 - 0x0000)
struct alignas(0x08) FGbxUnlockableNodeRef final
{
public:
	FGbxDefPtrProperty_                           ProgressGraph;                                     // 0x0000(0x0018)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                   NodeName;                                          // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxUnlockableNodeRef;

// ScriptStruct GbxGame.GbxRewardRefData
// 0x0000 (0x0008 - 0x0008)
struct FGbxRewardRefData : public FGbxHasStructType
{
};
DUMPER7_ASSERTS_FGbxRewardRefData;

// ScriptStruct GbxGame.GbxRewardRefData_ProgressGraphNode
// 0x0020 (0x0028 - 0x0008)
struct FGbxRewardRefData_ProgressGraphNode final : public FGbxRewardRefData
{
public:
	struct FGbxUnlockableNodeRef                  ProgressGraphNode;                                 // 0x0008(0x0020)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxRewardRefData_ProgressGraphNode;

// ScriptStruct GbxGame.GbxDiscoveryDiscoveredLiveActor
// 0x0018 (0x0018 - 0x0000)
struct FGbxDiscoveryDiscoveredLiveActor final
{
public:
	class FString                                 LiveActorId;                                       // 0x0000(0x0010)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class AActor>                  LiveActor;                                         // 0x0010(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxDiscoveryDiscoveredLiveActor;

// ScriptStruct GbxGame.CameraModeBehavior_PitchFOV
// 0x0160 (0x0178 - 0x0018)
struct FCameraModeBehavior_PitchFOV final : public FCameraModeBehavior
{
public:
	struct FGbxFloatCurve                         PitchFOVCurve;                                     // 0x0018(0x00B0)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FGbxFloatCurve                         PitchFOVScaleCurve;                                // 0x00C8(0x00B0)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
};
DUMPER7_ASSERTS_FCameraModeBehavior_PitchFOV;

// ScriptStruct GbxGame.DamageFilterDef
// 0x0100 (0x0118 - 0x0018)
struct FDamageFilterDef : public FGbxDef
{
public:
	struct FDamageTypeFilterData                  DamageTypeFilter;                                  // 0x0018(0x0020)(Edit, NativeAccessSpecifierPublic)
	struct FDamageSourceFilterData                DamageSourceFilter;                                // 0x0038(0x0020)(Edit, NativeAccessSpecifierPublic)
	struct FDamageTagsFilterData                  DamageTagsFilter;                                  // 0x0058(0x0028)(Edit, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      ConditionSelf;                                     // 0x0080(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      ConditionAttacker;                                 // 0x0098(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAreaDamageFilter                             AreaDamageFilter;                                  // 0x00B0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bMustNotBeSelfDamage : 1;                          // 0x00B1(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_B2[0x6];                                       // 0x00B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRandomChanceFilterData                RandomChanceFilter;                                // 0x00B8(0x0058)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	EDamageCriticalFilter                         CriticalFilter;                                    // 0x0110(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FDamageFilterDef;

// ScriptStruct GbxGame.GbxSkillActionSequenceTransitionCondition_SkillState
// 0x0020 (0x0028 - 0x0008)
struct FGbxSkillActionSequenceTransitionCondition_SkillState final : public FGbxSkillActionSequenceTransitionCondition
{
public:
	FGbxDefPtrProperty_                           StateDef;                                          // 0x0008(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EGbxSkillStateOp                              Op;                                                // 0x0020(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxSkillActionSequenceTransitionCondition_SkillState;

// ScriptStruct GbxGame.GbxAudioNodeAspectState_SetFact
// 0x0040 (0x0090 - 0x0050)
struct FGbxAudioNodeAspectState_SetFact final : public FGbxAudioNodeAspectState_Action
{
public:
	uint8                                         Pad_50[0x40];                                      // 0x0050(0x0040)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxAudioNodeAspectState_SetFact;

// ScriptStruct GbxGame.GbxSkillEventDef
// 0x0000 (0x0018 - 0x0018)
struct FGbxSkillEventDef final : public FGbxDef
{
};
DUMPER7_ASSERTS_FGbxSkillEventDef;

// ScriptStruct GbxGame.GbxAnimUpdateRateParameters
// 0x0018 (0x0018 - 0x0000)
struct FGbxAnimUpdateRateParameters final
{
public:
	TArray<float>                                 UpdateRateThresholds;                              // 0x0000(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bEnableSmoothInterp;                               // 0x0010(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnableUpdateRateOptimizations;                    // 0x0011(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxAnimUpdateRateParameters;

// ScriptStruct GbxGame.GbxAnimUpdateRateParametersDef
// 0x0018 (0x0030 - 0x0018)
struct FGbxAnimUpdateRateParametersDef final : public FGbxDef
{
public:
	struct FGbxAnimUpdateRateParameters           params;                                            // 0x0018(0x0018)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxAnimUpdateRateParametersDef;

// ScriptStruct GbxGame.GbxSkillComponentData_DelegateData_StatusEffect
// 0x0010 (0x0018 - 0x0008)
struct FGbxSkillComponentData_DelegateData_StatusEffect final : public FGbxSkillComponentData_DelegateData
{
public:
	EGbxStatusEffectNotifyEventType               EventType;                                         // 0x0008(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGbxStatusEffectNotifyEvent*            NotifyEvent;                                       // 0x0010(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxSkillComponentData_DelegateData_StatusEffect;

// ScriptStruct GbxGame.GbxBlendSpaceValueResolver
// 0x00A8 (0x00B0 - 0x0008)
struct FGbxBlendSpaceValueResolver final : public FAttributeValueResolver
{
public:
	EGbxAttributeBlendSpaceResult                 Output;                                            // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bReplicate;                                        // 0x000C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAttributeInit                      X;                                                 // 0x0010(0x0050)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FGbxAttributeInit                      Y;                                                 // 0x0060(0x0050)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
};
DUMPER7_ASSERTS_FGbxBlendSpaceValueResolver;

// ScriptStruct GbxGame.AIHeldProjectileDef
// 0x0000 (0x06F0 - 0x06F0)
struct FAIHeldProjectileDef final : public FProjectileDef
{
};
DUMPER7_ASSERTS_FAIHeldProjectileDef;

// ScriptStruct GbxGame.GbxAudioGraphState_FactChange
// 0x0048 (0x01C0 - 0x0178)
struct FGbxAudioGraphState_FactChange final : public FGbxAudioGraphState_Sequencer
{
public:
	uint8                                         Pad_178[0x48];                                     // 0x0178(0x0048)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxAudioGraphState_FactChange;

// ScriptStruct GbxGame.GbxStatusEffectPresentationEffect_MaterialParam_Scalar
// 0x0090 (0x00A0 - 0x0010)
struct FGbxStatusEffectPresentationEffect_MaterialParam_Scalar final : public FGbxStatusEffectPresentationEffect_MaterialParam
{
public:
	bool                                          bUsesCurve;                                        // 0x0010(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRuntimeFloatCurve                     curve;                                             // 0x0018(0x0088)(Edit, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxStatusEffectPresentationEffect_MaterialParam_Scalar;

// ScriptStruct GbxGame.AttributeEffectAspect
// 0x0090 (0x00C0 - 0x0030)
struct FAttributeEffectAspect : public FInventoryAspect
{
public:
	bool                                          bInstigatorEffects;                                // 0x0030(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bApplyOnPickup;                                    // 0x0031(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ComparisionTag;                                    // 0x0034(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAttributeEffectTemplateSet;                       // 0x003C(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAttributeEffect                    AttributeEffectTemplate;                           // 0x0040(0x0070)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FGbxAttributeEffect>            attributeeffects;                                  // 0x00B0(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FAttributeEffectAspect;

// ScriptStruct GbxGame.AvatarAspectGameData
// 0x0000 (0x0030 - 0x0030)
struct FAvatarAspectGameData final : public FAvatarGameDataBase
{
};
DUMPER7_ASSERTS_FAvatarAspectGameData;

// ScriptStruct GbxGame.ClimbableInteractDef
// 0x0150 (0x0168 - 0x0018)
struct FClimbableInteractDef : public FGbxDef
{
public:
	float                                         RequiredViewAlignment;                             // 0x0018(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RequiredRearViewAlignment;                         // 0x001C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCanMountLadderFromTopWhileFacing;                 // 0x0020(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MaxVerticalSpeedToGrabLadder;                      // 0x0024(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         JumpRegrabDelay;                                   // 0x0028(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TopEnterAnimSyncTime;                              // 0x002C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TopExitAnimSyncTime;                               // 0x0030(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ExitLocationDepthOffset;                           // 0x0034(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ExitingTopThresholdHeightOffset;                   // 0x0038(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         EnteringTopTargetHeightOffset;                     // 0x003C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TopExitFindFloorOffsetZ;                           // 0x0040(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         EnteringTopFeetToLadderThreshold;                  // 0x0044(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TopEdgePushDownRate;                               // 0x0048(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UGbxTrick>               EnterBottomAnimation;                              // 0x0050(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UGbxTrick>               ExitBottomAnimation;                               // 0x0078(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UGbxTrick>               EnterTopAnimation;                                 // 0x00A0(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UGbxTrick>               ExitTopAnimation;                                  // 0x00C8(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UGbxTrick>               ExitFallAnimation;                                 // 0x00F0(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UGbxTrick>               ExitJumpAnimation;                                 // 0x0118(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UGbxTrick>               EnterFromAirAnimation;                             // 0x0140(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FClimbableInteractDef;

// ScriptStruct GbxGame.GbxAudioVolumeShapeCustomPrecalculatedData
// 0x0008 (0x0008 - 0x0000)
struct FGbxAudioVolumeShapeCustomPrecalculatedData final
{
public:
	float                                         constant;                                          // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Multiple;                                          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxAudioVolumeShapeCustomPrecalculatedData;

// ScriptStruct GbxGame.AvatarAspectDef
// 0x0020 (0x0038 - 0x0018)
struct FAvatarAspectDef final : public FGbxDef
{
public:
	uint8                                         Pad_18[0x4];                                       // 0x0018(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         priority;                                          // 0x001C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxInlineStruct                       GameData;                                          // 0x0020(0x0018)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FAvatarAspectDef;

// ScriptStruct GbxGame.GbxSkillComponentData_InputItem
// 0x0018 (0x0040 - 0x0028)
struct FGbxSkillComponentData_InputItem final : public FGbxSkillComponentDataItem
{
public:
	struct FGbxInlineStruct                       Handler;                                           // 0x0028(0x0018)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxSkillComponentData_InputItem;

// ScriptStruct GbxGame.GbxSkillComponentData_Input
// 0x0018 (0x0068 - 0x0050)
struct FGbxSkillComponentData_Input final : public FGbxSkillComponentData_Activatable
{
public:
	TArray<struct FGbxSkillComponentData_InputItem> items;                                           // 0x0050(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	bool                                          bReattachOnPossessionChange;                       // 0x0060(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxSkillComponentData_Input;

// ScriptStruct GbxGame.CoordinatedParticleSettings
// 0x00A0 (0x00A0 - 0x0000)
struct FCoordinatedParticleSettings final
{
public:
	class UFXSystemAsset*                         ParticleSystem;                                    // 0x0000(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RelativeTransform;                                 // 0x0010(0x0060)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   SocketName;                                        // 0x0070(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECoordinatedParticleVisibilityType            Visibility;                                        // 0x0078(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECoordinatedParticleScaleMode                 ScaleMode;                                         // 0x0079(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bOnlyPlayerOwnerCanSee : 1;                        // 0x007A(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bInheritViewFlags : 1;                             // 0x007A(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_7B[0x1];                                       // 0x007B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   SamplingParam;                                     // 0x007C(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           SamplingData;                                      // 0x0088(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_98[0x8];                                       // 0x0098(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FCoordinatedParticleSettings;

// ScriptStruct GbxGame.AvatarMaterialDriverDef
// 0x0038 (0x0050 - 0x0018)
struct FAvatarMaterialDriverDef final : public FGbxDef
{
public:
	uint8                                         Pad_18[0x1];                                       // 0x0018(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bTemplateOnly;                                     // 0x0019(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAvatarMatDriverParam>          params;                                            // 0x0020(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FGbxInlineStruct                       GameData;                                          // 0x0030(0x0018)(Edit, NativeAccessSpecifierPublic)
	uint8                                         Pad_48[0x8];                                       // 0x0048(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FAvatarMaterialDriverDef;

// ScriptStruct GbxGame.GbxSkillSharedAttributeEffects
// 0x0010 (0x0038 - 0x0028)
struct FGbxSkillSharedAttributeEffects final : public FGbxSkillSharedResource
{
public:
	uint8                                         Pad_28[0x10];                                      // 0x0028(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxSkillSharedAttributeEffects;

// ScriptStruct GbxGame.SEPEventAction
// 0x0000 (0x0008 - 0x0008)
struct FSEPEventAction : public FGbxHasStructType
{
};
DUMPER7_ASSERTS_FSEPEventAction;

// ScriptStruct GbxGame.SEPEventAction_Niagara
// 0x0068 (0x0070 - 0x0008)
struct FSEPEventAction_Niagara final : public FSEPEventAction
{
public:
	class UNiagaraSystem*                         NiagaraSystem;                                     // 0x0008(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EAttachLocation                               LocationType;                                      // 0x0010(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Offset;                                            // 0x0018(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FRotator                               Rotation;                                          // 0x0030(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	struct FVector                                scale;                                             // 0x0048(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                   SocketName;                                        // 0x0060(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UGbxSceneComponentResolver> Resolver;                                          // 0x0068(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FSEPEventAction_Niagara;

// ScriptStruct GbxGame.GbxDamageEventData
// 0x0050 (0x0050 - 0x0000)
struct FGbxDamageEventData final
{
public:
	EGbxDamageEventType                           EventType;                                         // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bSequence : 1;                                     // 0x0001(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bExecuteOnePerDamageEvent : 1;                     // 0x0001(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bMustExecuteAllEvents : 1;                         // 0x0001(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bTrackTotalHealth : 1;                             // 0x0001(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         HealthSlot;                                        // 0x0002(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         HealthPercent;                                     // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<float>                                 HealthPercentSequence;                             // 0x0008(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                         DamageTime;                                        // 0x0018(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FGameDataHandleProperty_                      filter;                                            // 0x0020(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   Root;                                              // 0x0038(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bRootIsHitRegion : 1;                              // 0x0040(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bIncludeChildrenBones : 1;                         // 0x0040(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RetriggerDelay;                                    // 0x0044(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxTriggerCount;                                   // 0x0048(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bTriggerOnlyOnDeath : 1;                           // 0x004C(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bCensored : 1;                                     // 0x004C(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxDamageEventData;

// ScriptStruct GbxGame.GbxSkillActionSequenceData_GotoState
// 0x0004 (0x0004 - 0x0000)
struct FGbxSkillActionSequenceData_GotoState final
{
public:
	int32                                         StateId;                                           // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxSkillActionSequenceData_GotoState;

// ScriptStruct GbxGame.AvatarFeatureDef
// 0x0028 (0x0040 - 0x0018)
struct FAvatarFeatureDef final : public FGbxDef
{
public:
	uint8                                         Pad_18[0x8];                                       // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGbxInlineStruct>               Features;                                          // 0x0020(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_30[0x10];                                      // 0x0030(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FAvatarFeatureDef;

// ScriptStruct GbxGame.AvatarFormGameData
// 0x0000 (0x0030 - 0x0030)
struct FAvatarFormGameData final : public FAvatarGameDataBase
{
};
DUMPER7_ASSERTS_FAvatarFormGameData;

// ScriptStruct GbxGame.GbxSkillStateMachineStateAction_GbxSkillTimer
// 0x0028 (0x0030 - 0x0008)
struct FGbxSkillStateMachineStateAction_GbxSkillTimer final : public FGbxSkillStateMachineStateAction
{
public:
	EGbxSkillComponentTimerAction                 Action;                                            // 0x0008(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  TimerComponentID;                                  // 0x000C(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGuid                                  TimerID;                                           // 0x001C(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxSkillStateMachineStateAction_GbxSkillTimer;

// ScriptStruct GbxGame.GbxSkillDelegateDamageFilter
// 0x0008 (0x0010 - 0x0008)
struct FGbxSkillDelegateDamageFilter : public FGbxHasStructType
{
public:
	bool                                          bInvertFilter;                                     // 0x0008(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxSkillDelegateDamageFilter;

// ScriptStruct GbxGame.GbxSkillDelegateDamageFilter_StatusEffect
// 0x0028 (0x0038 - 0x0010)
struct FGbxSkillDelegateDamageFilter_StatusEffect final : public FGbxSkillDelegateDamageFilter
{
public:
	TSoftObjectPtr<class UGbxStatusEffectData>    StatusEffect;                                      // 0x0010(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxSkillDelegateDamageFilter_StatusEffect;

// ScriptStruct GbxGame.CameraModeBehavior_AnchorToSocket
// 0x0010 (0x0028 - 0x0018)
struct FCameraModeBehavior_AnchorToSocket : public FCameraModeBehavior
{
public:
	uint8                                         bSetLocation : 1;                                  // 0x0018(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bSetRotation : 1;                                  // 0x0018(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   SocketName;                                        // 0x001C(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FCameraModeBehavior_AnchorToSocket;

// ScriptStruct GbxGame.GbxProgressPointsNode_ValueResolver
// 0x0028 (0x0030 - 0x0008)
struct FGbxProgressPointsNode_ValueResolver final : public FAttributeValueResolver
{
public:
	struct FGbxUnlockableNodeRef                  ProgressGraphNodeRef;                              // 0x0008(0x0020)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EGbxProgressPointsNodeType                    PointType;                                         // 0x0028(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxProgressPointsNode_ValueResolver;

// ScriptStruct GbxGame.AvatarPartDef
// 0x0110 (0x0150 - 0x0040)
struct FAvatarPartDef final : public FAvatarTemplateNonDef
{
public:
	uint8                                         Pad_40[0x1];                                       // 0x0040(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bTemplateOnly;                                     // 0x0041(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_42[0x2];                                       // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         priority;                                          // 0x0044(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAvatarOptionBudget                    Budget;                                            // 0x0048(0x0008)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	int16                                         ViewablePriority;                                  // 0x0050(0x0002)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FNexusBitSet                           ViewTargets;                                       // 0x0058(0x0020)(Edit, NativeAccessSpecifierPublic)
	struct FNexusBitSet                           DesignTags;                                        // 0x0078(0x0020)(Edit, NativeAccessSpecifierPublic)
	struct FNexusBitSet                           OptionMaskTags;                                    // 0x0098(0x0020)(Edit, NativeAccessSpecifierPublic)
	struct FGbxInlineStruct                       GameData;                                          // 0x00B8(0x0018)(Edit, NativeAccessSpecifierPublic)
	uint8                                         Pad_D0[0x80];                                      // 0x00D0(0x0080)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FAvatarPartDef;

// ScriptStruct GbxGame.StartDialogParams
// 0x0038 (0x0038 - 0x0000)
struct FStartDialogParams final
{
public:
	int32                                         DialogThreadID;                                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxDialogLineRef                      LineRef;                                           // 0x0008(0x0028)(NoDestructor, NativeAccessSpecifierPrivate)
	EStartDialogFlags                             Flags;                                             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FStartDialogParams;

// ScriptStruct GbxGame.InitialDialogInProgress
// 0x0040 (0x0040 - 0x0000)
struct FInitialDialogInProgress final
{
public:
	struct FStartDialogParams                     StartParams;                                       // 0x0000(0x0038)(NoDestructor, NativeAccessSpecifierPublic)
	float                                         PlayTime;                                          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FInitialDialogInProgress;

// ScriptStruct GbxGame.AvatarSelectorDef
// 0x00A0 (0x00B8 - 0x0018)
struct FAvatarSelectorDef final : public FGbxDef
{
public:
	uint8                                         Pad_18[0x1];                                       // 0x0018(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	EAvatarSelectorType                           subtype;                                           // 0x0019(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Weight;                                            // 0x001C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           Form;                                              // 0x0020(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           part;                                              // 0x0038(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Depth;                                             // 0x0050(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Count;                                             // 0x0054(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FNexusBitSet                           QueryDesignTags;                                   // 0x0058(0x0020)(Edit, NativeAccessSpecifierPublic)
	ENexusBitSetOperator                          QueryMode;                                         // 0x0078(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Parameter;                                         // 0x007C(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FGbxDefPtrProperty_                           Option;                                            // 0x0088(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNumberAutoRanged;                                 // 0x00A0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         NumberMin;                                         // 0x00A4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         NumberMax;                                         // 0x00A8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         NumberBias;                                        // 0x00AC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B0[0x8];                                       // 0x00B0(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FAvatarSelectorDef;

// ScriptStruct GbxGame.AvatarOptionFeatureDisplayTags
// 0x0040 (0x0050 - 0x0010)
struct FAvatarOptionFeatureDisplayTags final : public FAvatarOptionFeatureByAspect
{
public:
	struct FNexusBitSet                           DisplayTags;                                       // 0x0010(0x0020)(Edit, NativeAccessSpecifierPublic)
	struct FNexusBitSet                           DisplayMaskTags;                                   // 0x0030(0x0020)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FAvatarOptionFeatureDisplayTags;

// ScriptStruct GbxGame.AvatarOptionFeatureParams
// 0x0020 (0x0030 - 0x0010)
struct FAvatarOptionFeatureParams final : public FAvatarOptionFeature
{
public:
	TArray<struct FAvatarParameterSource>         params;                                            // 0x0010(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FAvatarParameterExport>         Exports;                                           // 0x0020(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FAvatarOptionFeatureParams;

// ScriptStruct GbxGame.AvatarSerialNumber
// 0x02F0 (0x0318 - 0x0028)
struct FAvatarSerialNumber final : public FGbxSerialNumberClass
{
public:
	uint8                                         Pad_28[0x2C0];                                     // 0x0028(0x02C0)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class UObject>>         StagedResources;                                   // 0x02E8(0x0010)(ZeroConstructor, RepSkip, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<class UObject*>                        ActiveResources;                                   // 0x02F8(0x0010)(ZeroConstructor, RepSkip, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<class UMaterialInstanceDynamic*>       DynamicMaterials;                                  // 0x0308(0x0010)(ZeroConstructor, RepSkip, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
};
DUMPER7_ASSERTS_FAvatarSerialNumber;

// ScriptStruct GbxGame.GbxFirstPersonState
// 0x0018 (0x0018 - 0x0000)
struct FGbxFirstPersonState
{
public:
	uint8                                         Pad_0[0x8];                                        // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class AGbxCharacter*                          owner;                                             // 0x0008(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_10[0x8];                                       // 0x0010(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxFirstPersonState;

// ScriptStruct GbxGame.AvatarOptionFeatureSkelMesh
// 0x0030 (0x0040 - 0x0010)
struct FAvatarOptionFeatureSkelMesh final : public FAvatarOptionFeatureByAspect
{
public:
	TSoftObjectPtr<class USkeletalMesh>           SkelMesh;                                          // 0x0010(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int16                                         ViewablePriority;                                  // 0x0038(0x0002)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FAvatarOptionFeatureSkelMesh;

// ScriptStruct GbxGame.BalancedActorContextResolver
// 0x0000 (0x0008 - 0x0008)
struct FBalancedActorContextResolver final : public FAttributeContextResolver
{
};
DUMPER7_ASSERTS_FBalancedActorContextResolver;

// ScriptStruct GbxGame.BalanceDataTableValueResolver
// 0x0030 (0x0038 - 0x0008)
struct FBalanceDataTableValueResolver final : public FAttributeValueResolver
{
public:
	class FName                                   BalanceTableColumn;                                // 0x0008(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSoftObjectPath                        TableRowStruct;                                    // 0x0010(0x0020)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bDamageBalance;                                    // 0x0030(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EGbxType                                      ResolvedType;                                      // 0x0031(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FBalanceDataTableValueResolver;

// ScriptStruct GbxGame.BalanceFormulaValueResolver
// 0x0190 (0x0198 - 0x0008)
struct FBalanceFormulaValueResolver final : public FAttributeValueResolver
{
public:
	struct FGbxAttributeInit                      Multiplier;                                        // 0x0008(0x0050)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FGbxAttributeInit                      Level;                                             // 0x0058(0x0050)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FGbxAttributeInit                      Power;                                             // 0x00A8(0x0050)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FGbxAttributeInit                      Offset;                                            // 0x00F8(0x0050)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FGbxAttributeInit                      Scalar;                                            // 0x0148(0x0050)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
};
DUMPER7_ASSERTS_FBalanceFormulaValueResolver;

// ScriptStruct GbxGame.BalanceStateValueResolver
// 0x0008 (0x0010 - 0x0008)
struct FBalanceStateValueResolver final : public FAttributeValueResolver
{
public:
	EBalanceValueType                             ValueToResolve;                                    // 0x0008(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FBalanceStateValueResolver;

// ScriptStruct GbxGame.BinderBehaviorMod_AddSpawner
// 0x0088 (0x00A0 - 0x0018)
struct alignas(0x10) FBinderBehaviorMod_AddSpawner final : public FFactsBinderBehaviorMod
{
public:
	uint8                                         Pad_18[0x88];                                      // 0x0018(0x0088)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FBinderBehaviorMod_AddSpawner;

// ScriptStruct GbxGame.DropMissionPickupFilter
// 0x00B0 (0x00B8 - 0x0008)
struct FDropMissionPickupFilter final : public FGbxHasStructType
{
public:
	struct FGameplayTagContainer                  ActorGameplayTags;                                 // 0x0008(0x0020)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FMissionGbxDef>                 ActorDefs;                                         // 0x0028(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FGbxAttributeInit                      RandomChance;                                      // 0x0038(0x0050)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FMissionAliasRef                       WithinArea;                                        // 0x0088(0x000C)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FMissionGbxDef>                 WorldRegions;                                      // 0x0098(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FMissionGbxDef>                 Zones;                                             // 0x00A8(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FDropMissionPickupFilter;

// ScriptStruct GbxGame.BinderBehaviorMod_DropMissionPickup_Condition
// 0x0010 (0x0170 - 0x0160)
struct FBinderBehaviorMod_DropMissionPickup_Condition final : public FBinderBehaviorMod_DropMissionPickupBase
{
public:
	uint8                                         Pad_160[0x10];                                     // 0x0160(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FBinderBehaviorMod_DropMissionPickup_Condition;

// ScriptStruct GbxGame.BinderBehaviorMod_OverrideAINodeChainActor
// 0x0040 (0x0058 - 0x0018)
struct FBinderBehaviorMod_OverrideAINodeChainActor final : public FFactsBinderBehaviorMod
{
public:
	uint8                                         Pad_18[0x40];                                      // 0x0018(0x0040)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FBinderBehaviorMod_OverrideAINodeChainActor;

// ScriptStruct GbxGame.BinderBehaviorMod_PlayMoment
// 0x0028 (0x0040 - 0x0018)
struct FBinderBehaviorMod_PlayMoment final : public FFactsBinderBehaviorMod
{
public:
	TSoftObjectPtr<class UGbxMomentData>          Moment;                                            // 0x0018(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FBinderBehaviorMod_PlayMoment;

// ScriptStruct GbxGame.GbxRotationTargetModifierSettings_Blend
// 0x0010 (0x0058 - 0x0048)
struct FGbxRotationTargetModifierSettings_Blend final : public FGbxRotationTargetModifierSettings_BlendBase
{
public:
	float                                         BlendAlpha;                                        // 0x0048(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PitchBlendAlpha;                                   // 0x004C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         YawBlendAlpha;                                     // 0x0050(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxRotationTargetModifierSettings_Blend;

// ScriptStruct GbxGame.BinderBehaviorMod_PlayTrick
// 0x0028 (0x0040 - 0x0018)
struct FBinderBehaviorMod_PlayTrick final : public FFactsBinderBehaviorMod
{
public:
	TSoftObjectPtr<class UGbxTrick>               Trick;                                             // 0x0018(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FBinderBehaviorMod_PlayTrick;

// ScriptStruct GbxGame.GbxProgression_GameDataCategories_DONTUSE
// 0x0001 (0x0001 - 0x0000)
struct FGbxProgression_GameDataCategories_DONTUSE final
{
public:
	uint8                                         Pad_0[0x1];                                        // 0x0000(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxProgression_GameDataCategories_DONTUSE;

// ScriptStruct GbxGame.BreadcrumbGlobals
// 0x0060 (0x0080 - 0x0020)
struct FBreadcrumbGlobals final : public FGbxGlobalDef
{
public:
	float                                         FindBestPositionOnGraphRadius;                     // 0x0020(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           LineColor_Primary;                                 // 0x0024(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           LineColor_Secondary;                               // 0x0034(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           LineColor_Tertiary;                                // 0x0044(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           LineColor_UserCustom;                              // 0x0054(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           LineColor_Default;                                 // 0x0064(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LineDurationShort;                                 // 0x0074(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LineDurationStandard;                              // 0x0078(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LineDurationLong;                                  // 0x007C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FBreadcrumbGlobals;

// ScriptStruct GbxGame.GbxProgressionCommand
// 0x0000 (0x0008 - 0x0008)
struct FGbxProgressionCommand : public FGbxHasStructType
{
};
DUMPER7_ASSERTS_FGbxProgressionCommand;

// ScriptStruct GbxGame.GbxNiagaraFloatParameter
// 0x0058 (0x0058 - 0x0000)
struct FGbxNiagaraFloatParameter final
{
public:
	class FName                                   FloatName;                                         // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxAttributeInit                      Value;                                             // 0x0008(0x0050)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxNiagaraFloatParameter;

// ScriptStruct GbxGame.GbxDangerZoneDef
// 0x00B0 (0x0140 - 0x0090)
struct FGbxDangerZoneDef : public FGbxActorDef
{
public:
	TSoftObjectPtr<class UGbxDangerZoneBodyData>  Body;                                              // 0x0090(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<TSoftClassPtr<class UClass>>           Scripts;                                           // 0x00B8(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	struct FGbxBlackboardDefaults                 blackboard;                                        // 0x00C8(0x0018)(Edit, NativeAccessSpecifierPrivate)
	bool                                          bShouldSpawnOnGround;                              // 0x00E0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MaxDistanceToLookForGround;                        // 0x00E4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      audioprovider;                                     // 0x00E8(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FSToken                                RegistryName;                                      // 0x0100(0x000C)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EFactsTransience                              FactsTransience;                                   // 0x010C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_10D[0x3];                                      // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FProjectileFeedbackEffect>      MeshComponentsFeedbacks;                           // 0x0110(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      Team;                                              // 0x0120(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseOwnerTeam;                                     // 0x0138(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxDangerZoneDef;

// ScriptStruct GbxGame.GbxDangerZoneCracksDef
// 0x0088 (0x01C8 - 0x0140)
struct FGbxDangerZoneCracksDef final : public FGbxDangerZoneDef
{
public:
	TSoftObjectPtr<class UFXSystemAsset>          FxSystemTemplate;                                  // 0x0140(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FxHeightOffset;                                    // 0x0168(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   NameSetIntParameter;                               // 0x016C(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   NameOverrideNiagaraArray;                          // 0x0174(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_17C[0x4];                                      // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGbxNiagaraFloatParameter>      FxFloatParameterList;                              // 0x0180(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	EGbxCracksStoppingCondition                   StopCondtion;                                      // 0x0190(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_194[0x4];                                      // 0x0194(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBalancedActorData                     BalanceData;                                       // 0x0198(0x0030)(Edit, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxDangerZoneCracksDef;

// ScriptStruct GbxGame.BreadcrumbLink
// 0x0058 (0x0058 - 0x0000)
struct FBreadcrumbLink final
{
public:
	TSoftObjectPtr<class AActor>                  LinkedActor;                                       // 0x0000(0x0028)(Edit, DisableEditOnTemplate, EditConst, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   NexusName;                                         // 0x0028(0x0008)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UBreadcrumbRouteComponent> LinkedComponent;                                 // 0x0030(0x0028)(Edit, ExportObject, DisableEditOnTemplate, EditConst, InstancedReference, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FBreadcrumbLink;

// ScriptStruct GbxGame.CameraModeBehavior_AnchorOffset
// 0x0018 (0x0030 - 0x0018)
struct FCameraModeBehavior_AnchorOffset final : public FCameraModeBehavior
{
public:
	struct FVector                                LocationOffset;                                    // 0x0018(0x0018)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
};
DUMPER7_ASSERTS_FCameraModeBehavior_AnchorOffset;

// ScriptStruct GbxGame.GbxRadioScriptDef
// 0x0010 (0x0028 - 0x0018)
struct FGbxRadioScriptDef final : public FGbxDef
{
public:
	TArray<FGbxDefPtrProperty_>                   Lines;                                             // 0x0018(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxRadioScriptDef;

// ScriptStruct GbxGame.CameraModeBehavior_AnchorToEye
// 0x0008 (0x0020 - 0x0018)
struct FCameraModeBehavior_AnchorToEye : public FCameraModeBehavior
{
public:
	uint8                                         bSetRotation : 1;                                  // 0x0018(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FCameraModeBehavior_AnchorToEye;

// ScriptStruct GbxGame.CameraModeBehavior_CollisionOffsetTrace
// 0x0038 (0x0050 - 0x0018)
struct FCameraModeBehavior_CollisionOffsetTrace : public FCameraModeBehavior
{
public:
	float                                         CollisionRadius;                                   // 0x0018(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         TraceOffsetZ;                                      // 0x001C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         bUseAnchorAsStartLocation : 1;                     // 0x0020(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bIgnoreChildToViewTarget : 1;                      // 0x0020(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bIgnoreViewTargetAttachParent : 1;                 // 0x0020(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bEnableSoftCollisions : 1;                         // 0x0020(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<ECollisionChannel>                     SoftCollisionChannels;                             // 0x0028(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                         SoftCollisionInterpDelay;                          // 0x0038(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         SoftCollisionInterpSpeed;                          // 0x003C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_40[0x10];                                      // 0x0040(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FCameraModeBehavior_CollisionOffsetTrace;

// ScriptStruct GbxGame.ObjectivePhase_GameplaySettings
// 0x0018 (0x0018 - 0x0000)
struct FObjectivePhase_GameplaySettings final
{
public:
	struct FGbxInlineStruct                       settings;                                          // 0x0000(0x0018)(NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FObjectivePhase_GameplaySettings;

// ScriptStruct GbxGame.ObjectiveGraphNodeData
// 0x0028 (0x0270 - 0x0248)
struct FObjectiveGraphNodeData final : public FObjectiveStatesData
{
public:
	struct FObjectivePhase_GameplaySettings       gameplay;                                          // 0x0248(0x0018)(NativeAccessSpecifierPublic)
	TArray<struct FMissionActionSequenceDef_ObjectiveUpdated> updated;                               // 0x0260(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FObjectiveGraphNodeData;

// ScriptStruct GbxGame.GbxShapeConfig
// 0x0038 (0x0038 - 0x0000)
struct FGbxShapeConfig final
{
public:
	EGGbxShapeComponentType                       ShapeType;                                         // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                 ShapeColor;                                        // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LineThickness;                                     // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                BoxExtent;                                         // 0x0010(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SphereRadius;                                      // 0x0028(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CapsuleHalfHeight;                                 // 0x002C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CapsuleRadius;                                     // 0x0030(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxShapeConfig;

// ScriptStruct GbxGame.RefreshActorData
// 0x0040 (0x0040 - 0x0000)
struct FRefreshActorData final
{
public:
	struct FFactAddress                           address;                                           // 0x0000(0x0038)(HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TimerCost;                                         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         BudgetCost;                                        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FRefreshActorData;

// ScriptStruct GbxGame.CameraModeBehavior_FocusDOF
// 0x1A78 (0x1A90 - 0x0018)
struct FCameraModeBehavior_FocusDOF : public FCameraModeBehavior
{
public:
	uint8                                         Pad_18[0x8];                                       // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPostProcessSettings                   PostProcessSettings;                               // 0x0020(0x08B0)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                         BlendInTime;                                       // 0x08D0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BlendOutTime;                                      // 0x08D4(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bForegroundFocus;                                  // 0x08D8(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8D9[0x3];                                      // 0x08D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ForegroundFocusDistance;                           // 0x08DC(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ForegroundFocusNearRegionPct;                      // 0x08E0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ZoomedForegroundNearRegion;                        // 0x08E4(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ColorVignetteSharpness;                            // 0x08E8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StartColorVignetteSize;                            // 0x08EC(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LongitudinalMotionScale;                           // 0x08F0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LateralMotionScale;                                // 0x08F4(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnableZoomTransition;                             // 0x08F8(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8F9[0x17];                                     // 0x08F9(0x0017)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPostProcessSettings                   BlendOutPPSettings;                                // 0x0910(0x08B0)(Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_11C0[0x10];                                    // 0x11C0(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPostProcessSettings                   AppliedPPSettings;                                 // 0x11D0(0x08B0)(Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_1A80[0x10];                                    // 0x1A80(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FCameraModeBehavior_FocusDOF;

// ScriptStruct GbxGame.GbxMomentNodeSettings_UsePerch
// 0x00B0 (0x0130 - 0x0080)
struct FGbxMomentNodeSettings_UsePerch final : public FGbxMomentNodeSettings
{
public:
	struct FGbxParam                              Actor;                                             // 0x0080(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              Perch;                                             // 0x00B8(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              StopIf;                                            // 0x00F0(0x0038)(Edit, NativeAccessSpecifierPublic)
	bool                                          bInvertStopIf;                                     // 0x0128(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bWaitForLoop;                                      // 0x0129(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_12A[0x6];                                      // 0x012A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxMomentNodeSettings_UsePerch;

// ScriptStruct GbxGame.GbxSwimmingDef
// 0x04D0 (0x04E8 - 0x0018)
struct FGbxSwimmingDef final : public FGbxDef
{
public:
	float                                         SwimmingSurfaceHeightOffset;                       // 0x0018(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SwimmingDepthSlack;                                // 0x001C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TraceLength;                                       // 0x0020(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SurfacingTime;                                     // 0x0024(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WaterBodyTransitionTime;                           // 0x0028(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AngleToHorizonToDive;                              // 0x002C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxSwimmableAngle;                                 // 0x0030(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinSwimmableSurfaceNormalZ;                        // 0x0034(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxDistanceToFloorToExitSurface;                   // 0x0038(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SpeedNeededToBreachJump;                           // 0x003C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAllowIncidentalUnderwaterSwimming;                // 0x0040(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         WaterSplineFalloff;                                // 0x0044(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMovementGrantCondition                SwimmingGrantCondition;                            // 0x0048(0x0048)(Edit, NativeAccessSpecifierPublic)
	struct FMovementGrantCondition                DivingGrantCondition;                              // 0x0090(0x0048)(Edit, NativeAccessSpecifierPublic)
	float                                         OxygenConsumptionRate;                             // 0x00D8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FParameterizedScreenParticle           ScreenParticle_Enter;                              // 0x00E0(0x0068)(Edit, NativeAccessSpecifierPublic)
	struct FParameterizedScreenParticle           ScreenParticle_Exit;                               // 0x0148(0x0068)(Edit, NativeAccessSpecifierPublic)
	struct FParameterizedScreenParticle           ScreenParticle_Idle_AtSurface;                     // 0x01B0(0x0068)(Edit, NativeAccessSpecifierPublic)
	struct FParameterizedScreenParticle           ScreenParticle_Idle_Submerged;                     // 0x0218(0x0068)(Edit, NativeAccessSpecifierPublic)
	struct FParameterizedScreenParticle           ScreenParticle_Moving_AtSurface;                   // 0x0280(0x0068)(Edit, NativeAccessSpecifierPublic)
	struct FParameterizedScreenParticle           ScreenParticle_Moving_Submerged;                   // 0x02E8(0x0068)(Edit, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           EnterImpact;                                       // 0x0350(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           ExitImpact;                                        // 0x0368(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           JumpingExitImpact;                                 // 0x0380(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FName, TSoftObjectPtr<class UNiagaraSystem>> SwimEffectList;                          // 0x0398(0x0050)(Edit, UObjectWrapper, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           OxygenRemainingRtpc;                               // 0x03E8(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OxygenLowThreshold;                                // 0x0400(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_404[0x4];                                      // 0x0404(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FGbxDefPtrProperty_                           OxygenLowEvent;                                    // 0x0408(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           OxygenDepletedEvent;                               // 0x0420(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           ChokingDamageLoopStart;                            // 0x0438(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           ChokingDamageLoopEnd;                              // 0x0450(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           SubmergedEvent;                                    // 0x0468(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           SurfaceEvent;                                      // 0x0480(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FName, struct FGbxAudioEvent>      SwimAudioEffectList;                               // 0x0498(0x0050)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxSwimmingDef;

// ScriptStruct GbxGame.MovieSceneCoordinatedParticleTemplate
// 0x00B0 (0x00D0 - 0x0020)
struct FMovieSceneCoordinatedParticleTemplate final : public FMovieSceneEvalTemplate
{
public:
	struct FCoordinatedParticleSettings           settings;                                          // 0x0020(0x00A0)(NativeAccessSpecifierPrivate)
	struct FGuid                                  ObjectGuid;                                        // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FMovieSceneCoordinatedParticleTemplate;

// ScriptStruct GbxGame.CameraModeBehavior_GbxSwimming
// 0x0028 (0x0040 - 0x0018)
struct FCameraModeBehavior_GbxSwimming : public FCameraModeBehavior
{
public:
	float                                         FOVScale;                                          // 0x0018(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector4                               ColorGamma;                                        // 0x0020(0x0020)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
};
DUMPER7_ASSERTS_FCameraModeBehavior_GbxSwimming;

// ScriptStruct GbxGame.CameraModeBehavior_InitialRotation
// 0x01D0 (0x01E8 - 0x0018)
struct FCameraModeBehavior_InitialRotation : public FCameraModeBehavior
{
public:
	uint8                                         bInterruptedByInput : 1;                           // 0x0018(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bDisableInput : 1;                                 // 0x0018(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInitialRotationAxisParams             pitch;                                             // 0x0020(0x00E0)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FInitialRotationAxisParams             yaw;                                               // 0x0100(0x00E0)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	uint8                                         Pad_1E0[0x8];                                      // 0x01E0(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FCameraModeBehavior_InitialRotation;

// ScriptStruct GbxGame.GbxMovingPlatformEnforcedAccelerationData
// 0x0014 (0x0014 - 0x0000)
struct FGbxMovingPlatformEnforcedAccelerationData final
{
public:
	EGbxMovingPlatformEnforceAccelerationRateType type;                                              // 0x0000(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Acceleration;                                      // 0x0004(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Duration;                                          // 0x0008(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TargetSpeed;                                       // 0x000C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bGroundPlaneOnly;                                  // 0x0010(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxMovingPlatformEnforcedAccelerationData;

// ScriptStruct GbxGame.GbxMovingPlatformConfig
// 0x0120 (0x0120 - 0x0000)
struct FGbxMovingPlatformConfig final
{
public:
	EGbxMovingPlatformDestinationCondition        DestinationConditionType;                          // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGbxMovingPlatformDestination>  Destinations;                                      // 0x0008(0x0010)(Edit, ZeroConstructor, DisableEditOnTemplate, NativeAccessSpecifierPublic)
	EGbxMovingPlatformSpeedMode                   SpeedMode;                                         // 0x0018(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MoveSpeed;                                         // 0x001C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MoveTime;                                          // 0x0020(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRuntimeFloatCurve                     SpeedCurve;                                        // 0x0028(0x0088)(Edit, NativeAccessSpecifierPublic)
	bool                                          bTeleportToInitialDestination;                     // 0x00B0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 MovementSpline;                                    // 0x00B8(0x0008)(Edit, ZeroConstructor, DisableEditOnTemplate, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGbxMovingPlatformSplineMovementSpeedMode     SplineMovementSpeedMode;                           // 0x00C0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSplineMovementUsesSpeedCurveValueBoundsAsSplineEndPoints; // 0x00C4(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bMovementSplineKeepSpawnRotation;                  // 0x00C5(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C6[0x2];                                       // 0x00C6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	EGbxMovingPlatformSplineMovementRotationType  MovementSplineRotationType;                        // 0x00C8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bTeleportToStartOfSpline;                          // 0x00CC(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_CD[0x3];                                       // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TeleportToStartOfSplineThreshold;                  // 0x00D0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bForceBaseBoundedAdherents;                        // 0x00D4(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D5[0x3];                                       // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EGbxMovementMode>                      ForceBaseBoundsMovementWhitelist;                  // 0x00D8(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                          bForceBasedBoundsOnlyWhileInMovementWhitelist;     // 0x00E8(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOnlyForceBoundsWithNoFooting;                     // 0x00E9(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFastAttachedMoveBasedAdherents;                   // 0x00EA(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_EB[0x1];                                       // 0x00EB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MaxSpeedImpartedToLeavingAdherents;                // 0x00EC(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxMovingPlatformEnforcedAccelerationData EnforcedAccelerationData;                      // 0x00F0(0x0014)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bApplyVelocityToAllSceneComponents;                // 0x0104(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSweepWhenMoving;                                  // 0x0105(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAllowMovementToChangeScale;                       // 0x0106(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_107[0x1];                                      // 0x0107(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MaxFramesWithNoMovementToStopTicking;              // 0x0108(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGbxMovingPlatformReplicationControllerType   ReplicationController;                             // 0x010C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bMovingShouldCorrectActorReplication;              // 0x0110(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_111[0x3];                                      // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DivergentMoveTimeToleranceSeconds;                 // 0x0114(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGbxMovingPlatformRelevancyType               ManagedRelevancyType;                              // 0x0118(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxMovingPlatformConfig;

// ScriptStruct GbxGame.CameraModeBehavior_LimitPitch
// 0x0010 (0x0028 - 0x0018)
struct FCameraModeBehavior_LimitPitch : public FCameraModeBehavior
{
public:
	float                                         MinPitch;                                          // 0x0018(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MaxPitch;                                          // 0x001C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         InitialPitch;                                      // 0x0020(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bUseInitialPitch;                                  // 0x0024(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FCameraModeBehavior_LimitPitch;

// ScriptStruct GbxGame.CameraModeBehaviorLookAxis
// 0x0018 (0x0018 - 0x0000)
struct FCameraModeBehaviorLookAxis final
{
public:
	float                                         InputScale;                                        // 0x0000(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLimit;                                            // 0x0004(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MinAngle;                                          // 0x0008(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxAngle;                                          // 0x000C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FeatheringAngle;                                   // 0x0010(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FeatheringInputScale;                              // 0x0014(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FCameraModeBehaviorLookAxis;

// ScriptStruct GbxGame.CameraModeBehavior_Look
// 0x0078 (0x0090 - 0x0018)
struct FCameraModeBehavior_Look : public FCameraModeBehavior
{
public:
	ECameraModeLookSpaces                         UpAxis;                                            // 0x0018(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         bSnapOnStart : 1;                                  // 0x0019(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bFirstUpdate : 1;                                  // 0x0019(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCameraModeBehaviorLookAxis            Axis[0x3];                                         // 0x001C(0x0018)(Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FGbxEasingFunc                         FeatheringFunction;                                // 0x0064(0x000C)(Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FRotator                               PrevBaseRotation;                                  // 0x0070(0x0018)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                         bBaseChanged : 1;                                  // 0x0088(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FCameraModeBehavior_Look;

// ScriptStruct GbxGame.GbxBrainAspect_Leap
// 0x0040 (0x0118 - 0x00D8)
struct FGbxBrainAspect_Leap final : public FGbxBrainAspect
{
public:
	uint8                                         Pad_D8[0x40];                                      // 0x00D8(0x0040)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainAspect_Leap;

// ScriptStruct GbxGame.CameraModeBehavior_OffsetToSocket
// 0x0010 (0x0028 - 0x0018)
struct FCameraModeBehavior_OffsetToSocket : public FCameraModeBehavior
{
public:
	uint8                                         bSetLocation : 1;                                  // 0x0018(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         bSetRotation : 1;                                  // 0x0018(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   SocketName;                                        // 0x001C(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FCameraModeBehavior_OffsetToSocket;

// ScriptStruct GbxGame.ObjectiveAdditionalWaypointInfo
// 0x0030 (0x0030 - 0x0000)
struct FObjectiveAdditionalWaypointInfo final
{
public:
	struct FMissionAliasRef                       RuntimeActor;                                      // 0x0000(0x000C)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FMissionAliasRef                       StaticActor;                                       // 0x000C(0x000C)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FGbxInlineStruct                       settings;                                          // 0x0018(0x0018)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FObjectiveAdditionalWaypointInfo;

// ScriptStruct GbxGame.MissionObjectiveAspectInfo
// 0x0018 (0x0018 - 0x0000)
struct FMissionObjectiveAspectInfo final
{
public:
	struct FGbxInlineStruct                       data;                                              // 0x0000(0x0018)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FMissionObjectiveAspectInfo;

// ScriptStruct GbxGame.ObjectiveTypeSettingsBase
// 0x0070 (0x0078 - 0x0008)
struct FObjectiveTypeSettingsBase : public FGbxHasStructType
{
public:
	bool                                          bHideDefaultPrimaryWaypointInUI;                   // 0x0008(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxInlineStruct                       PrimaryWaypointSettings;                           // 0x0010(0x0018)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FObjectiveAdditionalWaypointInfo> AdditionalWaypoints;                             // 0x0028(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bAllOrNothing;                                     // 0x0038(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bResetOnLoadIfObjectiveSetStillActive;             // 0x0039(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bResetOnLoadIncludesMapTravel;                     // 0x003A(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3B[0x5];                                       // 0x003B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FMissionObjectiveAspectInfo>    Aspects;                                           // 0x0040(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	EObjectiveFailureBehavior                     FailureBehavior;                                   // 0x0050(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSToken                                SoftFailureTargetObjective;                        // 0x0054(0x000C)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      FailureRespawnStation;                             // 0x0060(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FObjectiveTypeSettingsBase;

// ScriptStruct GbxGame.ObjectiveTypeSettings_External
// 0x0038 (0x00B0 - 0x0078)
struct FObjectiveTypeSettings_External final : public FObjectiveTypeSettingsBase
{
public:
	EObjectiveExternalSubType                     subtype;                                           // 0x0078(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FGameDataHandleProperty_                      mission;                                           // 0x0080(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSToken                                InternalObjective;                                 // 0x0098(0x000C)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSToken                                ExternalObjective;                                 // 0x00A4(0x000C)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FObjectiveTypeSettings_External;

// ScriptStruct GbxGame.CameraModeBehavior_ViewModelFOV
// 0x0018 (0x0030 - 0x0018)
struct FCameraModeBehavior_ViewModelFOV : public FCameraModeBehavior
{
public:
	bool                                          bUseDefaultViewModelFOV;                           // 0x0018(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ViewModelFOV;                                      // 0x001C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         InterpDuration;                                    // 0x0020(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bForeground;                                       // 0x0024(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_25[0xB];                                       // 0x0025(0x000B)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FCameraModeBehavior_ViewModelFOV;

// ScriptStruct GbxGame.ObjectiveTypeSettings_GbxInteract
// 0x0028 (0x00A0 - 0x0078)
struct FObjectiveTypeSettings_GbxInteract : public FObjectiveTypeSettingsBase
{
public:
	class FName                                   subtype;                                           // 0x0078(0x0008)(Edit, ZeroConstructor, NoClear, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMissionAliasRef                       Spawner;                                           // 0x0080(0x000C)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FMissionAliasRef                       Object;                                            // 0x008C(0x000C)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bAutoManageObjectiveStates;                        // 0x0098(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FObjectiveTypeSettings_GbxInteract;

// ScriptStruct GbxGame.CameraModeStatePostProcessBlend
// 0x08C0 (0x08C0 - 0x0000)
struct alignas(0x10) FCameraModeStatePostProcessBlend final
{
public:
	uint8                                         Pad_0[0x8C0];                                      // 0x0000(0x08C0)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FCameraModeStatePostProcessBlend;

// ScriptStruct GbxGame.GbxBrainAspectSettings_UsePerch
// 0x00B0 (0x0168 - 0x00B8)
struct FGbxBrainAspectSettings_UsePerch final : public FGbxBrainAspectSettings_ClaimPerch
{
public:
	struct FGbxParam                              PerchIdleTime;                                     // 0x00B8(0x0038)(Edit, NativeAccessSpecifierPublic)
	bool                                          bOverridePerchIdleTime;                            // 0x00F0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              SkipEnter;                                         // 0x00F8(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              WaitForLoop;                                       // 0x0130(0x0038)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxBrainAspectSettings_UsePerch;

// ScriptStruct GbxGame.ClimbableDef
// 0x0008 (0x0350 - 0x0348)
struct FClimbableDef final : public FInteractiveObjectDef
{
public:
	struct FGameplayTag                           ClimbableType;                                     // 0x0348(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FClimbableDef;

// ScriptStruct GbxGame.GbxDamageEventBind
// 0x0060 (0x0060 - 0x0000)
struct FGbxDamageEventBind final
{
public:
	struct FGbxDamageEventData                    Event;                                             // 0x0000(0x0050)(NativeAccessSpecifierPublic)
	class FName                                   FunctionNameToBind;                                // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ActorStateMachineName;                             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxDamageEventBind;

// ScriptStruct GbxGame.GbxChoiceModifierScale
// 0x000C (0x000C - 0x0000)
struct FGbxChoiceModifierScale final
{
public:
	class FName                                   Tag;                                               // 0x0000(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         scale;                                             // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxChoiceModifierScale;

// ScriptStruct GbxGame.DamageArea_Capsule
// 0x0050 (0x00F0 - 0x00A0)
struct FDamageArea_Capsule final : public FDamageArea_BaseRound
{
public:
	struct FGbxAttributeInit                      Height;                                            // 0x00A0(0x0050)(Edit, NoDestructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FDamageArea_Capsule;

// ScriptStruct GbxGame.DamageArea_Box
// 0x00F8 (0x0140 - 0x0048)
struct FDamageArea_Box final : public FDamageArea
{
public:
	struct FGbxAttributeInit                      Height;                                            // 0x0048(0x0050)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FGbxAttributeInit                      Width;                                             // 0x0098(0x0050)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FGbxAttributeInit                      Depth;                                             // 0x00E8(0x0050)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	EDamageAreaBoxOriginType                      OriginType;                                        // 0x0138(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FDamageArea_Box;

// ScriptStruct GbxGame.DamageArea_Triangle
// 0x00F8 (0x0140 - 0x0048)
struct FDamageArea_Triangle final : public FDamageArea
{
public:
	struct FGbxAttributeInit                      Height;                                            // 0x0048(0x0050)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FGbxAttributeInit                      Width;                                             // 0x0098(0x0050)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FGbxAttributeInit                      Depth;                                             // 0x00E8(0x0050)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bEquilateral;                                      // 0x0138(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FDamageArea_Triangle;

// ScriptStruct GbxGame.GbxMomentNodeSettings_PlaySequence
// 0x0158 (0x01D8 - 0x0080)
struct FGbxMomentNodeSettings_PlaySequence : public FGbxMomentNodeSettings
{
public:
	EMomentPlaySequenceMode                       Mode;                                              // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              LevelSequenceActor;                                // 0x0088(0x0038)(Edit, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UGbxLevelSequence>       Sequence;                                          // 0x00C0(0x0028)(Edit, EditConst, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseMark;                                          // 0x00E8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CachedSequenceDuration;                            // 0x00EC(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCachedIsPersistent;                               // 0x00F0(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bMoveActorsToSequenceStart;                        // 0x00F1(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseMoveActorsToSequenceStartTimeout;              // 0x00F2(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F3[0x5];                                       // 0x00F3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              MoveToStartTimeout;                                // 0x00F8(0x0038)(Edit, NativeAccessSpecifierPublic)
	TMap<class FName, struct FGbxParam>           Bindings;                                          // 0x0130(0x0050)(Edit, EditFixedSize, NativeAccessSpecifierPublic)
	struct FGbxParam                              TransformOrigin;                                   // 0x0180(0x0038)(Edit, EditConst, NativeAccessSpecifierPublic)
	bool                                          bHighVisiblitySequence;                            // 0x01B8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B9[0x3];                                      // 0x01B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   PlayToMark;                                        // 0x01BC(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1C4[0x4];                                      // 0x01C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CachedMomentEventNames;                            // 0x01C8(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxMomentNodeSettings_PlaySequence;

// ScriptStruct GbxGame.DamageBinderEventFilter
// 0x0060 (0x0178 - 0x0118)
struct FDamageBinderEventFilter : public FDamageFilterDef
{
public:
	struct FGameplayTagContainer                  RequiredGameplayTags;                              // 0x0118(0x0020)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FMissionGbxDef>                 ActorDefs;                                         // 0x0138(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FMissionAliasRef                       WithinArea;                                        // 0x0148(0x000C)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FMissionGbxDef>                 WorldRegions;                                      // 0x0158(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FMissionGbxDef>                 Zones;                                             // 0x0168(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FDamageBinderEventFilter;

// ScriptStruct GbxGame.GbxMomentNodeState_PlayDialogBase
// 0x0000 (0x0070 - 0x0070)
struct FGbxMomentNodeState_PlayDialogBase : public FGbxMomentNodeState
{
};
DUMPER7_ASSERTS_FGbxMomentNodeState_PlayDialogBase;

// ScriptStruct GbxGame.GbxMomentNodeState_PlayDialogLines
// 0x0018 (0x0088 - 0x0070)
struct FGbxMomentNodeState_PlayDialogLines final : public FGbxMomentNodeState_PlayDialogBase
{
public:
	uint8                                         Pad_70[0x18];                                      // 0x0070(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxMomentNodeState_PlayDialogLines;

// ScriptStruct GbxGame.GbxAttachableBodyState
// 0x0020 (0x0240 - 0x0220)
struct FGbxAttachableBodyState final : public FGbxBodyState
{
public:
	uint8                                         Pad_220[0x20];                                     // 0x0220(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxAttachableBodyState;

// ScriptStruct GbxGame.DamageCauserCritValueResolver
// 0x0020 (0x0028 - 0x0008)
struct FDamageCauserCritValueResolver final : public FAttributeValueResolver
{
public:
	EDamageCauserCritResolverValueType            ValueType;                                         // 0x0008(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxInlineStruct                       Conditions;                                        // 0x0010(0x0018)(Edit, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FDamageCauserCritValueResolver;

// ScriptStruct GbxGame.GbxCondition_HasActorPartTags
// 0x0028 (0x0038 - 0x0010)
struct FGbxCondition_HasActorPartTags final : public FGbxConditionValueResolver
{
public:
	EGameplayContainerMatchType                   MatchType;                                         // 0x0010(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  PartsTags;                                         // 0x0018(0x0020)(Edit, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxCondition_HasActorPartTags;

// ScriptStruct GbxGame.GbxRumbleChannel
// 0x00B8 (0x00B8 - 0x0000)
struct FGbxRumbleChannel final
{
public:
	uint8                                         bAffectsLeftLarge : 1;                             // 0x0000(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bAffectsLeftSmall : 1;                             // 0x0000(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bAffectsRightLarge : 1;                            // 0x0000(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bAffectsRightSmall : 1;                            // 0x0000(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxFloatCurve                         curve;                                             // 0x0008(0x00B0)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxRumbleChannel;

// ScriptStruct GbxGame.GbxRumbleEffect
// 0x0018 (0x0018 - 0x0000)
struct FGbxRumbleEffect final
{
public:
	TArray<struct FGbxRumbleChannel>              ChannelDetails;                                    // 0x0000(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                         Duration;                                          // 0x0010(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxRumbleEffect;

// ScriptStruct GbxGame.GbxRumbleDef
// 0x0018 (0x0030 - 0x0018)
struct FGbxRumbleDef final : public FGbxDef
{
public:
	struct FGbxRumbleEffect                       RumbleEffect;                                      // 0x0018(0x0018)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxRumbleDef;

// ScriptStruct GbxGame.ReplicatedStopDamageRequest
// 0x0008 (0x0018 - 0x0010)
struct FReplicatedStopDamageRequest final : public FCosmeticReplicationRequest
{
public:
	uint8                                         Pad_10[0x8];                                       // 0x0010(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FReplicatedStopDamageRequest;

// ScriptStruct GbxGame.GbxBrainAspectSettings_Teleport
// 0x0110 (0x0190 - 0x0080)
struct FGbxBrainAspectSettings_Teleport final : public FGbxBrainAspectSettings
{
public:
	struct FGbxParam                              GoalLocation;                                      // 0x0080(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              GoalRotation;                                      // 0x00B8(0x0038)(Edit, NativeAccessSpecifierPublic)
	bool                                          bChangeRotation;                                   // 0x00F0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRotateThroughoutTeleport;                         // 0x00F1(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F2[0x6];                                       // 0x00F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxBrainAspectTeleportSettings        TeleportSettings;                                  // 0x00F8(0x0098)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxBrainAspectSettings_Teleport;

// ScriptStruct GbxGame.DamageModifierConditionalDamageType
// 0x0030 (0x0030 - 0x0000)
struct alignas(0x08) FDamageModifierConditionalDamageType final
{
public:
	FGameDataHandleProperty_                      Condition;                                         // 0x0000(0x0018)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      DamageType;                                        // 0x0018(0x0018)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FDamageModifierConditionalDamageType;

// ScriptStruct GbxGame.DamageModifierDamageTypeDef
// 0x00D0 (0x02F8 - 0x0228)
struct FDamageModifierDamageTypeDef final : public FDamageModifierDef
{
public:
	FGameDataHandleProperty_                      DamageType;                                        // 0x0228(0x0018)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FDamageModifierConditionalDamageType> ConditionalDamageTypes;                      // 0x0240(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                          bAppendDamageSource;                               // 0x0250(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_251[0x7];                                      // 0x0251(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDamageSourceContainer                 DamageSource;                                      // 0x0258(0x0040)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	EDamageModifierDamageTypeBonusMode            BonusMode;                                         // 0x0298(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_299[0x7];                                      // 0x0299(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAttributeInit                      DamagePercent;                                     // 0x02A0(0x0050)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	int32                                         priority;                                          // 0x02F0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2F4[0x4];                                      // 0x02F4(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FDamageModifierDamageTypeDef;

// ScriptStruct GbxGame.GbxRewardData_InventoryEquipSlot
// 0x0008 (0x0028 - 0x0020)
struct FGbxRewardData_InventoryEquipSlot final : public FGbxRewardData
{
public:
	uint8                                         EquipSlot;                                         // 0x0020(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxRewardData_InventoryEquipSlot;

// ScriptStruct GbxGame.DamageModifierHitRegionDef
// 0x0020 (0x0248 - 0x0228)
struct FDamageModifierHitRegionDef final : public FDamageModifierDef
{
public:
	FGameDataHandleProperty_                      HitRegion;                                         // 0x0228(0x0018)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        priority;                                          // 0x0240(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_244[0x4];                                      // 0x0244(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FDamageModifierHitRegionDef;

// ScriptStruct GbxGame.GbxRadioScriptsCollection
// 0x0020 (0x0020 - 0x0000)
struct FGbxRadioScriptsCollection final
{
public:
	struct FFactExpression                        FactExpression;                                    // 0x0000(0x0010)(Edit, NativeAccessSpecifierPublic)
	TArray<FGbxDefPtrProperty_>                   Scripts;                                           // 0x0010(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxRadioScriptsCollection;

// ScriptStruct GbxGame.GbxRadioStationDef
// 0x0070 (0x0088 - 0x0018)
struct FGbxRadioStationDef final : public FGbxDef
{
public:
	TArray<struct FGbxRadioScriptsCollection>     CommercialScripts;                                 // 0x0018(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FGbxRadioScriptsCollection>     DJ_CommentaryScripts;                              // 0x0028(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FGbxRadioScriptsCollection>     DJ_GreetingsScripts;                               // 0x0038(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FGbxRadioScriptsCollection>     DJ_InfamyScripts;                                  // 0x0048(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FGbxRadioScriptsCollection>     DJ_SongIntroScripts;                               // 0x0058(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FGbxRadioScriptsCollection>     DJ_SongOutroScripts;                               // 0x0068(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FGbxRadioScriptsCollection>     MusicScripts;                                      // 0x0078(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxRadioStationDef;

// ScriptStruct GbxGame.RecentConversationInfo
// 0x0048 (0x0048 - 0x0000)
struct FRecentConversationInfo final
{
public:
	double                                        ExpirationTime;                                    // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class APlayerController>       PreferredPlayer;                                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           PreferredPlayerNametag;                            // 0x0010(0x0018)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AActor>                  LastKeyActor;                                      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                LastKeyLocation;                                   // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FRecentConversationInfo;

// ScriptStruct GbxGame.DamageModifierConditionalDamageValue
// 0x0068 (0x0068 - 0x0000)
struct FDamageModifierConditionalDamageValue final
{
public:
	FGameDataHandleProperty_                      Condition;                                         // 0x0000(0x0018)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxAttributeInit                      DamageValue;                                       // 0x0018(0x0050)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FDamageModifierConditionalDamageValue;

// ScriptStruct GbxGame.DamageModifierValueDef
// 0x01E8 (0x0410 - 0x0228)
struct FDamageModifierValueDef final : public FDamageModifierDef
{
public:
	EDamageModifierValueType                      ModifierType;                                      // 0x0228(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_229[0x7];                                      // 0x0229(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAttributeInit                      DamageValue;                                       // 0x0230(0x0050)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FDamageModifierConditionalDamageValue> ConditionalDamageValues;                    // 0x0280(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                          bCanBeFatalDamage;                                 // 0x0290(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDontApplyDamageToHealth;                          // 0x0291(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDamageFalloff;                                    // 0x0292(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_293[0x5];                                      // 0x0293(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UCurveFloat>             DamageFalloffCurve;                                // 0x0298(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bReflectionEnabled;                                // 0x02C0(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C1[0x7];                                      // 0x02C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAttributeInit                      ReflectionChance;                                  // 0x02C8(0x0050)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FGbxAttributeInit                      ReflectionDamageScale;                             // 0x0318(0x0050)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	float                                         ReflectionAccuracyModifier;                        // 0x0368(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bReflectTowardAttacker;                            // 0x036C(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRicochetIfReflectionFails;                        // 0x036D(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRicochetEnabled;                                  // 0x036E(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_36F[0x1];                                      // 0x036F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAttributeInit                      RicochetChance;                                    // 0x0370(0x0050)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FGbxAttributeInit                      RicochetDamageScale;                               // 0x03C0(0x0050)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FDamageModifierValueDef;

// ScriptStruct GbxGame.PipelineDamageInput
// 0x0310 (0x0310 - 0x0000)
struct alignas(0x10) FPipelineDamageInput final
{
public:
	class AActor*                                 DamagedActor;                                      // 0x0000(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TScriptInterface<class IDamageableInterface>  Damageable;                                        // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APawn*                                  InstigatorPawn;                                    // 0x0018(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APawn*                                  AdditionalEventListenerPawn;                       // 0x0020(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 DamageCauser;                                      // 0x0028(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 DamageModifierActor;                               // 0x0030(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AController*                            InstigatorController;                              // 0x0038(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_40[0x180];                                     // 0x0040(0x0180)(Fixing Size After Last Property [ Dumper-7 ])
	uint8                                         bSimulatedOnClient : 1;                            // 0x01C0(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_1C1[0x14F];                                    // 0x01C1(0x014F)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FPipelineDamageInput;

// ScriptStruct GbxGame.GbxBrainService_LeadFollow
// 0x00D0 (0x0100 - 0x0030)
struct FGbxBrainService_LeadFollow final : public FGbxBrainService
{
public:
	uint8                                         Pad_30[0xD0];                                      // 0x0030(0x00D0)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainService_LeadFollow;

// ScriptStruct GbxGame.IncomingDamagePresentationGlobalInfoDef
// 0x0350 (0x0350 - 0x0000)
struct FIncomingDamagePresentationGlobalInfoDef final
{
public:
	TSoftObjectPtr<class UFXSystemAsset>          ScreenParticleHealth;                              // 0x0000(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UFXSystemAsset>          ScreenParticleShield;                              // 0x0028(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UFXSystemAsset>          ScreenParticleArmor;                               // 0x0050(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UFXSystemAsset>          ScreenParticleOvershield;                          // 0x0078(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UFXSystemAsset>          ScreenParticleWeaponShield;                        // 0x00A0(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UFXSystemAsset>          ScreenParticleHealth_SplitScreen;                  // 0x00C8(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UFXSystemAsset>          ScreenParticleShield_SplitScreen;                  // 0x00F0(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UFXSystemAsset>          ScreenParticleArmor_SplitScreen;                   // 0x0118(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UFXSystemAsset>          ScreenParticleOvershield_SplitScreen;              // 0x0140(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UFXSystemAsset>          ScreenParticleWeaponShield_SplitScreen;            // 0x0168(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ArmorParticleDuration;                             // 0x0190(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HealthParticleDuration;                            // 0x0194(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ShieldParticleDuration;                            // 0x0198(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OvershieldParticleDuration;                        // 0x019C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WeaponShieldParticleDuration;                      // 0x01A0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   DirectionalParticleEventName;                      // 0x01A4(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   DirectionalEmitterName;                            // 0x01AC(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   FullParticleEventName;                             // 0x01B4(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   FullEmitterName;                                   // 0x01BC(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FullscreenEffectRegionWidth;                       // 0x01C4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   EventCounterParameterName;                         // 0x01C8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   FlushParticlesParameterName;                       // 0x01D0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   DamageSeverityParameterName;                       // 0x01D8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   DamageDirectionParameterName;                      // 0x01E0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   DamageInstigatorInViewParameterName;               // 0x01E8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   LifetimeParameterName;                             // 0x01F0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   LoopDurationParameterName;                         // 0x01F8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DamageParticleDirectionQuantization;               // 0x0200(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCounterClockwiseDamageDirection;                  // 0x0204(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_205[0x3];                                      // 0x0205(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AspectRatioThresholdToUseWidescreenParticles;      // 0x0208(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FlinchAnimationStregthNoise;                       // 0x020C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FlinchAnimationAngleNoise;                         // 0x0210(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RadialBlurMaxDistance;                             // 0x0214(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           HealthTypeArmorTag;                                // 0x0218(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           HealthTypeFleshTag;                                // 0x0220(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ScreenParticleLifetime;                            // 0x0228(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_22C[0x4];                                      // 0x022C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FGbxDefPtrProperty_                           DamageScoreRtpc;                                   // 0x0230(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           DamageSeverityRtpc;                                // 0x0248(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           PresentationLevelDifferenceRtpc;                   // 0x0260(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           DamageToHealthPercentRtpc;                         // 0x0278(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           DamageToShieldPercentRtpc;                         // 0x0290(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           DamageToOvershieldPercentRtpc;                     // 0x02A8(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           DamageToWeaponShieldPercentRtpc;                   // 0x02C0(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           HealthPercentRtpc;                                 // 0x02D8(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           ShieldPercentRtpc;                                 // 0x02F0(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           HasShieldRtpc;                                     // 0x0308(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           OvershieldPercentRtpc;                             // 0x0320(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           HasOvershieldRtpc;                                 // 0x0338(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FIncomingDamagePresentationGlobalInfoDef;

// ScriptStruct GbxGame.GbxRewardData_InventorySerialNumber
// 0x0010 (0x0030 - 0x0020)
struct FGbxRewardData_InventorySerialNumber final : public FGbxRewardData
{
public:
	class FString                                 InventorySerialNumber;                             // 0x0020(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxRewardData_InventorySerialNumber;

// ScriptStruct GbxGame.GbxClosedCaptionDef
// 0x0018 (0x0030 - 0x0018)
struct FGbxClosedCaptionDef final : public FGbxDef
{
public:
	class FText                                   Caption;                                           // 0x0018(0x0010)(Edit, NativeAccessSpecifierPublic)
	float                                         Duration;                                          // 0x0028(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int8                                          priority;                                          // 0x002C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowForEnglish;                                   // 0x002D(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxClosedCaptionDef;

// ScriptStruct GbxGame.DamageEventDetails
// 0x00F0 (0x00F0 - 0x0000)
struct FDamageEventDetails final
{
public:
	float                                         DamageDealt;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitRegionInfo                         HitRegion;                                         // 0x0008(0x0020)(BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FHealthTypeDamageSummary>       DamagePerHealthType;                               // 0x0028(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      DamageType;                                        // 0x0038(0x0018)(BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDamageSourceContainer                 DamageSource;                                      // 0x0050(0x0040)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FVector                                HitDirection;                                      // 0x0090(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                HitLocation;                                       // 0x00A8(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   HitSocket;                                         // 0x00C0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bWasCrit;                                          // 0x00C8(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RadiusDamageOrigin;                                // 0x00D0(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         damageradius;                                      // 0x00E8(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsDamageOverTime;                                 // 0x00EC(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_ED[0x3];                                       // 0x00ED(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FDamageEventDetails;

// ScriptStruct GbxGame.DamageSourceDef
// 0x00D0 (0x00E8 - 0x0018)
struct FDamageSourceDef : public FGbxDef
{
public:
	struct FDamageModifierAttributeCollection     ModifierAttributes;                                // 0x0018(0x0030)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FGbxAttributeInit                      AIInstigatedDamageScale;                           // 0x0048(0x0050)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FDamageSourceHealthTypeModifier> HealthTypeModifiers;                              // 0x0098(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                          bCanCauseCriticals;                                // 0x00A8(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCanCauseStatusEffects;                            // 0x00A9(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAppendToStatusEffectDamage;                       // 0x00AA(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCollectForHitReactions;                           // 0x00AB(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIgnoreCooldown;                                   // 0x00AC(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIgnoreAllDamageModifications;                     // 0x00AD(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIgnoreInstigatedDamageModifications;              // 0x00AE(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEligibleForShieldAbsorption;                      // 0x00AF(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPlayHitNotifySounds;                              // 0x00B0(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  GameplayTags;                                      // 0x00B8(0x0020)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	uint8                                         Pad_D8[0x10];                                      // 0x00D8(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FDamageSourceDef;

// ScriptStruct GbxGame.DamageTypeAspect
// 0x0018 (0x0048 - 0x0030)
struct FDamageTypeAspect : public FInventoryAspect
{
public:
	FGameDataHandleProperty_                      DamageType;                                        // 0x0030(0x0018)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FDamageTypeAspect;

// ScriptStruct GbxGame.GbxDamageEvent
// 0x0088 (0x0088 - 0x0000)
struct alignas(0x08) FGbxDamageEvent final
{
public:
	uint8                                         Pad_0[0x88];                                       // 0x0000(0x0088)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxDamageEvent;

// ScriptStruct GbxGame.DamageContextSource
// 0x0010 (0x0010 - 0x0000)
struct FDamageContextSource final
{
public:
	class AActor*                                 SourceActor;                                       // 0x0000(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APawn*                                  instigator;                                        // 0x0008(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FDamageContextSource;

// ScriptStruct GbxGame.DialogConversation
// 0x000C (0x000C - 0x0000)
struct FDialogConversation final
{
public:
	int32                                         ConversationID;                                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class UWorld>                  ConversationWorld;                                 // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FDialogConversation;

// ScriptStruct GbxGame.DialogEnumValue
// 0x0008 (0x0008 - 0x0000)
struct FDialogEnumValue final
{
public:
	struct FGameplayTag                           DialogEnumValue;                                   // 0x0000(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FDialogEnumValue;

// ScriptStruct GbxGame.DialogLineEchoData
// 0x0020 (0x0028 - 0x0008)
struct FDialogLineEchoData final : public FGbxHasStructType
{
public:
	EEchoPerformanceMode                          Mode;                                              // 0x0008(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNoPortrait;                                       // 0x0009(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	FGbxDefPtrProperty_                           EchoDataOverride;                                  // 0x0010(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FDialogLineEchoData;

// ScriptStruct GbxGame.GbxSkillReservedRandomNumSpec
// 0x0010 (0x0010 - 0x0000)
struct FGbxSkillReservedRandomNumSpec final
{
public:
	int32                                         ID;                                                // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGbxSkillRNGType                              type;                                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MinVal;                                            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxVal;                                            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxSkillReservedRandomNumSpec;

// ScriptStruct GbxGame.GbxSkillActionExecPolicy
// 0x0002 (0x0002 - 0x0000)
struct FGbxSkillActionExecPolicy final
{
public:
	bool                                          bEmitOnSuccess;                                    // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEmitOnFailure;                                    // 0x0001(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxSkillActionExecPolicy;

// ScriptStruct GbxGame.GbxSkillActionGroupData
// 0x0028 (0x0028 - 0x0000)
struct FGbxSkillActionGroupData final
{
public:
	class FName                                   ActionName;                                        // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                   GroupName;                                         // 0x0008(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bMutuallyExclusive;                                // 0x0010(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           Exclusions;                                        // 0x0018(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxSkillActionGroupData;

// ScriptStruct GbxGame.GbxSkillActionExecFilterSet
// 0x0028 (0x0028 - 0x0000)
struct FGbxSkillActionExecFilterSet final
{
public:
	bool                                          bExcludeToSelected;                                // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EGbxSkillActionExecType>               ExecTypes;                                         // 0x0008(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FGbxInlineStruct>               Filters;                                           // 0x0018(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxSkillActionExecFilterSet;

// ScriptStruct GbxGame.GbxSkillActionDataEx
// 0x0130 (0x0138 - 0x0008)
struct FGbxSkillActionDataEx final : public FGbxHasStructType
{
public:
	int32                                         ActionID;                                          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         SequenceID;                                        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                   ResultVarName;                                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FGbxSkillActionData_NetMessage> NetMessages;                                       // 0x0018(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FGbxSkillReservedRandomNumSpec> RNGSpecs;                                          // 0x0028(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FGbxInlineStruct>               ActionItems;                                       // 0x0038(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<TSoftObjectPtr<class UGbxSkillParamData>> UserParams;                                     // 0x0048(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	struct FGbxSkillActionGroupData               GroupData;                                         // 0x0058(0x0028)(Edit, NativeAccessSpecifierPrivate)
	FGbxDefPtrProperty_                           ActiveStateDef;                                    // 0x0080(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	FGbxDefPtrProperty_                           ActiveRegisterDef;                                 // 0x0098(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	FGbxDefPtrProperty_                           StartingStateDef;                                  // 0x00B0(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bUsesExecPolicy;                                   // 0x00C8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGbxSkillActionExecPolicy              ExecPolicy;                                        // 0x00C9(0x0002)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_CB[0x5];                                       // 0x00CB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGbxSkillActionExecFilterSet>   FilterSets;                                        // 0x00D0(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class UClass>                   HandlerClass;                                      // 0x00E0(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class UClass>                   ExceptionHandlerClass;                             // 0x0108(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                   ActionName;                                        // 0x0130(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxSkillActionDataEx;

// ScriptStruct GbxGame.GbxDialogNameTagQualifier
// 0x0008 (0x0008 - 0x0000)
struct FGbxDialogNameTagQualifier final
{
public:
	class FName                                   QualifierName;                                     // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxDialogNameTagQualifier;

// ScriptStruct GbxGame.DialogParameterValueProp_DialogEnumValue
// 0x0008 (0x0008 - 0x0000)
struct FDialogParameterValueProp_DialogEnumValue final
{
public:
	struct FDialogEnumValue                       DialogEnumValue;                                   // 0x0000(0x0008)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FDialogParameterValueProp_DialogEnumValue;

// ScriptStruct GbxGame.DynamicUsabilityBehaviorMod
// 0x0180 (0x0198 - 0x0018)
struct FDynamicUsabilityBehaviorMod : public FFactsBinderBehaviorMod
{
public:
	uint8                                         Pad_18[0x180];                                     // 0x0018(0x0180)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FDynamicUsabilityBehaviorMod;

// ScriptStruct GbxGame.EditorViewportClientState
// 0x0068 (0x0068 - 0x0000)
struct FEditorViewportClientState final
{
public:
	float                                         FirstFOV;                                          // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               FirstViewRotation;                                 // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class FName                                   FirstBoneName;                                     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ThirdFOV;                                          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                ThirdViewLocation;                                 // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               ThirdViewRotation;                                 // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bFirstPerson;                                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FEditorViewportClientState;

// ScriptStruct GbxGame.FactChange
// 0x0070 (0x0070 - 0x0000)
struct FFactChange final
{
public:
	struct FFactAddress                           address;                                           // 0x0000(0x0038)(Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFactChangeOp                                 Op;                                                // 0x0038(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFactChangeValue                       Value;                                             // 0x0040(0x0030)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FFactChange;

// ScriptStruct GbxGame.FactEvaluator_Attribute
// 0x0038 (0x0040 - 0x0008)
struct FFactEvaluator_Attribute final : public FFactEvaluator
{
public:
	struct FGbxAttributeEvaluator                 attribute;                                         // 0x0008(0x0038)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FFactEvaluator_Attribute;

// ScriptStruct GbxGame.FactsSystemActorFactMeta
// 0x0030 (0x0030 - 0x0000)
struct FFactsSystemActorFactMeta final
{
public:
	class FName                                   FactName;                                          // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFactsSystemActorFactStatesType               StatesType;                                        // 0x0008(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           ValidStates;                                       // 0x0010(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	class FName                                   GameDataHandleCategory;                            // 0x0020(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   GameDataHandleAliasType;                           // 0x0028(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FFactsSystemActorFactMeta;

// ScriptStruct GbxGame.FactsSystemActorType
// 0x0040 (0x0040 - 0x0000)
struct FFactsSystemActorType final
{
public:
	class FName                                   TypeName;                                          // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ParentTypeName;                                    // 0x0008(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSoftClassPtr<class UClass>>           ActorClasses;                                      // 0x0010(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<FGbxDefPtrProperty_>                   ActorDefs;                                         // 0x0020(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FFactsSystemActorFactMeta>      facts;                                             // 0x0030(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FFactsSystemActorType;

// ScriptStruct GbxGame.AliasType_GameDataHandle
// 0x0048 (0x0048 - 0x0000)
struct FAliasType_GameDataHandle final
{
public:
	class FName                                   AliasType;                                         // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   GameDataHandleCategory;                            // 0x0008(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAliasTypeGameDataHandleFilter                filter;                                            // 0x0010(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UScriptStruct>           DefStruct;                                         // 0x0018(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bConvertibleToDisplayText;                         // 0x0040(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FAliasType_GameDataHandle;

// ScriptStruct GbxGame.GbxBodyNodeSettings_BoneMod
// 0x0068 (0x00A0 - 0x0038)
struct FGbxBodyNodeSettings_BoneMod final : public FGbxBodyNodeSettings
{
public:
	bool                                          bUseTranslation;                                   // 0x0038(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseRotation;                                      // 0x0039(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseScale;                                         // 0x003A(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3B[0x5];                                       // 0x003B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Translation;                                       // 0x0040(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               Rotation;                                          // 0x0058(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                Scale3D;                                           // 0x0070(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         scale;                                             // 0x0088(0x0004)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAdditive;                                         // 0x008C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EBoneControlSpace                             TransformSpace;                                    // 0x008D(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8E[0x2];                                       // 0x008E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBoneReference                         TransformRelativeBone;                             // 0x0090(0x0010)(Edit, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxBodyNodeSettings_BoneMod;

// ScriptStruct GbxGame.CacheSettings
// 0x0010 (0x0010 - 0x0000)
struct FCacheSettings final
{
public:
	class FName                                   FactCacheName;                                     // 0x0000(0x0008)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        RequiredStatesFlags;                               // 0x0008(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint16                                        InitializationOrder;                               // 0x000C(0x0002)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FCacheSettings;

// ScriptStruct GbxGame.FactValue
// 0x0010 (0x0010 - 0x0000)
struct alignas(0x04) FFactValue final
{
public:
	uint8                                         Pad_0[0x10];                                       // 0x0000(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FFactValue;

// ScriptStruct GbxGame.FactTimeValueResolver
// 0x00B0 (0x00B8 - 0x0008)
struct FFactTimeValueResolver final : public FAttributeValueResolver
{
public:
	bool                                          bUseRelativeAddress;                               // 0x0008(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFactAddress                           address;                                           // 0x0010(0x0038)(Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSToken                                channel;                                           // 0x0048(0x000C)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFactValue                             Value;                                             // 0x0054(0x0010)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_64[0x54];                                      // 0x0064(0x0054)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FFactTimeValueResolver;

// ScriptStruct GbxGame.GbxMomentNodeSettings_MissionAction
// 0x0028 (0x00A8 - 0x0080)
struct FGbxMomentNodeSettings_MissionAction final : public FGbxMomentNodeSettings
{
public:
	struct FMissionActionSequenceDef              actions;                                           // 0x0080(0x0028)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxMomentNodeSettings_MissionAction;

// ScriptStruct GbxGame.FactValueResolver
// 0x00A0 (0x00A8 - 0x0008)
struct FFactValueResolver final : public FAttributeValueResolver
{
public:
	bool                                          bUseRelativeAddress;                               // 0x0008(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFactAddress                           address;                                           // 0x0010(0x0038)(Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSToken                                channel;                                           // 0x0048(0x000C)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_54[0x54];                                      // 0x0054(0x0054)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FFactValueResolver;

// ScriptStruct GbxGame.GbxMusicAction
// 0x0000 (0x0008 - 0x0008)
struct FGbxMusicAction : public FGbxHasStructType
{
};
DUMPER7_ASSERTS_FGbxMusicAction;

// ScriptStruct GbxGame.GbxMusicAction_PostEvent
// 0x0080 (0x0088 - 0x0008)
struct FGbxMusicAction_PostEvent final : public FGbxMusicAction
{
public:
	struct FGbxAudioEvent                         AudioEvent;                                        // 0x0008(0x0030)(Edit, NativeAccessSpecifierPublic)
	bool                                          bStopOnExit;                                       // 0x0038(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAudioEvent                         StopEvent;                                         // 0x0040(0x0030)(Edit, NativeAccessSpecifierPublic)
	uint8                                         Pad_70[0x18];                                      // 0x0070(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxMusicAction_PostEvent;

// ScriptStruct GbxGame.GbxBodyNodeSettings_SceneComponentInstanceData
// 0x0028 (0x0028 - 0x0000)
struct alignas(0x08) FGbxBodyNodeSettings_SceneComponentInstanceData final
{
public:
	uint8                                         Pad_0[0x28];                                       // 0x0000(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBodyNodeSettings_SceneComponentInstanceData;

// ScriptStruct GbxGame.GameModeGameDataCategories_DONTUSE
// 0x0001 (0x0001 - 0x0000)
struct FGameModeGameDataCategories_DONTUSE final
{
public:
	uint8                                         Pad_0[0x1];                                        // 0x0000(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGameModeGameDataCategories_DONTUSE;

// ScriptStruct GbxGame.GameplayTagToValueMap
// 0x0058 (0x0058 - 0x0000)
struct FGameplayTagToValueMap final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxAttributeInit                      ValueIfContextHasTag;                              // 0x0008(0x0050)(Edit, NoDestructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGameplayTagToValueMap;

// ScriptStruct GbxGame.GbxBodyNodeState_Switch
// 0x00B0 (0x0118 - 0x0068)
struct FGbxBodyNodeState_Switch : public FGbxBodyNodeState
{
public:
	uint8                                         Pad_68[0xB0];                                      // 0x0068(0x00B0)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBodyNodeState_Switch;

// ScriptStruct GbxGame.GameplayTagBasedAttributeValueResolver
// 0x0060 (0x0068 - 0x0008)
struct FGameplayTagBasedAttributeValueResolver final : public FAttributeValueResolver
{
public:
	TArray<struct FGameplayTagToValueMap>         TagToValueMap;                                     // 0x0008(0x0010)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	struct FGbxAttributeInit                      ValueIfNoTagIsFound;                               // 0x0018(0x0050)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
};
DUMPER7_ASSERTS_FGameplayTagBasedAttributeValueResolver;

// ScriptStruct GbxGame.GameResourcePool
// 0x02C8 (0x02D0 - 0x0008)
struct FGameResourcePool final : public FGbxHasStructType
{
public:
	uint8                                         Pad_8[0x18];                                       // 0x0008(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAttributeFloat                     MinValue;                                          // 0x0020(0x000C)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	struct FGbxAttributeFloat                     MaxValue;                                          // 0x002C(0x000C)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	struct FGbxAttributeFloat                     PercentOfMaxValueReserved;                         // 0x0038(0x000C)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	struct FGbxAttributeInteger                   NumSegments;                                       // 0x0044(0x000C)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	struct FGbxAttributeFloat                     ConsumptionRate;                                   // 0x0050(0x000C)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	struct FGbxAttributeFloat                     ActiveRegenerationRate;                            // 0x005C(0x000C)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	struct FGbxAttributeFloat                     OnIdleRegenerationRate;                            // 0x0068(0x000C)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	struct FGbxAttributeFloat                     OnIdleRegenerationDelay;                           // 0x0074(0x000C)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	struct FGbxAttributeFloat                     OnDepletedIdleRegenerationDelay;                   // 0x0080(0x000C)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	struct FGbxAttributeFloat                     PassiveRegenerationRate;                           // 0x008C(0x000C)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	struct FGbxAttributeFloat                     PassivePercentRegenerationRate;                    // 0x0098(0x000C)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	struct FGbxAttributeFloat                     PassiveMissingPercentRegenerationRate;             // 0x00A4(0x000C)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	struct FGbxAttributeInteger                   RegenerationDisabled;                              // 0x00B0(0x000C)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	struct FGbxAttributeFloat                     OvershieldDuration;                                // 0x00BC(0x000C)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	float                                         CurrentValue;                                      // 0x00C8(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         LastTotalRegenerationRateValue;                    // 0x00CC(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         LastTotalPercentRegenerationRateValue;             // 0x00D0(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         LastEffectiveMaxValue;                             // 0x00D4(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGbxAttributeFloat                     PostAddedRegenerationRate;                         // 0x00D8(0x000C)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	struct FGbxAttributeFloat                     PostAddedPercentRegenerationRate;                  // 0x00E4(0x000C)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_F0[0x1E0];                                     // 0x00F0(0x01E0)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGameResourcePool;

// ScriptStruct GbxGame.GameResourcePoolCurrentValueResolver
// 0x0018 (0x0020 - 0x0008)
struct FGameResourcePoolCurrentValueResolver final : public FAttributeValueResolver
{
public:
	FGameDataHandleProperty_                      ResourceDef;                                       // 0x0008(0x0018)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
};
DUMPER7_ASSERTS_FGameResourcePoolCurrentValueResolver;

// ScriptStruct GbxGame.GbxMusicCondition_ChildrenCanPlay
// 0x0000 (0x0008 - 0x0008)
struct FGbxMusicCondition_ChildrenCanPlay final : public FGbxMusicCondition
{
};
DUMPER7_ASSERTS_FGbxMusicCondition_ChildrenCanPlay;

// ScriptStruct GbxGame.GbxBrainAspect_CharacterSound
// 0x0018 (0x00F0 - 0x00D8)
struct FGbxBrainAspect_CharacterSound final : public FGbxBrainAspect
{
public:
	uint8                                         Pad_D8[0x18];                                      // 0x00D8(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainAspect_CharacterSound;

// ScriptStruct GbxGame.GameResourcePoolStateResolver
// 0x0008 (0x0018 - 0x0010)
struct FGameResourcePoolStateResolver final : public FGbxConditionValueResolver
{
public:
	EGameResourcePoolState                        State;                                             // 0x0010(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGameResourcePoolStateResolver;

// ScriptStruct GbxGame.GameResourcePoolCurrentValueResolver_NoDef
// 0x0000 (0x0008 - 0x0008)
struct FGameResourcePoolCurrentValueResolver_NoDef final : public FAttributeValueResolver
{
};
DUMPER7_ASSERTS_FGameResourcePoolCurrentValueResolver_NoDef;

// ScriptStruct GbxGame.GameResourcePoolWeightValueResolver
// 0x01B0 (0x01B8 - 0x0008)
struct FGameResourcePoolWeightValueResolver final : public FAttributeValueResolver
{
public:
	FGameDataHandleProperty_                      ResourceDef;                                       // 0x0008(0x0018)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bSegmentedResourceRequired;                        // 0x0020(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAttributeInit                      ResourceThreshold;                                 // 0x0028(0x0050)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FGbxAttributeInit                      AboveThresholdWeight;                              // 0x0078(0x0050)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FGbxAttributeInit                      NoPoolWeight;                                      // 0x00C8(0x0050)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FGbxAttributeInit                      MinBelowThresholdWeight;                           // 0x0118(0x0050)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FGbxAttributeInit                      MaxBelowThresholdWeight;                           // 0x0168(0x0050)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
};
DUMPER7_ASSERTS_FGameResourcePoolWeightValueResolver;

// ScriptStruct GbxGame.GbxAnimNode_IdleTurns
// 0x0238 (0x0360 - 0x0128)
struct alignas(0x10) FGbxAnimNode_IdleTurns final : public FGbxAnimNode_StateMachine
{
public:
	uint8                                         Pad_128[0x100];                                    // 0x0128(0x0100)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPoseLink                              Idle;                                              // 0x0228(0x0010)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FGbxAnimSeqRef                         LeftTurn;                                          // 0x0238(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FGbxAnimSeqRef                         RightTurn;                                         // 0x0250(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FGbxAnimBlendOptions                   TurnToIdle;                                        // 0x0268(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FGbxAnimBlendOptions                   IdleToTurn;                                        // 0x0288(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_2A8[0xB8];                                     // 0x02A8(0x00B8)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxAnimNode_IdleTurns;

// ScriptStruct GbxGame.GbxAcousticDataProvider
// 0x00C0 (0x00C8 - 0x0008)
struct FGbxAcousticDataProvider final : public FGbxAudioAcousticsDataProvider
{
public:
	FGbxDefPtrProperty_                           SubmixBus;                                         // 0x0008(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           EarlyReflectionBus;                                // 0x0020(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<FGbxDefPtrProperty_, float>              DefaultLateReflectionBlend;                        // 0x0038(0x0050)(Edit, NativeAccessSpecifierPublic)
	uint8                                         Pad_88[0x40];                                      // 0x0088(0x0040)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxAcousticDataProvider;

// ScriptStruct GbxGame.GbxActiveProfileSaveGameHeader
// 0x0070 (0x0078 - 0x0008)
struct FGbxActiveProfileSaveGameHeader : public FGbxHasStructType
{
public:
	uint8                                         Pad_8[0x70];                                       // 0x0008(0x0070)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxActiveProfileSaveGameHeader;

// ScriptStruct GbxGame.GbxActivityAreaStampLayoutGroupDef
// 0x00A0 (0x00B8 - 0x0018)
struct FGbxActivityAreaStampLayoutGroupDef final : public FGbxDef
{
public:
	TSet<FGbxDefPtrProperty_>                     StampLayouts;                                      // 0x0018(0x0050)(Edit, NativeAccessSpecifierPublic)
	TSet<FGbxDefPtrProperty_>                     StampLayoutsGroups;                                // 0x0068(0x0050)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxActivityAreaStampLayoutGroupDef;

// ScriptStruct GbxGame.GbxMomentNodeState_Random
// 0x0000 (0x0070 - 0x0070)
struct FGbxMomentNodeState_Random final : public FGbxMomentNodeState
{
};
DUMPER7_ASSERTS_FGbxMomentNodeState_Random;

// ScriptStruct GbxGame.GbxCondition_IsPlayer
// 0x0000 (0x0010 - 0x0010)
struct FGbxCondition_IsPlayer final : public FGbxConditionValueResolver
{
};
DUMPER7_ASSERTS_FGbxCondition_IsPlayer;

// ScriptStruct GbxGame.GbxSequencePlayRateSectionTemplate
// 0x0110 (0x0130 - 0x0020)
struct FGbxSequencePlayRateSectionTemplate final : public FMovieSceneEvalTemplate
{
public:
	struct FMovieSceneFloatChannel                PlayRateCurve;                                     // 0x0020(0x0110)(NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxSequencePlayRateSectionTemplate;

// ScriptStruct GbxGame.DebugDisplayLayout
// 0x0020 (0x0020 - 0x0000)
struct FDebugDisplayLayout final
{
public:
	class FString                                 MissionChoice;                                     // 0x0000(0x0010)(Edit, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 LayoutName;                                        // 0x0010(0x0010)(Edit, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FDebugDisplayLayout;

// ScriptStruct GbxGame.GbxSequenceFeedbackKey
// 0x00C0 (0x00C0 - 0x0000)
struct FGbxSequenceFeedbackKey final
{
public:
	FGameDataHandleProperty_                      FeedbackDef;                                       // 0x0000(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxAttributeInit                      FeedbackScale;                                     // 0x0018(0x0050)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	int32                                         FeedbackFlags;                                     // 0x0068(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bApplyFeedbackAsRanged;                            // 0x006C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         EffectFalloffMinDistance;                          // 0x0070(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         EffectFalloffMaxDistance;                          // 0x0074(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseActorAsSourceLocation;                         // 0x0078(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                SourceLocation;                                    // 0x0080(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMovieSceneObjectBindingID             SourceActor;                                       // 0x0098(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   SourceMeshComponent;                               // 0x00B0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   SourceActorSocket;                                 // 0x00B8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxSequenceFeedbackKey;

// ScriptStruct GbxGame.GbxActivityEffect_Mission
// 0x0018 (0x0020 - 0x0008)
struct FGbxActivityEffect_Mission final : public FGbxActivityEffect
{
public:
	FGbxDefPtrProperty_                           MissionDef;                                        // 0x0008(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxActivityEffect_Mission;

// ScriptStruct GbxGame.ActivityDataByRegion
// 0x01A0 (0x01A0 - 0x0000)
struct FActivityDataByRegion final
{
public:
	struct FNexusWeightedBitsInstance             RecoveryRate;                                      // 0x0000(0x0070)(Edit, NativeAccessSpecifierPublic)
	struct FNexusWeightedBitsInstance             ActivationCost;                                    // 0x0070(0x0070)(Edit, NativeAccessSpecifierPublic)
	struct FNexusWeightedBitsInstance             GlobalMultiplier;                                  // 0x00E0(0x0070)(Edit, NativeAccessSpecifierPublic)
	TMap<struct FFactAddress, class FName>        RuntimeWeightsFromFacts;                           // 0x0150(0x0050)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FActivityDataByRegion;

// ScriptStruct GbxGame.GbxBodyNodeSettings_DiscoveryLocation
// 0x0020 (0x0058 - 0x0038)
struct FGbxBodyNodeSettings_DiscoveryLocation final : public FGbxBodyNodeSettings
{
public:
	FGbxDefPtrProperty_                           DiscoveryLocationType;                             // 0x0038(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGbxDiscoveryLocationComponent> ComponentType;                                 // 0x0050(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxBodyNodeSettings_DiscoveryLocation;

// ScriptStruct GbxGame.GbxActivityGlobals
// 0x02A8 (0x02C8 - 0x0020)
struct FGbxActivityGlobals final : public FGbxGlobalDef
{
public:
	TSoftObjectPtr<class UWorld>                  MapUsedToBuildNavMesh;                             // 0x0020(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UWorld>                  MapUsedToValidateNavMesh;                          // 0x0048(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UWorld>                  EmptyStampMap;                                     // 0x0070(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 LandscapeEditLayerName;                            // 0x0098(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RandomSwitchRefreshTime;                           // 0x00A8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              DefaultProbability;                                // 0x00B0(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              StampCooldownTime;                                 // 0x00E8(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              DefaultActivityMaxAliveTime;                       // 0x0120(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              DefaultActivityDeactivateDistance;                 // 0x0158(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              DefaultActivityAbortDistance;                      // 0x0190(0x0038)(Edit, NativeAccessSpecifierPublic)
	TMap<FGameDataHandleProperty_, struct FActivityDataByRegion> ActivityDataByRegion;               // 0x01C8(0x0050)(Edit, NativeAccessSpecifierPublic)
	TMap<class FName, TSoftObjectPtr<class UWorld>> StampTemplates;                                  // 0x0218(0x0050)(Edit, UObjectWrapper, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UCurveFloat>             DistanceFromPlayerActivationWeightCurve;           // 0x0268(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UCurveFloat>             DistanceFromActiveStampsWeightCurve;               // 0x0290(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2B8[0x10];                                     // 0x02B8(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxActivityGlobals;

// ScriptStruct GbxGame.GbxActivityMapInitializationDef
// 0x0018 (0x0030 - 0x0018)
struct FGbxActivityMapInitializationDef final : public FGbxDef
{
public:
	TArray<struct FDesiredLayoutByName>           DesiredLayoutsFromName;                            // 0x0018(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bLockAllOtherStamps;                               // 0x0028(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxActivityMapInitializationDef;

// ScriptStruct GbxGame.GbxSkillActionState_UserParams
// 0x0060 (0x0068 - 0x0008)
struct FGbxSkillActionState_UserParams final : public FGbxSkillActionState
{
public:
	uint8                                         Pad_8[0x60];                                       // 0x0008(0x0060)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxSkillActionState_UserParams;

// ScriptStruct GbxGame.ActivitySerialNumber
// 0x0058 (0x0080 - 0x0028)
struct FActivitySerialNumber final : public FGbxSerialNumberClass
{
public:
	uint8                                         Pad_28[0x58];                                      // 0x0028(0x0058)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FActivitySerialNumber;

// ScriptStruct GbxGame.GbxActorPartDebugItem
// 0x0070 (0x0070 - 0x0000)
struct FGbxActorPartDebugItem final
{
public:
	FGbxDefPtrProperty_                           PartDef;                                           // 0x0000(0x0018)(Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<FGbxDefPtrProperty_>                   Parents;                                           // 0x0018(0x0010)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	EGbxActorPartDebugVisibility                  Visibility;                                        // 0x0028(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  showtags;                                          // 0x0030(0x0020)(Edit, EditConst, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  hidetags;                                          // 0x0050(0x0020)(Edit, EditConst, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxActorPartDebugItem;

// ScriptStruct GbxGame.CharacterGestaltRenderStateData
// 0x0018 (0x0018 - 0x0000)
struct alignas(0x08) FCharacterGestaltRenderStateData final
{
public:
	uint8                                         Pad_0[0x18];                                       // 0x0000(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FCharacterGestaltRenderStateData;

// ScriptStruct GbxGame.GbxMomentNodeState_SetActorFactValue
// 0x0000 (0x0070 - 0x0070)
struct FGbxMomentNodeState_SetActorFactValue final : public FGbxMomentNodeState
{
};
DUMPER7_ASSERTS_FGbxMomentNodeState_SetActorFactValue;

// ScriptStruct GbxGame.GbxMomentNodeSettings_EndMoment
// 0x0028 (0x00A8 - 0x0080)
struct FGbxMomentNodeSettings_EndMoment final : public FGbxMomentNodeSettings
{
public:
	TSoftObjectPtr<class UGbxMomentData>          Moment;                                            // 0x0080(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxMomentNodeSettings_EndMoment;

// ScriptStruct GbxGame.GbxActorPartDef_AnimSet
// 0x00B0 (0x0130 - 0x0080)
struct FGbxActorPartDef_AnimSet final : public FGbxActorPartDef
{
public:
	struct FGbxActorPartAnimSet                   DefaultAnims;                                      // 0x0080(0x00A0)(Edit, NativeAccessSpecifierPrivate)
	TArray<struct FGbxActorPartAnimMatchSet>      MatchedAnims;                                      // 0x0120(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxActorPartDef_AnimSet;

// ScriptStruct GbxGame.GbxActorPartState_AnimSet
// 0x0050 (0x0068 - 0x0018)
struct FGbxActorPartState_AnimSet final : public FGbxActorPartState
{
public:
	uint8                                         Pad_18[0x50];                                      // 0x0018(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxActorPartState_AnimSet;

// ScriptStruct GbxGame.GbxActorPartDef_Body
// 0x0030 (0x00B0 - 0x0080)
struct FGbxActorPartDef_Body final : public FGbxActorPartDef
{
public:
	TSoftObjectPtr<class UGbxAttachableBodyData>  AttachableBody;                                    // 0x0080(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EGbxActorPartViewMode                         ViewMode;                                          // 0x00A8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxActorPartDef_Body;

// ScriptStruct GbxGame.GbxActorPartDef_Budget
// 0x0020 (0x00A0 - 0x0080)
struct FGbxActorPartDef_Budget final : public FGbxActorPartBaseDef
{
public:
	TArray<FGbxDefPtrProperty_>                   BudgetParts;                                       // 0x0080(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	int32                                         NumChoices;                                        // 0x0090(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bFillEmptyChoices;                                 // 0x0094(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bCanChooseNone;                                    // 0x0095(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_96[0x2];                                       // 0x0096(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         WeightForNone;                                     // 0x0098(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxActorPartDef_Budget;

// ScriptStruct GbxGame.GbxMomentNodeSettings_End
// 0x0000 (0x0080 - 0x0080)
struct FGbxMomentNodeSettings_End final : public FGbxMomentNodeSettings
{
};
DUMPER7_ASSERTS_FGbxMomentNodeSettings_End;

// ScriptStruct GbxGame.ActorTaggedDialogEventList
// 0x0030 (0x0030 - 0x0000)
struct FActorTaggedDialogEventList final
{
public:
	struct FGameplayTagContainer                  ActorMatchTags;                                    // 0x0000(0x0020)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FAnimTaggedDialogEvent>         TaggedAnimEvents;                                  // 0x0020(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FActorTaggedDialogEventList;

// ScriptStruct GbxGame.GbxActorPartDef_DialogEvents
// 0x0010 (0x0090 - 0x0080)
struct FGbxActorPartDef_DialogEvents final : public FGbxActorPartDef
{
public:
	TArray<struct FActorTaggedDialogEventList>    TaggedAnimStateDialogEvents;                       // 0x0080(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxActorPartDef_DialogEvents;

// ScriptStruct GbxGame.GbxDiscoveryAction
// 0x0020 (0x0028 - 0x0008)
struct FGbxDiscoveryAction : public FGbxHasStructType
{
public:
	uint8                                         Pad_8[0x20];                                       // 0x0008(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxDiscoveryAction;

// ScriptStruct GbxGame.GbxBodyNodeState_GbxShapeBase
// 0x0090 (0x00F8 - 0x0068)
struct FGbxBodyNodeState_GbxShapeBase : public FGbxBodyNodeState
{
public:
	uint8                                         Pad_68[0x90];                                      // 0x0068(0x0090)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBodyNodeState_GbxShapeBase;

// ScriptStruct GbxGame.GbxActorPartTaggedItem
// 0x0038 (0x0038 - 0x0000)
struct FGbxActorPartTaggedItem final
{
public:
	struct FGameplayTagContainer                  matchtags;                                         // 0x0000(0x0020)(Edit, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           part;                                              // 0x0020(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxActorPartTaggedItem;

// ScriptStruct GbxGame.GbxActorPartDef_Filter
// 0x0028 (0x00A8 - 0x0080)
struct FGbxActorPartDef_Filter final : public FGbxActorPartBaseDef
{
public:
	TArray<struct FGbxActorPartTaggedItem>        parts;                                             // 0x0080(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	FGbxDefPtrProperty_                           DefaultPart;                                       // 0x0090(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxActorPartDef_Filter;

// ScriptStruct GbxGame.GbxActorPartMaterialParam_Scalar
// 0x000C (0x000C - 0x0000)
struct FGbxActorPartMaterialParam_Scalar final
{
public:
	class FName                                   Name;                                              // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Value;                                             // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxActorPartMaterialParam_Scalar;

// ScriptStruct GbxGame.GbxMomentState
// 0x0078 (0x01A8 - 0x0130)
struct FGbxMomentState final : public FGbxGraphState
{
public:
	uint8                                         Pad_130[0x78];                                     // 0x0130(0x0078)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxMomentState;

// ScriptStruct GbxGame.GbxActorPartMaterialParam_Vector
// 0x0018 (0x0018 - 0x0000)
struct FGbxActorPartMaterialParam_Vector final
{
public:
	class FName                                   Name;                                              // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           Value;                                             // 0x0008(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxActorPartMaterialParam_Vector;

// ScriptStruct GbxGame.PostLightProjectileTickFunction
// 0x0008 (0x0030 - 0x0028)
struct FPostLightProjectileTickFunction final : public FTickFunction
{
public:
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FPostLightProjectileTickFunction;

// ScriptStruct GbxGame.GbxActorPartMaterialParam_Texture
// 0x0030 (0x0030 - 0x0000)
struct FGbxActorPartMaterialParam_Texture final
{
public:
	class FName                                   Name;                                              // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture>                Value;                                             // 0x0008(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxActorPartMaterialParam_Texture;

// ScriptStruct GbxGame.GbxActorPartDef_Material
// 0x0110 (0x0190 - 0x0080)
struct FGbxActorPartDef_Material final : public FGbxActorPartDef
{
public:
	uint8                                         Pad_80[0x18];                                      // 0x0080(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           SlotNames;                                         // 0x0098(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	bool                                          bFilterBySlotName;                                 // 0x00A8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   SlotName;                                          // 0x00AC(0x0008)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bExposeParametersAsChoices;                        // 0x00B4(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UGbxMaterialParameterTemplateData> TemplateData;                            // 0x00B8(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bInheritParameters;                                // 0x00E0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_E1[0x17];                                      // 0x00E1(0x0017)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UInventoryMaterialsDataAsset> InventoryMaterials;                           // 0x00F8(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UInventoryMaterialParamsDataAsset> InventoryParams;                         // 0x0120(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	FGbxDefPtrProperty_                           MaterialParamDef;                                  // 0x0148(0x0018)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FGbxActorPartMaterialParam_Scalar> ScalarParams;                                   // 0x0160(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FGbxActorPartMaterialParam_Vector> VectorParams;                                   // 0x0170(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FGbxActorPartMaterialParam_Texture> TextureParams;                                 // 0x0180(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxActorPartDef_Material;

// ScriptStruct GbxGame.GbxBrainAspect_Follow
// 0x0028 (0x0238 - 0x0210)
struct FGbxBrainAspect_Follow final : public FGbxBrainAspect_Gps
{
public:
	uint8                                         Pad_210[0x28];                                     // 0x0210(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainAspect_Follow;

// ScriptStruct GbxGame.GbxActorPartDef_Mesh
// 0x0030 (0x00B0 - 0x0080)
struct FGbxActorPartDef_Mesh final : public FGbxActorPartDef
{
public:
	TSoftObjectPtr<class UStaticMesh>             Mesh;                                              // 0x0080(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                           ViewTarget;                                        // 0x00A8(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxActorPartDef_Mesh;

// ScriptStruct GbxGame.GbxDiscoveryViewableMapMetaData
// 0x00B8 (0x00D0 - 0x0018)
struct FGbxDiscoveryViewableMapMetaData final : public FGbxDef
{
public:
	class FString                                 WorldName;                                         // 0x0018(0x0010)(Edit, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBox                                   WorldLevelBounds;                                  // 0x0028(0x0038)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FBox                                   AssociatedBPMapBounds;                             // 0x0060(0x0038)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FBox                                   WorldLevelBoundsBasedOnAssociatedBPMapBounds;      // 0x0098(0x0038)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxDiscoveryViewableMapMetaData;

// ScriptStruct GbxGame.GbxActorPartState_Mesh
// 0x0058 (0x0070 - 0x0018)
struct FGbxActorPartState_Mesh final : public FGbxActorPartState
{
public:
	uint8                                         Pad_18[0x58];                                      // 0x0018(0x0058)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxActorPartState_Mesh;

// ScriptStruct GbxGame.GbxMomentNodeState_WeaponAttack
// 0x0028 (0x0098 - 0x0070)
struct FGbxMomentNodeState_WeaponAttack final : public FGbxMomentNodeState
{
public:
	uint8                                         Pad_70[0x28];                                      // 0x0070(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxMomentNodeState_WeaponAttack;

// ScriptStruct GbxGame.GbxEntitlementStrategy_PremiumCurrency
// 0x0000 (0x0008 - 0x0008)
struct FGbxEntitlementStrategy_PremiumCurrency final : public FGbxEntitlementStrategy
{
};
DUMPER7_ASSERTS_FGbxEntitlementStrategy_PremiumCurrency;

// ScriptStruct GbxGame.GbxActorPartNiagaraMatchPair
// 0x0048 (0x0048 - 0x0000)
struct FGbxActorPartNiagaraMatchPair final
{
public:
	TSoftObjectPtr<class UNiagaraSystem>          NiagaraSystem;                                     // 0x0000(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  matchtags;                                         // 0x0028(0x0020)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxActorPartNiagaraMatchPair;

// ScriptStruct GbxGame.GbxActorPartDef_Niagara
// 0x00F8 (0x0178 - 0x0080)
struct FGbxActorPartDef_Niagara final : public FGbxActorPartDef
{
public:
	TSoftObjectPtr<class UNiagaraSystem>          NiagaraSystem;                                     // 0x0080(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FGbxActorPartNiagaraMatchPair>  MatchedSystems;                                    // 0x00A8(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	EGbxActorPartNiagaraMode                      Mode;                                              // 0x00B8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           NiagaraViewTarget;                                 // 0x00BC(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                           ViewTarget;                                        // 0x00C4(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                LocationOffset;                                    // 0x00D0(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FRotator                               RotationOffset;                                    // 0x00E8(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	struct FVector                                scale;                                             // 0x0100(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bAbsoluteScale;                                    // 0x0118(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_119[0x3];                                      // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   SocketName;                                        // 0x011C(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, class FName>                MaterialPartParameterMap;                          // 0x0128(0x0050)(Edit, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxActorPartDef_Niagara;

// ScriptStruct GbxGame.GbxRotationNodeBaseState
// 0x0000 (0x0050 - 0x0050)
struct FGbxRotationNodeBaseState : public FGbxGraphNodeState
{
};
DUMPER7_ASSERTS_FGbxRotationNodeBaseState;

// ScriptStruct GbxGame.GbxRotationChannel
// 0x07E0 (0x0830 - 0x0050)
struct alignas(0x10) FGbxRotationChannel final : public FGbxRotationNodeBaseState
{
public:
	uint8                                         Pad_50[0x7E0];                                     // 0x0050(0x07E0)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxRotationChannel;

// ScriptStruct GbxGame.MantleActionData
// 0x0040 (0x0040 - 0x0000)
struct FMantleActionData final
{
public:
	EMantleType                                   type;                                              // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UGbxTrick>               Animation;                                         // 0x0008(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HeightMinimum;                                     // 0x0030(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AlignTime;                                         // 0x0034(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PercentThroughAnimationToFinishMantle;             // 0x0038(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bAlignRotation : 1;                                // 0x003C(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bMustLookAt : 1;                                   // 0x003C(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FMantleActionData;

// ScriptStruct GbxGame.MantleDef
// 0x0038 (0x0050 - 0x0018)
struct FMantleDef final : public FGbxDef
{
public:
	TArray<struct FMantleActionData>              actions;                                           // 0x0018(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	class FName                                   ActionSlotToEnd;                                   // 0x0028(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxAlignToEdgeAngle;                               // 0x0030(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxAdjustedHeightDifference;                       // 0x0034(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RequiredLedgeDepth;                                // 0x0038(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WallHopHeightMax;                                  // 0x003C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WallHopDestinationHeightMax;                       // 0x0040(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WallHopDestinationHeightMin;                       // 0x0044(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WallHopDepth;                                      // 0x0048(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FMantleDef;

// ScriptStruct GbxGame.GbxBrainTaskSettings_OnDeaggro
// 0x0000 (0x02F0 - 0x02F0)
struct FGbxBrainTaskSettings_OnDeaggro final : public FGbxBrainTaskSettings_OnAggro
{
};
DUMPER7_ASSERTS_FGbxBrainTaskSettings_OnDeaggro;

// ScriptStruct GbxGame.GbxActorPartState_Niagara
// 0x00B0 (0x00C8 - 0x0018)
struct FGbxActorPartState_Niagara final : public FGbxActorPartState
{
public:
	uint8                                         Pad_18[0xB0];                                      // 0x0018(0x00B0)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxActorPartState_Niagara;

// ScriptStruct GbxGame.GbxActorPartDef_Param
// 0x0010 (0x0090 - 0x0080)
struct FGbxActorPartDef_Param final : public FGbxActorPartDef
{
public:
	EGbxActorPartParam                            ParamType;                                         // 0x0080(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         MinVal;                                            // 0x0084(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         MaxVal;                                            // 0x0088(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         resolution;                                        // 0x008C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxActorPartDef_Param;

// ScriptStruct GbxGame.GbxActorPartDef_Picker
// 0x0030 (0x00B0 - 0x0080)
struct FGbxActorPartDef_Picker final : public FGbxActorPartBaseDef
{
public:
	FGbxDefPtrProperty_                           DefaultPart;                                       // 0x0080(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<FGbxDefPtrProperty_>                   PickableParts;                                     // 0x0098(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	int32                                         GroupSortOrder;                                    // 0x00A8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxActorPartDef_Picker;

// ScriptStruct GbxGame.GbxBrainIsFacingOptions
// 0x00F8 (0x00F8 - 0x0000)
struct FGbxBrainIsFacingOptions final
{
public:
	struct FGameplayTag                           ChannelTag;                                        // 0x0000(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxParam                              Angle;                                             // 0x0008(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              Offset;                                            // 0x0040(0x0038)(Edit, AdvancedDisplay, NativeAccessSpecifierPublic)
	struct FGbxParam                              AfterTurnAngle;                                    // 0x0078(0x0038)(Edit, AdvancedDisplay, NativeAccessSpecifierPublic)
	bool                                          bUseAfterTurnAngle;                                // 0x00B0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              TargetRadius;                                      // 0x00B8(0x0038)(Edit, AdvancedDisplay, NativeAccessSpecifierPublic)
	bool                                          bIncludeTargetRadius;                              // 0x00F0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainIsFacingOptions;

// ScriptStruct GbxGame.GbxBrainAspectSettings_IsFacing
// 0x02B0 (0x0330 - 0x0080)
struct FGbxBrainAspectSettings_IsFacing final : public FGbxBrainAspectSettings
{
public:
	struct FGbxParam                              target;                                            // 0x0080(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxBrainIsFacingOptions               options;                                           // 0x00B8(0x00F8)(Edit, NativeAccessSpecifierPublic)
	bool                                          bFailWhenNoLongerFacing;                           // 0x01B0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseCustomFailOptions;                             // 0x01B1(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B2[0x6];                                      // 0x01B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxBrainIsFacingOptions               CustomFailOptions;                                 // 0x01B8(0x00F8)(Edit, AdvancedDisplay, NativeAccessSpecifierPublic)
	struct FGameplayTag                           ChannelTag;                                        // 0x02B0(0x0008)(Deprecated, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EGbxRotationChannelType                       channel;                                           // 0x02B8(0x0001)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2B9[0x7];                                      // 0x02B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              Angle;                                             // 0x02C0(0x0038)(Deprecated, NativeAccessSpecifierPrivate)
	struct FGbxParam                              Offset;                                            // 0x02F8(0x0038)(Deprecated, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxBrainAspectSettings_IsFacing;

// ScriptStruct GbxGame.GbxActorPartRandomItem
// 0x0030 (0x0030 - 0x0000)
struct FGbxActorPartRandomItem final
{
public:
	FGbxDefPtrProperty_                           part;                                              // 0x0000(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Weight;                                            // 0x0018(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGbxActorPartRandomMatch>       MatchWeights;                                      // 0x0020(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxActorPartRandomItem;

// ScriptStruct GbxGame.ManagedActorDef
// 0x00A8 (0x00C0 - 0x0018)
struct FManagedActorDef final : public FGbxDef
{
public:
	struct FGbxAttributeInit                      MaxCount;                                          // 0x0018(0x0050)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bDestroyOnOwnerDeath;                              // 0x0068(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDisplayInUI;                                      // 0x0069(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EManagedActorDestroyOrder                     DeathDestroyOrder;                                 // 0x006A(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_6B[0x5];                                       // 0x006B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAttributeInit                      DeathDestroyPercent;                               // 0x0070(0x0050)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FManagedActorDef;

// ScriptStruct GbxGame.GbxActorPartDef_Random
// 0x0028 (0x00A8 - 0x0080)
struct FGbxActorPartDef_Random final : public FGbxActorPartBaseDef
{
public:
	bool                                          bCanChooseNone;                                    // 0x0080(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         WeightForNone;                                     // 0x0084(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FGbxActorPartRandomMatch>       NoneMatchWeights;                                  // 0x0088(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FGbxActorPartRandomItem>        RandomParts;                                       // 0x0098(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxActorPartDef_Random;

// ScriptStruct GbxGame.GbxRotationChannelSettings
// 0x0008 (0x0040 - 0x0038)
struct FGbxRotationChannelSettings : public FGbxRotationNodeBaseSettings
{
public:
	bool                                          bUseRotationRate;                                  // 0x0038(0x0001)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGbxRotationInterpType                        InterpType;                                        // 0x0039(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RotationRate;                                      // 0x003C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxRotationChannelSettings;

// ScriptStruct GbxGame.GbxActorPartDef_Set
// 0x0010 (0x0090 - 0x0080)
struct FGbxActorPartDef_Set final : public FGbxActorPartBaseDef
{
public:
	TArray<FGbxDefPtrProperty_>                   parts;                                             // 0x0080(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxActorPartDef_Set;

// ScriptStruct GbxGame.GbxActorPartDef_Tags
// 0x0000 (0x0080 - 0x0080)
struct FGbxActorPartDef_Tags final : public FGbxActorPartDef
{
};
DUMPER7_ASSERTS_FGbxActorPartDef_Tags;

// ScriptStruct GbxGame.GbxRotationChannelSettings_Child
// 0x0038 (0x0078 - 0x0040)
struct FGbxRotationChannelSettings_Child final : public FGbxRotationChannelSettings
{
public:
	struct FGameplayTag                           ChannelName;                                       // 0x0040(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   PivotBoneName;                                     // 0x0048(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   DisableCurve;                                      // 0x0050(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BlendInTime;                                       // 0x0058(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BlendOutTime;                                      // 0x005C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AlphaBlendSpeed;                                   // 0x0060(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FNumericRange                          ClampYawRange;                                     // 0x0064(0x0008)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FNumericRange                          ClampPitchRange;                                   // 0x006C(0x0008)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bDragParentIfClamped;                              // 0x0074(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bBoostWithParentRotation;                          // 0x0075(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseParentTargetAndState;                          // 0x0076(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_77[0x1];                                       // 0x0077(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxRotationChannelSettings_Child;

// ScriptStruct GbxGame.CameraTransitionDef
// 0x0018 (0x0030 - 0x0018)
struct FCameraTransitionDef final : public FGbxDef
{
public:
	struct FGbxInlineStruct                       Transition;                                        // 0x0018(0x0018)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FCameraTransitionDef;

// ScriptStruct GbxGame.GbxActorInstanceData_Parts
// 0x00A0 (0x00B8 - 0x0018)
struct FGbxActorInstanceData_Parts final : public FGbxActorInstanceData
{
public:
	uint8                                         Pad_18[0xA0];                                      // 0x0018(0x00A0)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxActorInstanceData_Parts;

// ScriptStruct GbxGame.MeleeGameDataCategories_DONTUSE
// 0x0001 (0x0001 - 0x0000)
struct FMeleeGameDataCategories_DONTUSE final
{
public:
	uint8                                         Pad_0[0x1];                                        // 0x0000(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FMeleeGameDataCategories_DONTUSE;

// ScriptStruct GbxGame.GbxActorScriptBlueprintWhiteListPair
// 0x0038 (0x0038 - 0x0000)
struct FGbxActorScriptBlueprintWhiteListPair final
{
public:
	TSoftClassPtr<class UClass>                   ScriptParentClass;                                 // 0x0000(0x0028)(UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 FieldPath;                                         // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxActorScriptBlueprintWhiteListPair;

// ScriptStruct GbxGame.GbxActorScriptEventGraphInfo
// 0x0030 (0x0030 - 0x0000)
struct FGbxActorScriptEventGraphInfo final
{
public:
	class FName                                   Name;                                              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ActorStateMachineName;                             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFunction*                              EnabledFunction;                                   // 0x0010(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFunction*                              DisabledFunction;                                  // 0x0018(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnabled;                                          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   MutexGroupName;                                    // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bMutexGroupDefault;                                // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxActorScriptEventGraphInfo;

// ScriptStruct GbxGame.LootGameDataCategories_DONTUSE
// 0x0001 (0x0001 - 0x0000)
struct FLootGameDataCategories_DONTUSE final
{
public:
	uint8                                         Pad_0[0x1];                                        // 0x0000(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FLootGameDataCategories_DONTUSE;

// ScriptStruct GbxGame.GbxMinimalFadeParams
// 0x0014 (0x0014 - 0x0000)
struct FGbxMinimalFadeParams final
{
public:
	uint8                                         priority;                                          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Color;                                             // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxMinimalFadeParams;

// ScriptStruct GbxGame.GbxReplicatedFadeParams
// 0x001C (0x001C - 0x0000)
struct FGbxReplicatedFadeParams final
{
public:
	class FName                                   reason;                                            // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxMinimalFadeParams                  MinimalParams;                                     // 0x0008(0x0014)(NoDestructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxReplicatedFadeParams;

// ScriptStruct GbxGame.GbxActorStateMachineAspectSettings_PlayAnim
// 0x0030 (0x0090 - 0x0060)
struct FGbxActorStateMachineAspectSettings_PlayAnim final : public FGbxActorStateMachineAspectSettings
{
public:
	TSoftObjectPtr<class UAnimationAsset>         Anim;                                              // 0x0060(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLoop;                                             // 0x0088(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxActorStateMachineAspectSettings_PlayAnim;

// ScriptStruct GbxGame.GbxRotationChannelData_Body
// 0x0018 (0x0048 - 0x0030)
struct FGbxRotationChannelData_Body final : public FGbxRotationChannelData
{
public:
	bool                                          bUseIdleTurns;                                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MinAimYawForTurn;                                  // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseLocomotionRotationRate;                        // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LocomotionRotationRate;                            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bTargetControllerWhenMoving;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxRotationChannelData_Body;

// ScriptStruct GbxGame.GbxActorStateMachineAspectSettings_PlaySequence
// 0x0040 (0x00A0 - 0x0060)
struct FGbxActorStateMachineAspectSettings_PlaySequence final : public FGbxActorStateMachineAspectSettings
{
public:
	TSoftObjectPtr<class UGbxSequence>            Sequence;                                          // 0x0060(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxSequencePlaybackSettings           PlaybackSettings;                                  // 0x0088(0x0010)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bSyncWithPreviousState;                            // 0x0098(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bReapplySequenceWhenStreamingOutAndBackIn;         // 0x0099(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9A[0x6];                                       // 0x009A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxActorStateMachineAspectSettings_PlaySequence;

// ScriptStruct GbxGame.OpportunisticAmbientAudioProvider
// 0x0060 (0x0360 - 0x0300)
struct FOpportunisticAmbientAudioProvider final : public FGbxAudioProvider
{
public:
	uint8                                         Pad_300[0x60];                                     // 0x0300(0x0060)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FOpportunisticAmbientAudioProvider;

// ScriptStruct GbxGame.GbxActorStateMachineAspect_PlaySequence
// 0x0010 (0x0060 - 0x0050)
struct FGbxActorStateMachineAspect_PlaySequence final : public FGbxActorStateMachineAspect
{
public:
	uint8                                         Pad_50[0x10];                                      // 0x0050(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxActorStateMachineAspect_PlaySequence;

// ScriptStruct GbxGame.GbxActorStateMachineAspectSettings_PlayTrick
// 0x0030 (0x0090 - 0x0060)
struct FGbxActorStateMachineAspectSettings_PlayTrick final : public FGbxActorStateMachineAspectSettings
{
public:
	TSoftObjectPtr<class UGbxTrick>               Trick;                                             // 0x0060(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPauseAtEnd;                                       // 0x0088(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxActorStateMachineAspectSettings_PlayTrick;

// ScriptStruct GbxGame.GbxRandomPlayerSequenceEntry
// 0x0068 (0x0068 - 0x0000)
struct FGbxRandomPlayerSequenceEntry final
{
public:
	struct FGbxAnimAssetRef                       SequenceRef;                                       // 0x0000(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	float                                         ChanceToPlay;                                      // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MinLoopCount;                                      // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxLoopCount;                                      // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinPlayRate;                                       // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxPlayRate;                                       // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAlphaBlend                            BlendIn;                                           // 0x0030(0x0030)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bRateScaleBySpeed;                                 // 0x0060(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxRandomPlayerSequenceEntry;

// ScriptStruct GbxGame.GbxAnimNode_RandomPlayer
// 0x0120 (0x0130 - 0x0010)
struct FGbxAnimNode_RandomPlayer final : public FAnimNode_Base
{
public:
	bool                                          bUseOnBecomeRelevantIndex;                         // 0x0010(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         OnBecomeRelevantIndex;                             // 0x0014(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseDefaultEntryOnBecomeRelevant;                  // 0x0018(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseDefaultEntry;                                  // 0x0019(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxRandomPlayerSequenceEntry          DefaultEntry;                                      // 0x0020(0x0068)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_88[0x18];                                      // 0x0088(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGbxRandomPlayerSequenceEntry>  Entries;                                           // 0x00A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bUseDefaultDuration;                               // 0x00B0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DefaultDuration;                                   // 0x00B4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<float>                                 Duration;                                          // 0x00B8(0x0010)(Edit, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bUseDefaultRateScaleBySpeed;                       // 0x00C8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDefaultRateScaleBySpeed;                          // 0x00C9(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_CA[0x5E];                                      // 0x00CA(0x005E)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bShuffleMode;                                      // 0x0128(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxAnimNode_RandomPlayer;

// ScriptStruct GbxGame.GbxActorStateSequenceStateFrame
// 0x0010 (0x0010 - 0x0000)
struct FGbxActorStateSequenceStateFrame final
{
public:
	struct FGbxActorStateMachineStateKey          State;                                             // 0x0000(0x000C)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFrameNumber                           frame;                                             // 0x000C(0x0004)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxActorStateSequenceStateFrame;

// ScriptStruct GbxGame.GbxActorStateSequenceTransition
// 0x0028 (0x0028 - 0x0000)
struct FGbxActorStateSequenceTransition final
{
public:
	struct FGbxActorStateMachineStateKey          ToState;                                           // 0x0000(0x000C)(Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   StartFrame;                                        // 0x000C(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   EndFrame;                                          // 0x0014(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxActorStateMachineStateKey          NextState;                                         // 0x001C(0x000C)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxActorStateSequenceTransition;

// ScriptStruct GbxGame.GbxNodeIsActivated_ValueResolver
// 0x0028 (0x0030 - 0x0008)
struct FGbxNodeIsActivated_ValueResolver final : public FAttributeValueResolver
{
public:
	struct FGbxUnlockableNodeRef                  ProgressGraphNodeRef;                              // 0x0008(0x0020)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         IsActivated;                                       // 0x0028(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         NotActivated;                                      // 0x002C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxNodeIsActivated_ValueResolver;

// ScriptStruct GbxGame.GbxAINodePerchSettings
// 0x0038 (0x0038 - 0x0000)
struct FGbxAINodePerchSettings final
{
public:
	TSoftObjectPtr<class AActor>                  StayPerchPtr;                                      // 0x0000(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FNumericRange                          StayPerchDuration;                                 // 0x0028(0x0008)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bUseStayPerchDuration;                             // 0x0030(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bStayPerchIsRequired;                              // 0x0031(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bWaitForLoop;                                      // 0x0032(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33[0x5];                                       // 0x0033(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxAINodePerchSettings;

// ScriptStruct GbxGame.GbxBrainAspect_HasStatusEffect
// 0x0000 (0x00D8 - 0x00D8)
struct FGbxBrainAspect_HasStatusEffect final : public FGbxBrainAspect
{
};
DUMPER7_ASSERTS_FGbxBrainAspect_HasStatusEffect;

// ScriptStruct GbxGame.GbxAINodePlaySequenceSettings
// 0x00A8 (0x00A8 - 0x0000)
struct FGbxAINodePlaySequenceSettings final
{
public:
	bool                                          bStayPlaySequenceIsRequired;                       // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bWaitForSequenceToEnd;                             // 0x0001(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bStopAtNode;                                       // 0x0002(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseLevelSequenceActor;                            // 0x0003(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class AGbxLevelSequenceActor>  StaySequenceActor;                                 // 0x0008(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxLevelSequence*                      StaySequence;                                      // 0x0030(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bReversePlayback;                                  // 0x0038(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxSequencePlaybackSettings           StaySequencePlaybackSettings;                      // 0x003C(0x0010)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	class FName                                   NodeActorBinding;                                  // 0x004C(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, struct FGbxParam>           Bindings;                                          // 0x0058(0x0050)(Edit, EditFixedSize, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxAINodePlaySequenceSettings;

// ScriptStruct GbxGame.GbxAINodePlayTrickSettings
// 0x0020 (0x0020 - 0x0000)
struct FGbxAINodePlayTrickSettings final
{
public:
	struct FGbxTrickRef                           StayTrick;                                         // 0x0000(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bStayPlayTrickIsRequired;                          // 0x0018(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bWaitForTrickToEnd;                                // 0x0019(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxAINodePlayTrickSettings;

// ScriptStruct GbxGame.GbxAINodeTravelLeadSettings
// 0x00D8 (0x00D8 - 0x0000)
struct FGbxAINodeTravelLeadSettings final
{
public:
	bool                                          bUseLeadDistanceDef;                               // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FGbxDefPtrProperty_                           LeadDistancesDef;                                  // 0x0008(0x0018)(Edit, NoClear, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxParam                              LeadDistance;                                      // 0x0020(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              LeadEndDistance;                                   // 0x0058(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              LeadStartDistance;                                 // 0x0090(0x0038)(Edit, NativeAccessSpecifierPublic)
	float                                         LeadWalkDistance;                                  // 0x00C8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LeadRunDistance;                                   // 0x00CC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOverrideLeadDistance;                             // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseTerritoryAroundLeadTarget;                     // 0x00D1(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D2[0x6];                                       // 0x00D2(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxAINodeTravelLeadSettings;

// ScriptStruct GbxGame.GbxAINodeLeadSettingsDef
// 0x00B0 (0x00C8 - 0x0018)
struct FGbxAINodeLeadSettingsDef final : public FGbxDef
{
public:
	struct FGbxParam                              LeadDistance;                                      // 0x0018(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              LeadEndDistance;                                   // 0x0050(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              LeadStartDistance;                                 // 0x0088(0x0038)(Edit, NativeAccessSpecifierPublic)
	float                                         LeadWalkDistance;                                  // 0x00C0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LeadRunDistance;                                   // 0x00C4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxAINodeLeadSettingsDef;

// ScriptStruct GbxGame.GbxAINodeTravelFollowSettings
// 0x00D8 (0x00D8 - 0x0000)
struct FGbxAINodeTravelFollowSettings final
{
public:
	bool                                          bUseFollowDistanceDef;                             // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FGbxDefPtrProperty_                           FollowDistancesDef;                                // 0x0008(0x0018)(Edit, NoClear, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxParam                              FollowDistance;                                    // 0x0020(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              FollowEndDistance;                                 // 0x0058(0x0038)(Edit, NativeAccessSpecifierPublic)
	float                                         FollowWalkDistance;                                // 0x0090(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FollowRunDistance;                                 // 0x0094(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxParam                              OverrideFollowTarget;                              // 0x0098(0x0038)(Edit, NativeAccessSpecifierPublic)
	bool                                          bOverrideFollowTarget;                             // 0x00D0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseTerritoryAroundFollowTarget;                   // 0x00D1(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOverrideFollowDistance;                           // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOverrideFollowEndDistance;                        // 0x00D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxAINodeTravelFollowSettings;

// ScriptStruct GbxGame.GbxPlayerCustomizationState
// 0x0028 (0x0028 - 0x0000)
struct FGbxPlayerCustomizationState final
{
public:
	uint8                                         Pad_0[0x8];                                        // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<FGbxDefPtrProperty_>                   AppliedCustomizations;                             // 0x0008(0x0010)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<TScriptInterface<class IGbxPlayerCustomization>> RegisteredCustomizationTargets;          // 0x0018(0x0010)(ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
};
DUMPER7_ASSERTS_FGbxPlayerCustomizationState;

// ScriptStruct GbxGame.GbxAINodeFollowSettingsDef
// 0x0078 (0x0090 - 0x0018)
struct FGbxAINodeFollowSettingsDef final : public FGbxDef
{
public:
	struct FGbxParam                              FollowDistance;                                    // 0x0018(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              FollowEndDistance;                                 // 0x0050(0x0038)(Edit, NativeAccessSpecifierPublic)
	float                                         FollowWalkDistance;                                // 0x0088(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FollowRunDistance;                                 // 0x008C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxAINodeFollowSettingsDef;

// ScriptStruct GbxGame.GbxAINodeStayFollowSettings
// 0x00A0 (0x00A0 - 0x0000)
struct FGbxAINodeStayFollowSettings final
{
public:
	bool                                          bUseFollowDistanceDef;                             // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FGbxDefPtrProperty_                           FollowDistancesDef;                                // 0x0008(0x0018)(Edit, NoClear, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxParam                              FollowDistance;                                    // 0x0020(0x0038)(Edit, NativeAccessSpecifierPublic)
	float                                         FollowWalkDistance;                                // 0x0058(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FollowRunDistance;                                 // 0x005C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxParam                              OverrideFollowTarget;                              // 0x0060(0x0038)(Edit, NativeAccessSpecifierPublic)
	bool                                          bOverrideFollowTarget;                             // 0x0098(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxAINodeStayFollowSettings;

// ScriptStruct GbxGame.GbxMomentNodeState_SetTeam
// 0x0008 (0x0078 - 0x0070)
struct FGbxMomentNodeState_SetTeam final : public FGbxMomentNodeState
{
public:
	uint8                                         Pad_70[0x8];                                       // 0x0070(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxMomentNodeState_SetTeam;

// ScriptStruct GbxGame.GbxAINodePtr
// 0x0038 (0x0038 - 0x0000)
struct FGbxAINodePtr final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class AActor>                  ActorPtr;                                          // 0x0008(0x0028)(Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGbxAINodeComponent*                    Node;                                              // 0x0030(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
};
DUMPER7_ASSERTS_FGbxAINodePtr;

// ScriptStruct GbxGame.GbxAnimNode_ApplyBoneMod
// 0x0070 (0x0140 - 0x00D0)
struct FGbxAnimNode_ApplyBoneMod final : public FAnimNode_SkeletalControlBase
{
public:
	uint8                                         Pad_D0[0x70];                                      // 0x00D0(0x0070)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxAnimNode_ApplyBoneMod;

// ScriptStruct GbxGame.GbxAudioBodyAction_PostEvent
// 0x0070 (0x0078 - 0x0008)
struct FGbxAudioBodyAction_PostEvent final : public FGbxAudioBodyAction
{
public:
	struct FGbxAudioEvent                         ActivationSound;                                   // 0x0008(0x0030)(Edit, NativeAccessSpecifierPublic)
	struct FGbxAudioEvent                         DeactivationSound;                                 // 0x0038(0x0030)(Edit, NativeAccessSpecifierPublic)
	uint8                                         Pad_68[0x10];                                      // 0x0068(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxAudioBodyAction_PostEvent;

// ScriptStruct GbxGame.GbxArmIKState
// 0x0110 (0x03E0 - 0x02D0)
struct FGbxArmIKState : public FGbxTwoBoneIKState
{
public:
	struct FBoneSocketTarget                      PerchEffectorTarget;                               // 0x02D0(0x0090)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_360[0x80];                                     // 0x0360(0x0080)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxArmIKState;

// ScriptStruct GbxGame.GbxAnimNode_BlendListByDirection
// 0x0020 (0x0068 - 0x0048)
struct FGbxAnimNode_BlendListByDirection final : public FAnimNode_BlendListBase
{
public:
	struct FGameplayTag                           NodeTag;                                           // 0x0048(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGameplayTag>                   DirectionPins;                                     // 0x0050(0x0010)(Edit, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_60[0x8];                                       // 0x0060(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxAnimNode_BlendListByDirection;

// ScriptStruct GbxGame.FloatMinMaxRange
// 0x0008 (0x0008 - 0x0000)
struct FFloatMinMaxRange final
{
public:
	float                                         MinValue;                                          // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxValue;                                          // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FFloatMinMaxRange;

// ScriptStruct GbxGame.GbxMomentNodeState_StartDialogLoop
// 0x0000 (0x0070 - 0x0070)
struct FGbxMomentNodeState_StartDialogLoop final : public FGbxMomentNodeState
{
};
DUMPER7_ASSERTS_FGbxMomentNodeState_StartDialogLoop;

// ScriptStruct GbxGame.GbxAnimNode_BlendListByFloatRange
// 0x0020 (0x0068 - 0x0048)
struct FGbxAnimNode_BlendListByFloatRange final : public FAnimNode_BlendListBase
{
public:
	float                                         BlendIndex;                                        // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFloatMinMaxRange>              MinMaxRanges;                                      // 0x0050(0x0010)(Edit, BlueprintVisible, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                         CurrentRangeIndex;                                 // 0x0060(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxAnimNode_BlendListByFloatRange;

// ScriptStruct GbxGame.MissionInteractObjectiveSubTypeStatePair
// 0x0014 (0x0014 - 0x0000)
struct FMissionInteractObjectiveSubTypeStatePair final
{
public:
	struct FSToken                                Fact;                                              // 0x0000(0x000C)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   Value;                                             // 0x000C(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FMissionInteractObjectiveSubTypeStatePair;

// ScriptStruct GbxGame.GbxAnimNode_BlendListByIntRange
// 0x0020 (0x0068 - 0x0048)
struct FGbxAnimNode_BlendListByIntRange final : public FAnimNode_BlendListBase
{
public:
	int32                                         BlendIndex;                                        // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FIntMinMaxRange>                MinMaxRanges;                                      // 0x0050(0x0010)(Edit, BlueprintVisible, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                         CurrentRangeIndex;                                 // 0x0060(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxAnimNode_BlendListByIntRange;

// ScriptStruct GbxGame.GbxAnimNode_BlendSpacePlayer
// 0x0070 (0x0100 - 0x0090)
struct FGbxAnimNode_BlendSpacePlayer final : public FAnimNode_BlendSpacePlayer_Standalone
{
public:
	struct FAssetPlayerGaitScalingState           GaitScalingState;                                  // 0x0090(0x0040)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bDisableGaitScalingInAxisRange;                    // 0x00D0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EBlendSpaceAxis                               SpeedAxis;                                         // 0x00D1(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D2[0x2];                                       // 0x00D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Duration;                                          // 0x00D4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bScalePlayRateWithSpeed;                           // 0x00D8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           AnimAssetKey;                                      // 0x00DC(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E4[0x1C];                                      // 0x00E4(0x001C)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxAnimNode_BlendSpacePlayer;

// ScriptStruct GbxGame.GbxAnimNode_CopyParentTransforms
// 0x0060 (0x0070 - 0x0010)
struct FGbxAnimNode_CopyParentTransforms final : public FAnimNode_Base
{
public:
	uint8                                         Pad_10[0x60];                                      // 0x0010(0x0060)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxAnimNode_CopyParentTransforms;

// ScriptStruct GbxGame.GbxSkillStateMachineStateAction_SkillEvent
// 0x0018 (0x0020 - 0x0008)
struct FGbxSkillStateMachineStateAction_SkillEvent final : public FGbxSkillStateMachineStateAction
{
public:
	FGbxDefPtrProperty_                           EventDef;                                          // 0x0008(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxSkillStateMachineStateAction_SkillEvent;

// ScriptStruct GbxGame.GbxAnimNode_CopyPoseFromMesh
// 0x0018 (0x0178 - 0x0160)
struct FGbxAnimNode_CopyPoseFromMesh final : public FAnimNode_CopyPoseFromMesh
{
public:
	uint8                                         Pad_160[0x18];                                     // 0x0160(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxAnimNode_CopyPoseFromMesh;

// ScriptStruct GbxGame.MissionSubAlias
// 0x0028 (0x0030 - 0x0008)
struct FMissionSubAlias : public FGbxHasStructType
{
public:
	struct FSToken                                Name;                                              // 0x0008(0x000C)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMissionAliasType                      type;                                              // 0x0014(0x0008)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FMissionSubAliasInfo>           SubAliases;                                        // 0x0020(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FMissionSubAlias;

// ScriptStruct GbxGame.MissionSubAlias_SpawnedActor
// 0x0428 (0x0458 - 0x0030)
struct FMissionSubAlias_SpawnedActor final : public FMissionSubAlias
{
public:
	bool                                          bAutoEnableSpawner;                                // 0x0030(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMissionGbxDef                         ActorDef;                                          // 0x0038(0x0030)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bOverrideSpawnerStyle;                             // 0x0068(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSpawnerStyleData                      SpawnerStyle;                                      // 0x0070(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FMissionGbxDef                         OptionalDialogNameTagOverride;                     // 0x00A8(0x0030)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bOverrideTerritory;                                // 0x00D8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxTerritorySettings                  TerritoryOverride;                                 // 0x00E0(0x0378)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FMissionSubAlias_SpawnedActor;

// ScriptStruct GbxGame.GbxAnimNode_LayeredBoneSetBlend
// 0x0130 (0x0140 - 0x0010)
struct FGbxAnimNode_LayeredBoneSetBlend final : public FAnimNode_Base
{
public:
	struct FPoseLink                              BasePose;                                          // 0x0010(0x0010)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FPoseLink>                      BlendPoses;                                        // 0x0020(0x0010)(Edit, BlueprintVisible, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FName>                           BoneSetKeys;                                       // 0x0030(0x0010)(Edit, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UGbxBoneSet*>                    BoneSets;                                          // 0x0040(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<struct FGuid>                          BoneSetGuids;                                      // 0x0050(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<float>                                 BlendWeights;                                      // 0x0060(0x0010)(Edit, BlueprintVisible, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPublic)
	ECurveBlendOption                             CurveBlendOption;                                  // 0x0070(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bBlendRootMotionBasedOnRootBone;                   // 0x0071(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHasRelevantPoses;                                 // 0x0072(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_73[0x5];                                       // 0x0073(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBoneSetWeight>                 PerBoneBlendWeights;                               // 0x0078(0x0010)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	struct FGuid                                  SkeletonGuid;                                      // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGuid                                  VirtualBoneGuid;                                   // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_A8[0x48];                                      // 0x00A8(0x0048)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<bool>                                  bBoolBlendWeightsPerPose;                          // 0x00F0(0x0010)(Edit, BlueprintVisible, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<bool>                                  bUseBoolBlendWeights;                              // 0x0100(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<bool>                                  bInvertWeightPerPose;                              // 0x0110(0x0010)(Edit, BlueprintVisible, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_120[0x20];                                     // 0x0120(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxAnimNode_LayeredBoneSetBlend;

// ScriptStruct GbxGame.GbxAnimNode_SequencePlayer
// 0x0060 (0x00F8 - 0x0098)
struct FGbxAnimNode_SequencePlayer final : public FAnimNode_SequencePlayer_Standalone
{
public:
	float                                         Duration;                                          // 0x0098(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bScalePlayRateWithSpeed;                           // 0x009C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAssetPlayerGaitScalingState           GaitScalingState;                                  // 0x00A0(0x0040)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FGameplayTag                           AnimAssetKey;                                      // 0x00E0(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E8[0x10];                                      // 0x00E8(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxAnimNode_SequencePlayer;

// ScriptStruct GbxGame.GbxAnimNode_Locomotion
// 0x00B8 (0x01E0 - 0x0128)
struct FGbxAnimNode_Locomotion final : public FGbxAnimNode_StateMachine
{
public:
	uint8                                         Pad_128[0x8];                                      // 0x0128(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAnimBlendOptions                   BlendOptions;                                      // 0x0130(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	TArray<struct FGbxAnimAssetRef>               Anims;                                             // 0x0150(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	float                                         OverlapThreshold;                                  // 0x0160(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         TiltAngle;                                         // 0x0164(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<FGameDataHandleProperty_>              StanceDefs;                                        // 0x0168(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	FGameDataHandleProperty_                      StanceDef;                                         // 0x0178(0x0018)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EGbxAnimLocomotionPreference                  Preference;                                        // 0x0190(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_191[0x3];                                      // 0x0191(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimationGroupReference               SyncGroup;                                         // 0x0194(0x0010)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	bool                                          bUseGaitScaling;                                   // 0x01A4(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bUseBlendSpaces;                                   // 0x01A5(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bPauseBlendSpaceInputWhenBlendingToIdle;           // 0x01A6(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1A7[0x1];                                      // 0x01A7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PauseBlendSpaceInputThreshold;                     // 0x01A8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1AC[0x4];                                      // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGbxAnimNode_SequencePlayer>    SequencePlayers;                                   // 0x01B0(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<struct FGbxAnimNode_BlendSpacePlayer>  BlendSpacePlayers;                                 // 0x01C0(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1D0[0x10];                                     // 0x01D0(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxAnimNode_Locomotion;

// ScriptStruct GbxGame.GbxSkillSpecStopActionEntry
// 0x0010 (0x0010 - 0x0000)
struct FGbxSkillSpecStopActionEntry final
{
public:
	class FName                                   GroupName;                                         // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ActionName;                                        // 0x0008(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxSkillSpecStopActionEntry;

// ScriptStruct GbxGame.GbxRefPoseBoneConstraint
// 0x0014 (0x0014 - 0x0000)
struct FGbxRefPoseBoneConstraint final
{
public:
	struct FBoneReference                         bone;                                              // 0x0000(0x0010)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Weight;                                            // 0x0010(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxRefPoseBoneConstraint;

// ScriptStruct GbxGame.GbxAnimNode_RefPoseConstraints
// 0x0020 (0x00F0 - 0x00D0)
struct FGbxAnimNode_RefPoseConstraints final : public FAnimNode_SkeletalControlBase
{
public:
	TArray<struct FGbxRefPoseBoneConstraint>      Constraints;                                       // 0x00D0(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_E0[0x10];                                      // 0x00E0(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxAnimNode_RefPoseConstraints;

// ScriptStruct GbxGame.GbxSkillLatentAction
// 0x0000 (0x0008 - 0x0008)
struct FGbxSkillLatentAction : public FGbxHasStructType
{
};
DUMPER7_ASSERTS_FGbxSkillLatentAction;

// ScriptStruct GbxGame.GbxSkillLatentAction_SpawnAtGpsLocation
// 0x01F8 (0x0200 - 0x0008)
struct FGbxSkillLatentAction_SpawnAtGpsLocation final : public FGbxSkillLatentAction
{
public:
	struct FGpsQueryRunData                       QueryRunData;                                      // 0x0008(0x01E0)(Edit, NativeAccessSpecifierPrivate)
	FGbxDefPtrProperty_                           ActorDef;                                          // 0x01E8(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxSkillLatentAction_SpawnAtGpsLocation;

// ScriptStruct GbxGame.GbxAnimNode_Rotation_EyeBones
// 0x0100 (0x01D0 - 0x00D0)
struct alignas(0x10) FGbxAnimNode_Rotation_EyeBones final : public FAnimNode_SkeletalControlBase
{
public:
	struct FGameplayTag                           RotationChannelName;                               // 0x00D0(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCalculateIndependentRotations;                    // 0x00D8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxOrientedBone                       EyeBase;                                           // 0x00DC(0x0014)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FGbxRotatingBone>               EyeBones;                                          // 0x00F0(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_100[0xD0];                                     // 0x0100(0x00D0)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxAnimNode_Rotation_EyeBones;

// ScriptStruct GbxGame.GbxSkillOwnerContextResolver
// 0x0000 (0x0008 - 0x0008)
struct FGbxSkillOwnerContextResolver final : public FAttributeContextResolver
{
};
DUMPER7_ASSERTS_FGbxSkillOwnerContextResolver;

// ScriptStruct GbxGame.GbxAnimNode_Rotation_HeadBones
// 0x0080 (0x0150 - 0x00D0)
struct alignas(0x10) FGbxAnimNode_Rotation_HeadBones final : public FAnimNode_SkeletalControlBase
{
public:
	struct FGameplayTag                           RotationChannelName;                               // 0x00D0(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxRotatingBoneChain                  HeadChain;                                         // 0x00D8(0x0028)(Edit, NativeAccessSpecifierPublic)
	uint8                                         Pad_100[0x50];                                     // 0x0100(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxAnimNode_Rotation_HeadBones;

// ScriptStruct GbxGame.GbxViewRelativeLocation
// 0x0020 (0x0020 - 0x0000)
struct FGbxViewRelativeLocation final
{
public:
	bool                                          bEnabled;                                          // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Offset;                                            // 0x0008(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxViewRelativeLocation;

// ScriptStruct GbxGame.GbxSkillSocketLocation
// 0x0048 (0x0048 - 0x0000)
struct FGbxSkillSocketLocation final
{
public:
	class FName                                   SocketName;                                        // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                                SocketOffset;                                      // 0x0008(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UGbxSkillSocketResolverStrategy> Strategy;                                     // 0x0020(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGbxViewRelativeLocation               ViewRelativeLocation;                              // 0x0028(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxSkillSocketLocation;

// ScriptStruct GbxGame.GbxAnimNode_Rotation_Head_AimOffset
// 0x0008 (0x0160 - 0x0158)
struct FGbxAnimNode_Rotation_Head_AimOffset final : public FGbxAnimNode_Rotation_AimOffset
{
public:
	bool                                          bUseEyeTarget;                                     // 0x0158(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxAnimNode_Rotation_Head_AimOffset;

// ScriptStruct GbxGame.GbxAnimNode_SequenceEvaluator
// 0x0010 (0x0080 - 0x0070)
struct FGbxAnimNode_SequenceEvaluator final : public FAnimNode_SequenceEvaluator_Standalone
{
public:
	struct FGameplayTag                           AnimAssetKey;                                      // 0x0070(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_78[0x8];                                       // 0x0078(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxAnimNode_SequenceEvaluator;

// ScriptStruct GbxGame.GbxSkillStateConditionDef
// 0x0018 (0x0030 - 0x0018)
struct FGbxSkillStateConditionDef final : public FGbxDef
{
public:
	struct FGbxInlineStruct                       Condition;                                         // 0x0018(0x0018)(Edit, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxSkillStateConditionDef;

// ScriptStruct GbxGame.GbxAnimNode_SlopeWarping
// 0x0508 (0x0610 - 0x0108)
struct alignas(0x10) FGbxAnimNode_SlopeWarping final : public FAnimNode_LegIK
{
public:
	uint8                                         Pad_108[0x508];                                    // 0x0108(0x0508)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxAnimNode_SlopeWarping;

// ScriptStruct GbxGame.GbxAnimNode_LegIK_CacheFeet
// 0x0010 (0x0020 - 0x0010)
struct FGbxAnimNode_LegIK_CacheFeet final : public FAnimNode_Base
{
public:
	struct FPoseLink                              Source;                                            // 0x0010(0x0010)(Edit, NoDestructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxAnimNode_LegIK_CacheFeet;

// ScriptStruct GbxGame.MissionBinderTarget_PlayerCharacter
// 0x0000 (0x0008 - 0x0008)
struct FMissionBinderTarget_PlayerCharacter final : public FMissionBinderTarget
{
};
DUMPER7_ASSERTS_FMissionBinderTarget_PlayerCharacter;

// ScriptStruct GbxGame.MissionBinderTarget_EncounterSpawnedActor
// 0x0010 (0x0018 - 0x0008)
struct FMissionBinderTarget_EncounterSpawnedActor final : public FMissionBinderTarget
{
public:
	struct FMissionAliasRef                       Encounter;                                         // 0x0008(0x000C)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FMissionBinderTarget_EncounterSpawnedActor;

// ScriptStruct GbxGame.GbxAOEComponentTargetHandler_SkillTargetList
// 0x0030 (0x0038 - 0x0008)
struct FGbxAOEComponentTargetHandler_SkillTargetList final : public FGbxAOEComponentTargetHandler
{
public:
	FGameDataHandleProperty_                      TargetList;                                        // 0x0008(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bResolveToPlayerOwner;                             // 0x0020(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_21[0x17];                                      // 0x0021(0x0017)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxAOEComponentTargetHandler_SkillTargetList;

// ScriptStruct GbxGame.GbxAttachableBodySettings
// 0x0030 (0x0258 - 0x0228)
struct FGbxAttachableBodySettings final : public FGbxBodySettings
{
public:
	TSoftObjectPtr<class UGbxBodyData>            AttachToBody;                                      // 0x0228(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AActor>                     AttachToActorClass;                                // 0x0250(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxAttachableBodySettings;

// ScriptStruct GbxGame.GbxAudioVolumePortal
// 0x0070 (0x0070 - 0x0000)
struct FGbxAudioVolumePortal final
{
public:
	struct FTransform                             PortalTransform;                                   // 0x0000(0x0060)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PortalWidth;                                       // 0x0060(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PortalHeight;                                      // 0x0064(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bConnectsExterior;                                 // 0x0068(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PortalMaxDistance;                                 // 0x006C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxAudioVolumePortal;

// ScriptStruct GbxGame.MissionObjectiveUxModifier
// 0x0030 (0x0038 - 0x0008)
struct FMissionObjectiveUxModifier : public FGbxHasStructType
{
public:
	uint8                                         Pad_8[0x30];                                       // 0x0008(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FMissionObjectiveUxModifier;

// ScriptStruct GbxGame.GbxBodyNodeState_AttachableBody
// 0x0110 (0x0178 - 0x0068)
struct FGbxBodyNodeState_AttachableBody final : public FGbxBodyNodeState
{
public:
	uint8                                         Pad_68[0x110];                                     // 0x0068(0x0110)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBodyNodeState_AttachableBody;

// ScriptStruct GbxGame.GbxBodyNodeSettings_Dialog
// 0x0020 (0x0058 - 0x0038)
struct FGbxBodyNodeSettings_Dialog final : public FGbxBodyNodeSettings
{
public:
	EGbxBodyNodeSettings_Dialog_NameSource        NameSource;                                        // 0x0038(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FGbxDefPtrProperty_                           DialogNameTag;                                     // 0x0040(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxBodyNodeSettings_Dialog;

// ScriptStruct GbxGame.GbxSkillStateMachineStateAction_RemoveAttributeEffect
// 0x0008 (0x0010 - 0x0008)
struct FGbxSkillStateMachineStateAction_RemoveAttributeEffect final : public FGbxSkillStateMachineStateAction
{
public:
	class FName                                   EffectName;                                        // 0x0008(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxSkillStateMachineStateAction_RemoveAttributeEffect;

// ScriptStruct GbxGame.GbxBodyNodeState_Dialog
// 0x00A8 (0x0110 - 0x0068)
struct FGbxBodyNodeState_Dialog final : public FGbxBodyNodeState
{
public:
	uint8                                         Pad_68[0xA8];                                      // 0x0068(0x00A8)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBodyNodeState_Dialog;

// ScriptStruct GbxGame.GbxBodyNodeState_DiscoveryLocation
// 0x0090 (0x00F8 - 0x0068)
struct FGbxBodyNodeState_DiscoveryLocation final : public FGbxBodyNodeState
{
public:
	uint8                                         Pad_68[0x90];                                      // 0x0068(0x0090)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBodyNodeState_DiscoveryLocation;

// ScriptStruct GbxGame.GbxBodyNodeState_FactSwitch
// 0x0008 (0x0120 - 0x0118)
struct FGbxBodyNodeState_FactSwitch final : public FGbxBodyNodeState_Switch
{
public:
	uint8                                         Pad_118[0x8];                                      // 0x0118(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBodyNodeState_FactSwitch;

// ScriptStruct GbxGame.GbxBodyNodeState_SceneComponent
// 0x0150 (0x01B8 - 0x0068)
struct FGbxBodyNodeState_SceneComponent : public FGbxBodyNodeState
{
public:
	uint8                                         Pad_68[0x150];                                     // 0x0068(0x0150)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBodyNodeState_SceneComponent;

// ScriptStruct GbxGame.GbxStatusEffectAspectData_AttributeEffect_Item
// 0x0070 (0x0070 - 0x0000)
struct FGbxStatusEffectAspectData_AttributeEffect_Item final
{
public:
	FGameDataHandleProperty_                      AttributeDef;                                      // 0x0000(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGbxAttributeModifierType                     ModifierType;                                      // 0x0018(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAttributeInit                      BaseModifierValueInit;                             // 0x0020(0x0050)(Edit, NoDestructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxStatusEffectAspectData_AttributeEffect_Item;

// ScriptStruct GbxGame.SpawnedGbxActorDefPayload
// 0x0000 (0x0008 - 0x0008)
struct FSpawnedGbxActorDefPayload : public FGbxHasStructType
{
};
DUMPER7_ASSERTS_FSpawnedGbxActorDefPayload;

// ScriptStruct GbxGame.SpawnedPickupActorDefPayload
// 0x0008 (0x0010 - 0x0008)
struct FSpawnedPickupActorDefPayload final : public FSpawnedGbxActorDefPayload
{
public:
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FSpawnedPickupActorDefPayload;

// ScriptStruct GbxGame.GbxBodyNodeState_FirstPerson
// 0x0040 (0x01F8 - 0x01B8)
struct FGbxBodyNodeState_FirstPerson : public FGbxBodyNodeState_SceneComponent
{
public:
	uint8                                         Pad_1B8[0x40];                                     // 0x01B8(0x0040)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBodyNodeState_FirstPerson;

// ScriptStruct GbxGame.GbxBodyNodeState_GbxAudioEmitter
// 0x0020 (0x0088 - 0x0068)
struct FGbxBodyNodeState_GbxAudioEmitter final : public FGbxBodyNodeState
{
public:
	uint8                                         Pad_68[0x20];                                      // 0x0068(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBodyNodeState_GbxAudioEmitter;

// ScriptStruct GbxGame.GbxAudioBodyAction_AddPermanentEmitter
// 0x00D8 (0x00E0 - 0x0008)
struct FGbxAudioBodyAction_AddPermanentEmitter final : public FGbxAudioBodyAction
{
public:
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAudioProviderSource                EmitterInfo;                                       // 0x0010(0x00C0)(Edit, NativeAccessSpecifierPublic)
	bool                                          bRemoveEmitterOnStop;                              // 0x00D0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D1[0xF];                                       // 0x00D1(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxAudioBodyAction_AddPermanentEmitter;

// ScriptStruct GbxGame.GbxAudioBodyAction_SetSoundtag
// 0x0028 (0x0030 - 0x0008)
struct FGbxAudioBodyAction_SetSoundtag final : public FGbxAudioBodyAction
{
public:
	struct FGameplayTag                           SoundTag;                                          // 0x0008(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           WwiseEvent;                                        // 0x0010(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInvalidateOnStop;                                 // 0x0028(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxAudioBodyAction_SetSoundtag;

// ScriptStruct GbxGame.GbxStatusEffectAspectResourceData
// 0x0020 (0x0028 - 0x0008)
struct FGbxStatusEffectAspectResourceData : public FGbxHasStructType
{
public:
	struct FGuid                                  ResourceID;                                        // 0x0008(0x0010)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                 DisplayName;                                       // 0x0018(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxStatusEffectAspectResourceData;

// ScriptStruct GbxGame.GbxStatusEffectAspectData_RuleItem
// 0x0018 (0x0040 - 0x0028)
struct FGbxStatusEffectAspectData_RuleItem final : public FGbxStatusEffectAspectResourceData
{
public:
	struct FGbxInlineStruct                       RuleData;                                          // 0x0028(0x0018)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxStatusEffectAspectData_RuleItem;

// ScriptStruct GbxGame.GbxStatusEffectAspectData
// 0x0030 (0x0038 - 0x0008)
struct FGbxStatusEffectAspectData : public FGbxHasStructType
{
public:
	bool                                          bSupportsSeverityGenerator;                        // 0x0008(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bUsesDefaultResource;                              // 0x0009(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxInlineStruct                       Generator;                                         // 0x0010(0x0018)(Edit, NativeAccessSpecifierPrivate)
	struct FGuid                                  AspectID;                                          // 0x0028(0x0010)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxStatusEffectAspectData;

// ScriptStruct GbxGame.GbxStatusEffectAspectData_Rule
// 0x0050 (0x0088 - 0x0038)
struct FGbxStatusEffectAspectData_Rule final : public FGbxStatusEffectAspectData
{
public:
	struct FGbxStatusEffectAspectData_RuleItem    Default;                                           // 0x0038(0x0040)(Edit, NativeAccessSpecifierPrivate)
	TArray<struct FGbxStatusEffectAspectData_RuleItem> Resources;                                    // 0x0078(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxStatusEffectAspectData_Rule;

// ScriptStruct GbxGame.GbxAudioBodyAction_ManagedLoop
// 0x0080 (0x0088 - 0x0008)
struct FGbxAudioBodyAction_ManagedLoop final : public FGbxAudioBodyAction
{
public:
	struct FGbxAudioEvent                         LoopStartEvent;                                    // 0x0008(0x0030)(Edit, NativeAccessSpecifierPublic)
	struct FGbxAudioEvent                         LoopStopEvent;                                     // 0x0038(0x0030)(Edit, NativeAccessSpecifierPublic)
	uint8                                         Pad_68[0x20];                                      // 0x0068(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxAudioBodyAction_ManagedLoop;

// ScriptStruct GbxGame.GbxAudioBodyAction_SetSwitch
// 0x0018 (0x0020 - 0x0008)
struct FGbxAudioBodyAction_SetSwitch final : public FGbxAudioBodyAction
{
public:
	FGbxDefPtrProperty_                           WwiseSwitch;                                       // 0x0008(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxAudioBodyAction_SetSwitch;

// ScriptStruct GbxGame.GbxAudioBodyAction_AddInitSwitch
// 0x0018 (0x0020 - 0x0008)
struct FGbxAudioBodyAction_AddInitSwitch final : public FGbxAudioBodyAction
{
public:
	FGbxDefPtrProperty_                           WwiseSwitch;                                       // 0x0008(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxAudioBodyAction_AddInitSwitch;

// ScriptStruct GbxGame.GbxStatusEffectDriver_Conditional
// 0x0018 (0x0020 - 0x0008)
struct FGbxStatusEffectDriver_Conditional final : public FGbxStatusEffectDriver
{
public:
	struct FGbxInlineStruct                       Condition;                                         // 0x0008(0x0018)(Edit, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxStatusEffectDriver_Conditional;

// ScriptStruct GbxGame.GbxAudioBodyAction_RemoveInitSwitch
// 0x0018 (0x0020 - 0x0008)
struct FGbxAudioBodyAction_RemoveInitSwitch final : public FGbxAudioBodyAction
{
public:
	FGbxDefPtrProperty_                           WwiseSwitch;                                       // 0x0008(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxAudioBodyAction_RemoveInitSwitch;

// ScriptStruct GbxGame.GbxBodyNodeSettings_GbxAudio
// 0x0010 (0x0048 - 0x0038)
struct FGbxBodyNodeSettings_GbxAudio final : public FGbxBodyNodeSettings
{
public:
	TArray<struct FGbxInlineStruct>               actions;                                           // 0x0038(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxBodyNodeSettings_GbxAudio;

// ScriptStruct GbxGame.GbxBodyNodeState_GbxAudio
// 0x0010 (0x0078 - 0x0068)
struct FGbxBodyNodeState_GbxAudio final : public FGbxBodyNodeState
{
public:
	uint8                                         Pad_68[0x10];                                      // 0x0068(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBodyNodeState_GbxAudio;

// ScriptStruct GbxGame.GbxBodyNodeSettings_GbxShapeBase
// 0x00A8 (0x00E0 - 0x0038)
#pragma pack(push, 0x1)
struct alignas(0x10) FGbxBodyNodeSettings_GbxShapeBase : public FGbxBodyNodeSettings
{
public:
	uint8                                         Pad_38[0x8];                                       // 0x0038(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Transform;                                         // 0x0040(0x0060)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxShapeConfig                        ShapeConfig;                                       // 0x00A0(0x0038)(Edit, NoDestructor, NativeAccessSpecifierPublic)
};
#pragma pack(pop)
DUMPER7_ASSERTS_FGbxBodyNodeSettings_GbxShapeBase;

// ScriptStruct GbxGame.TargetResolutionStrategyProvider
// 0x0050 (0x0078 - 0x0028)
struct FTargetResolutionStrategyProvider final : public FGbxSkillSharedResource
{
public:
	uint8                                         Pad_28[0x50];                                      // 0x0028(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FTargetResolutionStrategyProvider;

// ScriptStruct GbxGame.GestaltPartNodeEntryData
// 0x0018 (0x0018 - 0x0000)
struct FGestaltPartNodeEntryData final
{
public:
	class USkeletalMesh*                          GestaltSkeletalMesh;                               // 0x0000(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UMaterialInterface*>             GestaltMaterialOverride;                           // 0x0008(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGestaltPartNodeEntryData;

// ScriptStruct GbxGame.GbxSkillComponentActivationStrategy_SkillStateCondition
// 0x0018 (0x0020 - 0x0008)
struct FGbxSkillComponentActivationStrategy_SkillStateCondition final : public FGbxSkillComponentActivationStrategy
{
public:
	struct FGbxInlineStruct                       ConditionData;                                     // 0x0008(0x0018)(Edit, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxSkillComponentActivationStrategy_SkillStateCondition;

// ScriptStruct GbxGame.GbxBodyNodeSettings_GestaltPart
// 0x0038 (0x0070 - 0x0038)
struct FGbxBodyNodeSettings_GestaltPart final : public FGbxBodyNodeSettings
{
public:
	TArray<class USkeletalMesh*>                  GestaltSkeletalMeshes;                             // 0x0038(0x0010)(ZeroConstructor, Deprecated, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<struct FGestaltPartNodeEntryData>      GestaltEntries;                                    // 0x0048(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FGameplayTag                           PartsViewTarget;                                   // 0x0058(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_60[0x10];                                      // 0x0060(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBodyNodeSettings_GestaltPart;

// ScriptStruct GbxGame.GbxSkillTargetResolutionStrategy
// 0x0000 (0x0008 - 0x0008)
struct FGbxSkillTargetResolutionStrategy : public FGbxHasStructType
{
};
DUMPER7_ASSERTS_FGbxSkillTargetResolutionStrategy;

// ScriptStruct GbxGame.GbxSkillTargetResolutionStrategy_Self
// 0x0000 (0x0008 - 0x0008)
struct FGbxSkillTargetResolutionStrategy_Self final : public FGbxSkillTargetResolutionStrategy
{
};
DUMPER7_ASSERTS_FGbxSkillTargetResolutionStrategy_Self;

// ScriptStruct GbxGame.GbxBodyNodeState_GestaltPart
// 0x0000 (0x0068 - 0x0068)
struct FGbxBodyNodeState_GestaltPart final : public FGbxBodyNodeState
{
};
DUMPER7_ASSERTS_FGbxBodyNodeState_GestaltPart;

// ScriptStruct GbxGame.GbxBodyNodeSettings_HitRegion
// 0x0028 (0x0060 - 0x0038)
struct FGbxBodyNodeSettings_HitRegion final : public FGbxBodyNodeSettings
{
public:
	FGameDataHandleProperty_                      HitRegion;                                         // 0x0038(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   Identifier;                                        // 0x0050(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bApplyToChildrenBones;                             // 0x0058(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBodyNodeSettings_HitRegion;

// ScriptStruct GbxGame.GbxBodyNodeState_HitRegion
// 0x0098 (0x0100 - 0x0068)
struct FGbxBodyNodeState_HitRegion final : public FGbxBodyNodeState
{
public:
	uint8                                         Pad_68[0x98];                                      // 0x0068(0x0098)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBodyNodeState_HitRegion;

// ScriptStruct GbxGame.GbxSkillParamBinding
// 0x0018 (0x0018 - 0x0000)
struct FGbxSkillParamBinding final
{
public:
	class UGbxSkillParamData*                     SkillParamData;                                    // 0x0000(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   EventName;                                         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGbxSkillEventNetFilter                       NetFilter;                                         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxSkillParamBinding;

// ScriptStruct GbxGame.GbxBodyNodeSettings_MovingPlatform
// 0x0120 (0x0200 - 0x00E0)
struct FGbxBodyNodeSettings_MovingPlatform final : public FGbxBodyNodeSettings_GbxShapeBase
{
public:
	struct FGbxMovingPlatformConfig               MovingPlatformConfig;                              // 0x00D8(0x0120)(Edit, NativeAccessSpecifierPublic)
	int32                                         NumDestinationStates;                              // 0x01F8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1FC[0x4];                                      // 0x01FC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBodyNodeSettings_MovingPlatform;

// ScriptStruct GbxGame.GbxSkillDelegates
// 0x0001 (0x0001 - 0x0000)
struct FGbxSkillDelegates final
{
public:
	uint8                                         Pad_0[0x1];                                        // 0x0000(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxSkillDelegates;

// ScriptStruct GbxGame.GbxBodyNodeState_MovingPlatform
// 0x0090 (0x0188 - 0x00F8)
struct FGbxBodyNodeState_MovingPlatform final : public FGbxBodyNodeState_GbxShapeBase
{
public:
	uint8                                         Pad_F8[0x90];                                      // 0x00F8(0x0090)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBodyNodeState_MovingPlatform;

// ScriptStruct GbxGame.GbxSkillDataComponent
// 0x0020 (0x0020 - 0x0000)
struct FGbxSkillDataComponent final
{
public:
	class FName                                   ComponentName;                                     // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxInlineStruct                       ComponentData;                                     // 0x0008(0x0018)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxSkillDataComponent;

// ScriptStruct GbxGame.GbxBodyNodeSettings_MovingPlatformMoveSwitch
// 0x0000 (0x0078 - 0x0078)
struct FGbxBodyNodeSettings_MovingPlatformMoveSwitch final : public FGbxBodyNodeSettings_Switch
{
};
DUMPER7_ASSERTS_FGbxBodyNodeSettings_MovingPlatformMoveSwitch;

// ScriptStruct GbxGame.GbxSlopeWarpingState
// 0x01F0 (0x01F0 - 0x0000)
struct alignas(0x10) FGbxSlopeWarpingState final
{
public:
	uint8                                         Pad_0[0x70];                                       // 0x0000(0x0070)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGbxSlopeWarpingInterface> owner;                                         // 0x0070(0x0010)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxCharacterLegData*                   data;                                              // 0x0080(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_88[0x168];                                     // 0x0088(0x0168)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxSlopeWarpingState;

// ScriptStruct GbxGame.LightProjectileAudioProperties
// 0x0078 (0x0078 - 0x0000)
struct alignas(0x08) FLightProjectileAudioProperties final
{
public:
	FGbxDefPtrProperty_                           BulletPassby;                                      // 0x0000(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           TravellingAudioLoop;                               // 0x0018(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           AttachSound;                                       // 0x0030(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           BounceAudioEvent;                                  // 0x0048(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           SpawnAudioEvent;                                   // 0x0060(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FLightProjectileAudioProperties;

// ScriptStruct GbxGame.GbxBodyNodeSettings_MovingPlatformRelevantSwitch
// 0x0000 (0x0078 - 0x0078)
struct FGbxBodyNodeSettings_MovingPlatformRelevantSwitch final : public FGbxBodyNodeSettings_Switch
{
};
DUMPER7_ASSERTS_FGbxBodyNodeSettings_MovingPlatformRelevantSwitch;

// ScriptStruct GbxGame.GbxBodyNodeSettings_Param
// 0x0038 (0x0070 - 0x0038)
struct FGbxBodyNodeSettings_Param final : public FGbxBodyNodeSettings
{
public:
	struct FGbxParam                              Param;                                             // 0x0038(0x0038)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxBodyNodeSettings_Param;

// ScriptStruct GbxGame.GbxBodyNodeSettings_RandomSwitch
// 0x0010 (0x0088 - 0x0078)
struct FGbxBodyNodeSettings_RandomSwitch final : public FGbxBodyNodeSettings_Switch
{
public:
	TArray<float>                                 StateWeights;                                      // 0x0078(0x0010)(Edit, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxBodyNodeSettings_RandomSwitch;

// ScriptStruct GbxGame.GbxSkillStateConditionData_Comparison
// 0x0088 (0x0098 - 0x0010)
struct FGbxSkillStateConditionData_Comparison final : public FGbxSkillStateConditionData
{
public:
	struct FGbxSkillComparison                    Comparison;                                        // 0x0010(0x0088)(Edit, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxSkillStateConditionData_Comparison;

// ScriptStruct GbxGame.MissionFilterOptions
// 0x0000 (0x0008 - 0x0008)
struct FMissionFilterOptions : public FGbxHasStructType
{
};
DUMPER7_ASSERTS_FMissionFilterOptions;

// ScriptStruct GbxGame.GbxBodyNodeState_RandomSwitch
// 0x0000 (0x0118 - 0x0118)
struct FGbxBodyNodeState_RandomSwitch final : public FGbxBodyNodeState_Switch
{
};
DUMPER7_ASSERTS_FGbxBodyNodeState_RandomSwitch;

// ScriptStruct GbxGame.GbxBodyNodeSettings_SceneComponent
// 0x0030 (0x0068 - 0x0038)
struct FGbxBodyNodeSettings_SceneComponent : public FGbxBodyNodeSettings
{
public:
	bool                                          bIsNativeComponent;                                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bIsEditorOnly;                                     // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxBodyNodeSettings_SceneComponentInstanceData ComponentData;                            // 0x0040(0x0028)(NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxBodyNodeSettings_SceneComponent;

// ScriptStruct GbxGame.GbxBodyNodeSettings_Target
// 0x0010 (0x0048 - 0x0038)
struct FGbxBodyNodeSettings_Target final : public FGbxBodyNodeSettings
{
public:
	float                                         BoundsRadius;                                      // 0x0038(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BoundsHalfHeight;                                  // 0x003C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseBoundsHalfHeight;                              // 0x0040(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseAsDefaultLocation;                             // 0x0041(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseAsDefaultBounds;                               // 0x0042(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_43[0x5];                                       // 0x0043(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBodyNodeSettings_Target;

// ScriptStruct GbxGame.GbxSkillStateConditionData_ManagedResourceCount
// 0x0020 (0x0030 - 0x0010)
struct FGbxSkillStateConditionData_ManagedResourceCount final : public FGbxSkillStateConditionData
{
public:
	FGbxDefPtrProperty_                           GroupDef;                                          // 0x0010(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EGbxSkillComparisonOp                         Op;                                                // 0x0028(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Value;                                             // 0x002C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxSkillStateConditionData_ManagedResourceCount;

// ScriptStruct GbxGame.GbxBoneModMeshSettings
// 0x0010 (0x0010 - 0x0000)
struct alignas(0x08) FGbxBoneModMeshSettings final
{
public:
	uint8                                         Pad_0[0x10];                                       // 0x0000(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBoneModMeshSettings;

// ScriptStruct GbxGame.GbxSkillStateConditionData_Progression
// 0x0018 (0x0028 - 0x0010)
struct FGbxSkillStateConditionData_Progression final : public FGbxSkillStateConditionData
{
public:
	struct FGbxInlineStruct                       ProgressionCondition;                              // 0x0010(0x0018)(Edit, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxSkillStateConditionData_Progression;

// ScriptStruct GbxGame.GbxBrainAspectSettings_CharacterSound
// 0x0020 (0x00A0 - 0x0080)
struct FGbxBrainAspectSettings_CharacterSound final : public FGbxBrainAspectSettings
{
public:
	FGbxDefPtrProperty_                           CharacterSoundTag;                                 // 0x0080(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGbxBrainAspectCharacterSoundPlayType         PlayType;                                          // 0x0098(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainAspectSettings_CharacterSound;

// ScriptStruct GbxGame.GbxBrainAspect_DialogEvent
// 0x0008 (0x00E0 - 0x00D8)
struct FGbxBrainAspect_DialogEvent final : public FGbxBrainAspect
{
public:
	uint8                                         Pad_D8[0x8];                                       // 0x00D8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainAspect_DialogEvent;

// ScriptStruct GbxGame.ObjectiveValueEvaluator_CompositeObjective
// 0x0000 (0x0008 - 0x0008)
struct FObjectiveValueEvaluator_CompositeObjective final : public FObjectiveValueEvaluator
{
};
DUMPER7_ASSERTS_FObjectiveValueEvaluator_CompositeObjective;

// ScriptStruct GbxGame.GbxBrainService_EngagePlayers
// 0x07D0 (0x0800 - 0x0030)
struct FGbxBrainService_EngagePlayers final : public FGbxBrainService
{
public:
	uint8                                         Pad_30[0x7D0];                                     // 0x0030(0x07D0)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainService_EngagePlayers;

// ScriptStruct GbxGame.GbxBrainAspect_HasSkill
// 0x0000 (0x00D8 - 0x00D8)
struct FGbxBrainAspect_HasSkill final : public FGbxBrainAspect
{
};
DUMPER7_ASSERTS_FGbxBrainAspect_HasSkill;

// ScriptStruct GbxGame.GbxBrainAspectSettings_HasStatusEffect
// 0x0030 (0x00B0 - 0x0080)
struct FGbxBrainAspectSettings_HasStatusEffect final : public FGbxBrainAspectSettings
{
public:
	TSoftObjectPtr<class UGbxStatusEffectData>    StatusEffect;                                      // 0x0080(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInvert;                                           // 0x00A8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainAspectSettings_HasStatusEffect;

// ScriptStruct GbxGame.GbxBrainAspectSettings_Health
// 0x0048 (0x00C8 - 0x0080)
struct FGbxBrainAspectSettings_Health final : public FGbxBrainAspectSettings
{
public:
	EHealthPoolType                               HealthPoolType;                                    // 0x0080(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              HealthPercent;                                     // 0x0088(0x0038)(Edit, NativeAccessSpecifierPublic)
	EHealthAspectCheckType                        HealthCheckType;                                   // 0x00C0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainAspectSettings_Health;

// ScriptStruct GbxGame.GbxBrainAspect_Health
// 0x0000 (0x00D8 - 0x00D8)
struct FGbxBrainAspect_Health final : public FGbxBrainAspect
{
};
DUMPER7_ASSERTS_FGbxBrainAspect_Health;

// ScriptStruct GbxGame.GbxBrainAspect_IsFacing
// 0x0030 (0x0108 - 0x00D8)
struct FGbxBrainAspect_IsFacing final : public FGbxBrainAspect
{
public:
	uint8                                         Pad_D8[0x30];                                      // 0x00D8(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainAspect_IsFacing;

// ScriptStruct GbxGame.GbxSkillActionItem_ControlledMove_Params
// 0x0030 (0x0030 - 0x0000)
struct FGbxSkillActionItem_ControlledMove_Params final
{
public:
	float                                         SpeedOverride;                                     // 0x0000(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DurationOverride;                                  // 0x0004(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LaunchAngleOverride;                               // 0x0008(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 TargetActor;                                       // 0x0010(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                TargetLocation;                                    // 0x0018(0x0018)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxSkillActionItem_ControlledMove_Params;

// ScriptStruct GbxGame.GbxBrainAspectSettings_IsSpawnCostAvailable
// 0x0020 (0x00A0 - 0x0080)
struct FGbxBrainAspectSettings_IsSpawnCostAvailable final : public FGbxBrainAspectSettings
{
public:
	FGbxDefPtrProperty_                           GbxActorDef;                                       // 0x0080(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInvert;                                           // 0x0098(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainAspectSettings_IsSpawnCostAvailable;

// ScriptStruct GbxGame.GbxBrainAspectSettings_Lead
// 0x0158 (0x01D8 - 0x0080)
struct FGbxBrainAspectSettings_Lead final : public FGbxBrainAspectSettings
{
public:
	struct FGbxParam                              StartNode;                                         // 0x0080(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              GoalNode;                                          // 0x00B8(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              ActorToLead;                                       // 0x00F0(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              LeadEndDistance;                                   // 0x0128(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              LeadDistance;                                      // 0x0160(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              LeadStartDistance;                                 // 0x0198(0x0038)(Edit, NativeAccessSpecifierPublic)
	bool                                          bCanChangePlayerTaget;                             // 0x01D0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D1[0x7];                                      // 0x01D1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainAspectSettings_Lead;

// ScriptStruct GbxGame.GbxBrainAspect_Lead
// 0x0028 (0x0100 - 0x00D8)
struct FGbxBrainAspect_Lead final : public FGbxBrainAspect
{
public:
	uint8                                         Pad_D8[0x28];                                      // 0x00D8(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainAspect_Lead;

// ScriptStruct GbxGame.GbxSkillActionItem_ControlledMoveBase
// 0x0078 (0x00E0 - 0x0068)
struct FGbxSkillActionItem_ControlledMoveBase : public FGbxSkillActionItem
{
public:
	TSoftObjectPtr<class UControlledMove>         ControlledMove;                                    // 0x0068(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EGbxSkillActionControlleMoveTrickType         TrickType;                                         // 0x0090(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxSkillAnimTrick                     LoopAnim;                                          // 0x0098(0x0048)(Edit, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxSkillActionItem_ControlledMoveBase;

// ScriptStruct GbxGame.GbxSkillActionItem_ControlledMove_AnimNotify
// 0x0010 (0x00F0 - 0x00E0)
struct FGbxSkillActionItem_ControlledMove_AnimNotify final : public FGbxSkillActionItem_ControlledMoveBase
{
public:
	class FName                                   EventName;                                         // 0x00E0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bNotifyTriggersLoopCondition;                      // 0x00E8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxSkillActionItem_ControlledMove_AnimNotify;

// ScriptStruct GbxGame.GbxBrainAspectSettings_Leap
// 0x00C8 (0x0148 - 0x0080)
struct FGbxBrainAspectSettings_Leap final : public FGbxBrainAspectSettings
{
public:
	class UGbxTrick_Leap*                         LeapTrick;                                         // 0x0080(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxParam                              target;                                            // 0x0088(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FTrajectoryOptions                     TrajectoryOptions;                                 // 0x00C0(0x0048)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FGbxParam                              TraceExtent;                                       // 0x0108(0x0038)(Edit, NativeAccessSpecifierPublic)
	bool                                          bUseTraceExtent;                                   // 0x0140(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainAspectSettings_Leap;

// ScriptStruct GbxGame.GbxBrainAspectSettings_ResourceLock
// 0x0200 (0x0280 - 0x0080)
struct FGbxBrainAspectSettings_ResourceLock : public FGbxBrainAspectSettings
{
public:
	struct FGbxParam                              God;                                               // 0x0080(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              Demigod;                                           // 0x00B8(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              Dodging;                                           // 0x00F0(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              AITargetable;                                      // 0x0128(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              Rotation;                                          // 0x0160(0x0038)(Edit, NativeAccessSpecifierPublic)
	EGbxBrainAspectResourceLockRotationType       RotationLockType;                                  // 0x0198(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19C[0x4];                                      // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  RotationChannels;                                  // 0x01A0(0x0020)(Edit, NativeAccessSpecifierPublic)
	bool                                          bSpecifyRotationChannels;                          // 0x01C0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C1[0x7];                                      // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              ObstacleAvoidance;                                 // 0x01C8(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              Navigation;                                        // 0x0200(0x0038)(Edit, NativeAccessSpecifierPublic)
	class FName                                   reason;                                            // 0x0238(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseCustomReason;                                  // 0x0240(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_241[0x7];                                      // 0x0241(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              Lock;                                              // 0x0248(0x0038)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxBrainAspectSettings_ResourceLock;

// ScriptStruct GbxGame.LightBeamModifierEffect
// 0x0018 (0x0018 - 0x0000)
struct FLightBeamModifierEffect final
{
public:
	uint8                                         Pad_0[0x8];                                        // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UFXSystemComponent*                     Component;                                         // 0x0008(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFXSystemComponent*                     AltViewComponent;                                  // 0x0010(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FLightBeamModifierEffect;

// ScriptStruct GbxGame.GbxBrainAspect_ResourceLock
// 0x0010 (0x00E8 - 0x00D8)
struct FGbxBrainAspect_ResourceLock : public FGbxBrainAspect
{
public:
	uint8                                         Pad_D8[0x10];                                      // 0x00D8(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainAspect_ResourceLock;

// ScriptStruct GbxGame.GbxSkillAlias_ResourcePool
// 0x0018 (0x0020 - 0x0008)
struct FGbxSkillAlias_ResourcePool final : public FGbxSkillAlias
{
public:
	FGameDataHandleProperty_                      PoolDef;                                           // 0x0008(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxSkillAlias_ResourcePool;

// ScriptStruct GbxGame.GbxBrainAspectSettings_RetraceSteps
// 0x0008 (0x01F0 - 0x01E8)
struct FGbxBrainAspectSettings_RetraceSteps final : public FGbxBrainAspectSettings_Navigation
{
public:
	bool                                          bPauseTrackingWhileRunning;                        // 0x01E8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGbxLocationTrackingType                      TrackingType;                                      // 0x01E9(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSucceedWhenReachedArea;                           // 0x01EA(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1EB[0x5];                                      // 0x01EB(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainAspectSettings_RetraceSteps;

// ScriptStruct GbxGame.LandingInfo
// 0x0038 (0x0038 - 0x0000)
struct FLandingInfo final
{
public:
	bool                                          bNoMinVelIfJumped;                                 // 0x0000(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LandedMinVel;                                      // 0x0004(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           LandGameplayTag;                                   // 0x0008(0x0008)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UGbxTrick>               LandedTrick;                                       // 0x0010(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FLandingInfo;

// ScriptStruct GbxGame.GbxBrainAspectSettings_Rotate
// 0x0240 (0x02C0 - 0x0080)
struct FGbxBrainAspectSettings_Rotate final : public FGbxBrainAspectSettings
{
public:
	struct FGbxParam                              target;                                            // 0x0080(0x0038)(Edit, NativeAccessSpecifierPublic)
	EGbxBrainRotationPreset                       RotationPreset;                                    // 0x00B8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  RotationChannels;                                  // 0x00C0(0x0020)(Edit, NativeAccessSpecifierPublic)
	struct FGbxBrainIsFacingOptions               SuccessCondition;                                  // 0x00E0(0x00F8)(Edit, AdvancedDisplay, NativeAccessSpecifierPublic)
	bool                                          bCanSucceed;                                       // 0x01D8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D9[0x7];                                      // 0x01D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              SuccessConditionStuckTimeLimit;                    // 0x01E0(0x0038)(Edit, AdvancedDisplay, NativeAccessSpecifierPublic)
	bool                                          bCanStartIfAlreadyFacing;                          // 0x0218(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bWaitForTurnAnim;                                  // 0x0219(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21A[0x2];                                      // 0x021A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TurnAnimAtEndTimeThreshold;                        // 0x021C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLimitTurnAnims;                                   // 0x0220(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_221[0x7];                                      // 0x0221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              MaxTurnAnims;                                      // 0x0228(0x0038)(Edit, AdvancedDisplay, NativeAccessSpecifierPublic)
	bool                                          bSucceedOnMaxTurnAnims;                            // 0x0260(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUpdateTargets;                                    // 0x0261(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_262[0x6];                                      // 0x0262(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              DesiredBodyAngle;                                  // 0x0268(0x0038)(Edit, AdvancedDisplay, NativeAccessSpecifierPublic)
	bool                                          bUseDesiredBodyAngle;                              // 0x02A0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2A1[0x7];                                      // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGbxRotationChannelDataOverride> RotationOverrides;                                // 0x02A8(0x0010)(Edit, ZeroConstructor, AdvancedDisplay, NativeAccessSpecifierPublic)
	bool                                          bUseBody;                                          // 0x02B8(0x0001)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bUseAim;                                           // 0x02B9(0x0001)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bUseHead;                                          // 0x02BA(0x0001)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2BB[0x5];                                      // 0x02BB(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainAspectSettings_Rotate;

// ScriptStruct GbxGame.GbxBrainAspect_Trick
// 0x0028 (0x0100 - 0x00D8)
struct FGbxBrainAspect_Trick final : public FGbxBrainAspect
{
public:
	uint8                                         Pad_D8[0x28];                                      // 0x00D8(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainAspect_Trick;

// ScriptStruct GbxGame.GbxBrainAspect_UsePerch
// 0x0000 (0x00E0 - 0x00E0)
struct FGbxBrainAspect_UsePerch final : public FGbxBrainAspect_ClaimPerch
{
};
DUMPER7_ASSERTS_FGbxBrainAspect_UsePerch;

// ScriptStruct GbxGame.GbxBrainAspect_UseUsable
// 0x0018 (0x00F0 - 0x00D8)
struct FGbxBrainAspect_UseUsable final : public FGbxBrainAspect
{
public:
	uint8                                         Pad_D8[0x18];                                      // 0x00D8(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainAspect_UseUsable;

// ScriptStruct GbxGame.MissionChoiceAlias
// 0x0098 (0x0098 - 0x0000)
struct FMissionChoiceAlias final
{
public:
	struct FSToken                                Name;                                              // 0x0000(0x000C)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   type;                                              // 0x000C(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMissionChoiceType                            OwnerType;                                         // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSToken>                        WaypointNames;                                     // 0x0018(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FNexusBitSet                           ActivityAreaActorTags;                             // 0x0028(0x0020)(Edit, NativeAccessSpecifierPublic)
	struct FNexusBitSet                           ExcludedActivityAreaActorTags;                     // 0x0048(0x0020)(Edit, NativeAccessSpecifierPublic)
	struct FNexusBitSet                           mandatoryactivityareatags;                         // 0x0068(0x0020)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FMissionSubAliasInfo>           SubAliases;                                        // 0x0088(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FMissionChoiceAlias;

// ScriptStruct GbxGame.GbxBrainTask_AOEAttack
// 0x0000 (0x0268 - 0x0268)
struct FGbxBrainTask_AOEAttack final : public FGbxBrainTask_Composite
{
};
DUMPER7_ASSERTS_FGbxBrainTask_AOEAttack;

// ScriptStruct GbxGame.GbxBrainTask_MeleeAttack
// 0x0010 (0x0278 - 0x0268)
struct FGbxBrainTask_MeleeAttack final : public FGbxBrainTask_Composite
{
public:
	uint8                                         Pad_268[0x10];                                     // 0x0268(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainTask_MeleeAttack;

// ScriptStruct GbxGame.GbxSkillComponentData_ActivationChannels
// 0x0000 (0x0030 - 0x0030)
struct FGbxSkillComponentData_ActivationChannels : public FGbxSkillComponentData
{
};
DUMPER7_ASSERTS_FGbxSkillComponentData_ActivationChannels;

// ScriptStruct GbxGame.GbxBrainTaskSettings_Patrol
// 0x0520 (0x06B8 - 0x0198)
struct FGbxBrainTaskSettings_Patrol final : public FGbxBrainTaskSettings_CompositeQuery
{
public:
	struct FGbxParam                              CanUsePerches;                                     // 0x0198(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              WanderPauseTime;                                   // 0x01D0(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              CanUseFidgets;                                     // 0x0208(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              FidgetCooldownTime;                                // 0x0240(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              FidgetCanStartWarmup;                              // 0x0278(0x0038)(Edit, NativeAccessSpecifierPublic)
	bool                                          bUseFidgetCanStartWarmup;                          // 0x02B0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInvalidateUnreachableNavGoals;                    // 0x02B1(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUsePerchLimit;                                    // 0x02B2(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2B3[0x5];                                      // 0x02B3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              PerchesToTry;                                      // 0x02B8(0x0038)(Edit, NativeAccessSpecifierPublic)
	bool                                          bFallbackToNoLeavingAreaCosts;                     // 0x02F0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPerchNavUseLeavingAreaCosts;                      // 0x02F1(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2F2[0x6];                                      // 0x02F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGpsQueryRunData                       PerchQuery;                                        // 0x02F8(0x01E0)(Edit, NativeAccessSpecifierPrivate)
	struct FGpsQueryRunData                       PatrolQuery;                                       // 0x04D8(0x01E0)(Edit, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxBrainTaskSettings_Patrol;

// ScriptStruct GbxGame.GbxStandInGlobals
// 0x0030 (0x0050 - 0x0020)
struct FGbxStandInGlobals final : public FGbxGlobalDef
{
public:
	FGbxDefPtrProperty_                           StandInViewerDef;                                  // 0x0020(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           InventoryStandInSceneDef;                          // 0x0038(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxStandInGlobals;

// ScriptStruct GbxGame.GbxBrainTaskSettings_RangedAttack
// 0x0540 (0x06D8 - 0x0198)
struct FGbxBrainTaskSettings_RangedAttack final : public FGbxBrainTaskSettings_CompositeQuery
{
public:
	struct FGbxParam                              target;                                            // 0x0198(0x0038)(Edit, NativeAccessSpecifierPrivate)
	struct FGpsQueryRunData                       Query;                                             // 0x01D0(0x01E0)(Edit, NativeAccessSpecifierPrivate)
	EGpsBrainStyle                                QueryStyle;                                        // 0x03B0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bUseQueryStyle;                                    // 0x03B1(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3B2[0x6];                                      // 0x03B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxTrickRef                           Attack;                                            // 0x03B8(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FGbxParam                              Count;                                             // 0x03D0(0x0038)(Edit, NativeAccessSpecifierPrivate)
	struct FGbxParam                              PlayRate;                                          // 0x0408(0x0038)(Edit, NativeAccessSpecifierPrivate)
	ETrickInterrupt                               InterruptRule;                                     // 0x0440(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EAttackRotation_InPosition                    BodyRotation_InPosition;                           // 0x0444(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_445[0x3];                                      // 0x0445(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              BodyRotationAngle;                                 // 0x0448(0x0038)(Edit, AdvancedDisplay, NativeAccessSpecifierPrivate)
	struct FGbxParam                              AfterTurnAngle;                                    // 0x0480(0x0038)(Edit, AdvancedDisplay, NativeAccessSpecifierPrivate)
	bool                                          bUseAfterTurnAngle;                                // 0x04B8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_4B9[0x7];                                      // 0x04B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              TargetRadius;                                      // 0x04C0(0x0038)(Edit, AdvancedDisplay, NativeAccessSpecifierPrivate)
	bool                                          bIncludeTargetRadius;                              // 0x04F8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bAllowAimOffset_InPosition;                        // 0x04F9(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bAllowHeadLook_InPosition;                         // 0x04FA(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_4FB[0x5];                                      // 0x04FB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxBrainIsFacingOptions               StopIfNotFacingOptions;                            // 0x0500(0x00F8)(Edit, AdvancedDisplay, NativeAccessSpecifierPrivate)
	bool                                          bStopIfNotFacing;                                  // 0x05F8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_5F9[0x7];                                      // 0x05F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGbxRotationChannelDataOverride> RotationDataOverrides_InPosition;                 // 0x0600(0x0010)(Edit, ZeroConstructor, AdvancedDisplay, NativeAccessSpecifierPrivate)
	bool                                          bWaitForTurnAnimToStartAttack;                     // 0x0610(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_611[0x3];                                      // 0x0611(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TurnAnimAtEndTimeThreshold;                        // 0x0614(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bLimitTurnAnims;                                   // 0x0618(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_619[0x7];                                      // 0x0619(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              MaxTurnAnims;                                      // 0x0620(0x0038)(Edit, AdvancedDisplay, NativeAccessSpecifierPrivate)
	bool                                          bCanMoveIntoPosition;                              // 0x0658(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_659[0x7];                                      // 0x0659(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              ArrivalRadius;                                     // 0x0660(0x0038)(Edit, NativeAccessSpecifierPrivate)
	struct FGbxParam                              ArrivalHalfHeight;                                 // 0x0698(0x0038)(Edit, NativeAccessSpecifierPrivate)
	EAttackRotation_Moving                        BodyRotation_Moving;                               // 0x06D0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bAllowHeadLook_Moving;                             // 0x06D1(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bAllowAimOffset_Moving;                            // 0x06D2(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_6D3[0x5];                                      // 0x06D3(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainTaskSettings_RangedAttack;

// ScriptStruct GbxGame.MissionObjectiveUpdateCountValue
// 0x0048 (0x0048 - 0x0000)
struct FMissionObjectiveUpdateCountValue final
{
public:
	EMissionObjectiveUpdateCountValueType         type;                                              // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ConstantValue;                                     // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMissionObjectiveUpdateCountDynamicEvaluateTiming EvaluateTiming;                                // 0x0008(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAttributeEvaluator                 Evaluator;                                         // 0x0010(0x0038)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FMissionObjectiveUpdateCountValue;

// ScriptStruct GbxGame.ObjectiveTypeSettings_GbxKill
// 0x04C8 (0x0540 - 0x0078)
struct FObjectiveTypeSettings_GbxKill : public FObjectiveTypeSettingsBase
{
public:
	EObjectiveKillSubType                         subtype;                                           // 0x0078(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMissionAliasRef                       Spawner;                                           // 0x007C(0x000C)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FMissionAliasRef>               AdditionalSpawners;                                // 0x0088(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FMissionAliasRef>               Encounters;                                        // 0x0098(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bGlobal;                                           // 0x00A8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAutoEnableKillSubTypeSpawners;                    // 0x00A9(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_AA[0x2];                                       // 0x00AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMissionAliasRef                       target;                                            // 0x00AC(0x000C)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FMissionAliasRef                       TargetOrigin;                                      // 0x00B8(0x000C)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMissionObjectiveUpdateCountValue      KillCount;                                         // 0x00C8(0x0048)(Edit, NativeAccessSpecifierPublic)
	struct FGbxInlineStruct                       filter;                                            // 0x0110(0x0018)(Edit, NativeAccessSpecifierPublic)
	struct FMissionGbxDef                         GbxActorDefOverride;                               // 0x0128(0x0030)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bOverrideSpawnerStyle;                             // 0x0158(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSpawnerStyleData                      SpawnerStyleOverride;                              // 0x0160(0x0038)(Edit, NativeAccessSpecifierPublic)
	bool                                          bOverrideTerritory;                                // 0x0198(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxTerritorySettings                  TerritoryOverride;                                 // 0x01A0(0x0378)(Edit, NativeAccessSpecifierPublic)
	bool                                          bOverrideActivation;                               // 0x0518(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_519[0x7];                                      // 0x0519(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSpawnerActivation                     ActivationOverride;                                // 0x0520(0x0020)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FObjectiveTypeSettings_GbxKill;

// ScriptStruct GbxGame.GbxBrainTaskSettings_Trick
// 0x0090 (0x0228 - 0x0198)
struct FGbxBrainTaskSettings_Trick final : public FGbxBrainTaskSettings_Composite
{
public:
	struct FGbxTrickRef                           Trick;                                             // 0x0198(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FGbxParam                              Count;                                             // 0x01B0(0x0038)(Edit, NativeAccessSpecifierPrivate)
	struct FGbxParam                              PlayRate;                                          // 0x01E8(0x0038)(Edit, NativeAccessSpecifierPrivate)
	ETrickInterrupt                               InterruptRule;                                     // 0x0220(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_224[0x4];                                      // 0x0224(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxBrainTaskSettings_Trick;

// ScriptStruct GbxGame.CameraModeDef
// 0x0020 (0x0038 - 0x0018)
struct FCameraModeDef final : public FGbxDef
{
public:
	float                                         BlendInTime;                                       // 0x0018(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bBlendOut : 1;                                     // 0x001C(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bIsFirstPerson : 1;                                // 0x001C(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bShowViewModel : 1;                                // 0x001C(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bAllowPitchInversion : 1;                          // 0x001C(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bAutoPerspectiveOverride : 1;                      // 0x001C(0x0001)(BitIndex: 0x04, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bResetCameraRollOnStart : 1;                       // 0x001C(0x0001)(BitIndex: 0x05, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bAllowIntentionalClipping : 1;                     // 0x001C(0x0001)(BitIndex: 0x06, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bInterruptTransitionWhenClipping : 1;              // 0x001C(0x0001)(BitIndex: 0x07, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bDisableSeparateTranslucency : 1;                  // 0x001D(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bDoZeroDeltaTickOnStart : 1;                       // 0x001D(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	EGbxViewTargetRotationUpdateMethod            ViewTargetRotationUpdateMethod;                    // 0x0020(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGbxInlineStruct>               behaviors;                                         // 0x0028(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FCameraModeDef;

// ScriptStruct GbxGame.GbxStandInScene_Background
// 0x0050 (0x00C0 - 0x0070)
struct FGbxStandInScene_Background final : public FGbxStandInScene_Element
{
public:
	TSoftObjectPtr<class UStaticMesh>             Mesh;                                              // 0x0070(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterialInterface>      Material;                                          // 0x0098(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxStandInScene_Background;

// ScriptStruct GbxGame.GbxCameraShake
// 0x0080 (0x0098 - 0x0018)
struct FGbxCameraShake : public FGbxDef
{
public:
	bool                                          bSingleInstance;                                   // 0x0018(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCanPlayWhilePaused;                               // 0x0019(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGbxCameraShakeOscillatorUnits                OscillatorUnits;                                   // 0x001A(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B[0x1];                                       // 0x001B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         OscillationDuration;                               // 0x001C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OscillationBlendInTime;                            // 0x0020(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OscillationBlendOutTime;                           // 0x0024(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FROscillator                           RotOscillation;                                    // 0x0028(0x0024)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FVOscillator                           LocOscillation;                                    // 0x004C(0x0024)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FFOscillator                           FOVOscillation;                                    // 0x0070(0x000C)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	float                                         AnimPlayRate;                                      // 0x007C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AnimScale;                                         // 0x0080(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AnimBlendInTime;                                   // 0x0084(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AnimBlendOutTime;                                  // 0x0088(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RandomAnimSegmentDuration;                         // 0x008C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bRandomAnimSegment : 1;                            // 0x0090(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxCameraShake;

// ScriptStruct GbxGame.GbxGameAnimInstanceProxy
// 0x0060 (0x0B30 - 0x0AD0)
struct FGbxGameAnimInstanceProxy : public FGbxNavAnimInstanceProxy
{
public:
	class UGbxGameAnimInstance*                   GameAnimInstance;                                  // 0x0AC8(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_AD0[0x60];                                     // 0x0AD0(0x0060)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxGameAnimInstanceProxy;

// ScriptStruct GbxGame.GbxStandInScene_StandInOverride
// 0x0028 (0x0028 - 0x0000)
struct FGbxStandInScene_StandInOverride final
{
public:
	struct FGameplayTag                           ShownStandInIdentifier;                            // 0x0000(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOverrideRotation;                                 // 0x0008(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               RotationOverride;                                  // 0x0010(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxStandInScene_StandInOverride;

// ScriptStruct GbxGame.LootConfigSelectorDef
// 0x0068 (0x0090 - 0x0028)
struct FLootConfigSelectorDef final : public FDefSelectorBaseDef
{
public:
	FGbxDefPtrProperty_                           DefaultLootConfig;                                 // 0x0028(0x0018)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_40[0x50];                                      // 0x0040(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FLootConfigSelectorDef;

// ScriptStruct GbxGame.GbxCharacterAnimInstanceProxy
// 0x00C0 (0x0BF0 - 0x0B30)
#pragma pack(push, 0x1)
struct alignas(0x10) FGbxCharacterAnimInstanceProxy : public FGbxGameAnimInstanceProxy
{
public:
	uint8                                         Pad_B30[0x80];                                     // 0x0B30(0x0080)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FKeyedGbxBoneSet>               BoneSets;                                          // 0x0BB0(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	class UGbxCharacterAnimInstance*              CharacterAnimInstance;                             // 0x0BC0(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_BC8[0x20];                                     // 0x0BC8(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
#pragma pack(pop)
DUMPER7_ASSERTS_FGbxCharacterAnimInstanceProxy;

// ScriptStruct GbxGame.GbxCharacterBodySettings
// 0x0050 (0x0278 - 0x0228)
struct FGbxCharacterBodySettings : public FGbxBodySettings
{
public:
	bool                                          bPreviewCrouched;                                  // 0x0228(0x0001)(Edit, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPreviewEyeHeight;                                 // 0x0229(0x0001)(Edit, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_22A[0x6];                                      // 0x022A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMesh*                          PrimarySkeletalMesh;                               // 0x0230(0x0008)(Edit, ZeroConstructor, EditConst, NoDestructor, AdvancedDisplay, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UAnimInstance>              PrimaryAnimClass;                                  // 0x0238(0x0008)(Edit, ZeroConstructor, EditConst, NoDestructor, AdvancedDisplay, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDGeneratedSimulationData*              GeneratedForwardDynamicsData;                      // 0x0240(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxRootScaleParams                    RootScaleParams;                                   // 0x0248(0x0008)(Edit, EditConst, NoDestructor, AdvancedDisplay, NativeAccessSpecifierPublic)
	float                                         BaseEyeHeight;                                     // 0x0250(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CrouchedEyeHeight;                                 // 0x0254(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BaseEyeHeightFromRoot;                             // 0x0258(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CrouchedEyeHeightFromRoot;                         // 0x025C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CrouchedHalfHeight;                                // 0x0260(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_264[0x4];                                      // 0x0264(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGbxCharacterLegData*                   LegData;                                           // 0x0268(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFaceFXActor*                           FaceFXActor;                                       // 0x0270(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxCharacterBodySettings;

// ScriptStruct GbxGame.GbxCharacterBodyState
// 0x0000 (0x0220 - 0x0220)
struct FGbxCharacterBodyState : public FGbxBodyState
{
};
DUMPER7_ASSERTS_FGbxCharacterBodyState;

// ScriptStruct GbxGame.GbxSkillActionSequenceExecInterruptPolicy
// 0x0048 (0x0048 - 0x0000)
struct FGbxSkillActionSequenceExecInterruptPolicy final
{
public:
	struct FGbxInlineStruct                       Exec_Primary;                                      // 0x0000(0x0018)(Edit, NativeAccessSpecifierPrivate)
	struct FGbxInlineStruct                       Exec_Secondary;                                    // 0x0018(0x0018)(Edit, NativeAccessSpecifierPrivate)
	struct FGbxInlineStruct                       Exec_Tertiary;                                     // 0x0030(0x0018)(Edit, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxSkillActionSequenceExecInterruptPolicy;

// ScriptStruct GbxGame.GbxSpringInterpParameters
// 0x0008 (0x0008 - 0x0000)
struct FGbxSpringInterpParameters final
{
public:
	float                                         speed;                                             // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Dampening;                                         // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxSpringInterpParameters;

// ScriptStruct GbxGame.MantleStandData
// 0x0070 (0x0070 - 0x0000)
struct alignas(0x08) FMantleStandData final
{
public:
	uint8                                         Pad_0[0x70];                                       // 0x0000(0x0070)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FMantleStandData;

// ScriptStruct GbxGame.GbxSkillActionSequenceData_State_Rule
// 0x0028 (0x0028 - 0x0000)
struct FGbxSkillActionSequenceData_State_Rule final
{
public:
	int32                                         RuleID;                                            // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxSkillActionSequenceData_TransitionLink Link;                                          // 0x0004(0x0008)(NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxInlineStruct                       Rule;                                              // 0x0010(0x0018)(NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxSkillActionSequenceData_State_Rule;

// ScriptStruct GbxGame.GbxSkillActionSequenceData_State
// 0x00A0 (0x00A0 - 0x0000)
struct FGbxSkillActionSequenceData_State final
{
public:
	class FName                                   Name;                                              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ActionID;                                          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxSkillActionSequenceData_TransitionLink Next;                                          // 0x000C(0x0008)(NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxSkillActionSequenceExecBufferPolicy BufferPolicy;                                     // 0x0018(0x0030)(NativeAccessSpecifierPublic)
	struct FGbxSkillActionSequenceExecInterruptPolicy InterruptPolicy;                               // 0x0048(0x0048)(NativeAccessSpecifierPublic)
	TArray<struct FGbxSkillActionSequenceData_State_Rule> Rules;                                     // 0x0090(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxSkillActionSequenceData_State;

// ScriptStruct GbxGame.GbxSkillActionSequenceData_Switch_Condition
// 0x0020 (0x0020 - 0x0000)
struct FGbxSkillActionSequenceData_Switch_Condition final
{
public:
	struct FGbxSkillActionSequenceData_TransitionLink Link;                                          // 0x0000(0x0008)(NoDestructor, NativeAccessSpecifierPublic)
	struct FGbxInlineStruct                       Condition;                                         // 0x0008(0x0018)(NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxSkillActionSequenceData_Switch_Condition;

// ScriptStruct GbxGame.GbxSkillActionSequenceData_Switch
// 0x0020 (0x0020 - 0x0000)
struct FGbxSkillActionSequenceData_Switch final
{
public:
	int32                                         SwitchID;                                          // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxSkillActionSequenceData_TransitionLink Default;                                       // 0x0004(0x0008)(NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGbxSkillActionSequenceData_Switch_Condition> Conditionals;                        // 0x0010(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxSkillActionSequenceData_Switch;

// ScriptStruct GbxGame.GbxSkillActionSequenceData
// 0x0050 (0x0058 - 0x0008)
struct FGbxSkillActionSequenceData final : public FGbxHasStructType
{
public:
	int32                                         SequenceID;                                        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 ActionIDs;                                         // 0x0010(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	struct FGbxSkillActionSequenceData_TransitionLink Reset;                                         // 0x0020(0x0008)(NoDestructor, NativeAccessSpecifierPrivate)
	TArray<struct FGbxSkillActionSequenceData_State> States;                                         // 0x0028(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FGbxSkillActionSequenceData_GotoState> GoTos;                                      // 0x0038(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FGbxSkillActionSequenceData_Switch> Switches;                                      // 0x0048(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxSkillActionSequenceData;

// ScriptStruct GbxGame.MantleCheckTypeData_MantleUp
// 0x0008 (0x0160 - 0x0158)
struct FMantleCheckTypeData_MantleUp final : public FMantleCheckTypeData
{
public:
	uint8                                         Pad_158[0x8];                                      // 0x0158(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FMantleCheckTypeData_MantleUp;

// ScriptStruct GbxGame.MantleCheckData
// 0x03D0 (0x03D0 - 0x0000)
struct alignas(0x08) FMantleCheckData final
{
public:
	uint8                                         Pad_0[0x3D0];                                      // 0x0000(0x03D0)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FMantleCheckData;

// ScriptStruct GbxGame.GbxCharacterMaterialParameterDef
// 0x0000 (0x0090 - 0x0090)
struct FGbxCharacterMaterialParameterDef final : public FGbxMaterialParameterDef
{
};
DUMPER7_ASSERTS_FGbxCharacterMaterialParameterDef;

// ScriptStruct GbxGame.GbxSkillActionData_NetVersion
// 0x0010 (0x0010 - 0x0000)
struct FGbxSkillActionData_NetVersion final
{
public:
	TArray<struct FGuid>                          VersionChain;                                      // 0x0000(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxSkillActionData_NetVersion;

// ScriptStruct GbxGame.GbxCharacterMovementGameDataCategories_DONTUSE
// 0x0001 (0x0001 - 0x0000)
struct FGbxCharacterMovementGameDataCategories_DONTUSE final
{
public:
	uint8                                         Pad_0[0x1];                                        // 0x0000(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxCharacterMovementGameDataCategories_DONTUSE;

// ScriptStruct GbxGame.ItemPoolCustomizationInfo
// 0x0070 (0x0070 - 0x0000)
struct FItemPoolCustomizationInfo final
{
public:
	struct FGbxAttributeInit                      probability;                                       // 0x0000(0x0050)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bAllowDuplicates;                                  // 0x0050(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FGameDataHandleProperty_                      Customization;                                     // 0x0058(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FItemPoolCustomizationInfo;

// ScriptStruct GbxGame.ItemPoolInfo
// 0x0128 (0x0128 - 0x0000)
struct FItemPoolInfo final
{
public:
	struct FInventoryItemSelectionData            itempool;                                          // 0x0000(0x0068)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FGbxAttributeInit                      probability;                                       // 0x0068(0x0050)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FGbxAttributeInit                      NumberOfTimesToSelectFromThisPool;                 // 0x00B8(0x0050)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	TArray<FGameDataHandleProperty_>              PreferredPartsList;                                // 0x0108(0x0010)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FItemPoolCustomizationInfo>     CustomizationList;                                 // 0x0118(0x0010)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
};
DUMPER7_ASSERTS_FItemPoolInfo;

// ScriptStruct GbxGame.GbxChoiceCategory
// 0x0028 (0x0028 - 0x0000)
struct FGbxChoiceCategory final
{
public:
	uint8                                         Pad_0[0x8];                                        // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Name;                                              // 0x0008(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   type;                                              // 0x0010(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                           Values;                                            // 0x0018(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxChoiceCategory;

// ScriptStruct GbxGame.GbxChoiceGlobals
// 0x0010 (0x0030 - 0x0020)
struct FGbxChoiceGlobals final : public FGbxGlobalDef
{
public:
	TArray<struct FGbxChoiceCategory>             Categories;                                        // 0x0020(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxChoiceGlobals;

// ScriptStruct GbxGame.GbxSkillComponentData_DelegateData_ResourcePool
// 0x0020 (0x0028 - 0x0008)
struct FGbxSkillComponentData_DelegateData_ResourcePool final : public FGbxSkillComponentData_DelegateData
{
public:
	FGameDataHandleProperty_                      ResourcePoolDef;                                   // 0x0008(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EGbxSkillResourcePoolEvent                    Event;                                             // 0x0020(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxSkillComponentData_DelegateData_ResourcePool;

// ScriptStruct GbxGame.GbxChoiceTag
// 0x0010 (0x0010 - 0x0000)
struct FGbxChoiceTag final
{
public:
	class FName                                   Category;                                          // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                   Value;                                             // 0x0008(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxChoiceTag;

// ScriptStruct GbxGame.GbxAnalyticsTransaction
// 0x0028 (0x0028 - 0x0000)
struct FGbxAnalyticsTransaction final
{
public:
	int32                                         tr_id;                                             // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   currency;                                          // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         spent;                                             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         balance;                                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   Source;                                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxAnalyticsTransaction;

// ScriptStruct GbxGame.GbxAnalyticsPickup
// 0x0034 (0x0034 - 0x0000)
struct FGbxAnalyticsPickup final
{
public:
	int32                                         tr_id;                                             // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   mfr;                                               // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   type;                                              // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   type_detail;                                       // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   Rarity;                                            // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   comp;                                              // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   Source;                                            // 0x002C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxAnalyticsPickup;

// ScriptStruct GbxGame.GbxAnalyticsPlayerTransactions
// 0x0088 (0x0088 - 0x0000)
struct FGbxAnalyticsPlayerTransactions final
{
public:
	TArray<struct FGbxAnalyticsTransaction>       transactions;                                      // 0x0000(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FGbxAnalyticsPickup>            loot;                                              // 0x0010(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TMap<class FName, int32>                      misc_loot_count;                                   // 0x0020(0x0050)(NativeAccessSpecifierPublic)
	uint8                                         Pad_70[0x18];                                      // 0x0070(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxAnalyticsPlayerTransactions;

// ScriptStruct GbxGame.GbxChoiceModifier
// 0x0020 (0x0020 - 0x0000)
struct FGbxChoiceModifier final
{
public:
	class FName                                   Category;                                          // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGbxChoiceModifierScale>        TagScales;                                         // 0x0008(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                         Default;                                           // 0x0018(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxChoiceModifier;

// ScriptStruct GbxGame.GbxChoiceValue
// 0x0018 (0x0018 - 0x0000)
struct FGbxChoiceValue final
{
public:
	float                                         base;                                              // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGbxChoiceModifier>             Modifiers;                                         // 0x0008(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxChoiceValue;

// ScriptStruct GbxGame.GbxSkillComponentData_DelegateData_TargetList
// 0x0018 (0x0020 - 0x0008)
struct FGbxSkillComponentData_DelegateData_TargetList final : public FGbxSkillComponentData_DelegateData
{
public:
	FGbxDefPtrProperty_                           TargetListDef;                                     // 0x0008(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxSkillComponentData_DelegateData_TargetList;

// ScriptStruct GbxGame.MissionActionCondition_Compound
// 0x0018 (0x0028 - 0x0010)
struct FMissionActionCondition_Compound final : public FMissionActionCondition
{
public:
	EMissionActionConditionCompoundOp             Operator;                                          // 0x0010(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGbxInlineStruct>               Conditions;                                        // 0x0018(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FMissionActionCondition_Compound;

// ScriptStruct GbxGame.GbxCinematicModeDefCategory_DONTUSE
// 0x0001 (0x0001 - 0x0000)
struct FGbxCinematicModeDefCategory_DONTUSE final
{
public:
	uint8                                         Pad_0[0x1];                                        // 0x0000(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxCinematicModeDefCategory_DONTUSE;

// ScriptStruct GbxGame.GbxClosestSpeakerValueResolver
// 0x0000 (0x0008 - 0x0008)
struct FGbxClosestSpeakerValueResolver final : public FAttributeValueResolver
{
};
DUMPER7_ASSERTS_FGbxClosestSpeakerValueResolver;

// ScriptStruct GbxGame.GbxCondition_AIReachedNode
// 0x0008 (0x0018 - 0x0010)
struct FGbxCondition_AIReachedNode final : public FGbxConditionValueResolver
{
public:
	bool                                          bCheckPassedOnly;                                  // 0x0010(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxCondition_AIReachedNode;

// ScriptStruct GbxGame.GbxSkillComponentData_InputItemEx
// 0x0030 (0x0058 - 0x0028)
struct FGbxSkillComponentData_InputItemEx final : public FGbxSkillComponentDataItem
{
public:
	struct FGbxInlineStruct                       Handler;                                           // 0x0028(0x0018)(Edit, NativeAccessSpecifierPublic)
	struct FGbxInlineStruct                       ActivationStrategy;                                // 0x0040(0x0018)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxSkillComponentData_InputItemEx;

// ScriptStruct GbxGame.GbxSkillComponentData_InputEx
// 0x0030 (0x0060 - 0x0030)
struct FGbxSkillComponentData_InputEx final : public FGbxSkillComponentData
{
public:
	TArray<struct FGbxSkillComponentData_InputItemEx> items;                                         // 0x0030(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	bool                                          bReattachOnPossessionChange;                       // 0x0040(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxInlineStruct                       DefaultActivationStrategy;                         // 0x0048(0x0018)(Edit, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxSkillComponentData_InputEx;

// ScriptStruct GbxGame.GbxCondition_Fact
// 0x00B0 (0x00C0 - 0x0010)
struct FGbxCondition_Fact final : public FGbxConditionValueResolver
{
public:
	bool                                          bUseRelativeAddress;                               // 0x0010(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFactAddress                           address;                                           // 0x0018(0x0038)(Edit, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FSToken                                channel;                                           // 0x0050(0x000C)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FFactValue                             Value;                                             // 0x005C(0x0010)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_6C[0x54];                                      // 0x006C(0x0054)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxCondition_Fact;

// ScriptStruct GbxGame.SpawnPatternInputs
// 0x0040 (0x0040 - 0x0000)
struct FSpawnPatternInputs final
{
public:
	class AActor*                                 SourceActor;                                       // 0x0000(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   SocketName;                                        // 0x0008(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                BaseLocation;                                      // 0x0010(0x0018)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                IncomingImpulse;                                   // 0x0028(0x0018)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSpawnPatternInputs;

// ScriptStruct GbxGame.GbxCondition_HasInventoryCustomization
// 0x0000 (0x0010 - 0x0010)
struct FGbxCondition_HasInventoryCustomization final : public FGbxConditionValueResolver
{
};
DUMPER7_ASSERTS_FGbxCondition_HasInventoryCustomization;

// ScriptStruct GbxGame.GbxSkillComponentInputHandler_Basic
// 0x0018 (0x0020 - 0x0008)
struct FGbxSkillComponentInputHandler_Basic final : public FGbxSkillComponentInputHandler
{
public:
	FGameDataHandleProperty_                      InputAction;                                       // 0x0008(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxSkillComponentInputHandler_Basic;

// ScriptStruct GbxGame.GbxCondition_HasInventoryTag
// 0x0048 (0x0058 - 0x0010)
struct FGbxCondition_HasInventoryTag final : public FGbxConditionValueResolver
{
public:
	bool                                          bMustHaveAllTags;                                  // 0x0010(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bMustHaveAllExcludeTags;                           // 0x0011(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInventoryTags                         tags;                                              // 0x0018(0x0020)(Edit, NativeAccessSpecifierPrivate)
	struct FInventoryTags                         ExcludeTags;                                       // 0x0038(0x0020)(Edit, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxCondition_HasInventoryTag;

// ScriptStruct GbxGame.MissionActionType_ToggleSubAliasChildActor
// 0x0010 (0x0030 - 0x0020)
struct FMissionActionType_ToggleSubAliasChildActor final : public FMissionActionTypeBase
{
public:
	struct FMissionAliasRef                       alias;                                             // 0x0020(0x000C)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	bool                                          bEnable;                                           // 0x002C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FMissionActionType_ToggleSubAliasChildActor;

// ScriptStruct GbxGame.GbxCondition_IsInMap
// 0x0018 (0x0028 - 0x0010)
struct FGbxCondition_IsInMap final : public FGbxConditionValueResolver
{
public:
	FGameDataHandleProperty_                      Map;                                               // 0x0010(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxCondition_IsInMap;

// ScriptStruct GbxGame.GbxCondition_IsMissionReplayActive
// 0x0000 (0x0010 - 0x0010)
struct FGbxCondition_IsMissionReplayActive final : public FGbxConditionValueResolver
{
};
DUMPER7_ASSERTS_FGbxCondition_IsMissionReplayActive;

// ScriptStruct GbxGame.GbxSkillStateConditionData_SkillTimer
// 0x0028 (0x0038 - 0x0010)
struct FGbxSkillStateConditionData_SkillTimer final : public FGbxSkillStateConditionData
{
public:
	struct FGuid                                  TimerComponentID;                                  // 0x0010(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGuid                                  TimerID;                                           // 0x0020(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EGbxSkillComponentTimerState                  TimerState;                                        // 0x0030(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxSkillStateConditionData_SkillTimer;

// ScriptStruct GbxGame.GbxCondition_IsPerformingControlledMove
// 0x0028 (0x0038 - 0x0010)
struct FGbxCondition_IsPerformingControlledMove final : public FGbxConditionValueResolver
{
public:
	TSoftObjectPtr<class UControlledMove>         ControlledMove;                                    // 0x0010(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxCondition_IsPerformingControlledMove;

// ScriptStruct GbxGame.ItemPoolListSelectorStateDef
// 0x0018 (0x0040 - 0x0028)
struct FItemPoolListSelectorStateDef final : public FDefSelectorStateBaseDef
{
public:
	FGameDataHandleProperty_                      ItemPoolList;                                      // 0x0028(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FItemPoolListSelectorStateDef;

// ScriptStruct GbxGame.GbxCondition_IsLocalPlayer
// 0x0000 (0x0010 - 0x0010)
struct FGbxCondition_IsLocalPlayer final : public FGbxConditionValueResolver
{
};
DUMPER7_ASSERTS_FGbxCondition_IsLocalPlayer;

// ScriptStruct GbxGame.GbxCondition_SkillParam
// 0x0060 (0x0070 - 0x0010)
struct FGbxCondition_SkillParam final : public FGbxConditionValueResolver
{
public:
	TSoftObjectPtr<class UGbxSkillParamData>      ParamData;                                         // 0x0010(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGbxParam                              ParamValue;                                        // 0x0038(0x0038)(Edit, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxCondition_SkillParam;

// ScriptStruct GbxGame.MissionObjectiveAspect
// 0x0000 (0x0008 - 0x0008)
struct FMissionObjectiveAspect : public FGbxHasStructType
{
};
DUMPER7_ASSERTS_FMissionObjectiveAspect;

// ScriptStruct GbxGame.MissionObjectiveAspect_Event
// 0x0050 (0x0058 - 0x0008)
struct FMissionObjectiveAspect_Event final : public FMissionObjectiveAspect
{
public:
	struct FGbxInlineStruct                       Condition;                                         // 0x0008(0x0018)(Edit, NoClear, NativeAccessSpecifierPublic)
	struct FMissionActionSequenceDef              actions;                                           // 0x0020(0x0028)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FGbxInlineStruct>               SubEvents;                                         // 0x0048(0x0010)(Edit, ZeroConstructor, NoClear, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FMissionObjectiveAspect_Event;

// ScriptStruct GbxGame.GbxContextParam_Mission
// 0x0010 (0x0018 - 0x0008)
struct FGbxContextParam_Mission final : public FGbxContextParam
{
public:
	uint8                                         Pad_8[0x10];                                       // 0x0008(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxContextParam_Mission;

// ScriptStruct GbxGame.GbxCustomizationEntry
// 0x0020 (0x0020 - 0x0000)
struct alignas(0x08) FGbxCustomizationEntry final
{
public:
	FGbxDefPtrProperty_                           AvatarOption;                                      // 0x0000(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         AvatarSerialPriority;                              // 0x0018(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxCustomizationEntry;

// ScriptStruct GbxGame.GbxSkillContextResolver
// 0x0018 (0x0020 - 0x0008)
struct FGbxSkillContextResolver final : public FAttributeContextResolver
{
public:
	FGbxDefPtrProperty_                           SkillDef;                                          // 0x0008(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxSkillContextResolver;

// ScriptStruct GbxGame.GbxCustomizationDef
// 0x0040 (0x0058 - 0x0018)
struct FGbxCustomizationDef final : public FGbxDef
{
public:
	class FText                                   CustomizationName;                                 // 0x0018(0x0010)(Edit, NativeAccessSpecifierPublic)
	struct FGameplayTag                           CustomizationType;                                 // 0x0028(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGbxCustomizationEntry>         Entries;                                           // 0x0030(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           UnlockedBy;                                        // 0x0040(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxCustomizationDef;

// ScriptStruct GbxGame.ClientLightProjectileState
// 0x0160 (0x0160 - 0x0000)
struct FClientLightProjectileState final
{
public:
	uint8                                         CreationID;                                        // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FGameDataHandleProperty_                      definition;                                        // 0x0008(0x0018)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector_NetQuantize10                  StartLocation;                                     // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector_NetQuantizeNormal              StartDirection;                                    // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector_NetQuantize10                  EndLocation;                                       // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 instigator;                                        // 0x0068(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 Source;                                            // 0x0070(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 target;                                            // 0x0078(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneComponent*                        TargetComponent;                                   // 0x0080(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   TargetSocket;                                      // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector_NetQuantize100                 TargetOffset;                                      // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bTargetIsUntargetable;                             // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 DamageCauser;                                      // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ELightProjectileSpeedModifierType             SpeedModifierType;                                 // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SpeedModifier;                                     // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GravityScaleOverride;                              // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint16                                        Flags;                                             // 0x00C4(0x0002)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint16                                        DamageModifierFlags;                               // 0x00C6(0x0002)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         RandomSeed;                                        // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         damage;                                            // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      DamageType;                                        // 0x00D0(0x0018)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDamageSourceContainer                 DamageSource;                                      // 0x00E8(0x0040)(NativeAccessSpecifierPublic)
	float                                         damageradius;                                      // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ImpactForce;                                       // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DestructibleForce;                                 // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DestructibleStrain;                                // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      ImpactEffect;                                      // 0x0138(0x0018)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFXSystemAsset*                         TracerOverride;                                    // 0x0150(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TimeDilation;                                      // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         FiringPatternID;                                   // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         TracerCollectionID;                                // 0x015D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15E[0x2];                                      // 0x015E(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FClientLightProjectileState;

// ScriptStruct GbxGame.FeedbackContainer
// 0x00E8 (0x00E8 - 0x0000)
struct alignas(0x08) FFeedbackContainer final
{
public:
	uint8                                         Pad_0[0xE8];                                       // 0x0000(0x00E8)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FFeedbackContainer;

// ScriptStruct GbxGame.GbxDangerZoneBodySettings
// 0x0000 (0x0228 - 0x0228)
struct FGbxDangerZoneBodySettings : public FGbxBodySettings
{
};
DUMPER7_ASSERTS_FGbxDangerZoneBodySettings;

// ScriptStruct GbxGame.GbxSkillDelegateDamageFilter_TeamAttitude
// 0x0002 (0x0002 - 0x0000)
struct FGbxSkillDelegateDamageFilter_TeamAttitude final
{
public:
	EGbxSkillDelegateDamageFilterMode             FilterMode;                                        // 0x0000(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETeamAttitude                                 Attitude;                                          // 0x0001(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxSkillDelegateDamageFilter_TeamAttitude;

// ScriptStruct GbxGame.GbxSkillDelegateDamageFilter_TeamData
// 0x0018 (0x0018 - 0x0000)
struct FGbxSkillDelegateDamageFilter_TeamData final
{
public:
	EGbxSkillDelegateDamageFilterMode             FilterMode;                                        // 0x0000(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<FGameDataHandleProperty_>              Teams;                                             // 0x0008(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxSkillDelegateDamageFilter_TeamData;

// ScriptStruct GbxGame.GbxSkillDelegateDamageFilter_General
// 0x0168 (0x0178 - 0x0010)
struct FGbxSkillDelegateDamageFilter_General final : public FGbxSkillDelegateDamageFilter
{
public:
	FGameDataHandleProperty_                      DamagedActorCondition;                             // 0x0010(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	FGameDataHandleProperty_                      DamageCauserCondition;                             // 0x0028(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bFilterTeamAttitude;                               // 0x0040(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGbxSkillDelegateDamageFilter_TeamAttitude TeamAttitude;                                  // 0x0041(0x0002)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	bool                                          bFilterDamagedActorTeamData;                       // 0x0043(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxSkillDelegateDamageFilter_TeamData DamagedActorTeamData;                              // 0x0048(0x0018)(Edit, NativeAccessSpecifierPrivate)
	bool                                          bFilterDamageCauserActorTeamData;                  // 0x0060(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxSkillDelegateDamageFilter_TeamData DamageCauserActorTeamData;                         // 0x0068(0x0018)(Edit, NativeAccessSpecifierPrivate)
	bool                                          bFilterDamageSources;                              // 0x0080(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDamageSourceFilterData                DamageSourcesData;                                 // 0x0088(0x0020)(Edit, NativeAccessSpecifierPrivate)
	bool                                          bFilterDamageTypes;                                // 0x00A8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDamageTypeFilterData                  DamageTypeFilter;                                  // 0x00B0(0x0020)(Edit, NativeAccessSpecifierPrivate)
	EAreaDamageFilter                             AreaDamageFilter;                                  // 0x00D0(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EDamageCriticalFilter                         CriticalFilter;                                    // 0x00D1(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bUseHitDirectionAngle;                             // 0x00D2(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_D3[0x5];                                       // 0x00D3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxSkillDelegateDamageFilter_HitDirectionData HitDirectionData;                          // 0x00D8(0x00A0)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxSkillDelegateDamageFilter_General;

// ScriptStruct GbxGame.GbxDangerZoneBodyState
// 0x0000 (0x0220 - 0x0220)
struct FGbxDangerZoneBodyState : public FGbxBodyState
{
};
DUMPER7_ASSERTS_FGbxDangerZoneBodyState;

// ScriptStruct GbxGame.GbxDangerZoneCracksSettings
// 0x0050 (0x0050 - 0x0000)
struct FGbxDangerZoneCracksSettings final
{
public:
	class UStaticMeshComponent*                   SegmentShape;                                      // 0x0000(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StartOffsetFromOrigin;                             // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CracksHeightOffset;                                // 0x000C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NbCracks;                                          // 0x0010(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NbSegmentsInCrack;                                 // 0x0014(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FNumericRange                          ConeAngleInWhichCracksCanSpawn;                    // 0x0018(0x0008)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	float                                         OriginAngleOffset;                                 // 0x0020(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FNumericRange                          AngleBetweenEachCracks;                            // 0x0024(0x0008)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FNumericRange                          DirectionChangeAngle;                              // 0x002C(0x0008)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bGeneralStraightDirection;                         // 0x0034(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         DirectionChangeWeight;                             // 0x0038(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FNumericRange                          DirectionChangeAngleExclusion;                     // 0x003C(0x0008)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FNumericRange                          CracksLengthRange;                                 // 0x0044(0x0008)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxDangerZoneCracksSettings;

// ScriptStruct GbxGame.GbxDangerZoneCracksBodySettings
// 0x0058 (0x0280 - 0x0228)
struct FGbxDangerZoneCracksBodySettings final : public FGbxDangerZoneBodySettings
{
public:
	bool                                          bActivateCracks;                                   // 0x0228(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_229[0x7];                                      // 0x0229(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxDangerZoneCracksSettings           CracksSettings;                                    // 0x0230(0x0050)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxDangerZoneCracksBodySettings;

// ScriptStruct GbxGame.GbxSkillDelegateHitActorFilter_And
// 0x0010 (0x0020 - 0x0010)
struct FGbxSkillDelegateHitActorFilter_And final : public FGbxSkillDelegateHitActorFilter
{
public:
	TArray<struct FGbxInlineStruct>               Filters;                                           // 0x0010(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxSkillDelegateHitActorFilter_And;

// ScriptStruct GbxGame.GbxDangerZoneCracksBodyState
// 0x0000 (0x0220 - 0x0220)
struct FGbxDangerZoneCracksBodyState final : public FGbxDangerZoneBodyState
{
};
DUMPER7_ASSERTS_FGbxDangerZoneCracksBodyState;

// ScriptStruct GbxGame.MissionFactEvaluator
// 0x0060 (0x0060 - 0x0000)
struct FMissionFactEvaluator final
{
public:
	struct FMissionAliasRef                       ContextActor;                                      // 0x0000(0x000C)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxInlineStruct                       Evaluator;                                         // 0x0010(0x0018)(Edit, NativeAccessSpecifierPublic)
	struct FFactAddress                           FactToWrite;                                       // 0x0028(0x0038)(HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FMissionFactEvaluator;

// ScriptStruct GbxGame.DangerZoneSpawnOptions
// 0x0020 (0x0020 - 0x0000)
struct FDangerZoneSpawnOptions final
{
public:
	float                                         lifespan;                                          // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShouldPredictMovement;                            // 0x0004(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TimeForMovementPrediction;                         // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseRandomHorizontalOffset;                        // 0x000C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MinHorizontalSpawnOffset;                          // 0x0010(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxHorizontalSpawnOffset;                          // 0x0014(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShouldLookForCollisionOnOffset;                   // 0x0018(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         OffsetOnCollision;                                 // 0x001C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FDangerZoneSpawnOptions;

// ScriptStruct GbxGame.GbxDeathHandler
// 0x0000 (0x0008 - 0x0008)
struct FGbxDeathHandler final : public FGbxHasStructType
{
};
DUMPER7_ASSERTS_FGbxDeathHandler;

// ScriptStruct GbxGame.GbxSkillComponentDataItem_DamageModifierEx
// 0x0040 (0x0068 - 0x0028)
struct FGbxSkillComponentDataItem_DamageModifierEx final : public FGbxSkillComponentDataItem
{
public:
	TArray<FGameDataHandleProperty_>              ModifierDefs;                                      // 0x0028(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	EGbxSkillComponentDamageModifierMode          ModifierMode;                                      // 0x0038(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOverrideModifierContext;                          // 0x0039(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxInlineStruct                       ActivationStrategy;                                // 0x0040(0x0018)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FGbxInlineStruct>               Strategies;                                        // 0x0058(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxSkillComponentDataItem_DamageModifierEx;

// ScriptStruct GbxGame.GbxSkillComponentData_DamageModifierEx
// 0x0038 (0x0068 - 0x0030)
struct FGbxSkillComponentData_DamageModifierEx final : public FGbxSkillComponentData
{
public:
	struct FGbxInlineStruct                       DefaultActivationStrategy;                         // 0x0030(0x0018)(Edit, NativeAccessSpecifierPrivate)
	TArray<struct FGbxInlineStruct>               DefaultStrategies;                                 // 0x0048(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FGbxSkillComponentDataItem_DamageModifierEx> Profiles;                             // 0x0058(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxSkillComponentData_DamageModifierEx;

// ScriptStruct GbxGame.GbxDecoAnimState
// 0x0020 (0x0020 - 0x0000)
struct FGbxDecoAnimState final
{
public:
	int32                                         CurrStateIdx;                                      // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PrevStateIdx;                                      // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         IdleAnimIdx;                                       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TransitionIdx;                                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         LastPlayedIdleStateIdx;                            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         LastPlayedIdleIdx;                                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_18[0x8];                                       // 0x0018(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxDecoAnimState;

// ScriptStruct GbxGame.CSVStatColumn
// 0x0030 (0x0030 - 0x0000)
struct FCSVStatColumn final
{
public:
	ECSVSummaryStatType                           summary;                                           // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FGameDataHandleProperty_                      attribute;                                         // 0x0008(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ColumnName;                                        // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FCSVStatColumn;

// ScriptStruct GbxGame.GbxDecoCharacterBodyState
// 0x0000 (0x0220 - 0x0220)
struct FGbxDecoCharacterBodyState : public FInteractiveObjectBodyState
{
};
DUMPER7_ASSERTS_FGbxDecoCharacterBodyState;

// ScriptStruct GbxGame.LightProjectileParticlePoolData
// 0x0010 (0x0010 - 0x0000)
struct FLightProjectileParticlePoolData final
{
public:
	class UFXSystemComponent*                     Component;                                         // 0x0000(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FLightProjectileParticlePoolData;

// ScriptStruct GbxGame.GbxDecoCharacterDef
// 0x0148 (0x0490 - 0x0348)
struct FGbxDecoCharacterDef : public FInteractiveObjectDef
{
public:
	FGbxDefPtrProperty_                           DecoAnimDef;                                       // 0x0348(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FGbxDecoAnimStateData>          AnimStates;                                        // 0x0360(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	FGameDataHandleProperty_                      Rotation;                                          // 0x0370(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UGbxRotationData>        RotationData;                                      // 0x0388(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGbxShapeConfig                        ProximityTriggerShapeConfig;                       // 0x03B0(0x0038)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FVector                                ProximityTriggerShapeOffset;                       // 0x03E8(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         InteractionStopDistance;                           // 0x0400(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_404[0x4];                                      // 0x0404(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FGbxDefPtrProperty_                           PerchUser;                                         // 0x0408(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class USkeleton>               TargetPrimarySkeleton;                             // 0x0420(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bShareGestaltTransientMesh;                        // 0x0448(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_449[0x7];                                      // 0x0449(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  PlayTaggedDialogEventOnInteract;                   // 0x0450(0x0020)(Edit, NativeAccessSpecifierPrivate)
	FGameDataHandleProperty_                      InteractPrompt;                                    // 0x0470(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bDisplayIdleTalkPrompt;                            // 0x0488(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_489[0x7];                                      // 0x0489(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxDecoCharacterDef;

// ScriptStruct GbxGame.GbxDecoCharacterTaggedAnimDef
// 0x0050 (0x0070 - 0x0020)
struct FGbxDecoCharacterTaggedAnimDef final : public FTaggedAnimDef
{
public:
	TMap<struct FGameplayTag, TSoftObjectPtr<class UAnimSequenceBase>> Anims;                        // 0x0020(0x0050)(Edit, UObjectWrapper, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxDecoCharacterTaggedAnimDef;

// ScriptStruct GbxGame.GbxSkillComponentData_Delegate_EventEx
// 0x0040 (0x0068 - 0x0028)
struct FGbxSkillComponentData_Delegate_EventEx final : public FGbxSkillComponentDataItem
{
public:
	struct FGbxInlineStruct                       Delegate;                                          // 0x0028(0x0018)(Edit, NativeAccessSpecifierPublic)
	struct FGbxInlineStruct                       ActivationStrategy;                                // 0x0040(0x0018)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FGbxInlineStruct>               Strategies;                                        // 0x0058(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxSkillComponentData_Delegate_EventEx;

// ScriptStruct GbxGame.GbxSkillComponentData_DelegateEx
// 0x0038 (0x0068 - 0x0030)
struct FGbxSkillComponentData_DelegateEx final : public FGbxSkillComponentData
{
public:
	TArray<struct FGbxSkillComponentData_Delegate_EventEx> events;                                   // 0x0030(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	struct FGbxInlineStruct                       DefaultActivationStrategy;                         // 0x0040(0x0018)(Edit, NativeAccessSpecifierPrivate)
	TArray<struct FGbxInlineStruct>               DefaultStrategies;                                 // 0x0058(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxSkillComponentData_DelegateEx;

// ScriptStruct GbxGame.GbxDialogAudioProvider
// 0x0000 (0x0300 - 0x0300)
struct FGbxDialogAudioProvider : public FGbxAudioProvider
{
};
DUMPER7_ASSERTS_FGbxDialogAudioProvider;

// ScriptStruct GbxGame.MissionActionType_DebugPrint
// 0x0018 (0x0038 - 0x0020)
struct FMissionActionType_DebugPrint final : public FMissionActionTypeBase
{
public:
	class FString                                 DebugPrintString;                                  // 0x0020(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDebugPrintOnLog;                                  // 0x0030(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDebugPrintOnScreen;                               // 0x0031(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FColor                                 MessageColor;                                      // 0x0034(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FMissionActionType_DebugPrint;

// ScriptStruct GbxGame.GbxDialogAudioProviderDef
// 0x0000 (0x0148 - 0x0148)
struct FGbxDialogAudioProviderDef final : public FGbxAudioProviderDef
{
};
DUMPER7_ASSERTS_FGbxDialogAudioProviderDef;

// ScriptStruct GbxGame.GbxSkillComponentData_DelegateData_ActorHit
// 0x0018 (0x0020 - 0x0008)
struct FGbxSkillComponentData_DelegateData_ActorHit final : public FGbxSkillComponentData_DelegateData
{
public:
	struct FGbxInlineStruct                       filter;                                            // 0x0008(0x0018)(Edit, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxSkillComponentData_DelegateData_ActorHit;

// ScriptStruct GbxGame.DistributedSpeakerInfo
// 0x0020 (0x0020 - 0x0000)
struct alignas(0x08) FDistributedSpeakerInfo final
{
public:
	uint8                                         Pad_0[0x20];                                       // 0x0000(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FDistributedSpeakerInfo;

// ScriptStruct GbxGame.MissionActionCondition_Spawner
// 0x0010 (0x0020 - 0x0010)
struct FMissionActionCondition_Spawner final : public FMissionActionCondition
{
public:
	struct FMissionAliasRef                       Spawner;                                           // 0x0010(0x000C)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	EMissionActionConditionSpawnerStateQuery      QueryType;                                         // 0x001C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FMissionActionCondition_Spawner;

// ScriptStruct GbxGame.RecentDialogPerformanceInfo
// 0x0040 (0x0040 - 0x0000)
struct FRecentDialogPerformanceInfo final
{
public:
	double                                        ExpirationTime;                                    // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8[0x10];                                       // 0x0008(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxDialogLineRef                      LineRef;                                           // 0x0018(0x0028)(NoDestructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FRecentDialogPerformanceInfo;

// ScriptStruct GbxGame.QuietTimeTracker
// 0x0080 (0x0080 - 0x0000)
struct FQuietTimeTracker final
{
public:
	uint8                                         Pad_0[0x8];                                        // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TWeakObjectPtr<class UObject>                 ScopeObject;                                       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_10[0x40];                                      // 0x0010(0x0040)(Fixing Size After Last Property [ Dumper-7 ])
	class UQuietTimePredicate*                    ScopePredicate;                                    // 0x0050(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_58[0x28];                                      // 0x0058(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FQuietTimeTracker;

// ScriptStruct GbxGame.GpsTestSettings_IsDead
// 0x0008 (0x0088 - 0x0080)
struct FGpsTestSettings_IsDead final : public FGpsTestSettings
{
public:
	EGpsTest_Death                                PreferAliveOrDead;                                 // 0x0080(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAllowActorsThatAreNeverAlive;                     // 0x0084(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsTestSettings_IsDead;

// ScriptStruct GbxGame.DialogLookupResult
// 0x0030 (0x0030 - 0x0000)
struct FDialogLookupResult final
{
public:
	struct FGbxDialogLineRef                      LineRef;                                           // 0x0000(0x0028)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	int32                                         Quality;                                           // 0x0028(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FDialogLookupResult;

// ScriptStruct GbxGame.DialogLookupResultBucket
// 0x0018 (0x0018 - 0x0000)
struct FDialogLookupResultBucket final
{
public:
	TArray<struct FDialogLookupResult>            Results;                                           // 0x0000(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                         Quality;                                           // 0x0010(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FDialogLookupResultBucket;

// ScriptStruct GbxGame.DialogLookupDecision
// 0x0048 (0x0048 - 0x0000)
struct FDialogLookupDecision final
{
public:
	struct FGbxDialogConditionRequirement         LookupRequirement;                                 // 0x0000(0x0040)(Edit, NativeAccessSpecifierPublic)
	ECachedResultLifetime                         CachedResultLifetime;                              // 0x0040(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	uint32                                        DecisionNumber;                                    // 0x0044(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FDialogLookupDecision;

// ScriptStruct GbxGame.DialogDecisionTree
// 0x0030 (0x0030 - 0x0000)
struct FDialogDecisionTree final
{
public:
	TArray<struct FDialogLookupDecision>          Decisions;                                         // 0x0000(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FDialogDecisionNode>            DecisionNodes;                                     // 0x0010(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FDialogLookupResultBucket>      ResultBuckets;                                     // 0x0020(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FDialogDecisionTree;

// ScriptStruct GbxGame.GbxDialogGameDataCategories_DONTUSE
// 0x0001 (0x0001 - 0x0000)
struct FGbxDialogGameDataCategories_DONTUSE final
{
public:
	uint8                                         Pad_0[0x1];                                        // 0x0000(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxDialogGameDataCategories_DONTUSE;

// ScriptStruct GbxGame.GpsTestSettings_IsDamagingMe
// 0x0020 (0x00A0 - 0x0080)
struct FGpsTestSettings_IsDamagingMe final : public FGpsTestSettings
{
public:
	struct FGbxBinding_Float                      Decay;                                             // 0x0080(0x0020)(Edit, Protected, NativeAccessSpecifierProtected)
};
DUMPER7_ASSERTS_FGpsTestSettings_IsDamagingMe;

// ScriptStruct GbxGame.GbxDialogGestureWeight_ValueResolver
// 0x0000 (0x0008 - 0x0008)
struct FGbxDialogGestureWeight_ValueResolver final : public FAttributeValueResolver
{
};
DUMPER7_ASSERTS_FGbxDialogGestureWeight_ValueResolver;

// ScriptStruct GbxGame.GbxRotationTargetModifier
// 0x0018 (0x0068 - 0x0050)
struct FGbxRotationTargetModifier : public FGbxRotationNodeBaseState
{
public:
	uint8                                         Pad_50[0x18];                                      // 0x0050(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxRotationTargetModifier;

// ScriptStruct GbxGame.GbxRotationTargetModifier_AlphaScale
// 0x0000 (0x0068 - 0x0068)
struct FGbxRotationTargetModifier_AlphaScale final : public FGbxRotationTargetModifier
{
};
DUMPER7_ASSERTS_FGbxRotationTargetModifier_AlphaScale;

// ScriptStruct GbxGame.InventoryBodyControlInput
// 0x0098 (0x00B0 - 0x0018)
struct FInventoryBodyControlInput : public FGbxDef
{
public:
	uint8                                         bAlwaysUpdate : 1;                                 // 0x0018(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	EInventoryBodyControlUpdateEvent              UpdateEvent;                                       // 0x0019(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bAddInputOnUpdateEvent : 1;                        // 0x001A(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	EInventoryBodyControlUpdateEvent              ResetEvent;                                        // 0x001B(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EInventoryControlInputHandler                 InputHandler;                                      // 0x001C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAttributeInit                      InputValue;                                        // 0x0020(0x0050)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	int32                                         UseModeContextBitmask;                             // 0x0070(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FGbxDefPtrProperty_                           InputReceivedAudio;                                // 0x0078(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           InputReceivedControlRtpc;                          // 0x0090(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bAttachAudioToBone : 1;                            // 0x00A8(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FInventoryBodyControlInput;

// ScriptStruct GbxGame.GbxDialogIsSpeaking_ValueResolver
// 0x0000 (0x0008 - 0x0008)
struct FGbxDialogIsSpeaking_ValueResolver final : public FAttributeValueResolver
{
};
DUMPER7_ASSERTS_FGbxDialogIsSpeaking_ValueResolver;

// ScriptStruct GbxGame.GbxDialogMoodsProvider
// 0x0038 (0x0038 - 0x0000)
struct FGbxDialogMoodsProvider final
{
public:
	uint8                                         Pad_0[0x8];                                        // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UGbxTrick_Mood*                         CurrentMoodTrick;                                  // 0x0008(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_10[0x8];                                       // 0x0010(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UGbxTrick*                              CurrentGestureTrick;                               // 0x0018(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_20[0x18];                                      // 0x0020(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxDialogMoodsProvider;

// ScriptStruct GbxGame.GbxDialogMoodWeight_ValueResolver
// 0x0000 (0x0008 - 0x0008)
struct FGbxDialogMoodWeight_ValueResolver final : public FAttributeValueResolver
{
};
DUMPER7_ASSERTS_FGbxDialogMoodWeight_ValueResolver;

// ScriptStruct GbxGame.GbxRotationTargetModifierData_DistanceBasedAlphaScale
// 0x0018 (0x0020 - 0x0008)
struct FGbxRotationTargetModifierData_DistanceBasedAlphaScale final : public FGbxRotationTargetModifierData
{
public:
	struct FNumericRange                          AlphaScaleRange;                                   // 0x0008(0x0008)(NoDestructor, NativeAccessSpecifierPublic)
	struct FNumericRange                          DistanceRange;                                     // 0x0010(0x0008)(NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bInvertScaling;                                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxRotationTargetModifierData_DistanceBasedAlphaScale;

// ScriptStruct GbxGame.SyncToUseRateData
// 0x0008 (0x0008 - 0x0000)
struct FSyncToUseRateData final
{
public:
	float                                         MinUseRate;                                        // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxUseRate;                                        // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSyncToUseRateData;

// ScriptStruct GbxGame.CurrentDialogPerformanceInfo
// 0x0070 (0x0070 - 0x0000)
struct FCurrentDialogPerformanceInfo final
{
public:
	int32                                         DialogThreadID;                                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   Performance;                                       // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAudioPlaybackInstance              PlayingAudioInstance;                              // 0x0010(0x0018)(NativeAccessSpecifierPublic)
	bool                                          bForcingOwnerRelevantForEcho;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxDialogLineRef                      DialogLineRef;                                     // 0x0030(0x0028)(NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_58[0x18];                                      // 0x0058(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FCurrentDialogPerformanceInfo;

// ScriptStruct GbxGame.DialogContext
// 0x02E8 (0x02E8 - 0x0000)
struct alignas(0x08) FDialogContext final
{
public:
	uint8                                         Pad_0[0xC];                                        // 0x0000(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   PreferredSpeakerName;                              // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x2D4];                                     // 0x0014(0x02D4)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FDialogContext;

// ScriptStruct GbxGame.GbxProfileProgressVaultActiveRole
// 0x0028 (0x0028 - 0x0000)
struct FGbxProfileProgressVaultActiveRole final
{
public:
	struct FSoftClassPath                         Class;                                             // 0x0000(0x0020)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   path;                                              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxProfileProgressVaultActiveRole;

// ScriptStruct GbxGame.GbxDialogVoicePitchOffset_ValueResolver
// 0x0000 (0x0008 - 0x0008)
struct FGbxDialogVoicePitchOffset_ValueResolver final : public FAttributeValueResolver
{
};
DUMPER7_ASSERTS_FGbxDialogVoicePitchOffset_ValueResolver;

// ScriptStruct GbxGame.GbxUnlockConditionData_GroupProgressPointsSpent
// 0x0060 (0x0068 - 0x0008)
struct FGbxUnlockConditionData_GroupProgressPointsSpent final : public FGbxUnlockConditionDataProgressGraph
{
public:
	TArray<class FName>                           GroupRefNames;                                     // 0x0008(0x0010)(Edit, ZeroConstructor, NoClear, NativeAccessSpecifierPrivate)
	struct FGbxAttributeInit                      ProgressPoints;                                    // 0x0018(0x0050)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxUnlockConditionData_GroupProgressPointsSpent;

// ScriptStruct GbxGame.GbxDiscoveryDiscovererDef
// 0x0038 (0x0050 - 0x0018)
struct FGbxDiscoveryDiscovererDef final : public FGbxDef
{
public:
	EGbxDiscoveryDiscovererType                   DiscovererType;                                    // 0x0018(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftClassPtr<class UClass>>           DiscoveryProviders;                                // 0x0020(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	int32                                         MaxLocationsToRefreshPerTick;                      // 0x0030(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEvaluateLocationsPeriodically;                    // 0x0034(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NumLocationsToEvaluatePerTick;                     // 0x0038(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinQuadTreeSize;                                   // 0x003C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxLocationsToEvaluatePresentationPerTick;         // 0x0040(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        DistanceTraveledMetricsThreshold;                  // 0x0048(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxDiscoveryDiscovererDef;

// ScriptStruct GbxGame.GbxDiscoveryGeneratorDef
// 0x0000 (0x0018 - 0x0018)
struct FGbxDiscoveryGeneratorDef final : public FGbxDef
{
};
DUMPER7_ASSERTS_FGbxDiscoveryGeneratorDef;

// ScriptStruct GbxGame.GbxProgressionCommand_ActivateNode
// 0x0030 (0x0038 - 0x0008)
struct FGbxProgressionCommand_ActivateNode final : public FGbxProgressionCommand
{
public:
	struct FGbxUnlockableGroupNodeRef             GroupAndNode;                                      // 0x0008(0x0028)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bDeactivateAllNodesInGroupBeforeActivation;        // 0x0030(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bActivate;                                         // 0x0031(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ActivationLevel;                                   // 0x0034(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxProgressionCommand_ActivateNode;

// ScriptStruct GbxGame.GbxProgressPointsAmount
// 0x0068 (0x0068 - 0x0000)
struct FGbxProgressPointsAmount final
{
public:
	FGbxDefPtrProperty_                           PointsPool;                                        // 0x0000(0x0018)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGbxAttributeInit                      Amount;                                            // 0x0018(0x0050)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxProgressPointsAmount;

// ScriptStruct GbxGame.GbxDiscoveryRegionMapDef
// 0x0080 (0x0098 - 0x0018)
struct FGbxDiscoveryRegionMapDef final : public FGbxDef
{
public:
	int32                                         GridVersion;                                       // 0x0018(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBox                                   WorldLevelBounds;                                  // 0x0020(0x0038)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FIntVector2                            GridSize;                                          // 0x0058(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_60[0x10];                                      // 0x0060(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<FGbxDefPtrProperty_>                   regions;                                           // 0x0070(0x0010)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	class FString                                 CompressedGridData;                                // 0x0080(0x0010)(Edit, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        GridChecksum;                                      // 0x0090(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxDiscoveryRegionMapDef;

// ScriptStruct GbxGame.GbxMomentNodeState_StopTrick
// 0x0008 (0x0078 - 0x0070)
struct FGbxMomentNodeState_StopTrick final : public FGbxMomentNodeState
{
public:
	uint8                                         Pad_70[0x8];                                       // 0x0070(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxMomentNodeState_StopTrick;

// ScriptStruct GbxGame.GbxDiscoveryDiscoveredKey
// 0x0030 (0x0030 - 0x0000)
struct FGbxDiscoveryDiscoveredKey final
{
public:
	FGbxDefPtrProperty_                           AsMetaLocation;                                    // 0x0000(0x0018)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGbxDiscoveryDiscoveredLiveActor       AsLiveActor;                                       // 0x0018(0x0018)(Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxDiscoveryDiscoveredKey;

// ScriptStruct GbxGame.GbxStatusEffectPopFilter
// 0x0010 (0x0010 - 0x0000)
struct FGbxStatusEffectPopFilter final
{
public:
	bool                                          bFilterByOwner;                                    // 0x0000(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                owner;                                             // 0x0008(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxStatusEffectPopFilter;

// ScriptStruct GbxGame.GbxDiscoverySecondaryMapData
// 0x0080 (0x0080 - 0x0000)
struct FGbxDiscoverySecondaryMapData final
{
public:
	FGbxDefPtrProperty_                           MapDef;                                            // 0x0000(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_18[0x8];                                       // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             MapTransform;                                      // 0x0020(0x0060)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxDiscoverySecondaryMapData;

// ScriptStruct GbxGame.GbxMomentNodeState_UsePerch
// 0x0060 (0x00D0 - 0x0070)
struct FGbxMomentNodeState_UsePerch final : public FGbxMomentNodeState
{
public:
	uint8                                         Pad_70[0x60];                                      // 0x0070(0x0060)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxMomentNodeState_UsePerch;

// ScriptStruct GbxGame.InventoryScriptAspect
// 0x0030 (0x0060 - 0x0030)
struct FInventoryScriptAspect : public FInventoryAspect
{
public:
	TSoftClassPtr<class UClass>                   Script;                                            // 0x0030(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   Tag;                                               // 0x0058(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FInventoryScriptAspect;

// ScriptStruct GbxGame.GbxDiscoveryViewableMapRegionZoomInfo
// 0x0030 (0x0030 - 0x0000)
struct FGbxDiscoveryViewableMapRegionZoomInfo final
{
public:
	FGbxDefPtrProperty_                           region;                                            // 0x0000(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                DefaultZoom;                                       // 0x0018(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxDiscoveryViewableMapRegionZoomInfo;

// ScriptStruct GbxGame.GbxDiscoveryViewableMapDef
// 0x0268 (0x0280 - 0x0018)
struct FGbxDiscoveryViewableMapDef : public FGbxDef
{
public:
	class FName                                   WorldName;                                         // 0x0018(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsDetailedView;                                   // 0x0020(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              DefaultCameraCenter;                               // 0x0028(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           MapViewerBehavior;                                 // 0x0038(0x0018)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EGbxDiscoveryViewableMapBoundsSource          WorldLevelBoundsSource;                            // 0x0050(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBox                                   WorldLevelBounds;                                  // 0x0058(0x0038)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                         AdditionalPaddingPercentageForWorldBounds;         // 0x0090(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bUseAnEffectivelySquareWorld;                      // 0x0094(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	FGbxDefPtrProperty_                           RegionMap;                                         // 0x0098(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           DefaultRegion;                                     // 0x00B0(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	FGbxDefPtrProperty_                           RootMap;                                           // 0x00C8(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGbxDiscoveryDetailedMapSection> DetailedMapSections;                              // 0x00E0(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   MapActor;                                          // 0x00F0(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterialInterface>      FogMaterial;                                       // 0x0118(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MapActorScale;                                     // 0x0140(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_144[0x4];                                      // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBox                                   MapActorPanningBounds;                             // 0x0148(0x0038)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FTransform                             PrimaryMapTransform;                               // 0x0180(0x0060)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGbxDiscoverySecondaryMapData>  SecondaryMaps;                                     // 0x01E0(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bUseOtherMapAsPrimaryMap;                          // 0x01F0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1F1[0x7];                                      // 0x01F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FGbxDefPtrProperty_                           AssociatedPrimaryMap;                              // 0x01F8(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFloatRange                            RegionTraceRange;                                  // 0x0210(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECollisionChannel                             RegionTraceChannel;                                // 0x0220(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseOverrideUnfog;                                 // 0x0221(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_222[0x2];                                      // 0x0222(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxDiscoveryUnfogData                 OverrideUnfogData;                                 // 0x0224(0x001C)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FGbxDiscoveryViewableMapRegionZoomInfo> RegionDefaultZoom;                         // 0x0240(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bUseIncludeOnlySpecificRegions;                    // 0x0250(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_251[0x7];                                      // 0x0251(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<FGbxDefPtrProperty_>                   IncludeOnlySpecificRegions;                        // 0x0258(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	bool                                          bUseExcludeSpecificRegions;                        // 0x0268(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_269[0x7];                                      // 0x0269(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<FGbxDefPtrProperty_>                   ExcludeSpecificRegions;                            // 0x0270(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxDiscoveryViewableMapDef;

// ScriptStruct GbxGame.InventoryRarityDataTableValueResolver
// 0x0010 (0x0018 - 0x0008)
struct FInventoryRarityDataTableValueResolver final : public FAttributeValueResolver
{
public:
	class FName                                   RarityTableColumn;                                 // 0x0008(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EGbxType                                      ResolvedType;                                      // 0x0010(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FInventoryRarityDataTableValueResolver;

// ScriptStruct GbxGame.GbxDroneValueResolver
// 0x0008 (0x0010 - 0x0008)
struct FGbxDroneValueResolver final : public FAttributeValueResolver
{
public:
	EGbxDroneAttributeValueType                   Value;                                             // 0x0008(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxDroneValueResolver;

// ScriptStruct GbxGame.GbxEffectRelevanceDef
// 0x0010 (0x0028 - 0x0018)
struct FGbxEffectRelevanceDef final : public FGbxDef
{
public:
	float                                         AlwaysRelevantDistance;                            // 0x0018(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxDistance;                                       // 0x001C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PlayerSourceInfluence;                             // 0x0020(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinRadiusForComplexVisibilityTest;                 // 0x0024(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxEffectRelevanceDef;

// ScriptStruct GbxGame.GbxRewardRef
// 0x0018 (0x0018 - 0x0000)
struct FGbxRewardRef final
{
public:
	struct FGbxInlineStruct                       RewardReference;                                   // 0x0000(0x0018)(Edit, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxRewardRef;

// ScriptStruct GbxGame.ImpactAudioParameter
// 0x0040 (0x0040 - 0x0000)
struct alignas(0x08) FImpactAudioParameter final
{
public:
	bool                                          bIsSwitch;                                         // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FGbxDefPtrProperty_                           TypeSwitch;                                        // 0x0008(0x0018)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           TypeRtpc;                                          // 0x0020(0x0018)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TypeRtpcValue;                                     // 0x0038(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FImpactAudioParameter;

// ScriptStruct GbxGame.GpsGeneratorSettings_Projectiles
// 0x0050 (0x0218 - 0x01C8)
struct FGpsGeneratorSettings_Projectiles final : public FGpsGeneratorSettings_Actors
{
public:
	struct FGameplayTagQuery                      GameplayTagQuery;                                  // 0x01C8(0x0048)(Edit, Protected, NativeAccessSpecifierProtected)
	bool                                          bUseGameplayTagQuery;                              // 0x0210(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_211[0x7];                                      // 0x0211(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsGeneratorSettings_Projectiles;

// ScriptStruct GbxGame.ReplicatedStopImpactEffectRequest
// 0x0008 (0x0018 - 0x0010)
struct FReplicatedStopImpactEffectRequest final : public FCosmeticReplicationRequest
{
public:
	uint8                                         Pad_10[0x8];                                       // 0x0010(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FReplicatedStopImpactEffectRequest;

// ScriptStruct GbxGame.GbxEntitlementDef
// 0x0018 (0x0030 - 0x0018)
struct FGbxEntitlementDef final : public FGbxDef
{
public:
	struct FGbxInlineStruct                       Strategy;                                          // 0x0018(0x0018)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxEntitlementDef;

// ScriptStruct GbxGame.GpsGeneratorSettings_Perches
// 0x00D0 (0x0110 - 0x0040)
struct FGpsGeneratorSettings_Perches final : public FGpsGeneratorSettings
{
public:
	EPerchSearchArea                              SearchArea;                                        // 0x0040(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           PerchSearchTag;                                    // 0x0044(0x0008)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxBinding_Float                      Radius;                                            // 0x0050(0x0020)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FGbxBinding_Vector                     Origin;                                            // 0x0070(0x0098)(Edit, Protected, NativeAccessSpecifierProtected)
	EGbxTerritoryArea                             TerritoryArea;                                     // 0x0108(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsGeneratorSettings_Perches;

// ScriptStruct GbxGame.GbxEntitlementSerialNumber
// 0x0018 (0x0040 - 0x0028)
struct FGbxEntitlementSerialNumber final : public FGbxSerialNumberClass
{
public:
	uint8                                         Pad_28[0x18];                                      // 0x0028(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxEntitlementSerialNumber;

// ScriptStruct GbxGame.HazardInteractionDamageOverlapData
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x04) FHazardInteractionDamageOverlapData final
{
public:
	uint8                                         Pad_0[0x8];                                        // 0x0000(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FHazardInteractionDamageOverlapData;

// ScriptStruct GbxGame.GbxExperienceFunction_Exponential
// 0x0028 (0x0040 - 0x0018)
struct FGbxExperienceFunction_Exponential final : public FGbxExperienceProgressionFunction
{
public:
	double                                        BaseValue;                                         // 0x0018(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        basemultiplier;                                    // 0x0020(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        Multiplier;                                        // 0x0028(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        Power;                                             // 0x0030(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        Offset;                                            // 0x0038(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxExperienceFunction_Exponential;

// ScriptStruct GbxGame.GbxFeedbackCategories_DONTUSE
// 0x0001 (0x0001 - 0x0000)
struct FGbxFeedbackCategories_DONTUSE final
{
public:
	uint8                                         Pad_0[0x1];                                        // 0x0000(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxFeedbackCategories_DONTUSE;

// ScriptStruct GbxGame.GbxFeedbackDef
// 0x03B0 (0x03C8 - 0x0018)
struct FGbxFeedbackDef final : public FGbxDef
{
public:
	int32                                         FeedbackType;                                      // 0x0018(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGbxRumbleChannel>              ControllerRumbleDetails;                           // 0x0020(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<FGameDataHandleProperty_>              ExternalControllerRumbleDetails;                   // 0x0030(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FGbxRumbleChannel>              MinControllerRumbleDetails;                        // 0x0040(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<FGameDataHandleProperty_>              MinExternalControllerRumbleDetails;                // 0x0050(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bAbsoluteControllerRumbleScale;                    // 0x0060(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FGameDataHandleProperty_                      CameraShakeBase;                                   // 0x0068(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      CameraShakeDirectionalY;                           // 0x0080(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RandomShakeInterval;                               // 0x0098(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxRandomShakeScalar;                              // 0x009C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinRandomShakeScalar;                              // 0x00A0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUnique;                                           // 0x00A4(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bResetTimeOnReplay;                                // 0x00A5(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCanPlayWhilePaused;                               // 0x00A6(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseContinuousAttributeScale;                      // 0x00A7(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxAttributeInit                      ContinuousScale;                                   // 0x00A8(0x0050)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FGbxFloatCurve                         ContinuousScaleCurve;                              // 0x00F8(0x00B0)(Edit, NativeAccessSpecifierPublic)
	bool                                          bScaleDownOverTime;                                // 0x01A8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseScaleOverTimeCurve;                            // 0x01A9(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1AA[0x6];                                      // 0x01AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxFloatCurve                         ScaleOverTimeCurve;                                // 0x01B0(0x00B0)(Edit, NativeAccessSpecifierPublic)
	float                                         DefaultFalloffMinDistance;                         // 0x0260(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DefaultFalloffMaxDistance;                         // 0x0264(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      RadialBlur;                                        // 0x0268(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCenterAroundWorldSpaceLocation;                   // 0x0280(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_281[0x7];                                      // 0x0281(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FParameterizedScreenParticle           ParameterizedScreenParticle;                       // 0x0288(0x0068)(Edit, NativeAccessSpecifierPublic)
	bool                                          bLetSystemFinishAfterStopping;                     // 0x02F0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2F1[0x7];                                      // 0x02F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FGbxDefPtrProperty_                           AudioEvent;                                        // 0x02F8(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   StartUIMaterialEventName;                          // 0x0310(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FName, float>                      StartUIMaterialEventParams;                        // 0x0318(0x0050)(Edit, NativeAccessSpecifierPublic)
	class FName                                   StopUIMaterialEventName;                           // 0x0368(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FName, float>                      StopUIMaterialEventParams;                         // 0x0370(0x0050)(Edit, NativeAccessSpecifierPublic)
	bool                                          bLetAudioFinishAfterStopping;                      // 0x03C0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIgnoreCinematicLock;                              // 0x03C1(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3C2[0x6];                                      // 0x03C2(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxFeedbackDef;

// ScriptStruct GbxGame.GbxSkillActionExecFilter_SkillStateCondition
// 0x0000 (0x0008 - 0x0008)
struct FGbxSkillActionExecFilter_SkillStateCondition final : public FGbxSkillActionExecFilter
{
};
DUMPER7_ASSERTS_FGbxSkillActionExecFilter_SkillStateCondition;

// ScriptStruct GbxGame.InventoryStatsContainerValueResolver
// 0x0008 (0x0010 - 0x0008)
struct FInventoryStatsContainerValueResolver final : public FAttributeValueResolver
{
public:
	EGbxType                                      ResolvedType;                                      // 0x0008(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FInventoryStatsContainerValueResolver;

// ScriptStruct GbxGame.GbxSkillActionItemExec
// 0x0000 (0x0008 - 0x0008)
struct FGbxSkillActionItemExec : public FGbxHasStructType
{
};
DUMPER7_ASSERTS_FGbxSkillActionItemExec;

// ScriptStruct GbxGame.GbxSkillActionItemExec_StateMachineRegister
// 0x0018 (0x0020 - 0x0008)
struct FGbxSkillActionItemExec_StateMachineRegister final : public FGbxSkillActionItemExec
{
public:
	FGbxDefPtrProperty_                           Register;                                          // 0x0008(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxSkillActionItemExec_StateMachineRegister;

// ScriptStruct GbxGame.GbxAudioWeatherState
// 0x0028 (0x0028 - 0x0000)
struct alignas(0x08) FGbxAudioWeatherState final
{
public:
	class FName                                   StateName;                                         // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           Switch;                                            // 0x0008(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WetnessValue;                                      // 0x0020(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxAudioWeatherState;

// ScriptStruct GbxGame.GbxAudioNodeAspectState_FactValue
// 0x0038 (0x0088 - 0x0050)
struct FGbxAudioNodeAspectState_FactValue final : public FGbxAudioNodeAspectState_Data
{
public:
	uint8                                         Pad_50[0x38];                                      // 0x0050(0x0038)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxAudioNodeAspectState_FactValue;

// ScriptStruct GbxGame.GbxRotationTargetModifier_BlendBase
// 0x0028 (0x0090 - 0x0068)
struct alignas(0x10) FGbxRotationTargetModifier_BlendBase : public FGbxRotationTargetModifier
{
public:
	uint8                                         Pad_68[0x28];                                      // 0x0068(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxRotationTargetModifier_BlendBase;

// ScriptStruct GbxGame.GbxRotationTargetModifier_Blend
// 0x0000 (0x0090 - 0x0090)
struct FGbxRotationTargetModifier_Blend final : public FGbxRotationTargetModifier_BlendBase
{
};
DUMPER7_ASSERTS_FGbxRotationTargetModifier_Blend;

// ScriptStruct GbxGame.GbxAudioNodeAspectSettings_SetFact
// 0x0040 (0x0078 - 0x0038)
struct FGbxAudioNodeAspectSettings_SetFact final : public FGbxAudioNodeAspectSettings_Action
{
public:
	struct FFactAddress                           FactAddress;                                       // 0x0038(0x0038)(Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   FactValue;                                         // 0x0070(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxAudioNodeAspectSettings_SetFact;

// ScriptStruct GbxGame.ImpactEffectParams
// 0x0110 (0x0110 - 0x0000)
struct alignas(0x10) FImpactEffectParams final
{
public:
	uint8                                         Pad_0[0x110];                                      // 0x0000(0x0110)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FImpactEffectParams;

// ScriptStruct GbxGame.GbxAudioNodeAspectSettings_PrintFactValue
// 0x0038 (0x0070 - 0x0038)
struct FGbxAudioNodeAspectSettings_PrintFactValue final : public FGbxAudioNodeAspectSettings_Action
{
public:
	struct FFactAddress                           FactAddress;                                       // 0x0038(0x0038)(Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxAudioNodeAspectSettings_PrintFactValue;

// ScriptStruct GbxGame.GbxMomentNodeSettings_PlayCutscene
// 0x0190 (0x0368 - 0x01D8)
struct FGbxMomentNodeSettings_PlayCutscene : public FGbxMomentNodeSettings_PlaySequence
{
public:
	struct FGbxParam                              IntroDuration;                                     // 0x01D8(0x0038)(Edit, NativeAccessSpecifierPublic)
	bool                                          bUseCustomIntroCinematicMode;                      // 0x0210(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_211[0x7];                                      // 0x0211(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FGbxDefPtrProperty_                           IntroCinematicMode;                                // 0x0218(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bStartingFadeOut;                                  // 0x0230(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_231[0x3];                                      // 0x0231(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FColor                                 FadeColor;                                         // 0x0234(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseCustomCinematicMode;                           // 0x0238(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_239[0x7];                                      // 0x0239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FGbxDefPtrProperty_                           CinematicMode;                                     // 0x0240(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxParam                              SkipFadeOutDuration;                               // 0x0258(0x0038)(Edit, NativeAccessSpecifierPublic)
	bool                                          bOutroFadeIn;                                      // 0x0290(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_291[0x7];                                      // 0x0291(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              OutroFadeInDelay;                                  // 0x0298(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              OutroFadeInDuration;                               // 0x02D0(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              SkipCutscenesBlackoutDuration;                     // 0x0308(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FColor                                 EndingFadeColor;                                   // 0x0340(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_344[0x4];                                      // 0x0344(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxTrickRef                           PostCinematicTrick;                                // 0x0348(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bContinueMissionExecutionWhenSequenceEnds;         // 0x0360(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_361[0x7];                                      // 0x0361(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxMomentNodeSettings_PlayCutscene;

// ScriptStruct GbxGame.GbxAudioNodeAspectState_PrintFactValue
// 0x0038 (0x0088 - 0x0050)
struct FGbxAudioNodeAspectState_PrintFactValue final : public FGbxAudioNodeAspectState_Action
{
public:
	uint8                                         Pad_50[0x38];                                      // 0x0050(0x0038)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxAudioNodeAspectState_PrintFactValue;

// ScriptStruct GbxGame.GbxRotationTargetModifier_Distract
// 0x0078 (0x00E0 - 0x0068)
struct alignas(0x10) FGbxRotationTargetModifier_Distract final : public FGbxRotationTargetModifier
{
public:
	uint8                                         Pad_68[0x78];                                      // 0x0068(0x0078)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxRotationTargetModifier_Distract;

// ScriptStruct GbxGame.SpawnPointDef
// 0x0050 (0x00E0 - 0x0090)
struct FSpawnPointDef : public FGbxActorDef
{
public:
	TSoftObjectPtr<class USpawnPointBodyData>     Body;                                              // 0x0090(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<TSoftClassPtr<class UClass>>           Scripts;                                           // 0x00B8(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	FGameDataHandleProperty_                      audioprovider;                                     // 0x00C8(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FSpawnPointDef;

// ScriptStruct GbxGame.GbxAudioGraphSettings_If
// 0x0010 (0x0048 - 0x0038)
struct FGbxAudioGraphSettings_If final : public FGbxAudioGraphSettings_Sequencer
{
public:
	struct FFactExpression                        Condition;                                         // 0x0038(0x0010)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxAudioGraphSettings_If;

// ScriptStruct GbxGame.GbxAudioGraphSettings_Switch
// 0x0060 (0x0098 - 0x0038)
struct FGbxAudioGraphSettings_Switch final : public FGbxAudioGraphSettings_Sequencer
{
public:
	class FName                                   StateMachinePrefix;                                // 0x0038(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_40[0x8];                                       // 0x0040(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         DefaultState;                                      // 0x0048(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFactAddress                           FactAddress;                                       // 0x0050(0x0038)(Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                           FactValues;                                        // 0x0088(0x0010)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxAudioGraphSettings_Switch;

// ScriptStruct GbxGame.GbxAudioGraphState_Switch
// 0x0060 (0x01D8 - 0x0178)
struct FGbxAudioGraphState_Switch final : public FGbxAudioGraphState_Sequencer
{
public:
	uint8                                         Pad_178[0x60];                                     // 0x0178(0x0060)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxAudioGraphState_Switch;

// ScriptStruct GbxGame.GbxAudioGraphSettings_FactChange
// 0x0040 (0x0078 - 0x0038)
struct FGbxAudioGraphSettings_FactChange final : public FGbxAudioGraphSettings_Sequencer
{
public:
	struct FFactAddress                           FactAddress;                                       // 0x0038(0x0038)(Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ShouldFireOnStart;                                 // 0x0070(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxAudioGraphSettings_FactChange;

// ScriptStruct GbxGame.GbxNpcPlayerInfamyAwarenessLevel
// 0x000C (0x000C - 0x0000)
struct FGbxNpcPlayerInfamyAwarenessLevel final
{
public:
	float                                         AwarenessChances[0x3];                             // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxNpcPlayerInfamyAwarenessLevel;

// ScriptStruct GbxGame.GbxNpcPlayerGreetingData
// 0x0020 (0x0020 - 0x0000)
struct alignas(0x08) FGbxNpcPlayerGreetingData final
{
public:
	FGbxDefPtrProperty_                           DialogEvent;                                       // 0x0000(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           Trick;                                             // 0x0018(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxNpcPlayerGreetingData;

// ScriptStruct GbxGame.GbxNpcPlayerAwarenessData
// 0x0130 (0x0130 - 0x0000)
struct FGbxNpcPlayerAwarenessData final
{
public:
	struct FGbxNpcPlayerGreetingData              GreetingData[0x6];                                 // 0x0000(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FGbxParam                              ChanceToStartMinorEngage;                          // 0x00C0(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              MinorEngageChanceRollDuration;                     // 0x00F8(0x0038)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxNpcPlayerAwarenessData;

// ScriptStruct GbxGame.GbxNpcEngagePlayerGlobals
// 0x0D88 (0x0D88 - 0x0000)
struct FGbxNpcEngagePlayerGlobals final
{
public:
	struct FGbxParam                              MinorEngageDistance;                               // 0x0000(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              MajorEngageDistance;                               // 0x0038(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              MajorEngageDelay;                                  // 0x0070(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              NpcMinTurnBodyAngle;                               // 0x00A8(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              TurnAnimAtEndTimeThreshold;                        // 0x00E0(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              NpcFacingPlayerAngle;                              // 0x0118(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              PlayerFacingNpcHorizontalAngle;                    // 0x0150(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              PlayerFacingNpcVerticalAngle;                      // 0x0188(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              NearbyGreetingCooldown;                            // 0x01C0(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              HelloCooldown;                                     // 0x01F8(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              GoodbyeCooldown;                                   // 0x0230(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              IdleCooldown;                                      // 0x0268(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              IdleWarmup;                                        // 0x02A0(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              InUseCooldown;                                     // 0x02D8(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              MajorEngageTimeout;                                // 0x0310(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              MajorEngageTimeoutCooldown;                        // 0x0348(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              IdleGreetingPause;                                 // 0x0380(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              MinorEngageTimeout;                                // 0x03B8(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              MinorEngageTimeoutCooldown;                        // 0x03F0(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              ShowTalkPromptCondition;                           // 0x0428(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              MajorEngageCondition;                              // 0x0460(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              MinorEngageCondition;                              // 0x0498(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              CanMajorEngageNow;                                 // 0x04D0(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              CanEngageDuringActiveMission;                      // 0x0508(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              ForgetTime;                                        // 0x0540(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              HasStoppedThreshold;                               // 0x0578(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              StoppedForMajorEngageTargetLockTime;               // 0x05B0(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FDynamicUsabilityInteractionInfo       InteractionInfo;                                   // 0x05E8(0x0180)(Edit, NativeAccessSpecifierPublic)
	struct FGbxNpcPlayerAwarenessData             AwarenessData[0x5];                                // 0x0768(0x0130)(Edit, NativeAccessSpecifierPublic)
	struct FGbxNpcPlayerInfamyAwarenessLevel      InfamyAwarenessLevels[0x4];                        // 0x0D58(0x000C)(Edit, NoDestructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxNpcEngagePlayerGlobals;

// ScriptStruct GbxGame.GbxGameGlobalsAI
// 0x0DD0 (0x0EE0 - 0x0110)
struct FGbxGameGlobalsAI : public FGbxGlobalsAI
{
public:
	struct FGbxNpcEngagePlayerGlobals             NpcEngagePlayerSettings;                           // 0x0110(0x0D88)(Edit, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UGbxNavArea>             RoadNavArea;                                       // 0x0E98(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           PlayerBotDef;                                      // 0x0EC0(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TrackingReachabilityThreshold;                     // 0x0ED8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_EDC[0x4];                                      // 0x0EDC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxGameGlobalsAI;

// ScriptStruct GbxGame.GbxMomentNodeSettings_PlayDialogLines
// 0x0028 (0x00A8 - 0x0080)
struct FGbxMomentNodeSettings_PlayDialogLines final : public FGbxMomentNodeSettings
{
public:
	TArray<struct FGbxMomentDialogLineSlotPlayData> LineSlots;                                       // 0x0080(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bShowOnFinishedPinsForEachLine;                    // 0x0090(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOverrideStartDelaySeconds;                        // 0x0091(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_92[0x2];                                       // 0x0092(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         StartDelaySeconds;                                 // 0x0094(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ConversationName;                                  // 0x0098(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bWaitUntilSpeakerExists;                           // 0x00A0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxMomentNodeSettings_PlayDialogLines;

// ScriptStruct GbxGame.GbxPlayerBotDef
// 0x00C8 (0x00E0 - 0x0018)
struct FGbxPlayerBotDef final : public FGbxDef
{
public:
	struct FGbxGameBrainDef                       brain;                                             // 0x0018(0x0088)(Edit, Protected, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UGpsQueryAsset>          TargetingQuery;                                    // 0x00A0(0x0028)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	FGameDataHandleProperty_                      Perception;                                        // 0x00C8(0x0018)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
};
DUMPER7_ASSERTS_FGbxPlayerBotDef;

// ScriptStruct GbxGame.GbxSequenceAnimSetParams
// 0x0008 (0x0008 - 0x0000)
struct FGbxSequenceAnimSetParams final
{
public:
	struct FGameplayTag                           AnimSetKey;                                        // 0x0000(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxSequenceAnimSetParams;

// ScriptStruct GbxGame.GbxStatusEffectPresentationGraphItem_Channel
// 0x0038 (0x0038 - 0x0000)
struct alignas(0x08) FGbxStatusEffectPresentationGraphItem_Channel final
{
public:
	FGbxDefPtrProperty_                           ChannelDef;                                        // 0x0000(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGbxStatusEffectPresentationChannelPrecision  Precision;                                         // 0x0018(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  ChannelID;                                         // 0x001C(0x0010)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         RepBits;                                           // 0x002C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         RepOffset;                                         // 0x0030(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxStatusEffectPresentationGraphItem_Channel;

// ScriptStruct GbxGame.GbxStatusEffectPresentationGraphSettings
// 0x0028 (0x00D0 - 0x00A8)
struct FGbxStatusEffectPresentationGraphSettings final : public FGbxGraphSettings
{
public:
	TArray<struct FGbxStatusEffectPresentationGraphItem_Channel> Channels;                           // 0x00A8(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FGbxInlineStruct                       DefaultSeverityRate;                               // 0x00B8(0x0018)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxStatusEffectPresentationGraphSettings;

// ScriptStruct GbxGame.GbxVenueTags
// 0x0000 (0x0020 - 0x0020)
struct FGbxVenueTags final : public FNexusBitSet
{
};
DUMPER7_ASSERTS_FGbxVenueTags;

// ScriptStruct GbxGame.GbxPlayerGroupData
// 0x0038 (0x0038 - 0x0000)
struct alignas(0x08) FGbxPlayerGroupData final
{
public:
	FGbxDefPtrProperty_                           TeamDef;                                           // 0x0000(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           PlayerGroupDef;                                    // 0x0018(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxInstances;                                      // 0x0030(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCanBeUsedForMatchmaking;                          // 0x0034(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxPlayerGroupData;

// ScriptStruct GbxGame.GbxGameModeConfig
// 0x0408 (0x0410 - 0x0008)
struct FGbxGameModeConfig : public FGbxHasStructType
{
public:
	TSoftClassPtr<class UClass>                   GameModeClass;                                     // 0x0008(0x0028)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UClass>                   GameplayDirectorClassOverride;                     // 0x0030(0x0028)(Edit, AdvancedDisplay, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UClass>                   PlayerGroupClassOverride;                          // 0x0058(0x0028)(Edit, AdvancedDisplay, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UClass>                   GameSessionClassOverride;                          // 0x0080(0x0028)(Edit, AdvancedDisplay, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UClass>                   GameStateClassOverride;                            // 0x00A8(0x0028)(Edit, AdvancedDisplay, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UClass>                   PlayerControllerClassOverride;                     // 0x00D0(0x0028)(Edit, AdvancedDisplay, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UClass>                   PlayerStateClassOverride;                          // 0x00F8(0x0028)(Edit, AdvancedDisplay, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UClass>                   HUDClassOverride;                                  // 0x0120(0x0028)(Edit, AdvancedDisplay, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UClass>                   DefaultPawnClassOverride;                          // 0x0148(0x0028)(Edit, AdvancedDisplay, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UClass>                   SpectatorClassOverride;                            // 0x0170(0x0028)(Edit, AdvancedDisplay, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UClass>                   ReplaySpectatorPlayerControllerClassOverride;      // 0x0198(0x0028)(Edit, AdvancedDisplay, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UClass>                   ServerStatReplicatorClassOverride;                 // 0x01C0(0x0028)(Edit, AdvancedDisplay, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FGbxInlineStruct>               Modules;                                           // 0x01E8(0x0010)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<TSoftClassPtr<class UClass>>           ModuleConduits;                                    // 0x01F8(0x0010)(Edit, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TMap<class FName, struct FGbxParam>           ModuleParameters;                                  // 0x0208(0x0050)(Edit, Protected, NativeAccessSpecifierProtected)
	FGbxDefPtrProperty_                           InitialGameModePhase;                              // 0x0258(0x0018)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FDefSelectorConfigState>        DefSelectorStates;                                 // 0x0270(0x0010)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	int32                                         MaxSpectators;                                     // 0x0280(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         MaxPlayers;                                        // 0x0284(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FGbxPlayerGroupData>            PlayerGroups;                                      // 0x0288(0x0010)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	FGbxDefPtrProperty_                           RefreshManagerDef;                                 // 0x0298(0x0018)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGbxInlineStruct                       DeathHandler;                                      // 0x02B0(0x0018)(Edit, Protected, NativeAccessSpecifierProtected)
	class FName                                   HostVenue;                                         // 0x02C8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGbxVenueTags                          VenueTags;                                         // 0x02D0(0x0020)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                  UIStates;                                          // 0x02F0(0x0020)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                  UIStatesToRemove;                                  // 0x0310(0x0020)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                  InputContextsToRemove;                             // 0x0330(0x0020)(Edit, Protected, NativeAccessSpecifierProtected)
	TArray<FGbxDefPtrProperty_>                   AutoStartMissionSetDefs;                           // 0x0350(0x0010)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	struct FGbxInlineStruct                       GameModeUniqueData;                                // 0x0360(0x0018)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FGbxInlineStruct                       OptionUniqueData;                                  // 0x0378(0x0018)(Edit, Protected, NativeAccessSpecifierProtected)
	TArray<struct FGbxInlineStruct>               OptionsUniqueData;                                 // 0x0390(0x0010)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	struct FGbxGameModeTags                       GameModeTags;                                      // 0x03A0(0x0020)(Edit, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_3C0[0x50];                                     // 0x03C0(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxGameModeConfig;

// ScriptStruct GbxGame.GbxRewardData_Currency
// 0x0068 (0x0088 - 0x0020)
struct FGbxRewardData_Currency final : public FGbxRewardData
{
public:
	FGbxDefPtrProperty_                           currencytype;                                      // 0x0020(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxAttributeInit                      currencyamount;                                    // 0x0038(0x0050)(Edit, NoDestructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxRewardData_Currency;

// ScriptStruct GbxGame.GoreGameDataCategories_DONTUSE
// 0x0001 (0x0001 - 0x0000)
struct FGoreGameDataCategories_DONTUSE final
{
public:
	uint8                                         Pad_0[0x1];                                        // 0x0000(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGoreGameDataCategories_DONTUSE;

// ScriptStruct GbxGame.RefreshManagerDef
// 0x0030 (0x0048 - 0x0018)
struct FRefreshManagerDef final : public FGbxDef
{
public:
	TSoftClassPtr<class UClass>                   Class;                                             // 0x0018(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         UpdateInterval;                                    // 0x0040(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RefreshPlayerRange;                                // 0x0044(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FRefreshManagerDef;

// ScriptStruct GbxGame.GbxRewardData_InventoryItem
// 0x0070 (0x0090 - 0x0020)
struct FGbxRewardData_InventoryItem final : public FGbxRewardData
{
public:
	struct FInventoryItemSelectionData            InventoryItemSelectionData;                        // 0x0020(0x0068)(Edit, NativeAccessSpecifierPrivate)
	bool                                          bSingleSelectFromEach;                             // 0x0088(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxRewardData_InventoryItem;

// ScriptStruct GbxGame.GbxPlayerGroupDef
// 0x0008 (0x0020 - 0x0018)
struct FGbxPlayerGroupDef final : public FGbxDef
{
public:
	int32                                         MaxPlayers;                                        // 0x0018(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxPlayerGroupDef;

// ScriptStruct GbxGame.GbxGameModeModuleConduitData_Timer
// 0x0050 (0x0050 - 0x0000)
struct FGbxGameModeModuleConduitData_Timer final
{
public:
	class FName                                   TimerName;                                         // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TimeLimit;                                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        StartTime;                                         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsActive;                                         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        StartTimeOffset;                                   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsPaused;                                         // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        PausedTime;                                        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                           TriggeredEvents;                                   // 0x0038(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UGbxGameModeModuleConduit_Timer> OwnerPtr;                                  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxGameModeModuleConduitData_Timer;

// ScriptStruct GbxGame.GbxGameModeModuleConfigScripts_Basic
// 0x0028 (0x0030 - 0x0008)
struct FGbxGameModeModuleConfigScripts_Basic final : public FGbxGameModeModuleConfigScripts
{
public:
	TSoftClassPtr<class UClass>                   HostScript;                                        // 0x0008(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxGameModeModuleConfigScripts_Basic;

// ScriptStruct GbxGame.GbxGameModeModuleConfigScripts_DataLayer
// 0x0028 (0x0030 - 0x0008)
struct FGbxGameModeModuleConfigScripts_DataLayer final : public FGbxGameModeModuleConfigScripts
{
public:
	TSoftClassPtr<class UClass>                   HostScript;                                        // 0x0008(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxGameModeModuleConfigScripts_DataLayer;

// ScriptStruct GbxGame.GbxGameModeModuleConfig_DataLayer
// 0x0010 (0x00A8 - 0x0098)
struct FGbxGameModeModuleConfig_DataLayer final : public FGbxGameModeModuleConfig
{
public:
	TArray<TSoftObjectPtr<class UDataLayerAsset>> DataLayers;                                        // 0x0098(0x0010)(Edit, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
};
DUMPER7_ASSERTS_FGbxGameModeModuleConfig_DataLayer;

// ScriptStruct GbxGame.GbxGameModeModuleConfig_Facts
// 0x0020 (0x00B8 - 0x0098)
struct FGbxGameModeModuleConfig_Facts final : public FGbxGameModeModuleConfig
{
public:
	TArray<struct FFactChange>                    FactChanges;                                       // 0x0098(0x0010)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFactChange>                    PostCompletionFactChanges;                         // 0x00A8(0x0010)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
};
DUMPER7_ASSERTS_FGbxGameModeModuleConfig_Facts;

// ScriptStruct GbxGame.GbxGameModeModuleConfig_Matchmaking
// 0x0008 (0x00A0 - 0x0098)
struct FGbxGameModeModuleConfig_Matchmaking final : public FGbxGameModeModuleConfig
{
public:
	EGbxGameModeModuleConfig_Matchmaking_PartyHandling PartyHandling;                                // 0x0098(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxGameModeModuleConfig_Matchmaking;

// ScriptStruct GbxGame.GbxGameModeModuleConfigScripts_Timer
// 0x0028 (0x0030 - 0x0008)
struct FGbxGameModeModuleConfigScripts_Timer final : public FGbxGameModeModuleConfigScripts
{
public:
	TSoftClassPtr<class UClass>                   HostScript;                                        // 0x0008(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxGameModeModuleConfigScripts_Timer;

// ScriptStruct GbxGame.GbxGameModeModuleEventDef
// 0x0000 (0x0018 - 0x0018)
struct FGbxGameModeModuleEventDef final : public FGbxDef
{
};
DUMPER7_ASSERTS_FGbxGameModeModuleEventDef;

// ScriptStruct GbxGame.GrabItBody
// 0x000C (0x000C - 0x0000)
struct FGrabItBody final
{
public:
	class FName                                   BodyName;                                          // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bWorldSpace;                                       // 0x0008(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGrabItBody;

// ScriptStruct GbxGame.GbxSkillActionExecFilterDef
// 0x0010 (0x0028 - 0x0018)
struct FGbxSkillActionExecFilterDef final : public FGbxDef
{
public:
	TArray<struct FGbxInlineStruct>               Filters;                                           // 0x0018(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxSkillActionExecFilterDef;

// ScriptStruct GbxGame.GrabItParams
// 0x0040 (0x0040 - 0x0000)
struct FGrabItParams final
{
public:
	class AGbxCharacter*                          GrabCharacter;                                     // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bGrabHitBody;                                      // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGrabItBody                            MainGrabBody;                                      // 0x000C(0x000C)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FGrabItBody>                    SecondaryGrabBodies;                               // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                         MaxGrabDistance;                                   // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FlyToSpeed;                                        // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HoldDistance;                                      // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HoldRadius;                                        // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseGrabTime;                                      // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         GrabTime;                                          // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGrabItParams;

// ScriptStruct GbxGame.GbxGameSpawnGlobals
// 0x0008 (0x00C0 - 0x00B8)
struct FGbxGameSpawnGlobals : public FSpawnGlobals
{
public:
	int32                                         ExpectedCharacterSpawnCountMax;                    // 0x00B8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         ExpectedDecoCharacterSpawnCountMax;                // 0x00BC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxGameSpawnGlobals;

// ScriptStruct GbxGame.GbxMomentNodeState_InterruptDialog
// 0x0008 (0x0078 - 0x0070)
struct FGbxMomentNodeState_InterruptDialog final : public FGbxMomentNodeState
{
public:
	uint8                                         Pad_70[0x8];                                       // 0x0070(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxMomentNodeState_InterruptDialog;

// ScriptStruct GbxGame.GbxGameSpawnerReclaimedActorInfo
// 0x0010 (0x0058 - 0x0048)
struct FGbxGameSpawnerReclaimedActorInfo final : public FSpawnerReclaimedActorInfo
{
public:
	struct FSToken                                RegistryName;                                      // 0x0048(0x000C)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxGameSpawnerReclaimedActorInfo;

// ScriptStruct GbxGame.AudioFloatSetting
// 0x0020 (0x0020 - 0x0000)
struct alignas(0x08) FAudioFloatSetting final
{
public:
	uint8                                         Pad_0[0x20];                                       // 0x0000(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FAudioFloatSetting;

// ScriptStruct GbxGame.GbxGimmeDef
// 0x0020 (0x0038 - 0x0018)
struct FGbxGimmeDef final : public FGbxDef
{
public:
	TArray<struct FGbxInlineStruct>               ConditionsData;                                    // 0x0018(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FGbxInlineStruct>               YieldsData;                                        // 0x0028(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxGimmeDef;

// ScriptStruct GbxGame.GbxMomentNodeState_LookAt
// 0x0000 (0x0148 - 0x0148)
struct FGbxMomentNodeState_LookAt final : public FGbxMomentNodeState_LookAt_Base
{
};
DUMPER7_ASSERTS_FGbxMomentNodeState_LookAt;

// ScriptStruct GbxGame.GimmeYieldBaseStruct
// 0x0008 (0x0010 - 0x0008)
struct FGimmeYieldBaseStruct : public FGbxHasStructType
{
public:
	class FName                                   channel;                                           // 0x0008(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
};
DUMPER7_ASSERTS_FGimmeYieldBaseStruct;

// ScriptStruct GbxGame.ReplicatedMissionGiverWaypointSuppression
// 0x0038 (0x0048 - 0x0010)
struct FReplicatedMissionGiverWaypointSuppression final : public FReplicatedMissionMessage
{
public:
	uint8                                         Pad_10[0x38];                                      // 0x0010(0x0038)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FReplicatedMissionGiverWaypointSuppression;

// ScriptStruct GbxGame.GimmeConditionBaseStruct
// 0x0008 (0x0010 - 0x0008)
struct FGimmeConditionBaseStruct : public FGbxHasStructType
{
public:
	class FName                                   channel;                                           // 0x0008(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
};
DUMPER7_ASSERTS_FGimmeConditionBaseStruct;

// ScriptStruct GbxGame.GbxGimmeSetDef
// 0x0000 (0x0018 - 0x0018)
struct FGbxGimmeSetDef final : public FGbxDef
{
};
DUMPER7_ASSERTS_FGbxGimmeSetDef;

// ScriptStruct GbxGame.GbxGlobalActivitiesDef
// 0x00F0 (0x0108 - 0x0018)
struct FGbxGlobalActivitiesDef final : public FGbxDef
{
public:
	TMap<FGbxDefPtrProperty_, uint32>             ContractsWithSeed;                                 // 0x0018(0x0050)(Edit, NativeAccessSpecifierPublic)
	TMap<FGbxDefPtrProperty_, uint32>             EventsWithSeed;                                    // 0x0068(0x0050)(Edit, NativeAccessSpecifierPublic)
	TMap<FGbxDefPtrProperty_, uint32>             MinorEventsWithSeed;                               // 0x00B8(0x0050)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxGlobalActivitiesDef;

// ScriptStruct GbxGame.GbxMomentNodeState_LookAtSpeaker
// 0x0000 (0x0148 - 0x0148)
struct FGbxMomentNodeState_LookAtSpeaker final : public FGbxMomentNodeState_LookAt_Base
{
};
DUMPER7_ASSERTS_FGbxMomentNodeState_LookAtSpeaker;

// ScriptStruct GbxGame.GbxGlobalsCharacter
// 0x0020 (0x0040 - 0x0020)
struct FGbxGlobalsCharacter final : public FGbxGlobalDef
{
public:
	FGameDataHandleProperty_                      DefaultForcedSlidingVolumeSlideDef;                // 0x0020(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DefaultViewModelFOV;                               // 0x0038(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxGlobalsCharacter;

// ScriptStruct GbxGame.DamageModifierProjectilePresentationData
// 0x0060 (0x0060 - 0x0000)
struct FDamageModifierProjectilePresentationData final
{
public:
	TSoftObjectPtr<class UFXSystemAsset>          TracerEffect;                                      // 0x0000(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      TracerEffectCollection;                            // 0x0028(0x0018)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           AudioEvent;                                        // 0x0040(0x0018)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHeardOnlyByInstigator;                            // 0x0058(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FDamageModifierProjectilePresentationData;

// ScriptStruct GbxGame.GbxStatusEffectEventData
// 0x0020 (0x0020 - 0x0000)
struct FGbxStatusEffectEventData final
{
public:
	class FString                                 DisplayName;                                       // 0x0000(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                  EventID;                                           // 0x0010(0x0010)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxStatusEffectEventData;

// ScriptStruct GbxGame.GbxStatusEffectMutatorCondition
// 0x0040 (0x0048 - 0x0008)
struct FGbxStatusEffectMutatorCondition : public FGbxHasStructType
{
public:
	struct FGbxInlineStruct                       Mutator;                                           // 0x0008(0x0018)(Edit, NativeAccessSpecifierPrivate)
	bool                                          bEmitEvent;                                        // 0x0020(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxStatusEffectEventData              EventData;                                         // 0x0028(0x0020)(Edit, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxStatusEffectMutatorCondition;

// ScriptStruct GbxGame.GbxStatusEffectMutatorCondition_RndChance
// 0x0050 (0x0098 - 0x0048)
struct FGbxStatusEffectMutatorCondition_RndChance final : public FGbxStatusEffectMutatorCondition
{
public:
	struct FGbxAttributeInit                      ChanceInit;                                        // 0x0048(0x0050)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxStatusEffectMutatorCondition_RndChance;

// ScriptStruct GbxGame.DamageModifierBeamPresentationData
// 0x0060 (0x0060 - 0x0000)
struct FDamageModifierBeamPresentationData final
{
public:
	TSoftObjectPtr<class UFXSystemAsset>          BeamEffect;                                        // 0x0000(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      BeamEffectCollection;                              // 0x0028(0x0018)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           AudioEvent;                                        // 0x0040(0x0018)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHeardOnlyByInstigator;                            // 0x0058(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FDamageModifierBeamPresentationData;

// ScriptStruct GbxGame.GbxMomentNodeState_MissionAction
// 0x0010 (0x0080 - 0x0070)
struct FGbxMomentNodeState_MissionAction final : public FGbxMomentNodeState
{
public:
	uint8                                         Pad_70[0x10];                                      // 0x0070(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxMomentNodeState_MissionAction;

// ScriptStruct GbxGame.CorpseDetailLevelSettingsData
// 0x0018 (0x0018 - 0x0000)
struct FCorpseDetailLevelSettingsData final
{
public:
	int32                                         MaxNumCorpses;                                     // 0x0000(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SecondsBeforeNotVisibleCorpseRemoval;              // 0x0004(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SecondsBeforeVisibleCorpseRemoval;                 // 0x0008(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SecondsBeforeDeathTearOff;                         // 0x000C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SecondsBeforeNotVisibleCorpseRemoval_Low;          // 0x0010(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SecondsBeforeVisibleCorpseRemoval_Low;             // 0x0014(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FCorpseDetailLevelSettingsData;

// ScriptStruct GbxGame.GbxStatusEffectGraphNodeSettings_Condition_ContributionCount
// 0x0008 (0x0040 - 0x0038)
struct FGbxStatusEffectGraphNodeSettings_Condition_ContributionCount final : public FGbxStatusEffectGraphNodeSettings_Condition
{
public:
	EGbxStatusEffectValComparisonType             CompType;                                          // 0x0038(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Count;                                             // 0x003C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxStatusEffectGraphNodeSettings_Condition_ContributionCount;

// ScriptStruct GbxGame.LevelBasedDamageScale
// 0x000C (0x000C - 0x0000)
struct FLevelBasedDamageScale final
{
public:
	int32                                         LevelDifference;                                   // 0x0000(0x0004)(Edit, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HigherLevelAttackerScale;                          // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LowerLevelAttackerScale;                           // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FLevelBasedDamageScale;

// ScriptStruct GbxGame.GbxGlobalsDamage
// 0x0F80 (0x0FA0 - 0x0020)
struct FGbxGlobalsDamage final : public FGbxGlobalDef
{
public:
	TSoftObjectPtr<class UGpsQueryAsset>          ReflectGPS;                                        // 0x0020(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReflectSpeedScale;                                 // 0x0048(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HitRegionRicochetSpeedScale;                       // 0x004C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HitRegionRicochetAngle;                            // 0x0050(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDamageTags                            ReflectedProjectileDamageTags;                     // 0x0058(0x0020)(Edit, NativeAccessSpecifierPublic)
	struct FImpactEffectSelection                 ReflectionImpactEffect;                            // 0x0078(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactEffectSelection                 SelfReflectionImpactEffect;                        // 0x0090(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FProtectionTimerSettings               ProtectionTimerSettings;                           // 0x00A8(0x000C)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAttributeInit                      SelfDamageScale;                                   // 0x00B8(0x0050)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FGbxAttributeInit                      aidamagescale;                                     // 0x0108(0x0050)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FLevelBasedDamageScale>         PlayerLevelDifferenceDamageScale;                  // 0x0158(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FLevelBasedDamageScale>         AILevelDifferenceDamageScale;                      // 0x0168(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      HealingDamageType;                                 // 0x0178(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      HealingImpactEffect;                               // 0x0190(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FName, class FName>                PhysicsToDamageSurfaces;                           // 0x01A8(0x0050)(Edit, NativeAccessSpecifierPublic)
	uint8                                         Pad_1F8[0x50];                                     // 0x01F8(0x0050)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDamageModifierProjectilePresentationData ProjectileModifierPresentations[0x10];          // 0x0248(0x0060)(Edit, NativeAccessSpecifierPublic)
	struct FDamageModifierBeamPresentationData    BeamModifierPresentations[0x10];                   // 0x0848(0x0060)(Edit, NativeAccessSpecifierPublic)
	TArray<FGameDataHandleProperty_>              DefaultAIHealthPools;                              // 0x0E48(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UScriptStruct>           DefaultDamageStateStruct;                          // 0x0E58(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UClass>                   DefaultRadiateDamageAreaActorClass;                // 0x0E80(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDamageableProjectilesUseLagCompensation;          // 0x0EA8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_EA9[0x7];                                      // 0x0EA9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FGbxDefPtrProperty_                           StatusEffectApplicationDefaults;                   // 0x0EB0(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FCorpseDetailLevelSettingsData> CorpseDetailLevels;                                // 0x0EC8(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                         DamageToWindImpulseScale;                          // 0x0ED8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_EDC[0x4];                                      // 0x0EDC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRuntimeFloatCurve                     DamageToWindImpulseCurve;                          // 0x0EE0(0x0088)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                          bScaleWindImpulseByCurve;                          // 0x0F68(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F69[0x7];                                      // 0x0F69(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FGameDataHandleProperty_                      WaterExplosionImpactEffect;                        // 0x0F70(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      WaterCollisionImpactEffect;                        // 0x0F88(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxGlobalsDamage;

// ScriptStruct GbxGame.MissionFactState
// 0x0020 (0x0020 - 0x0000)
struct alignas(0x08) FMissionFactState final
{
public:
	FGbxDefPtrProperty_                           MissionDef;                                        // 0x0000(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMissionStatus                                CheckStatus;                                       // 0x0018(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FMissionFactState;

// ScriptStruct GbxGame.GbxMovingPlatformAdherentState
// 0x0030 (0x0030 - 0x0000)
struct alignas(0x08) FGbxMovingPlatformAdherentState final
{
public:
	uint8                                         Pad_0[0x30];                                       // 0x0000(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxMovingPlatformAdherentState;

// ScriptStruct GbxGame.GbxGlobalsDialog
// 0x06F8 (0x0718 - 0x0020)
struct FGbxGlobalsDialog final : public FGbxGlobalDef
{
public:
	TArray<FGbxDefPtrProperty_>                   AlwaysActiveScripts;                               // 0x0020(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           DefaultQuietTimeDef;                               // 0x0030(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SmallCooldownRadius;                               // 0x0048(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LargeCooldownRadius;                               // 0x004C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         NearRadius;                                        // 0x0050(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         QuietTimeMergeRadius;                              // 0x0054(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RegionRadius;                                      // 0x0058(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint16                                        MaxRecencyBias;                                    // 0x005C(0x0002)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5E[0x2];                                       // 0x005E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	FGbxDefPtrProperty_                           SpawnEvent;                                        // 0x0060(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           TargetAcquiredEvent;                               // 0x0078(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           TargetLostEvent;                                   // 0x0090(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           SpotEnemyEvent;                                    // 0x00A8(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           VehicleCatchAirEvent;                              // 0x00C0(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           VehicleTakeDamageEvent;                            // 0x00D8(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           GroundSlamLandEvent;                               // 0x00F0(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           FFYLDownStateExitEvent;                            // 0x0108(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           FFYLReviveSuccessEvent;                            // 0x0120(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           ThrowGrenadeEvent;                                 // 0x0138(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           PlayerLevelEvent;                                  // 0x0150(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           SpawnCST;                                          // 0x0168(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           SelfParameter;                                     // 0x0180(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           TargetParameter;                                   // 0x0198(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           InstigatorParameter;                               // 0x01B0(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           PreferredPlayerParameter;                          // 0x01C8(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           PlayerClassParameter;                              // 0x01E0(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           FranticParameter;                                  // 0x01F8(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           MethodOfDeathParameter;                            // 0x0210(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           ElementalTypeParameter;                            // 0x0228(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           LimbParameter;                                     // 0x0240(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           ASkillTypeParameter;                               // 0x0258(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           IsNametag_NametagParameter;                        // 0x0270(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           EquippedWeaponTypeParameter;                       // 0x0288(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           ManufacturerParameter;                             // 0x02A0(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           LootTypeParameter;                                 // 0x02B8(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           WeatherParameter;                                  // 0x02D0(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           RegionParameter;                                   // 0x02E8(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           TimeOfDayParameter;                                // 0x0300(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           ContractBoardTypeParameter;                        // 0x0318(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           PhaseParameter;                                    // 0x0330(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<struct FDialogEnumValue, struct FGameplayTag> EnumGameplayTagMappings;                      // 0x0348(0x0050)(Edit, NativeAccessSpecifierPublic)
	TMap<struct FDialogEnumValue, FGbxDefPtrProperty_> EnumMissionMappings;                          // 0x0398(0x0050)(Edit, NativeAccessSpecifierPublic)
	TMap<struct FDialogEnumValue, struct FFloatInterval> EnumDistanceMapping;                        // 0x03E8(0x0050)(Edit, NativeAccessSpecifierPublic)
	TMap<struct FDialogEnumValue, struct FMissionFactState> MissionFactStateMappings;                // 0x0438(0x0050)(Edit, NativeAccessSpecifierPublic)
	TMap<struct FDialogEnumValue, EGbxNpcPlayerAwarenessLevel> AwarenessStateMappings;               // 0x0488(0x0050)(Edit, NativeAccessSpecifierPublic)
	TMap<ETimeOfDayState, struct FDialogEnumValue> TimeOfDayMappings;                                // 0x04D8(0x0050)(Edit, NativeAccessSpecifierPublic)
	TMap<class FName, struct FDialogEnumValue>    WeatherMappings;                                   // 0x0528(0x0050)(Edit, NativeAccessSpecifierPublic)
	TMap<FGbxDefPtrProperty_, struct FDialogEnumValue> RegionMappings;                               // 0x0578(0x0050)(Edit, NativeAccessSpecifierPublic)
	TMap<FGbxDefPtrProperty_, struct FDialogParameterContainer> CharacterDefMappings;                // 0x05C8(0x0050)(Edit, NativeAccessSpecifierPublic)
	struct FGbxBlackboardEntryRef                 PhalanxFrenzyBBKey;                                // 0x0618(0x000C)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_624[0x4];                                      // 0x0624(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FGbxDefPtrProperty_                           VoicePitchParameterDef;                            // 0x0628(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	FGbxDefPtrProperty_                           PureEchoSpeakerWwiseParameterDef;                  // 0x0640(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         EnableEchoBelowVolume;                             // 0x0658(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         DisableEchoAboveVolume;                            // 0x065C(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         EchoTransitionReqiredVolumeChange;                 // 0x0660(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         FallbackMaxAttenuationRadius;                      // 0x0664(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGbxDialogNameTagQualifier             CinematicQualifier;                                // 0x0668(0x0008)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FGbxDialogMoodsMap                     DefaultMoods;                                      // 0x0670(0x0050)(Edit, NativeAccessSpecifierPrivate)
	int32                                         SubtitleMaxCharactersToAllowPerPage;               // 0x06C0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         DeathReactAllyEventStartDelaySeconds;              // 0x06C4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         DeferredSubtitleMaxDelay;                          // 0x06C8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_6CC[0x4];                                      // 0x06CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  StanceTagsThatDisableGestures;                     // 0x06D0(0x0020)(Edit, NativeAccessSpecifierPrivate)
	float                                         ConversationExpirationDuration;                    // 0x06F0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         InterConversationDelay;                            // 0x06F4(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         RecentPerformancesExpirationDuration;              // 0x06F8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_6FC[0x4];                                      // 0x06FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 AudioEndMarkerName;                                // 0x0700(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         CurrentPerformanceSecondsOverEstimatedTimeAllowed; // 0x0710(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         LiveSpeakerSecondsOrphanedAfterLastPerformanceToKill; // 0x0714(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxGlobalsDialog;

// ScriptStruct GbxGame.GbxGlobalsEffects
// 0x0018 (0x0038 - 0x0020)
struct FGbxGlobalsEffects final : public FGbxGlobalDef
{
public:
	FGameDataHandleProperty_                      DefaultRelevanceData;                              // 0x0020(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxGlobalsEffects;

// ScriptStruct GbxGame.InventoryPartCriterionData
// 0x0008 (0x0008 - 0x0000)
struct FInventoryPartCriterionData final
{
public:
	class FName                                   Name;                                              // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FInventoryPartCriterionData;

// ScriptStruct GbxGame.GbxMusicAction_PlayAudioGraph
// 0x0038 (0x0040 - 0x0008)
struct FGbxMusicAction_PlayAudioGraph final : public FGbxMusicAction
{
public:
	TSoftObjectPtr<class UGbxAudioGraphAsset>     AudioGraph;                                        // 0x0008(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_30[0x10];                                      // 0x0030(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxMusicAction_PlayAudioGraph;

// ScriptStruct GbxGame.InventoryCriterionSettingsData
// 0x0058 (0x0058 - 0x0000)
struct FInventoryCriterionSettingsData final
{
public:
	class FString                                 DisplayName;                                       // 0x0000(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FInventoryTags                         ExcludeAddTags;                                    // 0x0010(0x0020)(Edit, NativeAccessSpecifierPublic)
	struct FInventoryTags                         RequiredTags;                                      // 0x0030(0x0020)(Edit, NativeAccessSpecifierPublic)
	bool                                          bIsPartCriterion;                                  // 0x0050(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAddNoneOption;                                    // 0x0051(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FInventoryCriterionSettingsData;

// ScriptStruct GbxGame.GbxGlobalsInventory
// 0x0198 (0x01B8 - 0x0020)
struct FGbxGlobalsInventory final : public FGbxGlobalDef
{
public:
	float                                         PickupLifetimeVeryShort;                           // 0x0020(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         PickupLifetimeShort;                               // 0x0024(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         PickupLifetimeLong;                                // 0x0028(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FGameDataHandleProperty_                      DefaultSpawnLootPattern;                           // 0x0030(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         PickupBumpUpLinearVelocity;                        // 0x0048(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         PickupBumpUpAngularVelocity;                       // 0x004C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         PickupBumpUpResetDelay;                            // 0x0050(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         PickupLinearDamping;                               // 0x0054(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         PickupAngularDamping;                              // 0x0058(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UPhysicalMaterial>       PickupDefaultPhysicalMaterial;                     // 0x0060(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                   PickupStreamingContentFilterName;                  // 0x0088(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         DefaultPickupMaxDrawDistance;                      // 0x0090(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         PickupImpactDistanceThreshold;                     // 0x0094(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         PickupImpactVelocityThreshold;                     // 0x0098(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         PickupImpactTimeInterval;                          // 0x009C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class FName>                           AttractEffectColorPerViewParameter;                // 0x00A0(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TMap<class FName, struct FInventoryPartCriterionData> PartTypeCriteria;                          // 0x00B0(0x0050)(Edit, NativeAccessSpecifierPrivate)
	TMap<class FName, struct FInventoryCriterionSettingsData> CriteriaSettings;                      // 0x0100(0x0050)(Edit, NativeAccessSpecifierPrivate)
	TMap<class FName, class FString>              CriteriaTagDisplayName;                            // 0x0150(0x0050)(Edit, NativeAccessSpecifierPrivate)
	class FName                                   ExcludeAITagName;                                  // 0x01A0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1A8[0x8];                                      // 0x01A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   AdditiveSlotGroup;                                 // 0x01B0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxGlobalsInventory;

// ScriptStruct GbxGame.GbxGlobalsMoment
// 0x0080 (0x00A0 - 0x0020)
struct FGbxGlobalsMoment final : public FGbxGlobalDef
{
public:
	FGameDataHandleProperty_                      NearbySpeakerAttribute;                            // 0x0020(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      NearestPlayerAttribute;                            // 0x0038(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      BaseNPCDef;                                        // 0x0050(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           DefaultCinematicMode;                              // 0x0068(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           DefaultIntroCinematicMode;                         // 0x0080(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DefaultDialogStartDelaySeconds;                    // 0x0098(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxGlobalsMoment;

// ScriptStruct GbxGame.GbxMusicAction_SetFact
// 0x0048 (0x0050 - 0x0008)
struct FGbxMusicAction_SetFact final : public FGbxMusicAction
{
public:
	struct FFactAddress                           FactAddress;                                       // 0x0008(0x0038)(Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFactValue                             FactValue;                                         // 0x0040(0x0010)(Edit, NoDestructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxMusicAction_SetFact;

// ScriptStruct GbxGame.GbxGlobalsPhysics
// 0x00F0 (0x0110 - 0x0020)
struct FGbxGlobalsPhysics final : public FGbxGlobalDef
{
public:
	TMap<class FName, float>                      Forces;                                            // 0x0020(0x0050)(Edit, NativeAccessSpecifierPrivate)
	TMap<class FName, float>                      DestructibleForces;                                // 0x0070(0x0050)(Edit, NativeAccessSpecifierPrivate)
	TMap<class FName, float>                      DestructibleStrains;                               // 0x00C0(0x0050)(Edit, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxGlobalsPhysics;

// ScriptStruct GbxGame.GbxStatusEffectNotifyEventBind
// 0x0018 (0x0018 - 0x0000)
struct FGbxStatusEffectNotifyEventBind final
{
public:
	class UGbxStatusEffectNotifyEvent*            Event;                                             // 0x0000(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   EventName;                                         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGbxStatusEffectNotifyEventType               EventType;                                         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxStatusEffectNotifyEventBind;

// ScriptStruct GbxGame.GbxInputActionDef
// 0x0018 (0x0030 - 0x0018)
struct FGbxInputActionDef final : public FGbxDef
{
public:
	FGameDataHandleProperty_                      GroupDef;                                          // 0x0018(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxInputActionDef;

// ScriptStruct GbxGame.InventoryBodyControl
// 0x0030 (0x0048 - 0x0018)
struct FInventoryBodyControl : public FGbxDef
{
public:
	class FName                                   ControlName;                                       // 0x0018(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   EffectType;                                        // 0x0020(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         EffectID;                                          // 0x0028(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPlayerOnly;                                       // 0x002C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxInlineStruct                       Input;                                             // 0x0030(0x0018)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FInventoryBodyControl;

// ScriptStruct GbxGame.InventoryBodySimpleMotionBoneControl
// 0x0338 (0x0380 - 0x0048)
struct FInventoryBodySimpleMotionBoneControl final : public FInventoryBodyControl
{
public:
	class FName                                   BoneName;                                          // 0x0048(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                           AdditionalBoneNames;                               // 0x0050(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                         bStartActive : 1;                                  // 0x0060(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bAutoActivate : 1;                                 // 0x0060(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bStartPaused : 1;                                  // 0x0060(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bEnableSyncToUseRate : 1;                          // 0x0060(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSyncToUseRateData                     SyncToUseRate;                                     // 0x0064(0x0008)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	float                                         ControlImpulseSpeed;                               // 0x006C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ControlImpulseMaxValue;                            // 0x0070(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ControlImpulseDecayDelay;                          // 0x0074(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ControlImpulseDecaySpeed;                          // 0x0078(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EBoneModificationMode                         TranslationMode;                                   // 0x007C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EBoneControlSpace                             TranslationSpace;                                  // 0x007D(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_7E[0x2];                                       // 0x007E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                IdleTranslation;                                   // 0x0080(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                ActiveTranslation;                                 // 0x0098(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSimpleMotionState                     IdleTranslationState;                              // 0x00B0(0x0040)(Edit, NativeAccessSpecifierPublic)
	struct FSimpleMotionState                     ActiveTranslationState;                            // 0x00F0(0x0040)(Edit, NativeAccessSpecifierPublic)
	struct FSimpleMotionState                     RecoveryTranslationState;                          // 0x0130(0x0040)(Edit, NativeAccessSpecifierPublic)
	EBoneModificationMode                         RotationMode;                                      // 0x0170(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EBoneControlSpace                             RotationSpace;                                     // 0x0171(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_172[0x6];                                      // 0x0172(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               IdleRotation;                                      // 0x0178(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                               ActiveRotation;                                    // 0x0190(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FSimpleMotionState                     IdleRotationState;                                 // 0x01A8(0x0040)(Edit, NativeAccessSpecifierPublic)
	struct FSimpleMotionState                     ActiveRotationState;                               // 0x01E8(0x0040)(Edit, NativeAccessSpecifierPublic)
	struct FSimpleMotionState                     RecoveryRotationState;                             // 0x0228(0x0040)(Edit, NativeAccessSpecifierPublic)
	EBoneModificationMode                         ScaleMode;                                         // 0x0268(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EBoneControlSpace                             ScaleSpace;                                        // 0x0269(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_26A[0x6];                                      // 0x026A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                IdleScale;                                         // 0x0270(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                ActiveScale;                                       // 0x0288(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSimpleMotionState                     IdleScaleState;                                    // 0x02A0(0x0040)(Edit, NativeAccessSpecifierPublic)
	struct FSimpleMotionState                     ActiveScaleState;                                  // 0x02E0(0x0040)(Edit, NativeAccessSpecifierPublic)
	struct FSimpleMotionState                     RecoveryScaleState;                                // 0x0320(0x0040)(Edit, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           RotationRTPC;                                      // 0x0360(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   RotationEmitterTag;                                // 0x0378(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FInventoryBodySimpleMotionBoneControl;

// ScriptStruct GbxGame.GbxInputActionGroupDef
// 0x0000 (0x0018 - 0x0018)
struct FGbxInputActionGroupDef final : public FGbxDef
{
};
DUMPER7_ASSERTS_FGbxInputActionGroupDef;

// ScriptStruct GbxGame.GbxMomentNodeSettings_Random
// 0x0010 (0x0090 - 0x0080)
struct FGbxMomentNodeSettings_Random final : public FGbxMomentNodeSettings
{
public:
	TArray<float>                                 OutputWeights;                                     // 0x0080(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxMomentNodeSettings_Random;

// ScriptStruct GbxGame.GbxSequenceMomentEventKey
// 0x0010 (0x0010 - 0x0000)
struct FGbxSequenceMomentEventKey final
{
public:
	class FString                                 EventName;                                         // 0x0000(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxSequenceMomentEventKey;

// ScriptStruct GbxGame.GbxMomentNodeSettings_ScreenFade
// 0x0050 (0x00D0 - 0x0080)
struct FGbxMomentNodeSettings_ScreenFade final : public FGbxMomentNodeSettings
{
public:
	EGbxMomentScreenFadeDirection                 Direction;                                         // 0x0080(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              Duration;                                          // 0x0088(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FColor                                 Color;                                             // 0x00C0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         priority;                                          // 0x00C4(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRemoveWhenMomentEnds;                             // 0x00C5(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C6[0x2];                                       // 0x00C6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   reason;                                            // 0x00C8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxMomentNodeSettings_ScreenFade;

// ScriptStruct GbxGame.InventoryBodyParticleEffectData
// 0x00D8 (0x00D8 - 0x0000)
struct FInventoryBodyParticleEffectData final
{
public:
	class FName                                   type;                                              // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UFXSystemAsset>          Particles;                                         // 0x0008(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGbxParticleParameter>          ParticleParameters;                                // 0x0030(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      ParticlesCollection;                               // 0x0040(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   SocketName;                                        // 0x0058(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ScopedSocketName;                                  // 0x0060(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ID;                                                // 0x0068(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EInventoryBodyVisibilityType                  Visibility;                                        // 0x006C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         usemodebitmask;                                    // 0x0070(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         slot;                                              // 0x0074(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Flags;                                             // 0x0078(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RelativeLocation;                                  // 0x0080(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               RelativeRotation;                                  // 0x0098(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                         RelativeScale;                                     // 0x00B0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                ZoomedRelativeLocation;                            // 0x00B8(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ZoomedRelativeScale;                               // 0x00D0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         AutoActivateModeBitmask;                           // 0x00D4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FInventoryBodyParticleEffectData;

// ScriptStruct GbxGame.GbxInputContextDef
// 0x0000 (0x0018 - 0x0018)
struct FGbxInputContextDef final : public FGbxDef
{
};
DUMPER7_ASSERTS_FGbxInputContextDef;

// ScriptStruct GbxGame.GbxShotOriginActorDef
// 0x0050 (0x0068 - 0x0018)
struct FGbxShotOriginActorDef final : public FGbxDef
{
public:
	struct FVector                                Location;                                          // 0x0018(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFactAddress                           FactAddress;                                       // 0x0030(0x0038)(Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxShotOriginActorDef;

// ScriptStruct GbxGame.GbxInputEvent_Axis_Basic
// 0x0000 (0x0078 - 0x0078)
struct FGbxInputEvent_Axis_Basic final : public FGbxInputEvent_Axis_Core
{
};
DUMPER7_ASSERTS_FGbxInputEvent_Axis_Basic;

// ScriptStruct GbxGame.GbxMomentNodeSettings_SetBlackboardValue
// 0x0088 (0x0108 - 0x0080)
struct FGbxMomentNodeSettings_SetBlackboardValue : public FGbxMomentNodeSettings
{
public:
	struct FGbxParam                              Actor;                                             // 0x0080(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxBlackboardEntryRef                 BlackboardKey;                                     // 0x00B8(0x000C)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              BlackboardValue;                                   // 0x00C8(0x0038)(Edit, NativeAccessSpecifierPublic)
	bool                                          bRestoreStateOnMomentEnd;                          // 0x0100(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxMomentNodeSettings_SetBlackboardValue;

// ScriptStruct GbxGame.GbxStatusEffectPresentationEffect_NiagaraParam
// 0x0010 (0x0018 - 0x0008)
struct FGbxStatusEffectPresentationEffect_NiagaraParam : public FGbxHasStructType
{
public:
	class FName                                   ParamName;                                         // 0x0008(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bIsVisibilityParam;                                // 0x0010(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxStatusEffectPresentationEffect_NiagaraParam;

// ScriptStruct GbxGame.GbxStatusEffectPresentationEffect_NiagaraParam_Color
// 0x0008 (0x0020 - 0x0018)
struct FGbxStatusEffectPresentationEffect_NiagaraParam_Color final : public FGbxStatusEffectPresentationEffect_NiagaraParam
{
public:
	struct FColor                                 Color;                                             // 0x0018(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxStatusEffectPresentationEffect_NiagaraParam_Color;

// ScriptStruct GbxGame.GbxInputEventSchema_Axis_Core
// 0x0030 (0x0050 - 0x0020)
struct FGbxInputEventSchema_Axis_Core : public FGbxInputEventSchema
{
public:
	FGameDataHandleProperty_                      ActionDef;                                         // 0x0020(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGbxInputAxis                          AxisData;                                          // 0x0038(0x0018)(Edit, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxInputEventSchema_Axis_Core;

// ScriptStruct GbxGame.GbxInputEventSchema_Axis_Basic
// 0x0000 (0x0050 - 0x0050)
struct FGbxInputEventSchema_Axis_Basic final : public FGbxInputEventSchema_Axis_Core
{
};
DUMPER7_ASSERTS_FGbxInputEventSchema_Axis_Basic;

// ScriptStruct GbxGame.GbxInputEvent_Axis_Vector
// 0x0060 (0x00D8 - 0x0078)
struct FGbxInputEvent_Axis_Vector final : public FGbxInputEvent_Axis_Core
{
public:
	uint8                                         Pad_78[0x60];                                      // 0x0078(0x0060)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxInputEvent_Axis_Vector;

// ScriptStruct GbxGame.GbxMomentNodeState_DialogWaitConversation
// 0x0000 (0x0070 - 0x0070)
struct FGbxMomentNodeState_DialogWaitConversation final : public FGbxMomentNodeState
{
};
DUMPER7_ASSERTS_FGbxMomentNodeState_DialogWaitConversation;

// ScriptStruct GbxGame.GbxInputEventSchema_Axis_Vector
// 0x0018 (0x0068 - 0x0050)
struct FGbxInputEventSchema_Axis_Vector final : public FGbxInputEventSchema_Axis_Core
{
public:
	FGameDataHandleProperty_                      FeelDef;                                           // 0x0050(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxInputEventSchema_Axis_Vector;

// ScriptStruct GbxGame.GbxMomentNodeState_End
// 0x0000 (0x0070 - 0x0070)
struct FGbxMomentNodeState_End final : public FGbxMomentNodeState
{
};
DUMPER7_ASSERTS_FGbxMomentNodeState_End;

// ScriptStruct GbxGame.GbxInputEventSchema_Button_DoubleTap
// 0x0058 (0x0078 - 0x0020)
struct FGbxInputEventSchema_Button_DoubleTap : public FGbxInputEventSchema
{
public:
	struct FGbxInputButton                        ButtonData;                                        // 0x0020(0x0018)(Edit, NativeAccessSpecifierPrivate)
	struct FGbxInputAxis                          AxisData;                                          // 0x0038(0x0018)(Edit, NativeAccessSpecifierPrivate)
	FGameDataHandleProperty_                      FeelDef;                                           // 0x0050(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGbxInputEventActionMap                EventActionMap;                                    // 0x0068(0x0010)(Edit, EditFixedSize, Protected, NativeAccessSpecifierProtected)
};
DUMPER7_ASSERTS_FGbxInputEventSchema_Button_DoubleTap;

// ScriptStruct GbxGame.GbxInputEvent_Button_DoubleTap4Way
// 0x0000 (0x00A8 - 0x00A8)
struct FGbxInputEvent_Button_DoubleTap4Way : public FGbxInputEvent_Button_DoubleTap
{
};
DUMPER7_ASSERTS_FGbxInputEvent_Button_DoubleTap4Way;

// ScriptStruct GbxGame.GbxMomentNodeState_Event
// 0x0000 (0x0070 - 0x0070)
struct FGbxMomentNodeState_Event : public FGbxMomentNodeState
{
};
DUMPER7_ASSERTS_FGbxMomentNodeState_Event;

// ScriptStruct GbxGame.GbxInputEventSchema_Button_DoubleTap4Way
// 0x0000 (0x0078 - 0x0078)
struct FGbxInputEventSchema_Button_DoubleTap4Way : public FGbxInputEventSchema_Button_DoubleTap
{
};
DUMPER7_ASSERTS_FGbxInputEventSchema_Button_DoubleTap4Way;

// ScriptStruct GbxGame.GbxInputEvent_Button_DoubleTap_WithDirection
// 0x0008 (0x00B0 - 0x00A8)
struct FGbxInputEvent_Button_DoubleTap_WithDirection final : public FGbxInputEvent_Button_DoubleTap4Way
{
public:
	uint8                                         Pad_A8[0x8];                                       // 0x00A8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxInputEvent_Button_DoubleTap_WithDirection;

// ScriptStruct GbxGame.GbxInputEventSchema_Button_DoubleTap_WithDirection
// 0x0000 (0x0078 - 0x0078)
struct FGbxInputEventSchema_Button_DoubleTap_WithDirection final : public FGbxInputEventSchema_Button_DoubleTap4Way
{
};
DUMPER7_ASSERTS_FGbxInputEventSchema_Button_DoubleTap_WithDirection;

// ScriptStruct GbxGame.GbxStatusEffectGraphNodeSettings_ScriptEvent
// 0x0018 (0x0050 - 0x0038)
struct FGbxStatusEffectGraphNodeSettings_ScriptEvent final : public FGbxStatusEffectGraphNodeSettings
{
public:
	FGbxDefPtrProperty_                           EventDef;                                          // 0x0038(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxStatusEffectGraphNodeSettings_ScriptEvent;

// ScriptStruct GbxGame.GbxInputEvent_Button_PressHoldRelease
// 0x0050 (0x0150 - 0x0100)
struct FGbxInputEvent_Button_PressHoldRelease final : public FGbxInputEvent_Button_Core
{
public:
	uint8                                         Pad_100[0x50];                                     // 0x0100(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxInputEvent_Button_PressHoldRelease;

// ScriptStruct GbxGame.GbxMomentNodeState_GbxFeedback
// 0x0000 (0x0070 - 0x0070)
struct FGbxMomentNodeState_GbxFeedback final : public FGbxMomentNodeState
{
};
DUMPER7_ASSERTS_FGbxMomentNodeState_GbxFeedback;

// ScriptStruct GbxGame.GbxInputEvent_Button_PressPulse
// 0x0020 (0x0120 - 0x0100)
struct FGbxInputEvent_Button_PressPulse final : public FGbxInputEvent_Button_Core
{
public:
	uint8                                         Pad_100[0x20];                                     // 0x0100(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxInputEvent_Button_PressPulse;

// ScriptStruct GbxGame.GbxInputEventSchema_Button_PressRelease
// 0x0000 (0x0048 - 0x0048)
struct FGbxInputEventSchema_Button_PressRelease final : public FGbxInputEventSchema_Button_Core
{
};
DUMPER7_ASSERTS_FGbxInputEventSchema_Button_PressRelease;

// ScriptStruct GbxGame.GbxInputFeelDef
// 0x0000 (0x0018 - 0x0018)
struct FGbxInputFeelDef : public FGbxDef
{
};
DUMPER7_ASSERTS_FGbxInputFeelDef;

// ScriptStruct GbxGame.GbxStatusEffectGameDataCategories
// 0x0001 (0x0001 - 0x0000)
struct FGbxStatusEffectGameDataCategories final
{
public:
	uint8                                         Pad_0[0x1];                                        // 0x0000(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxStatusEffectGameDataCategories;

// ScriptStruct GbxGame.GbxInputFeelDef_DoubleTap
// 0x0008 (0x0020 - 0x0018)
struct FGbxInputFeelDef_DoubleTap final : public FGbxInputFeelDef
{
public:
	float                                         HoldTime;                                          // 0x0018(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         TapRangeMin;                                       // 0x001C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxInputFeelDef_DoubleTap;

// ScriptStruct GbxGame.GbxInput_VectorAxisParamSet
// 0x00B0 (0x00B0 - 0x0000)
struct FGbxInput_VectorAxisParamSet final
{
public:
	uint8                                         Pad_0[0x68];                                       // 0x0000(0x0068)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Sensitivity2D;                                     // 0x0068(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         NonLinearExponent;                                 // 0x0078(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         DeadZone_Inner;                                    // 0x007C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         DeadZone_Outer;                                    // 0x0080(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         AxialDeadZone_Inner;                               // 0x0084(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         AxialDeadZone_Outer;                               // 0x0088(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         Accel_Threshold;                                   // 0x008C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         Accel_Delay;                                       // 0x0090(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         Accel_Duration;                                    // 0x0094(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector2D                              Accel_Scale;                                       // 0x0098(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         Decel_Duration;                                    // 0x00A8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         Decel_Angle;                                       // 0x00AC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxInput_VectorAxisParamSet;

// ScriptStruct GbxGame.GbxMomentNodeSettings_UseCover
// 0x00E0 (0x0160 - 0x0080)
struct FGbxMomentNodeSettings_UseCover final : public FGbxMomentNodeSettings
{
public:
	struct FGbxParam                              Actor;                                             // 0x0080(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              Cover;                                             // 0x00B8(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              bCombat;                                           // 0x00F0(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              bFidgeting;                                        // 0x0128(0x0038)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxMomentNodeSettings_UseCover;

// ScriptStruct GbxGame.GbxStatusEffectPresentationGraphNodeSettings_ChildEffect
// 0x0010 (0x0048 - 0x0038)
struct FGbxStatusEffectPresentationGraphNodeSettings_ChildEffect final : public FGbxStatusEffectPresentationGraphNodeSettings
{
public:
	struct FGuid                                  EffectID;                                          // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxStatusEffectPresentationGraphNodeSettings_ChildEffect;

// ScriptStruct GbxGame.GbxInputVectorAxisModifiedSet
// 0x00B8 (0x00B8 - 0x0000)
struct FGbxInputVectorAxisModifiedSet final
{
public:
	class FName                                   SetName;                                           // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxInput_VectorAxisParamSet           Set;                                               // 0x0008(0x00B0)(Edit, NoDestructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxInputVectorAxisModifiedSet;

// ScriptStruct GbxGame.GbxInputFeelDef_VectorAxis
// 0x00C0 (0x00D8 - 0x0018)
struct FGbxInputFeelDef_VectorAxis final : public FGbxInputFeelDef
{
public:
	struct FGbxInput_VectorAxisParamSet           Defaults;                                          // 0x0018(0x00B0)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FGbxInputVectorAxisModifiedSet> ModifiedSets;                                      // 0x00C8(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxInputFeelDef_VectorAxis;

// ScriptStruct GbxGame.GbxInputRebind_Button
// 0x0030 (0x0030 - 0x0000)
struct FGbxInputRebind_Button final
{
public:
	FGameDataHandleProperty_                      Binding;                                           // 0x0000(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxInputButton                        Button;                                            // 0x0018(0x0018)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxInputRebind_Button;

// ScriptStruct GbxGame.GbxInputRebindContextDef
// 0x0058 (0x0070 - 0x0018)
struct FGbxInputRebindContextDef final : public FGbxDef
{
public:
	FGameDataHandleProperty_                      TargetSchemaDef;                                   // 0x0018(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bDefault;                                          // 0x0030(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FGameDataHandleProperty_                      ParentContextDef;                                  // 0x0038(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FGbxInputRebind_Button>         ButtonBindings;                                    // 0x0050(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FGbxInputRebind_Axis>           AxisBindings;                                      // 0x0060(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxInputRebindContextDef;

// ScriptStruct GbxGame.GbxStatusEffectSeverityValueResolver
// 0x0040 (0x0048 - 0x0008)
struct FGbxStatusEffectSeverityValueResolver final : public FAttributeValueResolver
{
public:
	TSoftObjectPtr<class UGbxStatusEffectData>    StatusEffectData;                                  // 0x0008(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	FGbxDefPtrProperty_                           SeverityChannel;                                   // 0x0030(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxStatusEffectSeverityValueResolver;

// ScriptStruct GbxGame.GbxInputSchemaDef
// 0x0010 (0x0028 - 0x0018)
struct FGbxInputSchemaDef final : public FGbxDef
{
public:
	TArray<struct FGbxInlineStruct>               InputEventSchemas;                                 // 0x0018(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxInputSchemaDef;

// ScriptStruct GbxGame.GbxMomentSettings
// 0x0070 (0x0118 - 0x00A8)
struct FGbxMomentSettings final : public FGbxGraphSettings
{
public:
	TArray<FGbxDefPtrProperty_>                   DialogScripts;                                     // 0x00A8(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      AssociatedMission;                                 // 0x00B8(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxMomentParamWaitBehavior            DefaultWaitBehavior;                               // 0x00D0(0x0040)(Edit, AdvancedDisplay, NativeAccessSpecifierPublic)
	bool                                          bStopMomentOnSeamlessTravel;                       // 0x0110(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxMomentSettings;

// ScriptStruct GbxGame.GbxInventoryTransaction
// 0x0178 (0x0178 - 0x0000)
struct FGbxInventoryTransaction final
{
public:
	uint8                                         Pad_0[0x10];                                       // 0x0000(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGbxItemContainerOwner> SourceContainerOwner;                             // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TScriptInterface<class IGbxItemContainerOwner> TargetContainerOwner;                             // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TScriptInterface<class IGbxEquippedInventorySlotOwner> SourceEquippedSlotOwner;                  // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TScriptInterface<class IGbxEquippedInventorySlotOwner> TargetEquippedSlotOwner;                  // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_50[0x128];                                     // 0x0050(0x0128)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxInventoryTransaction;

// ScriptStruct GbxGame.GbxStatusEffectRuleData_Moratorium
// 0x0010 (0x0018 - 0x0008)
struct FGbxStatusEffectRuleData_Moratorium final : public FGbxStatusEffectRuleData
{
public:
	TArray<struct FGbxInlineStruct>               Moratoriums;                                       // 0x0008(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxStatusEffectRuleData_Moratorium;

// ScriptStruct GbxGame.GbxItemBreakDownDef
// 0x0010 (0x0028 - 0x0018)
struct FGbxItemBreakDownDef final : public FGbxDef
{
public:
	TArray<struct FGbxItemGeneratedOutput>        Outputs;                                           // 0x0018(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxItemBreakDownDef;

// ScriptStruct GbxGame.InventoryItem
// 0x0100 (0x0100 - 0x0000)
struct FInventoryItem final
{
public:
	struct FGbxItem                               item;                                              // 0x0000(0x00F8)(Protected, NativeAccessSpecifierProtected)
	struct FInventoryItemHandle                   Handle;                                            // 0x00F8(0x0004)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EInventoryItemFlags                           Flags;                                             // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int8                                          EquipSlot;                                         // 0x00FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_FE[0x2];                                       // 0x00FE(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FInventoryItem;

// ScriptStruct GbxGame.GbxItemContainerSlot
// 0x0144 (0x0150 - 0x000C)
struct FGbxItemContainerSlot final : public FFastArraySerializerItem
{
public:
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInventoryItem                         InventoryItem;                                     // 0x0010(0x0100)(NativeAccessSpecifierPublic)
	struct FSName                                 type;                                              // 0x0110(0x0028)(HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        MaxQuantity;                                       // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsLocked;                                          // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_13D[0x13];                                     // 0x013D(0x0013)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxItemContainerSlot;

// ScriptStruct GbxGame.GbxStatusEffectGraphNodeSettings_ActionBase
// 0x0018 (0x0050 - 0x0038)
struct FGbxStatusEffectGraphNodeSettings_ActionBase : public FGbxStatusEffectGraphNodeSettings
{
public:
	struct FGbxInlineStruct                       Action;                                            // 0x0038(0x0018)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxStatusEffectGraphNodeSettings_ActionBase;

// ScriptStruct GbxGame.GbxStatusEffectGraphNodeSettings_Action_Push
// 0x0000 (0x0050 - 0x0050)
struct FGbxStatusEffectGraphNodeSettings_Action_Push final : public FGbxStatusEffectGraphNodeSettings_ActionBase
{
};
DUMPER7_ASSERTS_FGbxStatusEffectGraphNodeSettings_Action_Push;

// ScriptStruct GbxGame.GbxCommodityStack
// 0x000C (0x000C - 0x0000)
struct alignas(0x04) FGbxCommodityStack final
{
public:
	uint8                                         Pad_0[0xC];                                        // 0x0000(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxCommodityStack;

// ScriptStruct GbxGame.GbxStatusEffectGraphNodeSettings_QueueNotifyEvent
// 0x0008 (0x0040 - 0x0038)
struct FGbxStatusEffectGraphNodeSettings_QueueNotifyEvent final : public FGbxStatusEffectGraphNodeSettings
{
public:
	class FName                                   EventName;                                         // 0x0038(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxStatusEffectGraphNodeSettings_QueueNotifyEvent;

// ScriptStruct GbxGame.GbxItemSlotsContainer
// 0x0018 (0x0128 - 0x0110)
struct FGbxItemSlotsContainer final : public FFastArraySerializer
{
public:
	uint8                                         Pad_110[0x8];                                      // 0x0110(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGbxItemContainerSlot>          items;                                             // 0x0118(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxItemSlotsContainer;

// ScriptStruct GbxGame.GbxItemContainer
// 0x0160 (0x0160 - 0x0000)
struct alignas(0x10) FGbxItemContainer final
{
public:
	uint8                                         Pad_0[0x90];                                       // 0x0000(0x0090)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAttributeInteger                   MaxSize;                                           // 0x0090(0x000C)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_9C[0xC];                                       // 0x009C(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGbxItemContainerOwner> ItemContainerOwner;                               // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_B8[0x8C];                                      // 0x00B8(0x008C)(Fixing Size After Last Property [ Dumper-7 ])
	uint8                                         ProfileId;                                         // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_145[0x1B];                                     // 0x0145(0x001B)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxItemContainer;

// ScriptStruct GbxGame.GpsGenerator_DangerZones
// 0x0000 (0x0448 - 0x0448)
struct FGpsGenerator_DangerZones final : public FGpsGenerator_Actors
{
};
DUMPER7_ASSERTS_FGpsGenerator_DangerZones;

// ScriptStruct GbxGame.GbxNavTestAgentData
// 0x00C0 (0x00C0 - 0x0000)
struct FGbxNavTestAgentData final
{
public:
	FGameDataHandleProperty_                      GbxActorDef;                                       // 0x0000(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 spawn;                                             // 0x0018(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 Goal;                                              // 0x0020(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 RotateTo;                                          // 0x0028(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      stance;                                            // 0x0030(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 SecondGoal;                                        // 0x0048(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SecondGoalTime;                                    // 0x0050(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FGameDataHandleProperty_                      SecondStance;                                      // 0x0058(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 SpawnedActor;                                      // 0x0070(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_78[0x48];                                      // 0x0078(0x0048)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxNavTestAgentData;

// ScriptStruct GbxGame.GbxLevelSequenceOrigin
// 0x0070 (0x0070 - 0x0000)
struct FGbxLevelSequenceOrigin final
{
public:
	TSoftObjectPtr<class AActor>                  TransformOriginActor;                              // 0x0000(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransformNoScale                      TransformOrigin;                                   // 0x0030(0x0040)(Edit, NoDestructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxLevelSequenceOrigin;

// ScriptStruct GbxGame.GbxLevelSequenceEnterExitData
// 0x00D0 (0x00D0 - 0x0000)
struct FGbxLevelSequenceEnterExitData final
{
public:
	struct FTransform                             EnterTransform;                                    // 0x0000(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                             ExitTransform;                                     // 0x0060(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         EnterCapsuleOffsetWeight;                          // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ExitCapsuleOffsetWeight;                           // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C8[0x8];                                       // 0x00C8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxLevelSequenceEnterExitData;

// ScriptStruct GbxGame.GbxStatusEffectNotifyEventData_Core
// 0x0000 (0x0030 - 0x0030)
struct FGbxStatusEffectNotifyEventData_Core : public FGbxStatusEffectNotifyEventData
{
};
DUMPER7_ASSERTS_FGbxStatusEffectNotifyEventData_Core;

// ScriptStruct GbxGame.GbxStatusEffectNotifyEventData_Core_Emptied
// 0x0000 (0x0030 - 0x0030)
struct FGbxStatusEffectNotifyEventData_Core_Emptied final : public FGbxStatusEffectNotifyEventData_Core
{
};
DUMPER7_ASSERTS_FGbxStatusEffectNotifyEventData_Core_Emptied;

// ScriptStruct GbxGame.GbxLevelSequenceActorBinding
// 0x0048 (0x0048 - 0x0000)
struct FGbxLevelSequenceActorBinding final
{
public:
	class FName                                   Name;                                              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 Actor;                                             // 0x0008(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFactAddress                           ActorRegistryAddress;                              // 0x0010(0x0038)(HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxLevelSequenceActorBinding;

// ScriptStruct GbxGame.GbxLevelSequenceActorSettings
// 0x00D0 (0x00D0 - 0x0000)
struct FGbxLevelSequenceActorSettings final
{
public:
	int32                                         PvPIndex;                                          // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGbxLevelSequence*                      LevelSequence;                                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMovieSceneSequencePlaybackSettings    PlaybackSettings;                                  // 0x0010(0x0028)(NoDestructor, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      CinematicMode;                                     // 0x0038(0x0018)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGbxLevelSequenceActorBinding>  Bindings;                                          // 0x0050(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bHasTransformOrigin;                               // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_61[0xF];                                       // 0x0061(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             TransformOrigin;                                   // 0x0070(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxLevelSequenceActorSettings;

// ScriptStruct GbxGame.GbxOpportunisticAmbientAudioConfigDef
// 0x0068 (0x0080 - 0x0018)
struct FGbxOpportunisticAmbientAudioConfigDef final : public FGbxDef
{
public:
	FGbxDefPtrProperty_                           EventName;                                         // 0x0018(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           StopEventName;                                     // 0x0030(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFactExpression                        FactExpression;                                    // 0x0048(0x0010)(Edit, NativeAccessSpecifierPublic)
	EGbxOpportunisticAmbientAudioPlayType         PlayType;                                          // 0x0058(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bClusterLocations;                                 // 0x0059(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5A[0x2];                                       // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ClusterMaxDistance;                                // 0x005C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFavorClosestLocations;                            // 0x0060(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSingleSourceMultiLocations;                       // 0x0061(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLimitInstances;                                   // 0x0062(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_63[0x1];                                       // 0x0063(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MaxInstances;                                      // 0x0064(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinSpawnDelay;                                     // 0x0068(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxSpawnDelay;                                     // 0x006C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinSpawnRadiusRatio;                               // 0x0070(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxSpawnRadiusRatio;                               // 0x0074(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                 DebugColor;                                        // 0x0078(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxOpportunisticAmbientAudioConfigDef;

// ScriptStruct GbxGame.GbxSequenceActorData
// 0x0010 (0x0010 - 0x0000)
struct FGbxSequenceActorData
{
public:
	struct FGuid                                  ActorBindingID;                                    // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxSequenceActorData;

// ScriptStruct GbxGame.GbxShotOriginActorRef
// 0x0060 (0x0060 - 0x0000)
struct FGbxShotOriginActorRef final
{
public:
	TSoftObjectPtr<class AGbxShotOriginActor>     ActorPtr;                                          // 0x0000(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFactAddress                           FactAddress;                                       // 0x0028(0x0038)(Edit, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxShotOriginActorRef;

// ScriptStruct GbxGame.GbxLevelSequencePlaybackRequestID
// 0x0002 (0x0002 - 0x0000)
struct FGbxLevelSequencePlaybackRequestID final
{
public:
	uint16                                        ID;                                                // 0x0000(0x0002)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxLevelSequencePlaybackRequestID;

// ScriptStruct GbxGame.GbxLevelSequencePlaybackRequest
// 0x0084 (0x0090 - 0x000C)
struct FGbxLevelSequencePlaybackRequest final : public FFastArraySerializerItem
{
public:
	struct FGbxLevelSequencePlaybackRequestID     StableId;                                          // 0x000C(0x0002)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSName                                 LevelSequenceActorAddress;                         // 0x0010(0x0028)(HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsCutscene;                                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsHighVisibility;                                 // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3A[0x56];                                      // 0x003A(0x0056)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxLevelSequencePlaybackRequest;

// ScriptStruct GbxGame.GbxLevelSequencePlaybackRequestArray
// 0x0010 (0x0120 - 0x0110)
struct FGbxLevelSequencePlaybackRequestArray final : public FFastArraySerializer
{
public:
	TArray<struct FGbxLevelSequencePlaybackRequest> items;                                           // 0x0110(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxLevelSequencePlaybackRequestArray;

// ScriptStruct GbxGame.GbxPerchUserValueResolver
// 0x0008 (0x0010 - 0x0008)
struct FGbxPerchUserValueResolver final : public FAttributeValueResolver
{
public:
	EPerchUserAttributeValueType                  Value;                                             // 0x0008(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxPerchUserValueResolver;

// ScriptStruct GbxGame.GbxLevelSequenceStreamingSourceData
// 0x0058 (0x0058 - 0x0000)
struct FGbxLevelSequenceStreamingSourceData final
{
public:
	class FName                                   Name;                                              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Location;                                          // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_20[0x38];                                      // 0x0020(0x0038)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxLevelSequenceStreamingSourceData;

// ScriptStruct GbxGame.GbxTrickAnimMesh
// 0x00F0 (0x00F0 - 0x0000)
struct FGbxTrickAnimMesh final
{
public:
	bool                                          bCustomMeshName;                                   // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Mesh;                                              // 0x0004(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAnimAssetRef                       Anim;                                              // 0x0010(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	class FName                                   slot;                                              // 0x0028(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxAnimBlendOptions                   BlendIn;                                           // 0x0030(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FGbxAnimBlendOptions                   BlendOut;                                          // 0x0050(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FGbxParam                              PlayRate;                                          // 0x0070(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              StartTime;                                         // 0x00A8(0x0038)(Edit, NativeAccessSpecifierPublic)
	bool                                          bMirror;                                           // 0x00E0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAutoDetectCompatibleMesh;                         // 0x00E1(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E2[0x2];                                       // 0x00E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         BlendInTime;                                       // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BlendOutTime;                                      // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAlphaBlendOption                             BlendInType;                                       // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAlphaBlendOption                             BlendOutType;                                      // 0x00ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_EE[0x2];                                       // 0x00EE(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxTrickAnimMesh;

// ScriptStruct GbxGame.GbxTrickAnimData
// 0x0150 (0x0150 - 0x0000)
struct FGbxTrickAnimData final
{
public:
	TArray<struct FGbxTrickAnimMesh>              Meshes;                                            // 0x0000(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	struct FGbxAnimAssetRef                       Anim;                                              // 0x0010(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	bool                                          bUseDefaultAnim;                                   // 0x0028(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   slot;                                              // 0x002C(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bUseDefaultSlot;                                   // 0x0034(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAnimBlendOptions                   BlendIn;                                           // 0x0038(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	bool                                          bUseDefaultBlendIn;                                // 0x0058(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAnimBlendOptions                   BlendOut;                                          // 0x0060(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	bool                                          bUseDefaultBlendOut;                               // 0x0080(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              PlayRate;                                          // 0x0088(0x0038)(Edit, NativeAccessSpecifierPrivate)
	bool                                          bUseDefaultPlayRate;                               // 0x00C0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              StartTime;                                         // 0x00C8(0x0038)(Edit, NativeAccessSpecifierPrivate)
	bool                                          bUseDefaultStartTime;                              // 0x0100(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bMirror;                                           // 0x0101(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bUseDefaultMirror;                                 // 0x0102(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bPauseAtEnd;                                       // 0x0103(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bTrickEndClearsPauseAtEnd;                         // 0x0104(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_105[0x3];                                      // 0x0105(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAnimAssetRef                       Body3rd;                                           // 0x0108(0x0018)(NoDestructor, NativeAccessSpecifierPrivate)
	struct FGbxAnimAssetRef                       Body1st;                                           // 0x0120(0x0018)(NoDestructor, NativeAccessSpecifierPrivate)
	float                                         BlendInTime;                                       // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bUseDefaultBlendInTime;                            // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_13D[0x3];                                      // 0x013D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         BlendOutTime;                                      // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bUseDefaultBlendOutTime;                           // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EAlphaBlendOption                             BlendInType;                                       // 0x0145(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bUseDefaultBlendInType;                            // 0x0146(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EAlphaBlendOption                             BlendOutType;                                      // 0x0147(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bUseDefaultBlendOutType;                           // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bConvertedBlendOptions;                            // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_14A[0x6];                                      // 0x014A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxTrickAnimData;

// ScriptStruct GbxGame.TrickLoopAnim
// 0x0188 (0x0188 - 0x0000)
struct FTrickLoopAnim final
{
public:
	struct FGbxParam                              Weight;                                            // 0x0000(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxTrickAnimData                      Anim;                                              // 0x0038(0x0150)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FTrickLoopAnim;

// ScriptStruct GbxGame.GbxLevelStationSingleTag
// 0x0000 (0x0010 - 0x0010)
struct FGbxLevelStationSingleTag final : public FNexusBitSingleTag
{
};
DUMPER7_ASSERTS_FGbxLevelStationSingleTag;

// ScriptStruct GbxGame.GbxPlayerStateContextResolver
// 0x0000 (0x0008 - 0x0008)
struct FGbxPlayerStateContextResolver final : public FAttributeContextResolver
{
};
DUMPER7_ASSERTS_FGbxPlayerStateContextResolver;

// ScriptStruct GbxGame.GbxMapAutoSaveData
// 0x00A0 (0x00A8 - 0x0008)
struct FGbxMapAutoSaveData final : public FGbxBaseMapAutoSaveData
{
public:
	struct FGbxVenueTags                          VenueTags;                                         // 0x0008(0x0020)(Edit, NativeAccessSpecifierPublic)
	struct FGbxGameModeIdent                      DefaultGameMode;                                   // 0x0028(0x0028)(Edit, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      DefaultStation;                                    // 0x0050(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 BackendAliases;                                    // 0x0068(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 LoadingCutscene;                                   // 0x0078(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          CanBeCooked;                                       // 0x0088(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFactChange>                    FactsToWriteOnMapLoad;                             // 0x0090(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bAllowPlayerTethering;                             // 0x00A0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxMapAutoSaveData;

// ScriptStruct GbxGame.GbxTrickSignal
// 0x0070 (0x0070 - 0x0000)
struct FGbxTrickSignal final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxTrick*                              Trick;                                             // 0x0008(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_10[0x60];                                      // 0x0010(0x0060)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxTrickSignal;

// ScriptStruct GbxGame.GbxLightSettings
// 0x0090 (0x0090 - 0x0000)
struct FGbxLightSettings final
{
public:
	class FName                                   Name;                                              // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGbxLightType                                 type;                                              // 0x0008(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RelativeLocation;                                  // 0x0010(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               RelativeRotation;                                  // 0x0028(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                         AttenuationRadius;                                 // 0x0040(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Intensity;                                         // 0x0044(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ELightUnits                                   IntensityUnits;                                    // 0x0048(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FColor                                 LightColor;                                        // 0x004C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Temperature;                                       // 0x0050(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          CastShadows;                                       // 0x0054(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          CastStaticShadows;                                 // 0x0055(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          CastDynamicShadows;                                // 0x0056(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_57[0x1];                                       // 0x0057(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LightSourceAngle;                                  // 0x0058(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LightSourceSoftAngle;                              // 0x005C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseInverseSquaredFalloff;                         // 0x0060(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LightFalloffExponent;                              // 0x0064(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SourceRadius;                                      // 0x0068(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SoftSourceRadius;                                  // 0x006C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SourceLength;                                      // 0x0070(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InnerConeAngle;                                    // 0x0074(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OuterConeAngle;                                    // 0x0078(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SourceWidth;                                       // 0x007C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SourceHeight;                                      // 0x0080(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BarnDoorAngle;                                     // 0x0084(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BarnDoorLength;                                    // 0x0088(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxLightSettings;

// ScriptStruct GbxGame.GbxLitPreviewSceneDef
// 0x0010 (0x0028 - 0x0018)
struct FGbxLitPreviewSceneDef : public FGbxDef
{
public:
	TArray<struct FGbxLightSettings>              Lights;                                            // 0x0018(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxLitPreviewSceneDef;

// ScriptStruct GbxGame.MaterialArray
// 0x0010 (0x0010 - 0x0000)
struct FMaterialArray final
{
public:
	TArray<class UMaterialInterface*>             materials;                                         // 0x0000(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FMaterialArray;

// ScriptStruct GbxGame.GbxMomentNodeSettings_SetFactValue
// 0x0070 (0x00F0 - 0x0080)
struct FGbxMomentNodeSettings_SetFactValue final : public FGbxMomentNodeSettings
{
public:
	struct FFactChange                            FactChange;                                        // 0x0080(0x0070)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxMomentNodeSettings_SetFactValue;

// ScriptStruct GbxGame.GbxMaterialParamInterpOptions
// 0x0020 (0x0020 - 0x0000)
struct FGbxMaterialParamInterpOptions final
{
public:
	class FName                                   ParamName;                                         // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   MaterialSlot;                                      // 0x0008(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InterpTime;                                        // 0x0010(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAlphaBlendOption                             CurveOption;                                       // 0x0014(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            CustomCurve;                                       // 0x0018(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxMaterialParamInterpOptions;

// ScriptStruct GbxGame.GbxStatusEffectPresentationEffect_NiagaraParam_Float
// 0x0088 (0x00A0 - 0x0018)
struct FGbxStatusEffectPresentationEffect_NiagaraParam_Float final : public FGbxStatusEffectPresentationEffect_NiagaraParam
{
public:
	struct FRuntimeFloatCurve                     curve;                                             // 0x0018(0x0088)(Edit, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxStatusEffectPresentationEffect_NiagaraParam_Float;

// ScriptStruct GbxGame.GbxMomentNodeSettings_SetTeam
// 0x0058 (0x00D8 - 0x0080)
struct FGbxMomentNodeSettings_SetTeam final : public FGbxMomentNodeSettings
{
public:
	struct FGbxParam                              Actor;                                             // 0x0080(0x0038)(Edit, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      Team;                                              // 0x00B8(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRestoreStateOnMomentEnd;                          // 0x00D0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxMomentNodeSettings_SetTeam;

// ScriptStruct GbxGame.GbxStatusEffectPresentationGraphNodeSettings_Effect_CustomChannel
// 0x0020 (0x0058 - 0x0038)
struct FGbxStatusEffectPresentationGraphNodeSettings_Effect_CustomChannel : public FGbxStatusEffectPresentationGraphNodeSettings_Effect
{
public:
	class UMaterial*                              Material;                                          // 0x0038(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FGbxInlineStruct>               params;                                            // 0x0040(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TSubclassOf<class UGbxSceneComponentResolver> Resolver;                                          // 0x0050(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxStatusEffectPresentationGraphNodeSettings_Effect_CustomChannel;

// ScriptStruct GbxGame.GbxMomentNodeState_And
// 0x0000 (0x0070 - 0x0070)
struct FGbxMomentNodeState_And final : public FGbxMomentNodeState
{
};
DUMPER7_ASSERTS_FGbxMomentNodeState_And;

// ScriptStruct GbxGame.GbxMomentNodeSettings_ContinueMissionExecution
// 0x0000 (0x0080 - 0x0080)
struct FGbxMomentNodeSettings_ContinueMissionExecution final : public FGbxMomentNodeSettings
{
};
DUMPER7_ASSERTS_FGbxMomentNodeSettings_ContinueMissionExecution;

// ScriptStruct GbxGame.GbxMomentNodeState_ContinueMissionExecution
// 0x0000 (0x0070 - 0x0070)
struct FGbxMomentNodeState_ContinueMissionExecution final : public FGbxMomentNodeState
{
};
DUMPER7_ASSERTS_FGbxMomentNodeState_ContinueMissionExecution;

// ScriptStruct GbxGame.GbxStatusEffectQuery
// 0x0008 (0x0010 - 0x0008)
struct FGbxStatusEffectQuery : public FGbxHasStructType
{
public:
	class FName                                   QueryName;                                         // 0x0008(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxStatusEffectQuery;

// ScriptStruct GbxGame.GbxStatusEffectQuery_ContributionCount
// 0x0000 (0x0010 - 0x0010)
struct FGbxStatusEffectQuery_ContributionCount final : public FGbxStatusEffectQuery
{
};
DUMPER7_ASSERTS_FGbxStatusEffectQuery_ContributionCount;

// ScriptStruct GbxGame.GbxMomentNodeSettings_DebugPrint
// 0x0018 (0x0098 - 0x0080)
struct FGbxMomentNodeSettings_DebugPrint final : public FGbxMomentNodeSettings
{
public:
	class FString                                 String;                                            // 0x0080(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGbxMomentDebugPrintVerbosity                 Verbosity;                                         // 0x0090(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxMomentNodeSettings_DebugPrint;

// ScriptStruct GbxGame.GbxMomentNodeSettings_StopDialogLoop
// 0x0008 (0x0088 - 0x0080)
struct FGbxMomentNodeSettings_StopDialogLoop final : public FGbxMomentNodeSettings
{
public:
	class FName                                   LoopName;                                          // 0x0080(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxMomentNodeSettings_StopDialogLoop;

// ScriptStruct GbxGame.GbxMomentNodeState_DebugPrint
// 0x0000 (0x0070 - 0x0070)
struct FGbxMomentNodeState_DebugPrint final : public FGbxMomentNodeState
{
};
DUMPER7_ASSERTS_FGbxMomentNodeState_DebugPrint;

// ScriptStruct GbxGame.GbxStatusEffectPresentationGraphNodeSettings_Flow
// 0x0000 (0x0038 - 0x0038)
struct FGbxStatusEffectPresentationGraphNodeSettings_Flow : public FGbxStatusEffectPresentationGraphNodeSettings
{
};
DUMPER7_ASSERTS_FGbxStatusEffectPresentationGraphNodeSettings_Flow;

// ScriptStruct GbxGame.GbxStatusEffectPresentationGraphNodeSettings_Entry
// 0x0000 (0x0038 - 0x0038)
struct FGbxStatusEffectPresentationGraphNodeSettings_Entry final : public FGbxStatusEffectPresentationGraphNodeSettings_Flow
{
};
DUMPER7_ASSERTS_FGbxStatusEffectPresentationGraphNodeSettings_Entry;

// ScriptStruct GbxGame.GbxMomentNodeSettings_Delay
// 0x0038 (0x00B8 - 0x0080)
struct FGbxMomentNodeSettings_Delay final : public FGbxMomentNodeSettings
{
public:
	struct FGbxParam                              time;                                              // 0x0080(0x0038)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxMomentNodeSettings_Delay;

// ScriptStruct GbxGame.GbxMomentNodeState_Delay
// 0x0008 (0x0078 - 0x0070)
struct FGbxMomentNodeState_Delay final : public FGbxMomentNodeState
{
public:
	uint8                                         Pad_70[0x8];                                       // 0x0070(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxMomentNodeState_Delay;

// ScriptStruct GbxGame.GbxMomentNodeSettings_DialogWaitConversation
// 0x0008 (0x0088 - 0x0080)
struct FGbxMomentNodeSettings_DialogWaitConversation final : public FGbxMomentNodeSettings
{
public:
	class FName                                   ConversationName;                                  // 0x0080(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxMomentNodeSettings_DialogWaitConversation;

// ScriptStruct GbxGame.GbxMomentNodeSettings_DirectorNote
// 0x0050 (0x00D0 - 0x0080)
struct FGbxMomentNodeSettings_DirectorNote final : public FGbxMomentNodeSettings
{
public:
	struct FGbxParam                              Duration;                                          // 0x0080(0x0038)(Edit, NativeAccessSpecifierPublic)
	class FString                                 Note;                                              // 0x00B8(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGbxDirectorNoteColorPreset                   SubtitleColor;                                     // 0x00C8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxMomentNodeSettings_DirectorNote;

// ScriptStruct GbxGame.GbxMomentNodeState_DirectorNote
// 0x0008 (0x0078 - 0x0070)
struct FGbxMomentNodeState_DirectorNote final : public FGbxMomentNodeState
{
public:
	uint8                                         Pad_70[0x8];                                       // 0x0070(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxMomentNodeState_DirectorNote;

// ScriptStruct GbxGame.MissionSourceTimer
// 0x0058 (0x0060 - 0x0008)
struct FMissionSourceTimer : public FGbxHasStructType
{
public:
	struct FSToken                                label;                                             // 0x0008(0x000C)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFactAddress                           FactAddress;                                       // 0x0018(0x0038)(Edit, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FMissionSourceAction>           TimerCompletedActions;                             // 0x0050(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FMissionSourceTimer;

// ScriptStruct GbxGame.GbxMomentNodeState_EndMoment
// 0x0000 (0x0070 - 0x0070)
struct FGbxMomentNodeState_EndMoment final : public FGbxMomentNodeState
{
};
DUMPER7_ASSERTS_FGbxMomentNodeState_EndMoment;

// ScriptStruct GbxGame.GbxMomentNodeSettings_Event
// 0x0000 (0x0080 - 0x0080)
struct FGbxMomentNodeSettings_Event : public FGbxMomentNodeSettings
{
};
DUMPER7_ASSERTS_FGbxMomentNodeSettings_Event;

// ScriptStruct GbxGame.GbxMomentNodeSettings_Event_ArrivedAtAINode
// 0x0070 (0x00F0 - 0x0080)
struct FGbxMomentNodeSettings_Event_ArrivedAtAINode final : public FGbxMomentNodeSettings_Event
{
public:
	struct FGbxParam                              Actor;                                             // 0x0080(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              AINode;                                            // 0x00B8(0x0038)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxMomentNodeSettings_Event_ArrivedAtAINode;

// ScriptStruct GbxGame.GbxMomentNodeState_Event_ArrivedAtAINode
// 0x0010 (0x0080 - 0x0070)
struct FGbxMomentNodeState_Event_ArrivedAtAINode final : public FGbxMomentNodeState_Event
{
public:
	uint8                                         Pad_70[0x10];                                      // 0x0070(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxMomentNodeState_Event_ArrivedAtAINode;

// ScriptStruct GbxGame.GbxMomentNodeState_If
// 0x0000 (0x0070 - 0x0070)
struct FGbxMomentNodeState_If final : public FGbxMomentNodeState
{
};
DUMPER7_ASSERTS_FGbxMomentNodeState_If;

// ScriptStruct GbxGame.GbxMomentNodeSettings_InterruptDialog
// 0x0010 (0x0090 - 0x0080)
struct FGbxMomentNodeSettings_InterruptDialog final : public FGbxMomentNodeSettings
{
public:
	bool                                          bInterruptAllDialog;                               // 0x0080(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ConversationName;                                  // 0x0084(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxMomentNodeSettings_InterruptDialog;

// ScriptStruct GbxGame.GbxMomentNodeSettings_LookAt
// 0x0038 (0x0178 - 0x0140)
struct FGbxMomentNodeSettings_LookAt final : public FGbxMomentNodeSettings_LookAt_Base
{
public:
	struct FGbxParam                              target;                                            // 0x0140(0x0038)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxMomentNodeSettings_LookAt;

// ScriptStruct GbxGame.MissionTypes
// 0x0000 (0x0020 - 0x0020)
struct FMissionTypes final : public FNexusBitSet
{
};
DUMPER7_ASSERTS_FMissionTypes;

// ScriptStruct GbxGame.MissionGlobals
// 0x00A0 (0x00C0 - 0x0020)
struct FMissionGlobals final : public FGbxGlobalDef
{
public:
	FGameDataHandleProperty_                      DefaultTalkPrompt;                                 // 0x0020(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      InitialMissionSet;                                 // 0x0038(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MissionGiverCalloutDistanceHorz;                   // 0x0050(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MissionGiverCalloutDistanceVert;                   // 0x0054(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MissionGiverCalloutCooldown;                       // 0x0058(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MissionDroppedPickupFailsafeTimer;                 // 0x005C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMissionTypes                          MissionFailsafeTimerPickupTypes;                   // 0x0060(0x0020)(Edit, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  PickupObjectiveDisallowedSpawnTags;                // 0x0080(0x0020)(Edit, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  KillObjectiveDisallowedSpawnTags;                  // 0x00A0(0x0020)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FMissionGlobals;

// ScriptStruct GbxGame.GbxMomentNodeState_LookAtPlayer
// 0x0000 (0x0148 - 0x0148)
struct FGbxMomentNodeState_LookAtPlayer final : public FGbxMomentNodeState_LookAt_Base
{
};
DUMPER7_ASSERTS_FGbxMomentNodeState_LookAtPlayer;

// ScriptStruct GbxGame.GbxMomentNodeSettings_LookAtSpeaker
// 0x0000 (0x0140 - 0x0140)
struct FGbxMomentNodeSettings_LookAtSpeaker final : public FGbxMomentNodeSettings_LookAt_Base
{
};
DUMPER7_ASSERTS_FGbxMomentNodeSettings_LookAtSpeaker;

// ScriptStruct GbxGame.GbxMomentNodeSettings_MeleeAttack
// 0x0070 (0x00F0 - 0x0080)
struct FGbxMomentNodeSettings_MeleeAttack final : public FGbxMomentNodeSettings
{
public:
	struct FGbxParam                              Actor;                                             // 0x0080(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              target;                                            // 0x00B8(0x0038)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxMomentNodeSettings_MeleeAttack;

// ScriptStruct GbxGame.GbxMomentNodeState_MeleeAttack
// 0x0028 (0x0098 - 0x0070)
struct FGbxMomentNodeState_MeleeAttack final : public FGbxMomentNodeState
{
public:
	uint8                                         Pad_70[0x28];                                      // 0x0070(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxMomentNodeState_MeleeAttack;

// ScriptStruct GbxGame.GbxMomentNodeState_MoveTo
// 0x0058 (0x00C8 - 0x0070)
struct FGbxMomentNodeState_MoveTo : public FGbxMomentNodeState
{
public:
	uint8                                         Pad_70[0x58];                                      // 0x0070(0x0058)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxMomentNodeState_MoveTo;

// ScriptStruct GbxGame.GbxMomentNodeSettings_MusicEvent
// 0x0008 (0x0088 - 0x0080)
struct FGbxMomentNodeSettings_MusicEvent final : public FGbxMomentNodeSettings
{
public:
	struct FGameplayTag                           MusicEvent;                                        // 0x0080(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxMomentNodeSettings_MusicEvent;

// ScriptStruct GbxGame.GbxMomentNodeState_PersistentSequence
// 0x0000 (0x0070 - 0x0070)
struct FGbxMomentNodeState_PersistentSequence final : public FGbxMomentNodeState
{
};
DUMPER7_ASSERTS_FGbxMomentNodeState_PersistentSequence;

// ScriptStruct GbxGame.GbxMomentNodeState_PlayCutscene
// 0x0018 (0x01B0 - 0x0198)
struct FGbxMomentNodeState_PlayCutscene : public FGbxMomentNodeState_PlaySequence
{
public:
	uint8                                         Pad_198[0x18];                                     // 0x0198(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxMomentNodeState_PlayCutscene;

// ScriptStruct GbxGame.MissionAliasTemplate
// 0x0010 (0x0018 - 0x0008)
struct FMissionAliasTemplate : public FGbxHasStructType
{
public:
	uint8                                         Pad_8[0x10];                                       // 0x0008(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FMissionAliasTemplate;

// ScriptStruct GbxGame.MissionAliasTemplate_DerivedRegistryActor
// 0x0018 (0x0030 - 0x0018)
struct FMissionAliasTemplate_DerivedRegistryActor final : public FMissionAliasTemplate
{
public:
	uint8                                         Pad_18[0x18];                                      // 0x0018(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FMissionAliasTemplate_DerivedRegistryActor;

// ScriptStruct GbxGame.GbxMomentNodeSettings_PlayDialog
// 0x0080 (0x0100 - 0x0080)
struct FGbxMomentNodeSettings_PlayDialog final : public FGbxMomentNodeSettings
{
public:
	FGbxDefPtrProperty_                           LineSlot;                                          // 0x0080(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOverrideStartDelaySeconds;                        // 0x0098(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         StartDelaySeconds;                                 // 0x009C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ConversationName;                                  // 0x00A0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bWaitUntilSpeakerExists;                           // 0x00A8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              OptionalSpecificSpeaker;                           // 0x00B0(0x0038)(Edit, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           OverrideNameTag;                                   // 0x00E8(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxMomentNodeSettings_PlayDialog;

// ScriptStruct GbxGame.GbxMomentNodeState_PlayDialog
// 0x0008 (0x0078 - 0x0070)
struct FGbxMomentNodeState_PlayDialog final : public FGbxMomentNodeState_PlayDialogBase
{
public:
	uint8                                         Pad_70[0x8];                                       // 0x0070(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxMomentNodeState_PlayDialog;

// ScriptStruct GbxGame.GbxMomentNodeSettings_PlayDialogLines_DataVersion_BeforeDataAddedToLineSlots
// 0x0028 (0x0028 - 0x0000)
struct FGbxMomentNodeSettings_PlayDialogLines_DataVersion_BeforeDataAddedToLineSlots final
{
public:
	TArray<FGbxDefPtrProperty_>                   LineSlots;                                         // 0x0000(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bShowOnFinishedPinsForEachLine;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOverrideStartDelaySeconds;                        // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         StartDelaySeconds;                                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ConversationName;                                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bWaitUntilSpeakerExists;                           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxMomentNodeSettings_PlayDialogLines_DataVersion_BeforeDataAddedToLineSlots;

// ScriptStruct GbxGame.GbxMomentNodeSettings_PlayMoment
// 0x0018 (0x0098 - 0x0080)
struct FGbxMomentNodeSettings_PlayMoment final : public FGbxMomentNodeSettings
{
public:
	class UGbxMomentData*                         Moment;                                            // 0x0080(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGbxGraphParam>                 Parameters;                                        // 0x0088(0x0010)(Edit, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxMomentNodeSettings_PlayMoment;

// ScriptStruct GbxGame.GbxMomentNodeState_PlayMoment
// 0x01A8 (0x0218 - 0x0070)
struct FGbxMomentNodeState_PlayMoment final : public FGbxMomentNodeState
{
public:
	uint8                                         Pad_70[0x1A8];                                     // 0x0070(0x01A8)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxMomentNodeState_PlayMoment;

// ScriptStruct GbxGame.GbxMomentNodeState_PlaySound
// 0x0030 (0x00A0 - 0x0070)
struct FGbxMomentNodeState_PlaySound final : public FGbxMomentNodeState
{
public:
	uint8                                         Pad_70[0x30];                                      // 0x0070(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxMomentNodeState_PlaySound;

// ScriptStruct GbxGame.InventoryBodySimpleMotionBlendControl
// 0x00E0 (0x0128 - 0x0048)
struct FInventoryBodySimpleMotionBlendControl final : public FInventoryBodyControl
{
public:
	bool                                          bStartActive;                                      // 0x0048(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAutoActivate;                                     // 0x0049(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnableSyncToUseRate;                              // 0x004A(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4B[0x1];                                       // 0x004B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSyncToUseRateData                     SyncToUseRate;                                     // 0x004C(0x0008)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	float                                         ControlImpulseSpeed;                               // 0x0054(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ControlImpulseMaxValue;                            // 0x0058(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ControlImpulseDecayDelay;                          // 0x005C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ControlImpulseDecaySpeed;                          // 0x0060(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseExistingNode;                                  // 0x0064(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bMeshSpaceBlend;                                   // 0x0065(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAdditiveBlend;                                    // 0x0066(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_67[0x1];                                       // 0x0067(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UAnimationAsset>         Animation;                                         // 0x0068(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FInputBlendPose                        BlendLayerSetup;                                   // 0x0090(0x0010)(Edit, NativeAccessSpecifierPublic)
	struct FSimpleMotionState                     ActiveState;                                       // 0x00A0(0x0040)(Edit, NativeAccessSpecifierPublic)
	float                                         ActiveBlendTarget;                                 // 0x00E0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSimpleMotionState                     RecoveryState;                                     // 0x00E8(0x0040)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FInventoryBodySimpleMotionBlendControl;

// ScriptStruct GbxGame.GbxMomentNodeSettings_PlayTrick
// 0x00E8 (0x0168 - 0x0080)
struct FGbxMomentNodeSettings_PlayTrick final : public FGbxMomentNodeSettings
{
public:
	bool                                          bAllPlayers;                                       // 0x0080(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              Actor;                                             // 0x0088(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxTrickRef                           Trick;                                             // 0x00C0(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bUseDifferentTrickForHost;                         // 0x00D8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxTrickRef                           HostTrick;                                         // 0x00E0(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FGbxParam                              Count;                                             // 0x00F8(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              PlayRate;                                          // 0x0130(0x0038)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxMomentNodeSettings_PlayTrick;

// ScriptStruct GbxGame.GbxMomentNodeSettings_RevertToMainTask
// 0x0038 (0x00B8 - 0x0080)
struct FGbxMomentNodeSettings_RevertToMainTask final : public FGbxMomentNodeSettings
{
public:
	struct FGbxParam                              Actor;                                             // 0x0080(0x0038)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxMomentNodeSettings_RevertToMainTask;

// ScriptStruct GbxGame.GbxMomentNodeState_RevertToMainTask
// 0x0008 (0x0078 - 0x0070)
struct FGbxMomentNodeState_RevertToMainTask final : public FGbxMomentNodeState
{
public:
	uint8                                         Pad_70[0x8];                                       // 0x0070(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxMomentNodeState_RevertToMainTask;

// ScriptStruct GbxGame.GbxMomentNodeState_ScreenFade
// 0x0008 (0x0078 - 0x0070)
struct FGbxMomentNodeState_ScreenFade final : public FGbxMomentNodeState
{
public:
	uint8                                         Pad_70[0x8];                                       // 0x0070(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxMomentNodeState_ScreenFade;

// ScriptStruct GbxGame.GbxMomentNodeSettings_SetActorFactValue
// 0x0078 (0x00F8 - 0x0080)
struct FGbxMomentNodeSettings_SetActorFactValue final : public FGbxMomentNodeSettings
{
public:
	struct FGbxParam                              Actor;                                             // 0x0080(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FContingentFactChange                  FactChange;                                        // 0x00B8(0x0040)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxMomentNodeSettings_SetActorFactValue;

// ScriptStruct GbxGame.GbxMomentNodeSettings_SetBlackboardValue_NPC
// 0x0000 (0x0108 - 0x0108)
struct FGbxMomentNodeSettings_SetBlackboardValue_NPC final : public FGbxMomentNodeSettings_SetBlackboardValue
{
};
DUMPER7_ASSERTS_FGbxMomentNodeSettings_SetBlackboardValue_NPC;

// ScriptStruct GbxGame.GbxMomentNodeState_SetFactValue
// 0x0000 (0x0070 - 0x0070)
struct FGbxMomentNodeState_SetFactValue final : public FGbxMomentNodeState
{
};
DUMPER7_ASSERTS_FGbxMomentNodeState_SetFactValue;

// ScriptStruct GbxGame.GbxMomentNodeSettings_SetStance
// 0x0050 (0x00D0 - 0x0080)
struct FGbxMomentNodeSettings_SetStance final : public FGbxMomentNodeSettings
{
public:
	struct FGbxParam                              Actor;                                             // 0x0080(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGameplayTag                           StanceTag;                                         // 0x00B8(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   reason;                                            // 0x00C0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRestoreStateOnMomentEnd;                          // 0x00C8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bWaitForStanceTransition;                          // 0x00C9(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_CA[0x6];                                       // 0x00CA(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxMomentNodeSettings_SetStance;

// ScriptStruct GbxGame.ObjectiveValueEvaluator_ObjectiveStatus
// 0x0010 (0x0018 - 0x0008)
struct FObjectiveValueEvaluator_ObjectiveStatus final : public FObjectiveValueEvaluator
{
public:
	struct FSToken                                Objective;                                         // 0x0008(0x000C)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EObjectiveStatusConditionQuery                Condition;                                         // 0x0014(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FObjectiveValueEvaluator_ObjectiveStatus;

// ScriptStruct GbxGame.GbxMomentNodeSettings_SpawnParticle
// 0x00D8 (0x0158 - 0x0080)
struct FGbxMomentNodeSettings_SpawnParticle final : public FGbxMomentNodeSettings
{
public:
	class UNiagaraSystem*                         ParticleAsset;                                     // 0x0080(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxParam                              ParticleDuration;                                  // 0x0088(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              Actor;                                             // 0x00C0(0x0038)(Edit, NativeAccessSpecifierPublic)
	class FName                                   SocketName;                                        // 0x00F8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                RelativeLocation;                                  // 0x0100(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               RelativeRotation;                                  // 0x0118(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                RelativeScale;                                     // 0x0130(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGbxParticleParameter>          ParticleParameters;                                // 0x0148(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxMomentNodeSettings_SpawnParticle;

// ScriptStruct GbxGame.GbxMomentNodeState_SpawnParticle
// 0x0018 (0x0088 - 0x0070)
struct FGbxMomentNodeState_SpawnParticle final : public FGbxMomentNodeState
{
public:
	uint8                                         Pad_70[0x18];                                      // 0x0070(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxMomentNodeState_SpawnParticle;

// ScriptStruct GbxGame.GbxMomentNodeState_Start
// 0x0000 (0x0070 - 0x0070)
struct FGbxMomentNodeState_Start final : public FGbxMomentNodeState
{
};
DUMPER7_ASSERTS_FGbxMomentNodeState_Start;

// ScriptStruct GbxGame.GbxMomentNodeSettings_StartDialogLoop
// 0x0050 (0x00D0 - 0x0080)
struct FGbxMomentNodeSettings_StartDialogLoop final : public FGbxMomentNodeSettings
{
public:
	class FName                                   LoopName;                                          // 0x0080(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	FGbxDefPtrProperty_                           LineSlot;                                          // 0x0088(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FFloatInterval                         LoopDelaySeconds;                                  // 0x00A0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FInt32Interval                         NumberOfLoops;                                     // 0x00A8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bOnlyPlayLoopWhenMissionIsTracked;                 // 0x00B0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bAlwaysCreateInSeparateConversation;               // 0x00B1(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bStopImmediately;                                  // 0x00B2(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_B3[0x5];                                       // 0x00B3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	FGbxDefPtrProperty_                           AssociatedMissionOverride;                         // 0x00B8(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxMomentNodeSettings_StartDialogLoop;

// ScriptStruct GbxGame.GbxMomentNodeState_TravelToAINode
// 0x0050 (0x00C0 - 0x0070)
struct FGbxMomentNodeState_TravelToAINode : public FGbxMomentNodeState
{
public:
	uint8                                         Pad_70[0x50];                                      // 0x0070(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxMomentNodeState_TravelToAINode;

// ScriptStruct GbxGame.GbxMomentNodeState_Wait
// 0x0000 (0x0070 - 0x0070)
struct FGbxMomentNodeState_Wait final : public FGbxMomentNodeState
{
};
DUMPER7_ASSERTS_FGbxMomentNodeState_Wait;

// ScriptStruct GbxGame.GbxMovingPlatformReplicatedMoveState_FullReplicating
// 0x0070 (0x0070 - 0x0000)
struct FGbxMovingPlatformReplicatedMoveState_FullReplicating final
{
public:
	struct FTransform                             PlatformTransform;                                 // 0x0000(0x0060)(Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         LastTeleport;                                      // 0x0060(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_64[0xC];                                       // 0x0064(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxMovingPlatformReplicatedMoveState_FullReplicating;

// ScriptStruct GbxGame.MissionGraphAliasTypeData_Int
// 0x0008 (0x0010 - 0x0008)
struct FMissionGraphAliasTypeData_Int final : public FMissionGraphAliasTypeData
{
public:
	int32                                         Value;                                             // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FMissionGraphAliasTypeData_Int;

// ScriptStruct GbxGame.GbxMusicAction_SetSwitch
// 0x0018 (0x0020 - 0x0008)
struct FGbxMusicAction_SetSwitch final : public FGbxMusicAction
{
public:
	FGbxDefPtrProperty_                           WwiseSwitch;                                       // 0x0008(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxMusicAction_SetSwitch;

// ScriptStruct GbxGame.GbxMusicAction_RandomSwitch
// 0x0010 (0x0018 - 0x0008)
struct FGbxMusicAction_RandomSwitch final : public FGbxMusicAction
{
public:
	TArray<FGbxDefPtrProperty_>                   WwiseSwitches;                                     // 0x0008(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxMusicAction_RandomSwitch;

// ScriptStruct GbxGame.GbxMusicSection
// 0x0060 (0x0068 - 0x0008)
struct FGbxMusicSection final : public FGbxHasStructType
{
public:
	uint8                                         Pad_8[0x10];                                       // 0x0008(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Name;                                              // 0x0018(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGbxInlineStruct>               Conditions;                                        // 0x0020(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FGbxInlineStruct>               actions;                                           // 0x0030(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FGbxInlineStruct>               Children;                                          // 0x0040(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_50[0x18];                                      // 0x0050(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxMusicSection;

// ScriptStruct GbxGame.GbxMusicDef
// 0x00D0 (0x00E8 - 0x0018)
struct FGbxMusicDef : public FGbxDef
{
public:
	FGameDataHandleProperty_                      audioprovider;                                     // 0x0018(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxMusicSection                       MusicSections;                                     // 0x0030(0x0068)(Edit, NativeAccessSpecifierPublic)
	TMap<struct FGameplayTag, FGbxDefPtrProperty_> MusicEvents;                                      // 0x0098(0x0050)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxMusicDef;

// ScriptStruct GbxGame.GbxNodeActivationLevel_ValueResolver
// 0x0020 (0x0028 - 0x0008)
struct FGbxNodeActivationLevel_ValueResolver final : public FAttributeValueResolver
{
public:
	struct FGbxUnlockableNodeRef                  ProgressGraphNodeRef;                              // 0x0008(0x0020)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxNodeActivationLevel_ValueResolver;

// ScriptStruct GbxGame.ObjectiveValueEvaluatorState
// 0x0068 (0x0070 - 0x0008)
struct FObjectiveValueEvaluatorState : public FGbxHasStructType
{
public:
	uint8                                         Pad_8[0x68];                                       // 0x0008(0x0068)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FObjectiveValueEvaluatorState;

// ScriptStruct GbxGame.ObjectiveValueEvaluatorState_ActorHealthDepleted
// 0x0058 (0x00C8 - 0x0070)
struct FObjectiveValueEvaluatorState_ActorHealthDepleted final : public FObjectiveValueEvaluatorState
{
public:
	uint8                                         Pad_70[0x58];                                      // 0x0070(0x0058)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FObjectiveValueEvaluatorState_ActorHealthDepleted;

// ScriptStruct GbxGame.OpportunisticAmbientAudioProviderDef
// 0x0008 (0x0150 - 0x0148)
struct FOpportunisticAmbientAudioProviderDef final : public FGbxAudioProviderDef
{
public:
	float                                         ClusterEmitterInterpolationTime;                   // 0x0148(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ClusterEmitterFadeOutTime;                         // 0x014C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FOpportunisticAmbientAudioProviderDef;

// ScriptStruct GbxGame.GbxAmbientAudioOpportunitySet
// 0x0030 (0x0030 - 0x0000)
struct FGbxAmbientAudioOpportunitySet final
{
public:
	FGbxDefPtrProperty_                           Config;                                            // 0x0000(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FVector>                        Locations;                                         // 0x0018(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FGameplayTag                           SourceTag;                                         // 0x0028(0x0008)(Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxAmbientAudioOpportunitySet;

// ScriptStruct GbxGame.GbxPlayerAnalyticAggregates
// 0x0070 (0x0070 - 0x0000)
struct FGbxPlayerAnalyticAggregates final
{
public:
	uint64                                        DamageDealt;                                       // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint64                                        CriticalDamageDealt;                               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FName, uint64>                     DamageDealtPerSource;                              // 0x0010(0x0050)(NativeAccessSpecifierPublic)
	uint64                                        DamageReceived;                                    // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        Grapples;                                          // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxPlayerAnalyticAggregates;

// ScriptStruct GbxGame.GbxPlayerControllerContextResolver
// 0x0000 (0x0008 - 0x0008)
struct FGbxPlayerControllerContextResolver final : public FAttributeContextResolver
{
};
DUMPER7_ASSERTS_FGbxPlayerControllerContextResolver;

// ScriptStruct GbxGame.GbxProfileProgressVaultPath
// 0x0050 (0x0050 - 0x0000)
struct alignas(0x08) FGbxProfileProgressVaultPath final
{
public:
	class FName                                   Name;                                              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGbxProfileProgressVaultPathType              type;                                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ParentName;                                        // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          SeparateFile;                                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSToken                                AutogenItemNameFormat;                             // 0x0018(0x000C)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x2C];                                      // 0x0024(0x002C)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxProfileProgressVaultPath;

// ScriptStruct GbxGame.GbxProgressionCommand_SpendPoints
// 0x0028 (0x0030 - 0x0008)
struct FGbxProgressionCommand_SpendPoints final : public FGbxProgressionCommand
{
public:
	struct FGbxUnlockableNodeRef                  Node;                                              // 0x0008(0x0020)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         NumPointsToSpendInNode;                            // 0x0028(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxProgressionCommand_SpendPoints;

// ScriptStruct GbxGame.LightBeamImpactFXTrackingData
// 0x0028 (0x0028 - 0x0000)
struct FLightBeamImpactFXTrackingData final
{
public:
	class USceneComponent*                        Component;                                         // 0x0000(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPhysicalMaterial*                      PhysicalMaterial;                                  // 0x0008(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_10[0x18];                                      // 0x0010(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FLightBeamImpactFXTrackingData;

// ScriptStruct GbxGame.GbxProgressPointsPoolOps_ValueResolver
// 0x0020 (0x0028 - 0x0008)
struct FGbxProgressPointsPoolOps_ValueResolver final : public FAttributeValueResolver
{
public:
	FGbxDefPtrProperty_                           PointPool;                                         // 0x0008(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EGbxProgressPointsPoolOps                     Operation;                                         // 0x0020(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxProgressPointsPoolOps_ValueResolver;

// ScriptStruct GbxGame.GbxProjectedMeshOptions
// 0x0048 (0x0048 - 0x0000)
struct alignas(0x08) FGbxProjectedMeshOptions final
{
public:
	uint8                                         Pad_0[0x48];                                       // 0x0000(0x0048)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxProjectedMeshOptions;

// ScriptStruct GbxGame.GbxProjectedMeshResults
// 0x0040 (0x0040 - 0x0000)
struct alignas(0x08) FGbxProjectedMeshResults final
{
public:
	uint8                                         Pad_0[0x40];                                       // 0x0000(0x0040)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxProjectedMeshResults;

// ScriptStruct GbxGame.GbxReplicatedBitArray
// 0x0010 (0x0010 - 0x0000)
struct FGbxReplicatedBitArray final
{
public:
	TArray<uint32>                                items;                                             // 0x0000(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxReplicatedBitArray;

// ScriptStruct GbxGame.GbxRewardDataUnique
// 0x0000 (0x0020 - 0x0020)
struct FGbxRewardDataUnique final : public FGbxRewardData
{
};
DUMPER7_ASSERTS_FGbxRewardDataUnique;

// ScriptStruct GbxGame.GbxRewardData_Package
// 0x0018 (0x0038 - 0x0020)
struct FGbxRewardData_Package : public FGbxRewardData
{
public:
	FGbxDefPtrProperty_                           RewardDef;                                         // 0x0020(0x0018)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
};
DUMPER7_ASSERTS_FGbxRewardData_Package;

// ScriptStruct GbxGame.MissionAlias
// 0x0048 (0x0048 - 0x0000)
struct alignas(0x08) FMissionAlias final
{
public:
	uint8                                         Pad_0[0x48];                                       // 0x0000(0x0048)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FMissionAlias;

// ScriptStruct GbxGame.MissionAliasList
// 0x0010 (0x0010 - 0x0000)
struct FMissionAliasList final
{
public:
	TArray<struct FMissionAlias>                  aliases;                                           // 0x0000(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FMissionAliasList;

// ScriptStruct GbxGame.MissionChoiceOptionDef
// 0x00A0 (0x00B8 - 0x0018)
struct FMissionChoiceOptionDef final : public FGbxDef
{
public:
	uint8                                         Pad_18[0x4];                                       // 0x0018(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Choice;                                            // 0x001C(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFactExpression                        FactCondition;                                     // 0x0028(0x0010)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              Weight;                                            // 0x0038(0x0038)(Edit, NativeAccessSpecifierPublic)
	EMatchTypeAdditionalTags                      MatchType;                                         // 0x0070(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FNexusBitSet                           CheckAgainstAdditionalAreaTags;                    // 0x0078(0x0020)(Edit, NativeAccessSpecifierPublic)
	struct FMissionAliasList                      aliases;                                           // 0x0098(0x0010)(NativeAccessSpecifierPublic)
	struct FMissionAliasList                      waypoint_aliases;                                  // 0x00A8(0x0010)(NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FMissionChoiceOptionDef;

// ScriptStruct GbxGame.GbxRewardData_ImmediateDef
// 0x0000 (0x0038 - 0x0038)
struct FGbxRewardData_ImmediateDef final : public FGbxRewardData_Package
{
};
DUMPER7_ASSERTS_FGbxRewardData_ImmediateDef;

// ScriptStruct GbxGame.GbxRewardData_ProgressPoints
// 0x0068 (0x0088 - 0x0020)
struct FGbxRewardData_ProgressPoints final : public FGbxRewardData
{
public:
	struct FGbxProgressPointsAmount               ProgressPoints;                                    // 0x0020(0x0068)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxRewardData_ProgressPoints;

// ScriptStruct GbxGame.GbxRewardData_Unlockable
// 0x0018 (0x0038 - 0x0020)
struct FGbxRewardData_Unlockable final : public FGbxRewardData
{
public:
	FGbxDefPtrProperty_                           UnlockableDef;                                     // 0x0020(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxRewardData_Unlockable;

// ScriptStruct GbxGame.GbxRewardPackageContents
// 0x0018 (0x0018 - 0x0000)
struct FGbxRewardPackageContents final
{
public:
	int32                                         RewardsDataIndex;                                  // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         SerialNumbers;                                     // 0x0008(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxRewardPackageContents;

// ScriptStruct GbxGame.GbxRewardPackage
// 0x0050 (0x0050 - 0x0000)
struct FGbxRewardPackage final
{
public:
	uint8                                         Pad_0[0x8];                                        // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              TimeReceived;                                      // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         gamestage;                                         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         RewardMagnitudeScale;                              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	FGbxDefPtrProperty_                           RewardsDef;                                        // 0x0018(0x0018)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FGbxRewardPackageContents>      contents;                                          // 0x0030(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	class FName                                   SourceIdent;                                       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bHasBeenViewed;                                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxRewardPackage;

// ScriptStruct GbxGame.GbxRewardRefData_RewardsDef
// 0x0018 (0x0020 - 0x0008)
struct FGbxRewardRefData_RewardsDef final : public FGbxRewardRefData
{
public:
	FGbxDefPtrProperty_                           RewardDef;                                         // 0x0008(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxRewardRefData_RewardsDef;

// ScriptStruct GbxGame.GbxRotationChannelData_Aim
// 0x0000 (0x0068 - 0x0068)
struct FGbxRotationChannelData_Aim final : public FGbxRotationChannelData_Child
{
};
DUMPER7_ASSERTS_FGbxRotationChannelData_Aim;

// ScriptStruct GbxGame.GbxRotationChannelSettings_Body
// 0x0018 (0x0058 - 0x0040)
struct FGbxRotationChannelSettings_Body final : public FGbxRotationChannelSettings
{
public:
	bool                                          bUseIdleTurns;                                     // 0x0040(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MinAimYawForTurn;                                  // 0x0044(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseLocomotionRotationRate;                        // 0x0048(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LocomotionRotationRate;                            // 0x004C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bTargetControllerWhenMoving;                       // 0x0050(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxRotationChannelSettings_Body;

// ScriptStruct GbxGame.GbxRotationContextualOverride
// 0x0008 (0x0058 - 0x0050)
struct FGbxRotationContextualOverride final : public FGbxRotationNodeBaseState
{
public:
	uint8                                         Pad_50[0x8];                                       // 0x0050(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxRotationContextualOverride;

// ScriptStruct GbxGame.GbxRotationDef
// 0x0048 (0x0060 - 0x0018)
struct FGbxRotationDef final : public FGbxDef
{
public:
	struct FGbxRotationChannelData_Body           BodyChannelData;                                   // 0x0018(0x0048)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxRotationDef;

// ScriptStruct GbxGame.GbxRotationTargetModifierSettings_DistanceBasedAlphaScale
// 0x0018 (0x0050 - 0x0038)
struct FGbxRotationTargetModifierSettings_DistanceBasedAlphaScale final : public FGbxRotationTargetModifierSettings
{
public:
	struct FNumericRange                          AlphaScaleRange;                                   // 0x0038(0x0008)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FNumericRange                          DistanceRange;                                     // 0x0040(0x0008)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bInvertScaling;                                    // 0x0048(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxRotationTargetModifierSettings_DistanceBasedAlphaScale;

// ScriptStruct GbxGame.GbxRotationTargetModifier_DistanceBasedAlphaScale
// 0x0000 (0x0068 - 0x0068)
struct FGbxRotationTargetModifier_DistanceBasedAlphaScale final : public FGbxRotationTargetModifier
{
};
DUMPER7_ASSERTS_FGbxRotationTargetModifier_DistanceBasedAlphaScale;

// ScriptStruct GbxGame.GbxRotationTargetModifier_DistanceBasedBlend
// 0x0000 (0x0090 - 0x0090)
struct FGbxRotationTargetModifier_DistanceBasedBlend final : public FGbxRotationTargetModifier_BlendBase
{
};
DUMPER7_ASSERTS_FGbxRotationTargetModifier_DistanceBasedBlend;

// ScriptStruct GbxGame.GbxRotationTargetModifierSettings_Distract
// 0x0048 (0x0080 - 0x0038)
struct FGbxRotationTargetModifierSettings_Distract final : public FGbxRotationTargetModifierSettings
{
public:
	struct FNumericRange                          FocusTimeRange;                                    // 0x0038(0x0008)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FNumericRange                          DistractTimeRange;                                 // 0x0040(0x0008)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FNumericRange                          DistractYawRange;                                  // 0x0048(0x0008)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FNumericRange                          DistractPitchRange;                                // 0x0050(0x0008)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FNumericRange                          DeviateTimeRange;                                  // 0x0058(0x0008)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	float                                         DeviateChance;                                     // 0x0060(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FNumericRange                          DeviatePercentageRange;                            // 0x0064(0x0008)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FNumericRange                          DeviateYawRange;                                   // 0x006C(0x0008)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FNumericRange                          DeviatePitchRange;                                 // 0x0074(0x0008)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxRotationTargetModifierSettings_Distract;

// ScriptStruct GbxGame.GbxRotationTargetModifierData_Distract
// 0x0048 (0x0050 - 0x0008)
struct FGbxRotationTargetModifierData_Distract final : public FGbxRotationTargetModifierData
{
public:
	struct FNumericRange                          FocusTimeRange;                                    // 0x0008(0x0008)(NoDestructor, NativeAccessSpecifierPublic)
	struct FNumericRange                          DistractTimeRange;                                 // 0x0010(0x0008)(NoDestructor, NativeAccessSpecifierPublic)
	struct FNumericRange                          DistractYawRange;                                  // 0x0018(0x0008)(NoDestructor, NativeAccessSpecifierPublic)
	struct FNumericRange                          DistractPitchRange;                                // 0x0020(0x0008)(NoDestructor, NativeAccessSpecifierPublic)
	struct FNumericRange                          DeviateTimeRange;                                  // 0x0028(0x0008)(NoDestructor, NativeAccessSpecifierPublic)
	float                                         DeviateChance;                                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FNumericRange                          DeviatePercentageRange;                            // 0x0034(0x0008)(NoDestructor, NativeAccessSpecifierPublic)
	struct FNumericRange                          DeviateYawRange;                                   // 0x003C(0x0008)(NoDestructor, NativeAccessSpecifierPublic)
	struct FNumericRange                          DeviatePitchRange;                                 // 0x0044(0x0008)(NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxRotationTargetModifierData_Distract;

// ScriptStruct GbxGame.MissionAliasTemplate_DynamicTask
// 0x0000 (0x0018 - 0x0018)
struct FMissionAliasTemplate_DynamicTask final : public FMissionAliasTemplate
{
};
DUMPER7_ASSERTS_FMissionAliasTemplate_DynamicTask;

// ScriptStruct GbxGame.GbxRotationToTargetValueResolver
// 0x0018 (0x0020 - 0x0008)
struct FGbxRotationToTargetValueResolver final : public FAttributeValueResolver
{
public:
	class FName                                   channel;                                           // 0x0008(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FNumericRange                          IsWithinThreshold;                                 // 0x0010(0x0008)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                          bUseWithinThreshold;                               // 0x0018(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxRotationToTargetValueResolver;

// ScriptStruct GbxGame.GbxSecondarySequenceActorData
// 0x0018 (0x0028 - 0x0010)
struct alignas(0x08) FGbxSecondarySequenceActorData final : public FGbxSequenceActorData
{
public:
	FGameDataHandleProperty_                      ActorBindingAttribute;                             // 0x0010(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxSecondarySequenceActorData;

// ScriptStruct GbxGame.GbxStatusEffectPresentationGraphNodeSettings_Effect_DynamicMaterial
// 0x0018 (0x0050 - 0x0038)
struct FGbxStatusEffectPresentationGraphNodeSettings_Effect_DynamicMaterial final : public FGbxStatusEffectPresentationGraphNodeSettings_Effect
{
public:
	TArray<struct FGbxInlineStruct>               params;                                            // 0x0038(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TSubclassOf<class UGbxSceneComponentResolver> Resolver;                                          // 0x0048(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxStatusEffectPresentationGraphNodeSettings_Effect_DynamicMaterial;

// ScriptStruct GbxGame.GbxSequenceClosedCaptionKey
// 0x0018 (0x0018 - 0x0000)
struct alignas(0x08) FGbxSequenceClosedCaptionKey final
{
public:
	FGbxDefPtrProperty_                           CaptionDef;                                        // 0x0000(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxSequenceClosedCaptionKey;

// ScriptStruct GbxGame.ItemPoolSelectorDef
// 0x0068 (0x0090 - 0x0028)
struct FItemPoolSelectorDef final : public FDefSelectorBaseDef
{
public:
	FGameDataHandleProperty_                      DefaultItemPool;                                   // 0x0028(0x0018)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_40[0x50];                                      // 0x0040(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FItemPoolSelectorDef;

// ScriptStruct GbxGame.GbxSequenceClosedCaptionChannel
// 0x00A8 (0x00F8 - 0x0050)
struct FGbxSequenceClosedCaptionChannel final : public FMovieSceneChannel
{
public:
	TArray<struct FFrameNumber>                   KeyTimes;                                          // 0x0050(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FGbxSequenceClosedCaptionKey>   KeyValues;                                         // 0x0060(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	struct FMovieSceneKeyHandleMap                KeyHandles;                                        // 0x0070(0x0088)(Transient, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxSequenceClosedCaptionChannel;

// ScriptStruct GbxGame.GbxSequenceFeedbackChannel
// 0x00A8 (0x00F8 - 0x0050)
struct FGbxSequenceFeedbackChannel final : public FMovieSceneChannel
{
public:
	TArray<struct FFrameNumber>                   KeyTimes;                                          // 0x0050(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FGbxSequenceFeedbackKey>        KeyValues;                                         // 0x0060(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_70[0x88];                                      // 0x0070(0x0088)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxSequenceFeedbackChannel;

// ScriptStruct GbxGame.GbxSequenceLoopParams
// 0x0028 (0x0028 - 0x0000)
struct alignas(0x08) FGbxSequenceLoopParams final
{
public:
	uint16                                        StaticLoopCount;                                   // 0x0000(0x0002)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	FGameDataHandleProperty_                      BreakCondition;                                    // 0x0008(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bStaticLoop;                                       // 0x0020(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxSequenceLoopParams;

// ScriptStruct GbxGame.GbxSequenceMomentEventChannel
// 0x00A8 (0x00F8 - 0x0050)
struct FGbxSequenceMomentEventChannel final : public FMovieSceneChannel
{
public:
	TArray<struct FFrameNumber>                   Times;                                             // 0x0050(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FGbxSequenceMomentEventKey>     KeyValues;                                         // 0x0060(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	struct FMovieSceneKeyHandleMap                KeyHandles;                                        // 0x0070(0x0088)(Transient, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxSequenceMomentEventChannel;

// ScriptStruct GbxGame.MissionObjectiveAspect_UpdateCountModifier
// 0x0050 (0x0058 - 0x0008)
struct FMissionObjectiveAspect_UpdateCountModifier final : public FMissionObjectiveAspect
{
public:
	EObjectiveUpdateCountDisplayType              DisplayType;                                       // 0x0008(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMissionObjectiveUpdateCountValue      InitialValue;                                      // 0x0010(0x0048)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FMissionObjectiveAspect_UpdateCountModifier;

// ScriptStruct GbxGame.GbxSequenceMomentEventTemplate
// 0x00F8 (0x0118 - 0x0020)
struct FGbxSequenceMomentEventTemplate final : public FMovieSceneEvalTemplate
{
public:
	struct FGbxSequenceMomentEventChannel         EventData;                                         // 0x0020(0x00F8)(NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxSequenceMomentEventTemplate;

// ScriptStruct GbxGame.GbxExternalPhysicsAssetData
// 0x0010 (0x0010 - 0x0000)
struct FGbxExternalPhysicsAssetData final
{
public:
	class UPhysicsAsset*                          PhysicsAsset;                                      // 0x0000(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   BoneName;                                          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxExternalPhysicsAssetData;

// ScriptStruct GbxGame.GbxStatusEffectPresentationGraphNodeSettings_Effect_Wwise
// 0x0030 (0x0068 - 0x0038)
struct FGbxStatusEffectPresentationGraphNodeSettings_Effect_Wwise final : public FGbxStatusEffectPresentationGraphNodeSettings_Effect
{
public:
	FGbxDefPtrProperty_                           StartEventDef;                                     // 0x0038(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	FGbxDefPtrProperty_                           EndEventDef;                                       // 0x0050(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxStatusEffectPresentationGraphNodeSettings_Effect_Wwise;

// ScriptStruct GbxGame.LightBeamAttachment
// 0x0060 (0x0060 - 0x0000)
struct FLightBeamAttachment final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneComponent*                        Component;                                         // 0x0008(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   socket;                                            // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector_NetQuantize100                 LocationOffset;                                    // 0x0018(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector_NetQuantizeNormal              Direction;                                         // 0x0030(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDirectionInLocalSpace;                            // 0x0048(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x17];                                      // 0x0049(0x0017)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FLightBeamAttachment;

// ScriptStruct GbxGame.LightBeamSpawnData
// 0x0218 (0x0220 - 0x0008)
struct FLightBeamSpawnData final : public FGbxHasStructType
{
public:
	FGameDataHandleProperty_                      definition;                                        // 0x0008(0x0018)(BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLightBeamAttachment                   Source;                                            // 0x0020(0x0060)(BlueprintVisible, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FLightBeamAttachment                   target;                                            // 0x0080(0x0060)(BlueprintVisible, ContainsInstancedReference, NativeAccessSpecifierPublic)
	int32                                         Flags;                                             // 0x00E0(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 instigator;                                        // 0x00E8(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 DamageCauser;                                      // 0x00F0(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         damage;                                            // 0x00F8(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DamageIntervalOverride;                            // 0x00FC(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      DamageType;                                        // 0x0100(0x0018)(BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDamageSourceContainer                 DamageSource;                                      // 0x0118(0x0040)(BlueprintVisible, NativeAccessSpecifierPublic)
	class UCurveFloat*                            DamageRampCurve;                                   // 0x0158(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DamageRampScale;                                   // 0x0160(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         damageradius;                                      // 0x0164(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FForceSelection                        ImpactForce;                                       // 0x0168(0x0048)(BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactEffectSelection                 ImpactEffect;                                      // 0x01B0(0x0018)(BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	class FName                                   Name;                                              // 0x01C8(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         spread;                                            // 0x01D0(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LifetimeOverride;                                  // 0x01D4(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDamageTags                            DamageTags;                                        // 0x01D8(0x0020)(BlueprintVisible, NativeAccessSpecifierPublic)
	uint8                                         Pad_1F8[0x18];                                     // 0x01F8(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	class ULightBeam*                             ParentBeam;                                        // 0x0210(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_218[0x8];                                      // 0x0218(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FLightBeamSpawnData;

// ScriptStruct GbxGame.GbxSkillActionExceptionGroup
// 0x0018 (0x0018 - 0x0000)
struct FGbxSkillActionExceptionGroup final
{
public:
	class FName                                   GroupName;                                         // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGbxInlineStruct>               actions;                                           // 0x0008(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxSkillActionExceptionGroup;

// ScriptStruct GbxGame.GbxSkillActionExecFilter_Def
// 0x0018 (0x0020 - 0x0008)
struct FGbxSkillActionExecFilter_Def final : public FGbxSkillActionExecFilter
{
public:
	FGbxDefPtrProperty_                           def;                                               // 0x0008(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxSkillActionExecFilter_Def;

// ScriptStruct GbxGame.GbxSkillActionExecFilter_SkillState_Entry
// 0x0020 (0x0020 - 0x0000)
struct alignas(0x08) FGbxSkillActionExecFilter_SkillState_Entry final
{
public:
	bool                                          bEnabled;                                          // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FGbxDefPtrProperty_                           SkillStateDef;                                     // 0x0008(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxSkillActionExecFilter_SkillState_Entry;

// ScriptStruct GbxGame.GbxContextParam_PlayerSpawningLoot
// 0x0008 (0x0010 - 0x0008)
struct FGbxContextParam_PlayerSpawningLoot final : public FGbxContextParam
{
public:
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxContextParam_PlayerSpawningLoot;

// ScriptStruct GbxGame.GbxSkillActionExecFilter_SkillState
// 0x0010 (0x0018 - 0x0008)
struct FGbxSkillActionExecFilter_SkillState final : public FGbxSkillActionExecFilter
{
public:
	TArray<struct FGbxSkillActionExecFilter_SkillState_Entry> Entries;                               // 0x0008(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxSkillActionExecFilter_SkillState;

// ScriptStruct GbxGame.GbxSkillActionItemExec_ScriptEvent
// 0x0008 (0x0010 - 0x0008)
struct FGbxSkillActionItemExec_ScriptEvent final : public FGbxSkillActionItemExec
{
public:
	class FName                                   EventName;                                         // 0x0008(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxSkillActionItemExec_ScriptEvent;

// ScriptStruct GbxGame.GbxSkillActionItemExec_SkillEffect
// 0x0028 (0x0030 - 0x0008)
struct FGbxSkillActionItemExec_SkillEffect final : public FGbxSkillActionItemExec
{
public:
	FGbxDefPtrProperty_                           EffectDef;                                         // 0x0008(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                   reason;                                            // 0x0020(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EGbxSkillEffectOp                             EffectOp;                                          // 0x0028(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxSkillActionItemExec_SkillEffect;

// ScriptStruct GbxGame.GbxSkillActionItemExec_ClearSkillEffects
// 0x0020 (0x0028 - 0x0008)
struct FGbxSkillActionItemExec_ClearSkillEffects final : public FGbxSkillActionItemExec
{
public:
	FGbxDefPtrProperty_                           RootDef;                                           // 0x0008(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bIncludeRoot;                                      // 0x0020(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxSkillActionItemExec_ClearSkillEffects;

// ScriptStruct GbxGame.GbxSkillActionItemExec_SkillEvent
// 0x0018 (0x0020 - 0x0008)
struct FGbxSkillActionItemExec_SkillEvent final : public FGbxSkillActionItemExec
{
public:
	FGbxDefPtrProperty_                           EventDef;                                          // 0x0008(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxSkillActionItemExec_SkillEvent;

// ScriptStruct GbxGame.MissionActionType_BinderEnable
// 0x0010 (0x0030 - 0x0020)
struct FMissionActionType_BinderEnable final : public FMissionActionTypeBase
{
public:
	struct FSToken                                BinderName;                                        // 0x0020(0x000C)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FMissionActionType_BinderEnable;

// ScriptStruct GbxGame.MissionActionCondition_ObjectiveStatus
// 0x0010 (0x0020 - 0x0010)
struct FMissionActionCondition_ObjectiveStatus final : public FMissionActionCondition
{
public:
	struct FSToken                                Objective;                                         // 0x0010(0x000C)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EObjectiveStatusConditionQuery                Condition;                                         // 0x001C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FMissionActionCondition_ObjectiveStatus;

// ScriptStruct GbxGame.GbxSkillActionSequenceExecInterruptPolicyData
// 0x0000 (0x0008 - 0x0008)
struct FGbxSkillActionSequenceExecInterruptPolicyData : public FGbxHasStructType
{
};
DUMPER7_ASSERTS_FGbxSkillActionSequenceExecInterruptPolicyData;

// ScriptStruct GbxGame.GpsTest_GbxSkillParam
// 0x0000 (0x0060 - 0x0060)
struct FGpsTest_GbxSkillParam final : public FGpsTest
{
};
DUMPER7_ASSERTS_FGpsTest_GbxSkillParam;

// ScriptStruct GbxGame.GbxSkillActionSequenceExecInterruptPolicyData_ActionInterruptible
// 0x0000 (0x0008 - 0x0008)
struct FGbxSkillActionSequenceExecInterruptPolicyData_ActionInterruptible final : public FGbxSkillActionSequenceExecInterruptPolicyData
{
};
DUMPER7_ASSERTS_FGbxSkillActionSequenceExecInterruptPolicyData_ActionInterruptible;

// ScriptStruct GbxGame.GbxSkillActionSequenceExecBufferPolicyData_Timed
// 0x0008 (0x0010 - 0x0008)
struct FGbxSkillActionSequenceExecBufferPolicyData_Timed final : public FGbxSkillActionSequenceExecBufferPolicyData
{
public:
	float                                         Seconds;                                           // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxSkillActionSequenceExecBufferPolicyData_Timed;

// ScriptStruct GbxGame.ReplicatedImpactHitResult
// 0x0058 (0x0058 - 0x0000)
struct alignas(0x08) FReplicatedImpactHitResult final
{
public:
	uint8                                         Pad_0[0x58];                                       // 0x0000(0x0058)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FReplicatedImpactHitResult;

// ScriptStruct GbxGame.GbxSkillActionItem_BranchingTrick
// 0x0108 (0x0170 - 0x0068)
struct FGbxSkillActionItem_BranchingTrick final : public FGbxSkillActionItem
{
public:
	struct FGbxSkillAnimTrick                     LoopTrick;                                         // 0x0068(0x0048)(Edit, NativeAccessSpecifierPrivate)
	float                                         Timeout;                                           // 0x00B0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxInlineStruct                       LatentAction;                                      // 0x00B8(0x0018)(Edit, NativeAccessSpecifierPrivate)
	struct FGbxSkillAnimTrick                     SuccessTrick;                                      // 0x00D0(0x0048)(Edit, NativeAccessSpecifierPrivate)
	struct FGbxSkillAnimTrick                     FailureTrick;                                      // 0x0118(0x0048)(Edit, NativeAccessSpecifierPrivate)
	EBranchingTrickStartMode                      StartingMode;                                      // 0x0160(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_161[0x3];                                      // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   NotifyEventName;                                   // 0x0164(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_16C[0x4];                                      // 0x016C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxSkillActionItem_BranchingTrick;

// ScriptStruct GbxGame.GbxSkillActionItem_ControlledMove
// 0x0000 (0x00E0 - 0x00E0)
struct FGbxSkillActionItem_ControlledMove final : public FGbxSkillActionItem_ControlledMoveBase
{
};
DUMPER7_ASSERTS_FGbxSkillActionItem_ControlledMove;

// ScriptStruct GbxGame.GbxSkillActionItem_ManagedLoopTrick
// 0x0060 (0x00C8 - 0x0068)
struct FGbxSkillActionItem_ManagedLoopTrick final : public FGbxSkillActionItem
{
public:
	struct FGbxSkillAnimTrick                     LoopTrick;                                         // 0x0068(0x0048)(Edit, NativeAccessSpecifierPrivate)
	struct FGbxInlineStruct                       PausedCondition;                                   // 0x00B0(0x0018)(Edit, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxSkillActionItem_ManagedLoopTrick;

// ScriptStruct GbxGame.GbxSkillActionData_Simulated
// 0x0000 (0x0008 - 0x0008)
struct FGbxSkillActionData_Simulated final : public FGbxHasStructType
{
};
DUMPER7_ASSERTS_FGbxSkillActionData_Simulated;

// ScriptStruct GbxGame.GbxUnlockableNode
// 0x00A8 (0x00A8 - 0x0000)
struct alignas(0x08) FGbxUnlockableNode final
{
public:
	uint8                                         Pad_0[0x90];                                       // 0x0000(0x0090)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bIsUnlocked;                                       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bIsActivated;                                      // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_92[0x2];                                       // 0x0092(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ProgressPointsSpent;                               // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         BonusPoints;                                       // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         ActivationLevel;                                   // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_A0[0x8];                                       // 0x00A0(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxUnlockableNode;

// ScriptStruct GbxGame.GbxSkillActionItem_LoopTrick
// 0x0000 (0x00B0 - 0x00B0)
struct FGbxSkillActionItem_LoopTrick final : public FGbxSkillActionItem_SingleTrick
{
};
DUMPER7_ASSERTS_FGbxSkillActionItem_LoopTrick;

// ScriptStruct GbxGame.GbxSkillAnimTrickResolver_Random_Item
// 0x0030 (0x0030 - 0x0000)
struct FGbxSkillAnimTrickResolver_Random_Item final
{
public:
	float                                         Weight;                                            // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UGbxTrick>               Trick;                                             // 0x0008(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxSkillAnimTrickResolver_Random_Item;

// ScriptStruct GbxGame.GbxSkillAnimTrickResolver_Random
// 0x0018 (0x0020 - 0x0008)
struct FGbxSkillAnimTrickResolver_Random final : public FGbxSkillAnimTrickResolver
{
public:
	int32                                         RngID;                                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGbxSkillAnimTrickResolver_Random_Item> items;                                     // 0x0010(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxSkillAnimTrickResolver_Random;

// ScriptStruct GbxGame.GbxSkillAnimTrickResolver_Library
// 0x0020 (0x0028 - 0x0008)
struct FGbxSkillAnimTrickResolver_Library final : public FGbxSkillAnimTrickResolver
{
public:
	FGbxDefPtrProperty_                           LibraryComponentID;                                // 0x0008(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                   TrickName;                                         // 0x0020(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxSkillAnimTrickResolver_Library;

// ScriptStruct GbxGame.InventoryEffectQueryData
// 0x0014 (0x0014 - 0x0000)
struct FInventoryEffectQueryData final
{
public:
	class FName                                   type;                                              // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ID;                                                // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EInventoryBodyVisibilityType                  Visibility;                                        // 0x000C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         usemodebitmask;                                    // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FInventoryEffectQueryData;

// ScriptStruct GbxGame.SkillQuestionResult
// 0x0040 (0x0040 - 0x0000)
struct FSkillQuestionResult final
{
public:
	bool                                          bAnswered;                                         // 0x0000(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              Result;                                            // 0x0008(0x0038)(BlueprintVisible, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSkillQuestionResult;

// ScriptStruct GbxGame.GbxSkillComponentActivationStrategy_SkillState
// 0x0018 (0x0020 - 0x0008)
struct FGbxSkillComponentActivationStrategy_SkillState final : public FGbxSkillComponentActivationStrategy
{
public:
	FGbxDefPtrProperty_                           SkillStateDef;                                     // 0x0008(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxSkillComponentActivationStrategy_SkillState;

// ScriptStruct GbxGame.GbxSkillComponentBinding
// 0x0030 (0x0030 - 0x0000)
struct FGbxSkillComponentBinding final
{
public:
	struct FGbxSkillComponentExportID             ExportID;                                          // 0x0000(0x0028)(NoDestructor, NativeAccessSpecifierPublic)
	class FName                                   EventName;                                         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxSkillComponentBinding;

// ScriptStruct GbxGame.GbxSkillMessageBinding
// 0x0028 (0x0028 - 0x0000)
struct FGbxSkillMessageBinding final
{
public:
	class UGbxSkillMessageData*                   SkillMessageData;                                  // 0x0000(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                  EventID;                                           // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGbxSkillEventRepType                         RepType;                                           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bReliable;                                         // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   EventName;                                         // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxSkillMessageBinding;

// ScriptStruct GbxGame.GbxSkillComponentResolver
// 0x0040 (0x0048 - 0x0008)
struct FGbxSkillComponentResolver final : public FAttributeContextResolver
{
public:
	struct FSToken                                SkillDefName;                                      // 0x0008(0x000C)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FGbxDefPtrProperty_                           SkillDef;                                          // 0x0018(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	FGbxDefPtrProperty_                           IdentifierDef;                                     // 0x0030(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxSkillComponentResolver;

// ScriptStruct GbxGame.GbxSkillComponentData_ActivationChannelItem
// 0x0018 (0x0040 - 0x0028)
struct FGbxSkillComponentData_ActivationChannelItem : public FGbxSkillComponentDataItem
{
public:
	struct FGbxInlineStruct                       ActivationStrategy;                                // 0x0028(0x0018)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxSkillComponentData_ActivationChannelItem;

// ScriptStruct GbxGame.ObjectiveTypeSettings_GbxMultiPickup
// 0x00E0 (0x0158 - 0x0078)
struct FObjectiveTypeSettings_GbxMultiPickup final : public FObjectiveTypeSettingsBase
{
public:
	struct FMissionObjectiveUpdateCountValue      NumPickupsToCollect;                               // 0x0078(0x0048)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              NumPickupsDroppedPerActor;                         // 0x00C0(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FMissionGbxDef                         PickupDef;                                         // 0x00F8(0x0030)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	EMultiPickupObjectiveDropTarget               target;                                            // 0x0128(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FMissionAliasRef>               Spawners;                                          // 0x0130(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FGbxInlineStruct                       filter;                                            // 0x0140(0x0018)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FObjectiveTypeSettings_GbxMultiPickup;

// ScriptStruct GbxGame.GbxSkillComponent_ActivationChannels
// 0x0038 (0x0088 - 0x0050)
struct FGbxSkillComponent_ActivationChannels : public FGbxSkillComponent
{
public:
	uint8                                         Pad_50[0x38];                                      // 0x0050(0x0038)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxSkillComponent_ActivationChannels;

// ScriptStruct GbxGame.GbxSkillComponent_AOE_Gps
// 0x0078 (0x00C8 - 0x0050)
struct FGbxSkillComponent_AOE_Gps final : public FGbxSkillComponent
{
public:
	uint8                                         Pad_50[0x78];                                      // 0x0050(0x0078)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxSkillComponent_AOE_Gps;

// ScriptStruct GbxGame.GbxSkillComponentData_AOE_Gps
// 0x0218 (0x0248 - 0x0030)
struct FGbxSkillComponentData_AOE_Gps final : public FGbxSkillComponentData
{
public:
	bool                                          bDefaultToOwner;                                   // 0x0030(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGpsQueryRunData                       QueryRunData;                                      // 0x0038(0x01E0)(Edit, NativeAccessSpecifierPrivate)
	FGbxDefPtrProperty_                           TargetListDef;                                     // 0x0218(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGbxInlineStruct                       ActivationStrategy;                                // 0x0230(0x0018)(Edit, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxSkillComponentData_AOE_Gps;

// ScriptStruct GbxGame.GbxSkillComponent_AttributeEffect_SpecEx
// 0x0098 (0x00C0 - 0x0028)
struct FGbxSkillComponent_AttributeEffect_SpecEx final : public FGbxSkillComponentDataItem
{
public:
	FGameDataHandleProperty_                      AttributeDef;                                      // 0x0028(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxAttributeInit                      AttributeInit;                                     // 0x0040(0x0050)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	EGbxAttributeModifierType                     ModifierType;                                      // 0x0090(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGbxSkillComponent_AttributeEffect_ValueContextSource ValueContextSource;                        // 0x0091(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_92[0x6];                                       // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxInlineStruct                       ActivationStrategy;                                // 0x0098(0x0018)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FGbxInlineStruct>               Strategies;                                        // 0x00B0(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxSkillComponent_AttributeEffect_SpecEx;

// ScriptStruct GbxGame.GpsGenerator_InteractiveObjects
// 0x0000 (0x0448 - 0x0448)
struct FGpsGenerator_InteractiveObjects : public FGpsGenerator_Actors
{
};
DUMPER7_ASSERTS_FGpsGenerator_InteractiveObjects;

// ScriptStruct GbxGame.GbxSkillComponentData_AttributeEffectEx
// 0x0038 (0x0068 - 0x0030)
struct FGbxSkillComponentData_AttributeEffectEx final : public FGbxSkillComponentData
{
public:
	struct FGbxInlineStruct                       DefaultActivationStrategy;                         // 0x0030(0x0018)(Edit, NativeAccessSpecifierPrivate)
	TArray<struct FGbxInlineStruct>               DefaultStrategies;                                 // 0x0048(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FGbxSkillComponent_AttributeEffect_SpecEx> attributeeffects;                       // 0x0058(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxSkillComponentData_AttributeEffectEx;

// ScriptStruct GbxGame.GbxSkillComponent_AttributeEffect_Spec
// 0x0070 (0x00A8 - 0x0038)
struct FGbxSkillComponent_AttributeEffect_Spec final : public FGbxSkillComponentData_TargetableItem
{
public:
	FGameDataHandleProperty_                      AttributeDef;                                      // 0x0038(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxAttributeInit                      AttributeInit;                                     // 0x0050(0x0050)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	EGbxAttributeModifierType                     ModifierType;                                      // 0x00A0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGbxSkillComponent_AttributeEffect_ValueContextSource ValueContextSource;                        // 0x00A1(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A2[0x6];                                       // 0x00A2(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxSkillComponent_AttributeEffect_Spec;

// ScriptStruct GbxGame.GbxSkillComponent_AttributeEffect
// 0x0020 (0x00B8 - 0x0098)
struct FGbxSkillComponent_AttributeEffect final : public FGbxSkillComponent_Targetable
{
public:
	uint8                                         Pad_98[0x20];                                      // 0x0098(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxSkillComponent_AttributeEffect;

// ScriptStruct GbxGame.GbxSkillComponentData_AttributeEffect
// 0x0010 (0x0070 - 0x0060)
struct FGbxSkillComponentData_AttributeEffect final : public FGbxSkillComponentData_Targetable
{
public:
	TArray<struct FGbxSkillComponent_AttributeEffect_Spec> attributeeffects;                         // 0x0060(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxSkillComponentData_AttributeEffect;

// ScriptStruct GbxGame.GbxSkillComponent_DamageModifierEx
// 0x0028 (0x0078 - 0x0050)
struct FGbxSkillComponent_DamageModifierEx final : public FGbxSkillComponent
{
public:
	uint8                                         Pad_50[0x28];                                      // 0x0050(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxSkillComponent_DamageModifierEx;

// ScriptStruct GbxGame.InventorySerialNumber
// 0x0048 (0x0070 - 0x0028)
struct FInventorySerialNumber final : public FGbxSerialNumberClass
{
public:
	uint8                                         Pad_28[0x48];                                      // 0x0028(0x0048)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FInventorySerialNumber;

// ScriptStruct GbxGame.GbxSkillComponent_Delegate
// 0x0010 (0x00A8 - 0x0098)
struct FGbxSkillComponent_Delegate final : public FGbxSkillComponent_Targetable
{
public:
	uint8                                         Pad_98[0x10];                                      // 0x0098(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxSkillComponent_Delegate;

// ScriptStruct GbxGame.GbxSkillComponentData_DelegateData_Damage
// 0x0018 (0x0020 - 0x0008)
struct FGbxSkillComponentData_DelegateData_Damage final : public FGbxSkillComponentData_DelegateData
{
public:
	EGbxSkillComponentDelegate_Damage_EventType   EventType;                                         // 0x0008(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bAlwaysFilterZeroDamage;                           // 0x0009(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGbxInlineStruct>               Filters;                                           // 0x0010(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxSkillComponentData_DelegateData_Damage;

// ScriptStruct GbxGame.GbxSkillComponentData_DelegateData_SkillEvent
// 0x0018 (0x0020 - 0x0008)
struct FGbxSkillComponentData_DelegateData_SkillEvent final : public FGbxSkillComponentData_DelegateData
{
public:
	FGbxDefPtrProperty_                           EventDef;                                          // 0x0008(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxSkillComponentData_DelegateData_SkillEvent;

// ScriptStruct GbxGame.GbxSkillComponentData_DelegateData_SkillParam
// 0x0040 (0x0048 - 0x0008)
struct FGbxSkillComponentData_DelegateData_SkillParam final : public FGbxSkillComponentData_DelegateData
{
public:
	TSoftObjectPtr<class UGbxSkillParamData>      ParamData;                                         // 0x0008(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      SkillDef;                                          // 0x0030(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxSkillComponentData_DelegateData_SkillParam;

// ScriptStruct GbxGame.HazardInteractionReplicationState
// 0x0070 (0x0070 - 0x0000)
struct alignas(0x08) FHazardInteractionReplicationState final
{
public:
	uint8                                         Pad_0[0x70];                                       // 0x0000(0x0070)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FHazardInteractionReplicationState;

// ScriptStruct GbxGame.GbxSkillComponent_Library
// 0x0010 (0x0068 - 0x0058)
struct FGbxSkillComponent_Library final : public FGbxSkillComponent_Activatable
{
public:
	uint8                                         Pad_58[0x10];                                      // 0x0058(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxSkillComponent_Library;

// ScriptStruct GbxGame.GbxSkillComponentData_Library
// 0x0018 (0x0068 - 0x0050)
struct FGbxSkillComponentData_Library final : public FGbxSkillComponentData_Activatable
{
public:
	struct FGbxInlineStruct                       LibraryData;                                       // 0x0050(0x0018)(Edit, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxSkillComponentData_Library;

// ScriptStruct GbxGame.GbxSkillLibraryDef
// 0x0050 (0x0068 - 0x0018)
struct FGbxSkillLibraryDef final : public FGbxDef
{
public:
	TMap<class FName, struct FGbxParam>           Entries;                                           // 0x0018(0x0050)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxSkillLibraryDef;

// ScriptStruct GbxGame.GbxSkillComponentData_Material_Item
// 0x0028 (0x0050 - 0x0028)
struct FGbxSkillComponentData_Material_Item final : public FGbxSkillComponentDataItem
{
public:
	bool                                          bIsScalar;                                         // 0x0028(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxMaterialParamInterpOptions         InterpOptions;                                     // 0x0030(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxSkillComponentData_Material_Item;

// ScriptStruct GbxGame.GbxSkillComponentData_Material
// 0x0010 (0x0040 - 0x0030)
struct FGbxSkillComponentData_Material final : public FGbxSkillComponentData
{
public:
	TArray<struct FGbxSkillComponentData_Material_Item> items;                                       // 0x0030(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxSkillComponentData_Material;

// ScriptStruct GbxGame.GestaltPartDataSelector
// 0x0010 (0x0010 - 0x0000)
struct FGestaltPartDataSelector final
{
public:
	class USkeletalMesh*                          SkeletalMeshPart;                                  // 0x0000(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGestaltPartData*                       GestaltPartData;                                   // 0x0008(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGestaltPartDataSelector;

// ScriptStruct GbxGame.GestaltRandomPartData
// 0x0018 (0x0018 - 0x0000)
struct FGestaltRandomPartData final
{
public:
	struct FGestaltPartDataSelector               GestaltPart;                                       // 0x0000(0x0010)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                          bUseEntryAsNoMesh;                                 // 0x0010(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Weight;                                            // 0x0014(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
};
DUMPER7_ASSERTS_FGestaltRandomPartData;

// ScriptStruct GbxGame.GbxSkillComponent_ResourcePool
// 0x0020 (0x0078 - 0x0058)
struct FGbxSkillComponent_ResourcePool final : public FGbxSkillComponent_Activatable
{
public:
	uint8                                         Pad_58[0x20];                                      // 0x0058(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxSkillComponent_ResourcePool;

// ScriptStruct GbxGame.GbxSkillComponentData_ResourcePool
// 0x0010 (0x0060 - 0x0050)
struct FGbxSkillComponentData_ResourcePool final : public FGbxSkillComponentData_Activatable
{
public:
	TArray<struct FGbxSkillComponentData_ResourcePool_Item> PoolItems;                               // 0x0050(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxSkillComponentData_ResourcePool;

// ScriptStruct GbxGame.GbxSkillComponentTimerStats
// 0x0018 (0x0018 - 0x0000)
struct FGbxSkillComponentTimerStats final
{
public:
	EGbxSkillComponentTimerState                  TimerState;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         rate;                                              // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ElapsedTime;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RemainingTime;                                     // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Runs;                                              // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxRuns;                                           // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxSkillComponentTimerStats;

// ScriptStruct GbxGame.GbxSkillDelegateEventPump
// 0x0018 (0x0040 - 0x0028)
struct FGbxSkillDelegateEventPump final : public FGbxSkillSharedResource
{
public:
	uint8                                         Pad_28[0x18];                                      // 0x0028(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxSkillDelegateEventPump;

// ScriptStruct GbxGame.GbxSkillDelegateHitActorFilter_Or
// 0x0010 (0x0020 - 0x0010)
struct FGbxSkillDelegateHitActorFilter_Or final : public FGbxSkillDelegateHitActorFilter
{
public:
	TArray<struct FGbxInlineStruct>               Filters;                                           // 0x0010(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxSkillDelegateHitActorFilter_Or;

// ScriptStruct GbxGame.GbxSkillDelegateHitActorFilter_Cooldown
// 0x0008 (0x0018 - 0x0010)
struct FGbxSkillDelegateHitActorFilter_Cooldown final : public FGbxSkillDelegateHitActorFilter
{
public:
	float                                         CooldownDuration;                                  // 0x0010(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxSkillDelegateHitActorFilter_Cooldown;

// ScriptStruct GbxGame.GbxSkillGameDataCategories
// 0x0001 (0x0001 - 0x0000)
struct FGbxSkillGameDataCategories final
{
public:
	uint8                                         Pad_0[0x1];                                        // 0x0000(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxSkillGameDataCategories;

// ScriptStruct GbxGame.GbxSkillLibraryEntryResolver
// 0x0028 (0x0030 - 0x0008)
struct FGbxSkillLibraryEntryResolver final : public FAttributeValueResolver
{
public:
	class FName                                   EntryName;                                         // 0x0008(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	FGbxDefPtrProperty_                           ComponentIdentifier;                               // 0x0010(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EGbxType                                      ResolvedType;                                      // 0x0028(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxSkillLibraryEntryResolver;

// ScriptStruct GbxGame.GbxSkillLocks
// 0x0010 (0x0038 - 0x0028)
struct FGbxSkillLocks final : public FGbxSkillSharedResource
{
public:
	uint8                                         Pad_28[0x10];                                      // 0x0028(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxSkillLocks;

// ScriptStruct GbxGame.GbxSkillParamValueResolver
// 0x0028 (0x0030 - 0x0008)
struct FGbxSkillParamValueResolver final : public FAttributeValueResolver
{
public:
	TSoftObjectPtr<class UGbxSkillParamData>      SkillParam;                                        // 0x0008(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxSkillParamValueResolver;

// ScriptStruct GbxGame.GbxSkillScriptComponent
// 0x0020 (0x0020 - 0x0000)
struct FGbxSkillScriptComponent final
{
public:
	class FName                                   ComponentName;                                     // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxInlineStruct                       ComponentData;                                     // 0x0008(0x0018)(NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxSkillScriptComponent;

// ScriptStruct GbxGame.GbxSkillService
// 0x0028 (0x0030 - 0x0008)
struct FGbxSkillService : public FGbxHasStructType
{
public:
	uint8                                         Pad_8[0x28];                                       // 0x0008(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxSkillService;

// ScriptStruct GbxGame.GbxSkillState
// 0x0030 (0x0030 - 0x0000)
struct alignas(0x08) FGbxSkillState final
{
public:
	uint8                                         Pad_0[0x30];                                       // 0x0000(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxSkillState;

// ScriptStruct GbxGame.ReplicatedTrackedMissionChange
// 0x0010 (0x0020 - 0x0010)
struct FReplicatedTrackedMissionChange final : public FReplicatedMissionMessage
{
public:
	uint8                                         Pad_10[0x10];                                      // 0x0010(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FReplicatedTrackedMissionChange;

// ScriptStruct GbxGame.GbxSkillStateConditionProvider
// 0x0010 (0x0040 - 0x0030)
struct FGbxSkillStateConditionProvider final : public FGbxSkillService
{
public:
	uint8                                         Pad_30[0x10];                                      // 0x0030(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxSkillStateConditionProvider;

// ScriptStruct GbxGame.ReplicatedGeneratedMissionCreation
// 0x0050 (0x0060 - 0x0010)
struct FReplicatedGeneratedMissionCreation final : public FReplicatedMissionMessage
{
public:
	uint8                                         Pad_10[0x50];                                      // 0x0010(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FReplicatedGeneratedMissionCreation;

// ScriptStruct GbxGame.GbxSkillStateConditionData_ConditionDef
// 0x0018 (0x0028 - 0x0010)
struct FGbxSkillStateConditionData_ConditionDef final : public FGbxSkillStateConditionData
{
public:
	FGbxDefPtrProperty_                           ConditionDef;                                      // 0x0010(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxSkillStateConditionData_ConditionDef;

// ScriptStruct GbxGame.GbxSkillStateConditionData_And
// 0x0010 (0x0020 - 0x0010)
struct FGbxSkillStateConditionData_And final : public FGbxSkillStateConditionData
{
public:
	TArray<struct FGbxInlineStruct>               AndConditions;                                     // 0x0010(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxSkillStateConditionData_And;

// ScriptStruct GbxGame.GbxSkillStateConditionData_Cinematic
// 0x0000 (0x0010 - 0x0010)
struct FGbxSkillStateConditionData_Cinematic final : public FGbxSkillStateConditionData
{
};
DUMPER7_ASSERTS_FGbxSkillStateConditionData_Cinematic;

// ScriptStruct GbxGame.GbxSkillStateConditionData_Constant
// 0x0008 (0x0018 - 0x0010)
struct FGbxSkillStateConditionData_Constant final : public FGbxSkillStateConditionData
{
public:
	bool                                          bEnabled;                                          // 0x0010(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxSkillStateConditionData_Constant;

// ScriptStruct GbxGame.GbxSkillStateConditionData_ExternalSkillState
// 0x0038 (0x0048 - 0x0010)
struct FGbxSkillStateConditionData_ExternalSkillState final : public FGbxSkillStateConditionData
{
public:
	FGbxDefPtrProperty_                           SkillDef;                                          // 0x0010(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	FGbxDefPtrProperty_                           SkillStateDef;                                     // 0x0028(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bEnabled;                                          // 0x0040(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxSkillStateConditionData_ExternalSkillState;

// ScriptStruct GbxGame.GbxSkillStateConditionData_GbxCharacterMovement
// 0x0020 (0x0030 - 0x0010)
struct FGbxSkillStateConditionData_GbxCharacterMovement final : public FGbxSkillStateConditionData
{
public:
	bool                                          bIsInMode;                                         // 0x0010(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EGbxMovementMode>                      MovementModes;                                     // 0x0018(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	int32                                         MovementTypes;                                     // 0x0028(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bIsPossessedByPlayer;                              // 0x002C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxSkillStateConditionData_GbxCharacterMovement;

// ScriptStruct GbxGame.GbxSkillStateConditionData_ManagedResourceCountEx
// 0x0070 (0x0080 - 0x0010)
struct FGbxSkillStateConditionData_ManagedResourceCountEx final : public FGbxSkillStateConditionData
{
public:
	FGbxDefPtrProperty_                           GroupDef;                                          // 0x0010(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EGbxSkillComparisonOp                         Op;                                                // 0x0028(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAttributeInit                      Value;                                             // 0x0030(0x0050)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxSkillStateConditionData_ManagedResourceCountEx;

// ScriptStruct GbxGame.GbxSkillStateConditionData_Or
// 0x0010 (0x0020 - 0x0010)
struct FGbxSkillStateConditionData_Or final : public FGbxSkillStateConditionData
{
public:
	TArray<struct FGbxInlineStruct>               OrConditions;                                      // 0x0010(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxSkillStateConditionData_Or;

// ScriptStruct GbxGame.GbxSymphonicAmbientAudioAction_SetFact
// 0x0048 (0x0050 - 0x0008)
struct FGbxSymphonicAmbientAudioAction_SetFact final : public FGbxSymphonicAmbientAudioAction
{
public:
	struct FFactAddress                           FactAddress;                                       // 0x0008(0x0038)(Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFactValue                             FactValue;                                         // 0x0040(0x0010)(Edit, NoDestructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxSymphonicAmbientAudioAction_SetFact;

// ScriptStruct GbxGame.GbxSkillStateConditionData_Possession
// 0x0008 (0x0018 - 0x0010)
struct FGbxSkillStateConditionData_Possession final : public FGbxSkillStateConditionData
{
public:
	EGbxSkillStateConditionPossessionMode         Mode;                                              // 0x0010(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxSkillStateConditionData_Possession;

// ScriptStruct GbxGame.GbxSkillStateConditionData_ResourcePool
// 0x0018 (0x0038 - 0x0020)
struct FGbxSkillStateConditionData_ResourcePool final : public FGbxSkillStateConditionData_ResourcePoolBase
{
public:
	FGameDataHandleProperty_                      PoolDef;                                           // 0x0020(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxSkillStateConditionData_ResourcePool;

// ScriptStruct GbxGame.GbxSkillStateConditionData_SkillCondition
// 0x0020 (0x0030 - 0x0010)
struct FGbxSkillStateConditionData_SkillCondition final : public FGbxSkillStateConditionData
{
public:
	FGbxDefPtrProperty_                           ConditionDef;                                      // 0x0010(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bEnabled;                                          // 0x0028(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxSkillStateConditionData_SkillCondition;

// ScriptStruct GbxGame.GbxSkillStateConditionData_SkillLocks
// 0x0010 (0x0020 - 0x0010)
struct FGbxSkillStateConditionData_SkillLocks final : public FGbxSkillStateConditionData
{
public:
	class FName                                   LockName;                                          // 0x0010(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bEnabled;                                          // 0x0018(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxSkillStateConditionData_SkillLocks;

// ScriptStruct GbxGame.GbxSkillStateCondition_StateMachineRegister
// 0x0020 (0x0030 - 0x0010)
struct FGbxSkillStateCondition_StateMachineRegister final : public FGbxSkillStateConditionData
{
public:
	FGbxDefPtrProperty_                           RegisterDef;                                       // 0x0010(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EGbxSkillComparisonOp                         Op;                                                // 0x0028(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Value;                                             // 0x002C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxSkillStateCondition_StateMachineRegister;

// ScriptStruct GbxGame.GbxSkillStateCondition_StateMachineState
// 0x0020 (0x0030 - 0x0010)
struct FGbxSkillStateCondition_StateMachineState final : public FGbxSkillStateConditionData
{
public:
	FGbxDefPtrProperty_                           StateDef;                                          // 0x0010(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bEnabled;                                          // 0x0028(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxSkillStateCondition_StateMachineState;

// ScriptStruct GbxGame.InventoryBodyControlAspect
// 0x0028 (0x0058 - 0x0030)
struct FInventoryBodyControlAspect : public FInventoryAspect
{
public:
	struct FGbxInlineStruct                       data;                                              // 0x0030(0x0018)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	EInventoryBodyVisibilityType                  Visibility;                                        // 0x0048(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ComparisionTag;                                    // 0x004C(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FInventoryBodyControlAspect;

// ScriptStruct GbxGame.GbxSkillStateMachineStateAction_GbxSkillParams_Item
// 0x0060 (0x0060 - 0x0000)
struct FGbxSkillStateMachineStateAction_GbxSkillParams_Item final
{
public:
	TSoftObjectPtr<class UGbxSkillParamData>      ParamData;                                         // 0x0000(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxParam                              Value;                                             // 0x0028(0x0038)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxSkillStateMachineStateAction_GbxSkillParams_Item;

// ScriptStruct GbxGame.VariantDetailsCommonProp_UInt8
// 0x0001 (0x0001 - 0x0000)
struct FVariantDetailsCommonProp_UInt8 final
{
public:
	uint8                                         UInt8Value;                                        // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FVariantDetailsCommonProp_UInt8;

// ScriptStruct GbxGame.GbxSkillStateMachineStateAction_GbxSkillParams
// 0x0028 (0x0030 - 0x0008)
struct FGbxSkillStateMachineStateAction_GbxSkillParams final : public FGbxSkillStateMachineStateAction
{
public:
	bool                                          bResetAllParameters;                               // 0x0008(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class UGbxSkillParamData>> ResetParams;                                    // 0x0010(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	TArray<struct FGbxSkillStateMachineStateAction_GbxSkillParams_Item> SetParams;                   // 0x0020(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxSkillStateMachineStateAction_GbxSkillParams;

// ScriptStruct GbxGame.GbxSkillStateMachineStateAction_RegisterOp
// 0x0010 (0x0018 - 0x0008)
struct FGbxSkillStateMachineStateAction_RegisterOp final : public FGbxSkillStateMachineStateAction
{
public:
	TArray<struct FGbxSkillStateMachineStateAction_RegisterOp_Register> RegisterOps;                 // 0x0008(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxSkillStateMachineStateAction_RegisterOp;

// ScriptStruct GbxGame.GbxSkillStateMachineStateAction_ResourcePool
// 0x0018 (0x0028 - 0x0010)
struct FGbxSkillStateMachineStateAction_ResourcePool final : public FGbxSkillStateMachineStateAction_ResourcePoolBase
{
public:
	FGameDataHandleProperty_                      PoolDef;                                           // 0x0010(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxSkillStateMachineStateAction_ResourcePool;

// ScriptStruct GbxGame.GbxSkillStateMachineStateAction_ResourcePoolAlias
// 0x0018 (0x0028 - 0x0010)
struct FGbxSkillStateMachineStateAction_ResourcePoolAlias final : public FGbxSkillStateMachineStateAction_ResourcePoolBase
{
public:
	FGbxDefPtrProperty_                           PoolAlias;                                         // 0x0010(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxSkillStateMachineStateAction_ResourcePoolAlias;

// ScriptStruct GbxGame.GbxSkillStateMachineStateAction_SkillComponent
// 0x0028 (0x0030 - 0x0008)
struct FGbxSkillStateMachineStateAction_SkillComponent : public FGbxSkillStateMachineStateAction
{
public:
	FGbxDefPtrProperty_                           ComponentIdentifier;                               // 0x0008(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGuid                                  ComponentID;                                       // 0x0020(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxSkillStateMachineStateAction_SkillComponent;

// ScriptStruct GbxGame.GbxSkillStateMachineStateAction_SkillScriptEvent
// 0x0008 (0x0010 - 0x0008)
struct FGbxSkillStateMachineStateAction_SkillScriptEvent final : public FGbxSkillStateMachineStateAction
{
public:
	class FName                                   EventName;                                         // 0x0008(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxSkillStateMachineStateAction_SkillScriptEvent;

// ScriptStruct GbxGame.GbxSkillStopActionSpec
// 0x0018 (0x0018 - 0x0000)
struct FGbxSkillStopActionSpec final
{
public:
	bool                                          bStopAll;                                          // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGbxSkillSpecStopActionEntry>   ToEnd;                                             // 0x0008(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxSkillStopActionSpec;

// ScriptStruct GbxGame.GbxSkillStateMachineStateAction_StopActions
// 0x0018 (0x0020 - 0x0008)
struct FGbxSkillStateMachineStateAction_StopActions final : public FGbxSkillStateMachineStateAction
{
public:
	struct FGbxSkillStopActionSpec                Spec;                                              // 0x0008(0x0018)(Edit, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxSkillStateMachineStateAction_StopActions;

// ScriptStruct GbxGame.GbxStatusEffectGraphNodeSettings_Notify
// 0x0010 (0x0048 - 0x0038)
struct FGbxStatusEffectGraphNodeSettings_Notify final : public FGbxStatusEffectGraphNodeSettings
{
public:
	struct FGuid                                  EventID;                                           // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxStatusEffectGraphNodeSettings_Notify;

// ScriptStruct GbxGame.GbxSkillStateMachineStateAssurance_TimeOut
// 0x0078 (0x0080 - 0x0008)
struct FGbxSkillStateMachineStateAssurance_TimeOut final : public FGbxSkillStateMachineStateAssurance
{
public:
	struct FGbxAttributeInit                      Duration;                                          // 0x0008(0x0050)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	bool                                          bUseCondition;                                     // 0x0058(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxSkillStateMachineStateAssurance_TimeOut_Condition Condition;                          // 0x0060(0x0020)(Edit, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxSkillStateMachineStateAssurance_TimeOut;

// ScriptStruct GbxGame.PuddleHazardDef
// 0x0088 (0x00A0 - 0x0018)
struct FPuddleHazardDef final : public FGbxDef
{
public:
	TSoftObjectPtr<class UPuddleHazardConfigurationData> Configuration;                              // 0x0018(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      Interaction;                                       // 0x0040(0x0018)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EPuddleHazardBuildType                        BuildType;                                         // 0x0058(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bScaleProportionalToOverrideRadius;                // 0x0059(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnableTransitionRadii;                            // 0x005A(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5B[0x1];                                       // 0x005B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SpawnTransitionTime;                               // 0x005C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InitialOpacity;                                    // 0x0060(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InitialRadius;                                     // 0x0064(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FullOpacity;                                       // 0x0068(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FullRadius;                                        // 0x006C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CleanUpTransitionTime;                             // 0x0070(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CleanUpOpacity;                                    // 0x0074(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CleanUpRadius;                                     // 0x0078(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GroundingDecalLifeSpanExtension;                   // 0x007C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GroundingCleanUpTransitionTime;                    // 0x0080(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AutoAlignTraceDistance;                            // 0x0084(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OverlapProbeSphereRadius;                          // 0x0088(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsSquare;                                         // 0x008C(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bEnableRipples : 1;                                // 0x008D(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_8E[0x2];                                       // 0x008E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RipplesStrength;                                   // 0x0090(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RipplesSize;                                       // 0x0094(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RipplesSpeed;                                      // 0x0098(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FPuddleHazardDef;

// ScriptStruct GbxGame.HomingTargetedActorInfo
// 0x0010 (0x0010 - 0x0000)
struct FHomingTargetedActorInfo final
{
public:
	class AActor*                                 target;                                            // 0x0000(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ProjectileCount;                                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FHomingTargetedActorInfo;

// ScriptStruct GbxGame.GbxSkillStreamingAsset_SoftPath
// 0x0010 (0x0018 - 0x0008)
struct FGbxSkillStreamingAsset_SoftPath final : public FGbxSkillStreamingAsset
{
public:
	TArray<struct FSoftObjectPath>                SoftObjectPaths;                                   // 0x0008(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxSkillStreamingAsset_SoftPath;

// ScriptStruct GbxGame.GbxSkillTargetListCountResolver
// 0x0018 (0x0020 - 0x0008)
struct FGbxSkillTargetListCountResolver final : public FAttributeValueResolver
{
public:
	FGbxDefPtrProperty_                           TargetList;                                        // 0x0008(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxSkillTargetListCountResolver;

// ScriptStruct GbxGame.GbxSkillTargetListRegistry
// 0x0010 (0x0038 - 0x0028)
struct FGbxSkillTargetListRegistry final : public FGbxSkillSharedResource
{
public:
	uint8                                         Pad_28[0x10];                                      // 0x0028(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxSkillTargetListRegistry;

// ScriptStruct GbxGame.GbxSkillTargetResolutionStrategyAdapter
// 0x0000 (0x0008 - 0x0008)
struct FGbxSkillTargetResolutionStrategyAdapter : public FGbxSkillTargetResolutionStrategy
{
};
DUMPER7_ASSERTS_FGbxSkillTargetResolutionStrategyAdapter;

// ScriptStruct GbxGame.GbxSkillTargetResolutionStrategyDef
// 0x0018 (0x0030 - 0x0018)
struct FGbxSkillTargetResolutionStrategyDef final : public FGbxDef
{
public:
	struct FGbxInlineStruct                       Strategy;                                          // 0x0018(0x0018)(Edit, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxSkillTargetResolutionStrategyDef;

// ScriptStruct GbxGame.GbxSkillTargetResolutionStrategy_Owner
// 0x0000 (0x0008 - 0x0008)
struct FGbxSkillTargetResolutionStrategy_Owner final : public FGbxSkillTargetResolutionStrategy
{
};
DUMPER7_ASSERTS_FGbxSkillTargetResolutionStrategy_Owner;

// ScriptStruct GbxGame.GbxSkillTargetResolutionStrategy_TargetList
// 0x0018 (0x0020 - 0x0008)
struct FGbxSkillTargetResolutionStrategy_TargetList final : public FGbxSkillTargetResolutionStrategy
{
public:
	FGameDataHandleProperty_                      ListDef;                                           // 0x0008(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxSkillTargetResolutionStrategy_TargetList;

// ScriptStruct GbxGame.GbxSkillTargetHub
// 0x0058 (0x0088 - 0x0030)
struct FGbxSkillTargetHub final : public FGbxSkillService
{
public:
	uint8                                         Pad_30[0x58];                                      // 0x0030(0x0058)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxSkillTargetHub;

// ScriptStruct GbxGame.GbxStatusEffectSeverityGenerator
// 0x0018 (0x0020 - 0x0008)
struct FGbxStatusEffectSeverityGenerator : public FGbxHasStructType
{
public:
	FGbxDefPtrProperty_                           ChannelDef;                                        // 0x0008(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxStatusEffectSeverityGenerator;

// ScriptStruct GbxGame.GbxStatusEffectSeverityGenerator_Curve
// 0x0088 (0x00A8 - 0x0020)
struct FGbxStatusEffectSeverityGenerator_Curve final : public FGbxStatusEffectSeverityGenerator
{
public:
	struct FRuntimeFloatCurve                     curve;                                             // 0x0020(0x0088)(Edit, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxStatusEffectSeverityGenerator_Curve;

// ScriptStruct GbxGame.GbxSkillEffectBinding
// 0x0028 (0x0028 - 0x0000)
struct alignas(0x08) FGbxSkillEffectBinding final
{
public:
	FGbxDefPtrProperty_                           SkillEffect;                                       // 0x0000(0x0018)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGbxSkillEffectOp                             BindingOp;                                         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   EventName;                                         // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxSkillEffectBinding;

// ScriptStruct GbxGame.GbxSkillStateOp
// 0x0020 (0x0020 - 0x0000)
struct alignas(0x08) FGbxSkillStateOp final
{
public:
	EGbxSkillStateOp                              StateOp;                                           // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FGbxDefPtrProperty_                           StateDef;                                          // 0x0008(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxSkillStateOp;

// ScriptStruct GbxGame.LightProjectileBatchTickFunction
// 0x0010 (0x0038 - 0x0028)
struct FLightProjectileBatchTickFunction final : public FTickFunction
{
public:
	uint8                                         Pad_28[0x10];                                      // 0x0028(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FLightProjectileBatchTickFunction;

// ScriptStruct GbxGame.SplineVolumePrecalculatedData
// 0x0008 (0x0008 - 0x0000)
struct FSplineVolumePrecalculatedData final
{
public:
	float                                         constant;                                          // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Multiple;                                          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSplineVolumePrecalculatedData;

// ScriptStruct GbxGame.SplineVolumeTriangle
// 0x0050 (0x0050 - 0x0000)
struct FSplineVolumeTriangle final
{
public:
	float                                         AreaSize;                                          // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                points[0x3];                                       // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSplineVolumeTriangle;

// ScriptStruct GbxGame.GbxStandInBodyState
// 0x0100 (0x0320 - 0x0220)
struct FGbxStandInBodyState final : public FGbxBodyState
{
public:
	uint8                                         Pad_220[0x100];                                    // 0x0220(0x0100)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxStandInBodyState;

// ScriptStruct GbxGame.GbxStandInBodyNode_Switch
// 0x0008 (0x0020 - 0x0018)
struct FGbxStandInBodyNode_Switch final : public FGbxStandInBodyNode
{
public:
	class FName                                   DefaultState;                                      // 0x0018(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxStandInBodyNode_Switch;

// ScriptStruct GbxGame.GbxStandInBodyNode_SkeletalMeshComponent
// 0x0088 (0x00A0 - 0x0018)
struct FGbxStandInBodyNode_SkeletalMeshComponent final : public FGbxStandInBodyNode
{
public:
	bool                                          bOverrideViewTarget;                               // 0x0018(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           ViewTargetOverride;                                // 0x001C(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGameplayTag>                   ExternalViewTargets;                               // 0x0028(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bOverrideBPAnimClass;                              // 0x0038(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   BPAnimClass;                                       // 0x0040(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOverrideAlwaysLoadedAnimSets;                     // 0x0068(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class UGbxAnimSet>>     AlwaysLoadedAnimSets;                              // 0x0070(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	bool                                          bOverrideAnimSetPickers;                           // 0x0080(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class UGbxAnimSetPickerBase>> AnimSetPickers;                              // 0x0088(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	bool                                          bHideComponent;                                    // 0x0098(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxStandInBodyNode_SkeletalMeshComponent;

// ScriptStruct GbxGame.GbxStandInScene_InventoryModel
// 0x0010 (0x0080 - 0x0070)
struct FGbxStandInScene_InventoryModel final : public FGbxStandInScene_DynamicElement
{
public:
	TArray<class FName>                           AutoplayedEffectTypes;                             // 0x0070(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxStandInScene_InventoryModel;

// ScriptStruct GbxGame.GbxStandInScene_Wind
// 0x0020 (0x0090 - 0x0070)
struct FGbxStandInScene_Wind final : public FGbxStandInScene_Element
{
public:
	float                                         Strength;                                          // 0x0070(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         speed;                                             // 0x0074(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinGustAmount;                                     // 0x0078(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxGustAmount;                                     // 0x007C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Radius;                                            // 0x0080(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bPointWind : 1;                                    // 0x0084(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_85[0xB];                                       // 0x0085(0x000B)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxStandInScene_Wind;

// ScriptStruct GbxGame.GbxStandInScene_Camera
// 0x08B0 (0x0930 - 0x0080)
struct FGbxStandInScene_Camera final : public FGbxStandInScene_CameraPerspective
{
public:
	struct FPostProcessSettings                   PostProcessSettings;                               // 0x0080(0x08B0)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxStandInScene_Camera;

// ScriptStruct GbxGame.GbxStandInScene_SplitscreenConfig
// 0x00A0 (0x00A0 - 0x0000)
struct FGbxStandInScene_SplitscreenConfig final
{
public:
	TArray<struct FGbxStandInScene_StandInOverride> ShownStandIns;                                   // 0x0000(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bOverrideCamera;                                   // 0x0010(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0xF];                                       // 0x0011(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxStandInScene_CameraPerspective     CameraPerspective;                                 // 0x0020(0x0080)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxStandInScene_SplitscreenConfig;

// ScriptStruct GbxGame.GbxStandInScene_AmbientCubemap
// 0x0048 (0x0048 - 0x0000)
struct FGbxStandInScene_AmbientCubemap final
{
public:
	TSoftObjectPtr<class UTextureCube>            AmbientCubemap;                                    // 0x0000(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOverride_AmbientCubemapTint;                      // 0x0028(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           AmbientCubemapTint;                                // 0x002C(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOverride_AmbientCubemapIntensity;                 // 0x003C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AmbientCubemapIntensity;                           // 0x0040(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxStandInScene_AmbientCubemap;

// ScriptStruct GbxGame.GbxStandInSceneDef
// 0x0C08 (0x0C30 - 0x0028)
struct FGbxStandInSceneDef final : public FGbxLitPreviewSceneDef
{
public:
	TArray<struct FGbxStandInScene_StandIn>       StandIns;                                          // 0x0028(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bHasInventoryModel;                                // 0x0038(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxStandInScene_InventoryModel        InventoryModel;                                    // 0x0040(0x0080)(Edit, NativeAccessSpecifierPublic)
	struct FGbxStandInScene_Camera                CameraSettings;                                    // 0x00C0(0x0930)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FGbxStandInScene_CameraPerspective> AdditionnalCameraPerspectives;                 // 0x09F0(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FGbxStandInScene_SplitscreenConfig     HorizontalSplitscreenConfig;                       // 0x0A00(0x00A0)(Edit, NativeAccessSpecifierPublic)
	struct FGbxStandInScene_SplitscreenConfig     VerticalSplitscreenConfig;                         // 0x0AA0(0x00A0)(Edit, NativeAccessSpecifierPublic)
	struct FGbxStandInScene_AmbientCubemap        AmbientCubemapSettings;                            // 0x0B40(0x0048)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FGbxStandInScene_Background>    BackgroundMeshes;                                  // 0x0B88(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bHasWind;                                          // 0x0B98(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B99[0x7];                                      // 0x0B99(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxStandInScene_Wind                  WindSettings;                                      // 0x0BA0(0x0090)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxStandInSceneDef;

// ScriptStruct GbxGame.GpsGeneratorSettings_InventoryPickups
// 0x0010 (0x01D8 - 0x01C8)
struct FGpsGeneratorSettings_InventoryPickups final : public FGpsGeneratorSettings_Actors
{
public:
	bool                                          bCanBePickedUp;                                    // 0x01C8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C9[0x3];                                      // 0x01C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	EGpsGeneratorSettings_InventoryPickups_InteractionTypeFilter InteractionTypeFilter;              // 0x01CC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseInteractionTypeFilter;                         // 0x01D0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D1[0x7];                                      // 0x01D1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsGeneratorSettings_InventoryPickups;

// ScriptStruct GbxGame.GbxStatusEffectNotifyEventData_Core_Added
// 0x0000 (0x0030 - 0x0030)
struct FGbxStatusEffectNotifyEventData_Core_Added final : public FGbxStatusEffectNotifyEventData_Core
{
};
DUMPER7_ASSERTS_FGbxStatusEffectNotifyEventData_Core_Added;

// ScriptStruct GbxGame.GbxStatusEffectNotifyData
// 0x0010 (0x0010 - 0x0000)
struct FGbxStatusEffectNotifyData final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxStatusEffectNotifyEvent*            NotifyEvent;                                       // 0x0008(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxStatusEffectNotifyData;

// ScriptStruct GbxGame.GbxStatusEffectGraphSettings
// 0x0000 (0x00A8 - 0x00A8)
struct FGbxStatusEffectGraphSettings final : public FGbxGraphSettings
{
};
DUMPER7_ASSERTS_FGbxStatusEffectGraphSettings;

// ScriptStruct GbxGame.GbxStatusEffectAction_StopStatusEffect
// 0x0008 (0x0010 - 0x0008)
struct FGbxStatusEffectAction_StopStatusEffect final : public FGbxStatusEffectAction
{
public:
	struct FGbxStatusEffectPopAllData             PopAllData;                                        // 0x0008(0x0004)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxStatusEffectAction_StopStatusEffect;

// ScriptStruct GbxGame.GbxStatusEffectAddResourceSpec
// 0x0060 (0x0060 - 0x0000)
struct FGbxStatusEffectAddResourceSpec final
{
public:
	bool                                          bAttachToContribution;                             // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUsesResourceGroup;                                // 0x0001(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ResourceGroupName;                                 // 0x0004(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUsesDuration;                                     // 0x000C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAttributeInit                      Duration;                                          // 0x0010(0x0050)(Edit, NoDestructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxStatusEffectAddResourceSpec;

// ScriptStruct GbxGame.GbxStatusEffectApplicationDefaultItem
// 0x0010 (0x0010 - 0x0000)
struct FGbxStatusEffectApplicationDefaultItem final
{
public:
	EGbxStatusEffectModifierAppType               AppType;                                           // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         priority;                                          // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Flags;                                             // 0x0008(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Value;                                             // 0x000C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxStatusEffectApplicationDefaultItem;

// ScriptStruct GbxGame.GbxStatusEffectSeverityChannelDef
// 0x0000 (0x0018 - 0x0018)
struct FGbxStatusEffectSeverityChannelDef final : public FGbxDef
{
};
DUMPER7_ASSERTS_FGbxStatusEffectSeverityChannelDef;

// ScriptStruct GbxGame.GbxStatusEffectAspectData_AttributeEffectSet
// 0x0010 (0x0038 - 0x0028)
struct FGbxStatusEffectAspectData_AttributeEffectSet final : public FGbxStatusEffectAspectResourceData
{
public:
	TArray<struct FGbxStatusEffectAspectData_AttributeEffect_Item> items;                            // 0x0028(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxStatusEffectAspectData_AttributeEffectSet;

// ScriptStruct GbxGame.GbxStatusEffectAspectData_AttributeEffect
// 0x0058 (0x0090 - 0x0038)
struct FGbxStatusEffectAspectData_AttributeEffect final : public FGbxStatusEffectAspectData
{
public:
	struct FGbxStatusEffectAspectData_AttributeEffectSet Default;                                    // 0x0038(0x0038)(Edit, NativeAccessSpecifierPrivate)
	TArray<struct FGbxStatusEffectAspectData_AttributeEffectSet> Resources;                          // 0x0070(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FGbxStatusEffectAspectData_AttributeEffect_Item> items;                            // 0x0080(0x0010)(ZeroConstructor, Deprecated, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxStatusEffectAspectData_AttributeEffect;

// ScriptStruct GbxGame.GbxStatusEffectAspectData_DamageOverTimeItem
// 0x0018 (0x0040 - 0x0028)
struct FGbxStatusEffectAspectData_DamageOverTimeItem final : public FGbxStatusEffectAspectResourceData
{
public:
	FGbxDefPtrProperty_                           DamageDef;                                         // 0x0028(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxStatusEffectAspectData_DamageOverTimeItem;

// ScriptStruct GbxGame.GbxStatusEffectAspectData_DamageOverTime
// 0x0070 (0x00A8 - 0x0038)
struct FGbxStatusEffectAspectData_DamageOverTime final : public FGbxStatusEffectAspectData
{
public:
	struct FGbxStatusEffectAspectData_DamageOverTimeItem Default;                                    // 0x0038(0x0040)(Edit, NativeAccessSpecifierPrivate)
	TArray<struct FGbxStatusEffectAspectData_DamageOverTimeItem> Resources;                          // 0x0078(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	struct FGbxInlineStruct                       ResourceStrategy;                                  // 0x0088(0x0018)(Edit, NativeAccessSpecifierPrivate)
	bool                                          bScaleDPSByContributionFactor;                     // 0x00A0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxStatusEffectAspectData_DamageOverTime;

// ScriptStruct GbxGame.GbxStatusEffectConditionData
// 0x0008 (0x0010 - 0x0008)
struct FGbxStatusEffectConditionData : public FGbxHasStructType
{
public:
	bool                                          bInvertCondition;                                  // 0x0008(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxStatusEffectConditionData;

// ScriptStruct GbxGame.GbxStatusEffectContributionCountResolver
// 0x0028 (0x0030 - 0x0008)
struct FGbxStatusEffectContributionCountResolver final : public FAttributeValueResolver
{
public:
	TSoftObjectPtr<class UGbxStatusEffectData>    StatusEffectData;                                  // 0x0008(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxStatusEffectContributionCountResolver;

// ScriptStruct GbxGame.WaypointAttachmentStrategy
// 0x0000 (0x0008 - 0x0008)
struct FWaypointAttachmentStrategy : public FGbxHasStructType
{
};
DUMPER7_ASSERTS_FWaypointAttachmentStrategy;

// ScriptStruct GbxGame.GbxStatusEffectDriver_ChargePool
// 0x00F0 (0x00F8 - 0x0008)
struct FGbxStatusEffectDriver_ChargePool final : public FGbxStatusEffectDriver
{
public:
	struct FGbxAttributeInit                      MaxChargeInit;                                     // 0x0008(0x0050)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FGbxAttributeInit                      SustainDurationInit;                               // 0x0058(0x0050)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FGbxAttributeInit                      DecayRateInit;                                     // 0x00A8(0x0050)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxStatusEffectDriver_ChargePool;

// ScriptStruct GbxGame.GbxStatusEffectPresentationGraphNodeSettings_Driver_Basic
// 0x0000 (0x0060 - 0x0060)
struct FGbxStatusEffectPresentationGraphNodeSettings_Driver_Basic final : public FGbxStatusEffectPresentationGraphNodeSettings_Driver
{
};
DUMPER7_ASSERTS_FGbxStatusEffectPresentationGraphNodeSettings_Driver_Basic;

// ScriptStruct GbxGame.GbxStatusEffectDriver_InstanceStack
// 0x0018 (0x0020 - 0x0008)
struct FGbxStatusEffectDriver_InstanceStack final : public FGbxStatusEffectDriver
{
public:
	struct FGbxInlineStruct                       StackingStrategy;                                  // 0x0008(0x0018)(Edit, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxStatusEffectDriver_InstanceStack;

// ScriptStruct GbxGame.GbxStatusEffectResourceKey
// 0x0020 (0x0020 - 0x0000)
struct FGbxStatusEffectResourceKey final
{
public:
	struct FGuid                                  AspectID;                                          // 0x0000(0x0010)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                  ResourceID;                                        // 0x0010(0x0010)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxStatusEffectResourceKey;

// ScriptStruct GbxGame.GbxStatusEffectGraphNodeSettings_Resource
// 0x0080 (0x00B8 - 0x0038)
struct FGbxStatusEffectGraphNodeSettings_Resource final : public FGbxStatusEffectGraphNodeSettings
{
public:
	struct FGbxStatusEffectAddResourceSpec        ResourceSpec;                                      // 0x0038(0x0060)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FGbxStatusEffectResourceKey            ResourceKey;                                       // 0x0098(0x0020)(Edit, EditConst, NoDestructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxStatusEffectGraphNodeSettings_Resource;

// ScriptStruct GbxGame.GbxStatusEffectGraphNodeSettings_Event
// 0x0018 (0x0050 - 0x0038)
struct FGbxStatusEffectGraphNodeSettings_Event final : public FGbxStatusEffectGraphNodeSettings
{
public:
	class FName                                   EventName;                                         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                  EventID;                                           // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxStatusEffectGraphNodeSettings_Event;

// ScriptStruct GbxGame.GbxStatusEffectPushEventDef
// 0x0000 (0x0018 - 0x0018)
struct FGbxStatusEffectPushEventDef final : public FGbxDef
{
};
DUMPER7_ASSERTS_FGbxStatusEffectPushEventDef;

// ScriptStruct GbxGame.GbxStatusEffectGraphNodeSettings_NotifyEvent
// 0x0008 (0x0040 - 0x0038)
struct FGbxStatusEffectGraphNodeSettings_NotifyEvent final : public FGbxStatusEffectGraphNodeSettings
{
public:
	class FName                                   EventName;                                         // 0x0038(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxStatusEffectGraphNodeSettings_NotifyEvent;

// ScriptStruct GbxGame.GbxStatusEffectGraphNodeSettings_Branch
// 0x0000 (0x0038 - 0x0038)
struct FGbxStatusEffectGraphNodeSettings_Branch final : public FGbxStatusEffectGraphNodeSettings
{
};
DUMPER7_ASSERTS_FGbxStatusEffectGraphNodeSettings_Branch;

// ScriptStruct GbxGame.GbxStatusEffectGraphNodeSettings_BranchNotify
// 0x0000 (0x0038 - 0x0038)
struct FGbxStatusEffectGraphNodeSettings_BranchNotify final : public FGbxStatusEffectGraphNodeSettings
{
};
DUMPER7_ASSERTS_FGbxStatusEffectGraphNodeSettings_BranchNotify;

// ScriptStruct GbxGame.GbxStatusEffectGraphNodeSettings_Action_Notify
// 0x0000 (0x0050 - 0x0050)
struct FGbxStatusEffectGraphNodeSettings_Action_Notify final : public FGbxStatusEffectGraphNodeSettings_ActionBase
{
};
DUMPER7_ASSERTS_FGbxStatusEffectGraphNodeSettings_Action_Notify;

// ScriptStruct GbxGame.GbxStatusEffectGraphNodeSettings_Condition_IsAttitudeTowards
// 0x0008 (0x0040 - 0x0038)
struct FGbxStatusEffectGraphNodeSettings_Condition_IsAttitudeTowards final : public FGbxStatusEffectGraphNodeSettings_Condition
{
public:
	ETeamAttitude                                 Attitude;                                          // 0x0038(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxStatusEffectGraphNodeSettings_Condition_IsAttitudeTowards;

// ScriptStruct GbxGame.GbxStatusEffectMetaData
// 0x0000 (0x0008 - 0x0008)
struct FGbxStatusEffectMetaData : public FGbxHasStructType
{
};
DUMPER7_ASSERTS_FGbxStatusEffectMetaData;

// ScriptStruct GbxGame.GbxStatusEffectMutatorCondition_ParamChance
// 0x0008 (0x0050 - 0x0048)
struct FGbxStatusEffectMutatorCondition_ParamChance final : public FGbxStatusEffectMutatorCondition
{
public:
	TSubclassOf<class UGbxStatusEffectSignatureParam_Float> Param;                                   // 0x0048(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxStatusEffectMutatorCondition_ParamChance;

// ScriptStruct GbxGame.GbxStatusEffectMutator_Param_AttrInit
// 0x0050 (0x0060 - 0x0010)
struct FGbxStatusEffectMutator_Param_AttrInit final : public FGbxStatusEffectMutator_Param
{
public:
	struct FGbxAttributeInit                      AdjustInit;                                        // 0x0010(0x0050)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxStatusEffectMutator_Param_AttrInit;

// ScriptStruct GbxGame.GbxStatusEffectPresentationGraphNodeSettings_Effect_CST
// 0x0018 (0x0050 - 0x0038)
struct FGbxStatusEffectPresentationGraphNodeSettings_Effect_CST final : public FGbxStatusEffectPresentationGraphNodeSettings_Effect
{
public:
	FGbxDefPtrProperty_                           CharacterSoundTag;                                 // 0x0038(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxStatusEffectPresentationGraphNodeSettings_Effect_CST;

// ScriptStruct GbxGame.GbxStatusEffectPresentationGraphNodeSettings_Effect_GlowMaterial
// 0x0000 (0x0058 - 0x0058)
struct FGbxStatusEffectPresentationGraphNodeSettings_Effect_GlowMaterial final : public FGbxStatusEffectPresentationGraphNodeSettings_Effect_CustomChannel
{
};
DUMPER7_ASSERTS_FGbxStatusEffectPresentationGraphNodeSettings_Effect_GlowMaterial;

// ScriptStruct GbxGame.GbxStatusEffectPresentationGraphNodeSettings_Effect_MaskMaterial
// 0x0000 (0x0058 - 0x0058)
struct FGbxStatusEffectPresentationGraphNodeSettings_Effect_MaskMaterial final : public FGbxStatusEffectPresentationGraphNodeSettings_Effect_CustomChannel
{
};
DUMPER7_ASSERTS_FGbxStatusEffectPresentationGraphNodeSettings_Effect_MaskMaterial;

// ScriptStruct GbxGame.GbxStatusEffectPresentationGraphNodeSettings_Effect_OverlayMaterial
// 0x0000 (0x0058 - 0x0058)
struct FGbxStatusEffectPresentationGraphNodeSettings_Effect_OverlayMaterial final : public FGbxStatusEffectPresentationGraphNodeSettings_Effect_CustomChannel
{
};
DUMPER7_ASSERTS_FGbxStatusEffectPresentationGraphNodeSettings_Effect_OverlayMaterial;

// ScriptStruct GbxGame.GbxStatusEffectPresentationEffect_NiagaraSystemData
// 0x0068 (0x0068 - 0x0000)
struct FGbxStatusEffectPresentationEffect_NiagaraSystemData final
{
public:
	class UNiagaraSystem*                         NiagaraSystem;                                     // 0x0000(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHideFirstPerson;                                  // 0x0008(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHideThirdPerson;                                  // 0x0009(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAttachLocation                               LocationType;                                      // 0x000A(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Offset;                                            // 0x0010(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               Rotation;                                          // 0x0028(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                scale;                                             // 0x0040(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   SocketName;                                        // 0x0058(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGbxSceneComponentResolver> Resolver;                                          // 0x0060(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxStatusEffectPresentationEffect_NiagaraSystemData;

// ScriptStruct GbxGame.GbxStatusEffectPresentationEffect_NiagaraParam_Int
// 0x0088 (0x00A0 - 0x0018)
struct FGbxStatusEffectPresentationEffect_NiagaraParam_Int final : public FGbxStatusEffectPresentationEffect_NiagaraParam
{
public:
	struct FRuntimeFloatCurve                     curve;                                             // 0x0018(0x0088)(Edit, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxStatusEffectPresentationEffect_NiagaraParam_Int;

// ScriptStruct GbxGame.SEPEventTrigger
// 0x0000 (0x0008 - 0x0008)
struct FSEPEventTrigger : public FGbxHasStructType
{
};
DUMPER7_ASSERTS_FSEPEventTrigger;

// ScriptStruct GbxGame.SEPEventPolicy
// 0x0000 (0x0008 - 0x0008)
struct FSEPEventPolicy : public FGbxHasStructType
{
};
DUMPER7_ASSERTS_FSEPEventPolicy;

// ScriptStruct GbxGame.GbxStatusEffectPresentationSeverityRate_Constant
// 0x0008 (0x0010 - 0x0008)
struct FGbxStatusEffectPresentationSeverityRate_Constant final : public FGbxStatusEffectPresentationSeverityRate
{
public:
	float                                         rate;                                              // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxStatusEffectPresentationSeverityRate_Constant;

// ScriptStruct GbxGame.GbxStatusEffectPresentationSeverityRate_Dynamic
// 0x0088 (0x0090 - 0x0008)
struct FGbxStatusEffectPresentationSeverityRate_Dynamic final : public FGbxStatusEffectPresentationSeverityRate
{
public:
	struct FRuntimeFloatCurve                     curve;                                             // 0x0008(0x0088)(Edit, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxStatusEffectPresentationSeverityRate_Dynamic;

// ScriptStruct GbxGame.SEPEventPolicy_TrigerCount
// 0x0008 (0x0010 - 0x0008)
struct FSEPEventPolicy_TrigerCount final : public FSEPEventPolicy
{
public:
	int32                                         MaxCount;                                          // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FSEPEventPolicy_TrigerCount;

// ScriptStruct GbxGame.SEPEventTrigger_SeverityHit
// 0x0008 (0x0010 - 0x0008)
struct FSEPEventTrigger_SeverityHit final : public FSEPEventTrigger
{
public:
	bool                                          bTriggerAscending;                                 // 0x0008(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bTriggerDescending;                                // 0x0009(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Severity;                                          // 0x000C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FSEPEventTrigger_SeverityHit;

// ScriptStruct GbxGame.GbxStatusEffectQuery_DPS
// 0x0000 (0x0010 - 0x0010)
struct FGbxStatusEffectQuery_DPS final : public FGbxStatusEffectQuery
{
};
DUMPER7_ASSERTS_FGbxStatusEffectQuery_DPS;

// ScriptStruct GbxGame.GbxStatusEffectQuery_TimeRemaining
// 0x0000 (0x0010 - 0x0010)
struct FGbxStatusEffectQuery_TimeRemaining final : public FGbxStatusEffectQuery
{
};
DUMPER7_ASSERTS_FGbxStatusEffectQuery_TimeRemaining;

// ScriptStruct GbxGame.GbxStatusEffectRuleDef
// 0x0018 (0x0030 - 0x0018)
struct FGbxStatusEffectRuleDef final : public FGbxDef
{
public:
	struct FGbxInlineStruct                       Rule;                                              // 0x0018(0x0018)(Edit, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxStatusEffectRuleDef;

// ScriptStruct GbxGame.GbxStatusEffectRuleData_Def
// 0x0018 (0x0020 - 0x0008)
struct FGbxStatusEffectRuleData_Def final : public FGbxStatusEffectRuleData
{
public:
	FGbxDefPtrProperty_                           RuleDef;                                           // 0x0008(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxStatusEffectRuleData_Def;

// ScriptStruct GbxGame.GbxStatusEffectRuleImmunityData_Tag
// 0x0048 (0x0050 - 0x0008)
struct FGbxStatusEffectRuleImmunityData_Tag final : public FGbxStatusEffectRuleImmunityData
{
public:
	struct FGameplayTagQuery                      TagQuery;                                          // 0x0008(0x0048)(Edit, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxStatusEffectRuleImmunityData_Tag;

// ScriptStruct GbxGame.GbxStatusEffectRuleMoratoriumData
// 0x0000 (0x0008 - 0x0008)
struct FGbxStatusEffectRuleMoratoriumData : public FGbxHasStructType
{
};
DUMPER7_ASSERTS_FGbxStatusEffectRuleMoratoriumData;

// ScriptStruct GbxGame.GbxStatusEffectRuleMoratoriumData_Full
// 0x0000 (0x0008 - 0x0008)
struct FGbxStatusEffectRuleMoratoriumData_Full final : public FGbxStatusEffectRuleMoratoriumData
{
};
DUMPER7_ASSERTS_FGbxStatusEffectRuleMoratoriumData_Full;

// ScriptStruct GbxGame.GbxStatusEffectRuleMoratoriumData_Tag
// 0x0048 (0x0050 - 0x0008)
struct FGbxStatusEffectRuleMoratoriumData_Tag final : public FGbxStatusEffectRuleMoratoriumData
{
public:
	struct FGameplayTagQuery                      TagQuery;                                          // 0x0008(0x0048)(Edit, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxStatusEffectRuleMoratoriumData_Tag;

// ScriptStruct GbxGame.GbxStatusEffectScript_ExecContext
// 0x0018 (0x0018 - 0x0000)
struct FGbxStatusEffectScript_ExecContext final
{
public:
	class AActor*                                 Context;                                           // 0x0000(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8[0x10];                                       // 0x0008(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxStatusEffectScript_ExecContext;

// ScriptStruct GbxGame.GbxStatusEffectScriptPushEventData
// 0x0028 (0x0028 - 0x0000)
struct FGbxStatusEffectScriptPushEventData final
{
public:
	FGbxDefPtrProperty_                           EventDef;                                          // 0x0000(0x0018)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                           events;                                            // 0x0018(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxStatusEffectScriptPushEventData;

// ScriptStruct GbxGame.GbxStatusEffectScriptData
// 0x0018 (0x0018 - 0x0000)
struct FGbxStatusEffectScriptData final
{
public:
	EGbxStatusEffectScriptType                    type;                                              // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UGbxStatusEffectScript>     InternalClass;                                     // 0x0008(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInstanced;                                        // 0x0010(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxStatusEffectScriptData;

// ScriptStruct GbxGame.GbxStatusEffectSignature
// 0x0010 (0x0010 - 0x0000)
struct FGbxStatusEffectSignature final
{
public:
	TArray<TSubclassOf<class UGbxStatusEffectSignatureParam>> params;                                // 0x0000(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxStatusEffectSignature;

// ScriptStruct GbxGame.GbxStatusEffectPopSpec
// 0x0018 (0x0018 - 0x0000)
struct FGbxStatusEffectPopSpec final
{
public:
	class UGbxStatusEffectData*                   StatusEffectData;                                  // 0x0000(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxStatusEffectPopFilter              filter;                                            // 0x0008(0x0010)(BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxStatusEffectPopSpec;

// ScriptStruct GbxGame.GbxStatusEffectPopAllFromEffectSpec
// 0x000C (0x0010 - 0x0004)
struct FGbxStatusEffectPopAllFromEffectSpec final : public FGbxStatusEffectPopAllData
{
public:
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGbxStatusEffectData*                   StatusEffectData;                                  // 0x0008(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxStatusEffectPopAllFromEffectSpec;

// ScriptStruct GbxGame.GbxStatusEffectRuleAddSpec
// 0x0008 (0x0008 - 0x0000)
struct FGbxStatusEffectRuleAddSpec final
{
public:
	EStatusEffectRuleLifetimeRule                 LifetimeRule;                                      // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Duration;                                          // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxStatusEffectRuleAddSpec;

// ScriptStruct GbxGame.GbxStatusEffectTickGroupDef
// 0x0050 (0x0068 - 0x0018)
struct FGbxStatusEffectTickGroupDef final : public FGbxDef
{
public:
	struct FGbxAttributeInit                      ModifierBaseValueInit;                             // 0x0018(0x0050)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxStatusEffectTickGroupDef;

// ScriptStruct GbxGame.GbxStatusEffectTickGroupModifierValueResolver
// 0x0018 (0x0020 - 0x0008)
struct FGbxStatusEffectTickGroupModifierValueResolver final : public FAttributeValueResolver
{
public:
	FGbxDefPtrProperty_                           TickGroupDef;                                      // 0x0008(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxStatusEffectTickGroupModifierValueResolver;

// ScriptStruct GbxGame.GbxSymphonicAmbientAudioAction_PlayAudioGraph
// 0x0038 (0x0040 - 0x0008)
struct FGbxSymphonicAmbientAudioAction_PlayAudioGraph final : public FGbxSymphonicAmbientAudioAction
{
public:
	TSoftObjectPtr<class UGbxAudioGraphAsset>     AudioGraph;                                        // 0x0008(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_30[0x10];                                      // 0x0030(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxSymphonicAmbientAudioAction_PlayAudioGraph;

// ScriptStruct GbxGame.GbxSymphonicAmbientAudioAction_PostEvent
// 0x0080 (0x0088 - 0x0008)
struct FGbxSymphonicAmbientAudioAction_PostEvent final : public FGbxSymphonicAmbientAudioAction
{
public:
	struct FGbxAudioEvent                         AudioEvent;                                        // 0x0008(0x0030)(Edit, NativeAccessSpecifierPublic)
	bool                                          bStopOnExit;                                       // 0x0038(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAudioEvent                         StopAudioEvent;                                    // 0x0040(0x0030)(Edit, NativeAccessSpecifierPublic)
	uint8                                         Pad_70[0x18];                                      // 0x0070(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxSymphonicAmbientAudioAction_PostEvent;

// ScriptStruct GbxGame.GbxSymphonicAmbientAudioAction_SetSwitch
// 0x0018 (0x0020 - 0x0008)
struct FGbxSymphonicAmbientAudioAction_SetSwitch final : public FGbxSymphonicAmbientAudioAction
{
public:
	FGbxDefPtrProperty_                           WwiseSwitch;                                       // 0x0008(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxSymphonicAmbientAudioAction_SetSwitch;

// ScriptStruct GbxGame.GbxSymphonicAmbientAudioCondition_FactExpression
// 0x0020 (0x0028 - 0x0008)
struct FGbxSymphonicAmbientAudioCondition_FactExpression final : public FGbxSymphonicAmbientAudioCondition
{
public:
	struct FFactExpression                        FactExpression;                                    // 0x0008(0x0010)(Edit, NativeAccessSpecifierPublic)
	uint8                                         Pad_18[0x10];                                      // 0x0018(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxSymphonicAmbientAudioCondition_FactExpression;

// ScriptStruct GbxGame.GbxSymphonicAmbientAudioCondition_ChildrenCanPlay
// 0x0000 (0x0008 - 0x0008)
struct FGbxSymphonicAmbientAudioCondition_ChildrenCanPlay final : public FGbxSymphonicAmbientAudioCondition
{
};
DUMPER7_ASSERTS_FGbxSymphonicAmbientAudioCondition_ChildrenCanPlay;

// ScriptStruct GbxGame.GbxSymphonicAmbientAudioSection
// 0x0068 (0x0070 - 0x0008)
struct FGbxSymphonicAmbientAudioSection final : public FGbxHasStructType
{
public:
	uint8                                         Pad_8[0x10];                                       // 0x0008(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Name;                                              // 0x0018(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGbxInlineStruct>               Conditions;                                        // 0x0020(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FGbxInlineStruct>               actions;                                           // 0x0030(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FGbxInlineStruct>               Children;                                          // 0x0040(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_50[0x20];                                      // 0x0050(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxSymphonicAmbientAudioSection;

// ScriptStruct GbxGame.GbxSymphonicAmbientAudioDef
// 0x0088 (0x00A0 - 0x0018)
struct FGbxSymphonicAmbientAudioDef : public FGbxDef
{
public:
	FGameDataHandleProperty_                      audioprovider;                                     // 0x0018(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxSymphonicAmbientAudioSection       AmbientSections;                                   // 0x0030(0x0070)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxSymphonicAmbientAudioDef;

// ScriptStruct GbxGame.GbxSymphonicAmbientAudioProvider
// 0x0010 (0x0310 - 0x0300)
struct FGbxSymphonicAmbientAudioProvider final : public FGbxAudioProvider
{
public:
	uint8                                         Pad_300[0x10];                                     // 0x0300(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxSymphonicAmbientAudioProvider;

// ScriptStruct GbxGame.SymphonicAmbientAudioProviderDef
// 0x0008 (0x0150 - 0x0148)
struct FSymphonicAmbientAudioProviderDef final : public FGbxAudioProviderDef
{
public:
	uint8                                         AcousticsFlags;                                    // 0x0148(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FSymphonicAmbientAudioProviderDef;

// ScriptStruct GbxGame.GbxTrickNotifyBindingData
// 0x0014 (0x0014 - 0x0000)
struct FGbxTrickNotifyBindingData final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x0008)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGbxTrickAnimNotifyType                       type;                                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   FunctionName;                                      // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxTrickNotifyBindingData;

// ScriptStruct GbxGame.GbxTrickScriptData
// 0x0028 (0x0028 - 0x0000)
struct FGbxTrickScriptData final
{
public:
	EGbxTrickScriptType                           type;                                              // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UGbxTrickScript>            shared;                                            // 0x0008(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGbxActorScript>            ActorScript;                                       // 0x0010(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGbxTrickScript>            InternalClass;                                     // 0x0018(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInstanced;                                        // 0x0020(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxTrickScriptData;

// ScriptStruct GbxGame.GbxTrickAnimRandomData
// 0x0190 (0x0190 - 0x0000)
struct FGbxTrickAnimRandomData final
{
public:
	struct FGbxParam                              Weight;                                            // 0x0000(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxTrickAnimData                      AnimData;                                          // 0x0038(0x0150)(Edit, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      Animation;                                         // 0x0188(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxTrickAnimRandomData;

// ScriptStruct GbxGame.GbxTrickConditionalItem
// 0x0040 (0x0040 - 0x0000)
struct FGbxTrickConditionalItem final
{
public:
	class UGbxTrick*                              Trick;                                             // 0x0000(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxParam                              Condition;                                         // 0x0008(0x0038)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxTrickConditionalItem;

// ScriptStruct GbxGame.PerchIdleAnim
// 0x0188 (0x0188 - 0x0000)
struct FPerchIdleAnim final
{
public:
	struct FGbxParam                              Weight;                                            // 0x0000(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxTrickAnimData                      Anim;                                              // 0x0038(0x0150)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FPerchIdleAnim;

// ScriptStruct GbxGame.GbxTrickRandomItem
// 0x0010 (0x0010 - 0x0000)
struct FGbxTrickRandomItem final
{
public:
	class UGbxTrick*                              Trick;                                             // 0x0000(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Weight;                                            // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxTrickRandomItem;

// ScriptStruct GbxGame.GbxUIMaterialAnimationDataDef
// 0x0128 (0x0140 - 0x0018)
struct FGbxUIMaterialAnimationDataDef final : public FGbxDef
{
public:
	uint8                                         Pad_18[0x10];                                      // 0x0018(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UMaterialInterface>      MaterialPath;                                      // 0x0028(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FName, TSoftObjectPtr<class UTexture>> ParameterTextures;                             // 0x0050(0x0050)(Edit, UObjectWrapper, NativeAccessSpecifierPublic)
	TMap<class FName, struct FGbxFloatCurve>      ParameterCurves;                                   // 0x00A0(0x0050)(Edit, NativeAccessSpecifierPublic)
	TMap<class FName, float>                      events;                                            // 0x00F0(0x0050)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxUIMaterialAnimationDataDef;

// ScriptStruct GbxGame.UIDisplayDataDef_RewardTier
// 0x0008 (0x0020 - 0x0018)
struct FUIDisplayDataDef_RewardTier final : public FGbxDef
{
public:
	int32                                         SortOrder;                                         // 0x0018(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FUIDisplayDataDef_RewardTier;

// ScriptStruct GbxGame.GbxUnlockableGroup
// 0x0088 (0x0088 - 0x0000)
struct alignas(0x08) FGbxUnlockableGroup final
{
public:
	uint8                                         Pad_0[0x80];                                       // 0x0000(0x0080)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bIsUnlocked;                                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxUnlockableGroup;

// ScriptStruct GbxGame.GbxUnlockableItemData_ModifyAttributes
// 0x0010 (0x0018 - 0x0008)
struct FGbxUnlockableItemData_ModifyAttributes final : public FGbxUnlockableItemData
{
public:
	TArray<struct FGbxUnlockableItemAttributeTransaction> AttributeModifiers;                        // 0x0008(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxUnlockableItemData_ModifyAttributes;

// ScriptStruct GbxGame.GbxUnlockableItemData_Reward
// 0x0040 (0x0048 - 0x0008)
struct FGbxUnlockableItemData_Reward final : public FGbxUnlockableItemData
{
public:
	struct FGbxReward                             reward;                                            // 0x0008(0x0040)(Edit, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxUnlockableItemData_Reward;

// ScriptStruct GbxGame.GbxUnlockableItemData_Skill
// 0x0030 (0x0038 - 0x0008)
struct FGbxUnlockableItemData_Skill final : public FGbxUnlockableItemData
{
public:
	FGbxDefPtrProperty_                           Skill;                                             // 0x0008(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	FGbxDefPtrProperty_                           ActivationSkillState;                              // 0x0020(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxUnlockableItemData_Skill;

// ScriptStruct GbxGame.GbxUnlockableItemData_SkillParam
// 0x0080 (0x0088 - 0x0008)
struct FGbxUnlockableItemData_SkillParam final : public FGbxUnlockableItemData
{
public:
	TSoftObjectPtr<class UGbxSkillParamData>      ParamData;                                         // 0x0008(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	FGbxDefPtrProperty_                           Skill;                                             // 0x0030(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGbxParam                              Value;                                             // 0x0048(0x0038)(Edit, NativeAccessSpecifierPrivate)
	bool                                          bResetToDefaultOnDeactivate;                       // 0x0080(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxUnlockableItemData_SkillParam;

// ScriptStruct GbxGame.GbxUnlockConditionData_CompositeAnd
// 0x0010 (0x0018 - 0x0008)
struct FGbxUnlockConditionData_CompositeAnd final : public FGbxUnlockConditionData
{
public:
	TArray<struct FGbxInlineStruct>               AndConditions;                                     // 0x0008(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxUnlockConditionData_CompositeAnd;

// ScriptStruct GbxGame.GbxUnlockConditionData_CompositeOr
// 0x0010 (0x0018 - 0x0008)
struct FGbxUnlockConditionData_CompositeOr final : public FGbxUnlockConditionData
{
public:
	TArray<struct FGbxInlineStruct>               OrConditions;                                      // 0x0008(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxUnlockConditionData_CompositeOr;

// ScriptStruct GbxGame.GbxUnlockConditionData_ExternalCondition
// 0x0030 (0x0038 - 0x0008)
struct FGbxUnlockConditionData_ExternalCondition final : public FGbxUnlockConditionDataNoGraph
{
public:
	FGbxDefPtrProperty_                           ProgressGraph;                                     // 0x0008(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGbxInlineStruct                       Condition;                                         // 0x0020(0x0018)(Edit, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxUnlockConditionData_ExternalCondition;

// ScriptStruct GbxGame.GbxUnlockConditionData_GroupMaxNodesActivated
// 0x0010 (0x0018 - 0x0008)
struct FGbxUnlockConditionData_GroupMaxNodesActivated final : public FGbxUnlockConditionDataProgressGraph
{
public:
	class FName                                   GroupRefName;                                      // 0x0008(0x0008)(Edit, ZeroConstructor, NoClear, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bInvert;                                           // 0x0010(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxUnlockConditionData_GroupMaxNodesActivated;

// ScriptStruct GbxGame.GbxUnlockConditionData_GroupUnlocked
// 0x0010 (0x0018 - 0x0008)
struct FGbxUnlockConditionData_GroupUnlocked final : public FGbxUnlockConditionDataProgressGraph
{
public:
	class FName                                   GroupRefName;                                      // 0x0008(0x0008)(Edit, ZeroConstructor, NoClear, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bInvert;                                           // 0x0010(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxUnlockConditionData_GroupUnlocked;

// ScriptStruct GbxGame.GbxUnlockConditionData_NodeProgressPointsSpent
// 0x0068 (0x0070 - 0x0008)
struct FGbxUnlockConditionData_NodeProgressPointsSpent final : public FGbxUnlockConditionDataProgressGraph
{
public:
	TArray<class FName>                           NodeRefNames;                                      // 0x0008(0x0010)(Edit, ZeroConstructor, NoClear, NativeAccessSpecifierPrivate)
	bool                                          bUseMaxProgressPoints;                             // 0x0018(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAttributeInit                      ProgressPoints;                                    // 0x0020(0x0050)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxUnlockConditionData_NodeProgressPointsSpent;

// ScriptStruct GbxGame.GbxUnlockConditionData_NodeUnlocked
// 0x0010 (0x0018 - 0x0008)
struct FGbxUnlockConditionData_NodeUnlocked final : public FGbxUnlockConditionDataProgressGraph
{
public:
	class FName                                   NodeRefName;                                       // 0x0008(0x0008)(Edit, ZeroConstructor, NoClear, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bInvert;                                           // 0x0010(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxUnlockConditionData_NodeUnlocked;

// ScriptStruct GbxGame.GbxUnlockConditionData_Reward
// 0x0018 (0x0020 - 0x0008)
struct FGbxUnlockConditionData_Reward final : public FGbxUnlockConditionDataNoGraph
{
public:
	struct FGbxRewardRef                          reward;                                            // 0x0008(0x0018)(Edit, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxUnlockConditionData_Reward;

// ScriptStruct GbxGame.GbxUnlockConditionData_TotalProgressPointsAcquired
// 0x0068 (0x0070 - 0x0008)
struct FGbxUnlockConditionData_TotalProgressPointsAcquired final : public FGbxUnlockConditionDataNoGraph
{
public:
	struct FGbxProgressPointsAmount               ProgressPoints;                                    // 0x0008(0x0068)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxUnlockConditionData_TotalProgressPointsAcquired;

// ScriptStruct GbxGame.GbxUseTriggerUsabilityTypeInfo
// 0x0008 (0x0008 - 0x0000)
struct FGbxUseTriggerUsabilityTypeInfo final
{
public:
	EHoldToUseMode                                HoldToUseMode;                                     // 0x0000(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         HoldToUseTime;                                     // 0x0004(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxUseTriggerUsabilityTypeInfo;

// ScriptStruct GbxGame.GestaltOptionalPartData
// 0x0018 (0x0018 - 0x0000)
struct FGestaltOptionalPartData final
{
public:
	struct FGestaltPartDataSelector               GestaltPart;                                       // 0x0000(0x0010)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	float                                         probability;                                       // 0x0010(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bThirdPersonOnly : 1;                              // 0x0014(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGestaltOptionalPartData;

// ScriptStruct GbxGame.GimmeCondition_FactExpression
// 0x0010 (0x0020 - 0x0010)
struct FGimmeCondition_FactExpression final : public FGimmeConditionBaseStruct
{
public:
	struct FFactExpression                        FactExpression;                                    // 0x0010(0x0010)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGimmeCondition_FactExpression;

// ScriptStruct GbxGame.GimmeCondition_Unlockable
// 0x0010 (0x0020 - 0x0010)
struct FGimmeCondition_Unlockable final : public FGimmeConditionBaseStruct
{
public:
	TArray<FGbxDefPtrProperty_>                   unlockables;                                       // 0x0010(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGimmeCondition_Unlockable;

// ScriptStruct GbxGame.GimmeYield_Mission
// 0x0018 (0x0028 - 0x0010)
struct FGimmeYield_Mission final : public FGimmeYieldBaseStruct
{
public:
	FGbxDefPtrProperty_                           mission;                                           // 0x0010(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGimmeYield_Mission;

// ScriptStruct GbxGame.GoreMaterialParameterDef
// 0x0000 (0x0090 - 0x0090)
struct FGoreMaterialParameterDef final : public FGbxMaterialParameterDef
{
};
DUMPER7_ASSERTS_FGoreMaterialParameterDef;

// ScriptStruct GbxGame.GoreRegionState
// 0x0010 (0x0018 - 0x0008)
struct FGoreRegionState final : public FGbxHasStructType
{
public:
	uint8                                         Pad_8[0x10];                                       // 0x0008(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGoreRegionState;

// ScriptStruct GbxGame.GpsGeneratorSettings_Characters
// 0x0068 (0x0230 - 0x01C8)
struct FGpsGeneratorSettings_Characters final : public FGpsGeneratorSettings_Actors
{
public:
	EGpsGeneratorSettings_Characters_PlayerTypeFilter PlayerTypeFilter;                              // 0x01C8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bUsePlayerTypeFilter;                              // 0x01CC(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1CD[0x3];                                      // 0x01CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	EGpsGeneratorSettings_Characters_ControllerTypeFilter ControllerTypeFilter;                      // 0x01D0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bUseControllerTypeFilter;                          // 0x01D4(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1D5[0x3];                                      // 0x01D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	EGpsGeneratorSettings_Characters_DeathFilter  DeathFilter;                                       // 0x01D8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bUseDeathFilter;                                   // 0x01DC(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bMustBeTargetableByPlayers;                        // 0x01DD(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bMustBeTargetableByAI;                             // 0x01DE(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bMustBePerceivableByAI;                            // 0x01DF(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTagQuery                      GameplayTagQuery;                                  // 0x01E0(0x0048)(Edit, Protected, NativeAccessSpecifierProtected)
	bool                                          bUseGameplayTagQuery;                              // 0x0228(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_229[0x7];                                      // 0x0229(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsGeneratorSettings_Characters;

// ScriptStruct GbxGame.GpsGenerator_Characters
// 0x0000 (0x0448 - 0x0448)
struct FGpsGenerator_Characters final : public FGpsGenerator_Actors
{
};
DUMPER7_ASSERTS_FGpsGenerator_Characters;

// ScriptStruct GbxGame.GpsGeneratorSettings_DangerZones
// 0x0050 (0x0218 - 0x01C8)
struct FGpsGeneratorSettings_DangerZones final : public FGpsGeneratorSettings_Actors
{
public:
	struct FGameplayTagQuery                      GameplayTagQuery;                                  // 0x01C8(0x0048)(Edit, Protected, NativeAccessSpecifierProtected)
	bool                                          bUseGameplayTagQuery;                              // 0x0210(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_211[0x7];                                      // 0x0211(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsGeneratorSettings_DangerZones;

// ScriptStruct GbxGame.GpsGenerator_GbxSkillTargetList
// 0x0000 (0x0448 - 0x0448)
struct FGpsGenerator_GbxSkillTargetList final : public FGpsGenerator_Actors
{
};
DUMPER7_ASSERTS_FGpsGenerator_GbxSkillTargetList;

// ScriptStruct GbxGame.GpsGeneratorSettings_InteractiveObjects
// 0x0050 (0x0218 - 0x01C8)
struct FGpsGeneratorSettings_InteractiveObjects : public FGpsGeneratorSettings_Actors
{
public:
	struct FGameplayTagQuery                      GameplayTagQuery;                                  // 0x01C8(0x0048)(Edit, Protected, NativeAccessSpecifierProtected)
	bool                                          bUseGameplayTagQuery;                              // 0x0210(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_211[0x7];                                      // 0x0211(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsGeneratorSettings_InteractiveObjects;

// ScriptStruct GbxGame.GpsGeneratorSettings_MissionActors
// 0x0000 (0x01C8 - 0x01C8)
struct FGpsGeneratorSettings_MissionActors final : public FGpsGeneratorSettings_Actors
{
};
DUMPER7_ASSERTS_FGpsGeneratorSettings_MissionActors;

// ScriptStruct GbxGame.GpsGenerator_MissionActors
// 0x0000 (0x0448 - 0x0448)
struct FGpsGenerator_MissionActors final : public FGpsGenerator_Actors
{
};
DUMPER7_ASSERTS_FGpsGenerator_MissionActors;

// ScriptStruct GbxGame.GpsGenerator_Perches
// 0x0010 (0x0428 - 0x0418)
struct FGpsGenerator_Perches final : public FGpsGenerator
{
public:
	uint8                                         Pad_418[0x10];                                     // 0x0418(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsGenerator_Perches;

// ScriptStruct GbxGame.GpsGeneratorSettings_ProjectOntoShape
// 0x0140 (0x0180 - 0x0040)
struct FGpsGeneratorSettings_ProjectOntoShape : public FGpsGeneratorSettings
{
public:
	struct FGbxBinding_Vector                     SourceLocation;                                    // 0x0040(0x0098)(Edit, NativeAccessSpecifierPublic)
	struct FGbxBinding_Rotator                    SourceRotation;                                    // 0x00D8(0x0060)(Edit, NativeAccessSpecifierPublic)
	struct FGbxBinding_Float                      HitNormalOffset;                                   // 0x0138(0x0020)(Edit, NativeAccessSpecifierPublic)
	ECollisionChannel                             TraceChannel;                                      // 0x0158(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bTeamCollision;                                    // 0x0159(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLimitWorldSurfaceSlope;                           // 0x015A(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15B[0x1];                                      // 0x015B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MaxWorldSurfaceSlope;                              // 0x015C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSnapToGround;                                     // 0x0160(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSnapToGroundFallback;                             // 0x0161(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCheckLineOfSightToGround;                         // 0x0162(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_163[0x1];                                      // 0x0163(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LineOfSightToGroundOffset;                         // 0x0164(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSnapToLedge;                                      // 0x0168(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_169[0x3];                                      // 0x0169(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LedgeSearchHeight;                                 // 0x016C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinimumLedgeDepth;                                 // 0x0170(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LedgeSearchOffset;                                 // 0x0174(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DistanceFromLedgeEdge;                             // 0x0178(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LedgeVerticalScanAngle;                            // 0x017C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGpsGeneratorSettings_ProjectOntoShape;

// ScriptStruct GbxGame.GpsGeneratorSettings_ProjectOntoCylinder
// 0x0068 (0x01E8 - 0x0180)
struct FGpsGeneratorSettings_ProjectOntoCylinder final : public FGpsGeneratorSettings_ProjectOntoShape
{
public:
	struct FGbxBinding_Float                      Radius;                                            // 0x0180(0x0020)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FGbxBinding_Float                      TopHeight;                                         // 0x01A0(0x0020)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FGbxBinding_Float                      BottomHeight;                                      // 0x01C0(0x0020)(Edit, Protected, NativeAccessSpecifierProtected)
	bool                                          bCheckLineOfSight;                                 // 0x01E0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1E1[0x7];                                      // 0x01E1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsGeneratorSettings_ProjectOntoCylinder;

// ScriptStruct GbxGame.GpsGenerator_ProjectOntoShape
// 0x00B8 (0x04D0 - 0x0418)
struct FGpsGenerator_ProjectOntoShape : public FGpsGenerator
{
public:
	uint8                                         Pad_418[0xB8];                                     // 0x0418(0x00B8)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsGenerator_ProjectOntoShape;

// ScriptStruct GbxGame.GpsGenerator_ProjectOntoCylinder
// 0x0010 (0x04E0 - 0x04D0)
struct FGpsGenerator_ProjectOntoCylinder final : public FGpsGenerator_ProjectOntoShape
{
public:
	uint8                                         Pad_4D0[0x10];                                     // 0x04D0(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsGenerator_ProjectOntoCylinder;

// ScriptStruct GbxGame.GpsGeneratorSettings_Waypoints
// 0x0008 (0x01D0 - 0x01C8)
struct FGpsGeneratorSettings_Waypoints final : public FGpsGeneratorSettings_Actors
{
public:
	int32                                         WaypointTypeFilter;                                // 0x01C8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInTrackedMission;                                 // 0x01CC(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1CD[0x3];                                      // 0x01CD(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsGeneratorSettings_Waypoints;

// ScriptStruct GbxGame.GpsGenerator_Waypoints
// 0x0008 (0x0450 - 0x0448)
struct FGpsGenerator_Waypoints final : public FGpsGenerator_Actors
{
public:
	uint8                                         Pad_448[0x8];                                      // 0x0448(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsGenerator_Waypoints;

// ScriptStruct GbxGame.GpsTestSettings_GbxSkillTargetList
// 0x0020 (0x00A0 - 0x0080)
struct FGpsTestSettings_GbxSkillTargetList final : public FGpsTestSettings
{
public:
	FGbxDefPtrProperty_                           TargetListDef;                                     // 0x0080(0x0018)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bInvert;                                           // 0x0098(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsTestSettings_GbxSkillTargetList;

// ScriptStruct GbxGame.GpsTest_GbxSkillTargetList
// 0x0000 (0x0060 - 0x0060)
struct FGpsTest_GbxSkillTargetList final : public FGpsTest
{
};
DUMPER7_ASSERTS_FGpsTest_GbxSkillTargetList;

// ScriptStruct GbxGame.GpsTestSettings_Health
// 0x0068 (0x00E8 - 0x0080)
struct FGpsTestSettings_Health final : public FGpsTestSettings
{
public:
	struct FGbxBinding_Float                      MinValue;                                          // 0x0080(0x0020)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FGbxBinding_Float                      MaxValue;                                          // 0x00A0(0x0020)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FGbxBinding_Float                      CustomValue;                                       // 0x00C0(0x0020)(Edit, Protected, NativeAccessSpecifierProtected)
	EGpsValueScore                                Preference;                                        // 0x00E0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EHealthPoolType                               HealthPoolType;                                    // 0x00E4(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_E5[0x3];                                       // 0x00E5(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsTestSettings_Health;

// ScriptStruct GbxGame.GpsTest_Health
// 0x0010 (0x0070 - 0x0060)
struct FGpsTest_Health final : public FGpsTest
{
public:
	uint8                                         Pad_60[0x10];                                      // 0x0060(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsTest_Health;

// ScriptStruct GbxGame.GpsTest_IsDamagingMe
// 0x0008 (0x0068 - 0x0060)
struct FGpsTest_IsDamagingMe final : public FGpsTest
{
public:
	uint8                                         Pad_60[0x8];                                       // 0x0060(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGpsTest_IsDamagingMe;

// ScriptStruct GbxGame.GpsTest_IsDead
// 0x0000 (0x0060 - 0x0060)
struct FGpsTest_IsDead final : public FGpsTest
{
};
DUMPER7_ASSERTS_FGpsTest_IsDead;

// ScriptStruct GbxGame.HazardGameDataCategories_DONTUSE
// 0x0001 (0x0001 - 0x0000)
struct FHazardGameDataCategories_DONTUSE final
{
public:
	uint8                                         Pad_0[0x1];                                        // 0x0000(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FHazardGameDataCategories_DONTUSE;

// ScriptStruct GbxGame.HazardInteractionBalanceStateValueResolver
// 0x0000 (0x0008 - 0x0008)
struct FHazardInteractionBalanceStateValueResolver final : public FAttributeValueResolver
{
};
DUMPER7_ASSERTS_FHazardInteractionBalanceStateValueResolver;

// ScriptStruct GbxGame.SupportedHazardInteractionData
// 0x0088 (0x0088 - 0x0000)
struct FSupportedHazardInteractionData final
{
public:
	FGameDataHandleProperty_                      State;                                             // 0x0000(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TransitionTimeScale;                               // 0x0018(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DamageTriggeredTransitionTimeScale;                // 0x001C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OverrideDamageTriggeredSourceDuration;             // 0x0020(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bOverrideDamageAmount : 1;                         // 0x0024(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAttributeInit                      OverrideDamageAmount;                              // 0x0028(0x0050)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FGbxStatusEffectApplicationModifierSet StatusEffectModifierSet;                           // 0x0078(0x0010)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FSupportedHazardInteractionData;

// ScriptStruct GbxGame.HazardInteractionStateDef
// 0x0108 (0x0120 - 0x0018)
struct FHazardInteractionStateDef final : public FGbxDef
{
public:
	EHazardInteractionSourceMode                  SourceMode;                                        // 0x0018(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FHazardInteractionTransitionData> Transitions;                                     // 0x0020(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      DamageData;                                        // 0x0030(0x0018)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      DamageType;                                        // 0x0048(0x0018)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      InitiatingDamageType;                              // 0x0060(0x0018)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxAttributeInit                      DamageAmount;                                      // 0x0078(0x0050)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	float                                         InitialDamageDelay;                                // 0x00C8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         damageinterval;                                    // 0x00CC(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseTargetAsDamageEvaluationContext;               // 0x00D0(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DamageTriggeredInteractionChance;                  // 0x00D4(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DamageTriggeredDuration;                           // 0x00D8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UGbxNavArea>             GbxNavArea;                                        // 0x00E0(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bMimicBasedOnDamageType;                           // 0x0108(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxStatusEffectApplicationModifierSet StatusEffectModifierSet;                           // 0x0110(0x0010)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FHazardInteractionStateDef;

// ScriptStruct GbxGame.HazardInteractionDef
// 0x00E0 (0x00F8 - 0x0018)
struct FHazardInteractionDef final : public FGbxDef
{
public:
	EHazardInteractionMode                        InteractionMode;                                   // 0x0018(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIgnoreDamage;                                     // 0x0019(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	FGameDataHandleProperty_                      NaturalState;                                      // 0x0020(0x0018)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      InitialState;                                      // 0x0038(0x0018)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FSupportedHazardInteractionData> SupportedStates;                                  // 0x0050(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	uint8                                         Pad_60[0x88];                                      // 0x0060(0x0088)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bIsInitiallySource;                                // 0x00E8(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         InitialSourceDuration;                             // 0x00EC(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bForceDamageToPlayerControlled;                    // 0x00F0(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F1[0x3];                                       // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         EffectSize;                                        // 0x00F4(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FHazardInteractionDef;

// ScriptStruct GbxGame.HazardInteractionState
// 0x0658 (0x0658 - 0x0000)
struct FHazardInteractionState final
{
public:
	uint8                                         Pad_0[0x50];                                       // 0x0000(0x0050)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(FGameDataHandleProperty_ State, bool bIsInitialState)> OnHazardInteractionStarted; // 0x0050(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	class AActor*                                 instigator;                                        // 0x0060(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_68[0x28];                                      // 0x0068(0x0028)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IHazardInteractionInterface> ClosestSource;                               // 0x0090(0x0010)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_A0[0x20];                                      // 0x00A0(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UPrimitiveComponent*>            DamagePrimitives;                                  // 0x00C0(0x0010)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<class UPrimitiveComponent*>            InteractionPrimitives;                             // 0x00D0(0x0010)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<class USceneComponent*>                EffectPrimitives;                                  // 0x00E0(0x0010)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	uint8                                         Pad_F0[0x8];                                       // 0x00F0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class AActor*, struct FHazardInteractionDamageOverlapData> DamageOverlaps;                  // 0x00F8(0x0050)(Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_148[0x8];                                      // 0x0148(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TScriptInterface<class IHazardInteractionInterface>> IgnoredInteractionSources;           // 0x0150(0x0010)(ZeroConstructor, Transient, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TMap<class UObject*, int32>                   OtherInteractionSources;                           // 0x0160(0x0050)(Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_1B0[0x4A8];                                    // 0x01B0(0x04A8)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FHazardInteractionState;

// ScriptStruct GbxGame.HazardManagerPostPhysicsTickFunction
// 0x0010 (0x0038 - 0x0028)
struct FHazardManagerPostPhysicsTickFunction final : public FTickFunction
{
public:
	uint8                                         Pad_28[0x10];                                      // 0x0028(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FHazardManagerPostPhysicsTickFunction;

// ScriptStruct GbxGame.HealthTypeBalanceData
// 0x0000 (0x0008 - 0x0008)
struct FHealthTypeBalanceData : public FTableRowBase
{
};
DUMPER7_ASSERTS_FHealthTypeBalanceData;

// ScriptStruct GbxGame.GbxStatusEffectDriverInstanceStackStrategy_Capped
// 0x0060 (0x0068 - 0x0008)
struct FGbxStatusEffectDriverInstanceStackStrategy_Capped final : public FGbxStatusEffectDriverInstanceStackStrategy
{
public:
	int32                                         MaxSize;                                           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bUseMaxInit;                                       // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAttributeInit                      MaxSizeInit;                                       // 0x0010(0x0050)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	bool                                          bCapPerOwner;                                      // 0x0060(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EGbxStatusEffectDriverInstanceStackStrategy_Capped_SelectionPolicy SelectionPolicy;              // 0x0061(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EGbxStatusEffectDriverInstanceStackStrategy_Capped_ReplacementPolicy ReplacementPolicy;          // 0x0062(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_63[0x5];                                       // 0x0063(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxStatusEffectDriverInstanceStackStrategy_Capped;

// ScriptStruct GbxGame.InventoryBodyState
// 0x0000 (0x0220 - 0x0220)
struct FInventoryBodyState final : public FGbxBodyState
{
};
DUMPER7_ASSERTS_FInventoryBodyState;

// ScriptStruct GbxGame.InventoryBodyAnimInstanceProxy
// 0x0000 (0x0B30 - 0x0B30)
struct FInventoryBodyAnimInstanceProxy : public FGbxGameAnimInstanceProxy
{
};
DUMPER7_ASSERTS_FInventoryBodyAnimInstanceProxy;

// ScriptStruct GbxGame.InventoryBodyControlAttributeInput
// 0x0060 (0x0110 - 0x00B0)
struct FInventoryBodyControlAttributeInput final : public FInventoryBodyControlInput
{
public:
	struct FGbxAttributeInit                      ControlValue;                                      // 0x00B0(0x0050)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         bLimitMinControlValue : 1;                         // 0x0100(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bLimitMaxControlValue : 1;                         // 0x0100(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_101[0x3];                                      // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MinControlValue;                                   // 0x0104(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxControlValue;                                   // 0x0108(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FInventoryBodyControlAttributeInput;

// ScriptStruct GbxGame.InventoryBodyMaterialCurveControl
// 0x0038 (0x0080 - 0x0048)
struct FInventoryBodyMaterialCurveControl final : public FInventoryBodyControl
{
public:
	class FName                                   MaterialParamName;                                 // 0x0048(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EInventoryBodyMaterialBlend                   BlendMode;                                         // 0x0050(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UCurveFloat>             curve;                                             // 0x0058(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FInventoryBodyMaterialCurveControl;

// ScriptStruct GbxGame.InventoryBodyMaterialParamControl
// 0x0010 (0x0058 - 0x0048)
struct FInventoryBodyMaterialParamControl final : public FInventoryBodyControl
{
public:
	class FName                                   MaterialParamName;                                 // 0x0048(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EInventoryBodyMaterialBlend                   BlendMode;                                         // 0x0050(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         BlendSpeed;                                        // 0x0054(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FInventoryBodyMaterialParamControl;

// ScriptStruct GbxGame.InventoryBodyParticleEffectAspect
// 0x00E8 (0x0118 - 0x0030)
struct FInventoryBodyParticleEffectAspect : public FInventoryAspect
{
public:
	struct FInventoryBodyParticleEffectData       data;                                              // 0x0030(0x00D8)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FName                                   ComparisionTag;                                    // 0x0108(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCompareEffectType;                                // 0x0110(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FInventoryBodyParticleEffectAspect;

// ScriptStruct GbxGame.GbxMetaDataInventoryBodyParticleEffectRule
// 0x0018 (0x0020 - 0x0008)
struct FGbxMetaDataInventoryBodyParticleEffectRule final : public FGbxMetaDataStructRule
{
public:
	bool                                          bRequired;                                         // 0x0008(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Flags;                                             // 0x000C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                           Types;                                             // 0x0010(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxMetaDataInventoryBodyParticleEffectRule;

// ScriptStruct GbxGame.InventoryComponentFilterData
// 0x0028 (0x0028 - 0x0000)
struct alignas(0x08) FInventoryComponentFilterData final
{
public:
	uint8                                         Pad_0[0x8];                                        // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Name;                                              // 0x0008(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   Tag;                                               // 0x0010(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ExcludeTag;                                        // 0x0018(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bModifyAll;                                        // 0x0020(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FInventoryComponentFilterData;

// ScriptStruct GbxGame.InventoryContextResolver
// 0x0000 (0x0008 - 0x0008)
struct FInventoryContextResolver final : public FAttributeContextResolver
{
};
DUMPER7_ASSERTS_FInventoryContextResolver;

// ScriptStruct GbxGame.InventoryCriteriaPresetDef
// 0x0028 (0x0040 - 0x0018)
struct FInventoryCriteriaPresetDef final : public FGbxDef
{
public:
	struct FInventorySelectionCriteria            Criteria;                                          // 0x0018(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FInventoryCriteriaPresetDef;

// ScriptStruct GbxGame.InventoryCriterionPresetDef
// 0x00E0 (0x00F8 - 0x0018)
struct FInventoryCriterionPresetDef final : public FGbxDef
{
public:
	class FName                                   Criterion;                                         // 0x0018(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 DisplayName;                                       // 0x0020(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FInventoryCriterionPresetTagData       TagData;                                           // 0x0030(0x00C8)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FInventoryCriterionPresetDef;

// ScriptStruct GbxGame.InventoryPartDef
// 0x0080 (0x00B0 - 0x0030)
struct FInventoryPartDef final : public FGbxSerialNumberAwareDef
{
public:
	uint8                                         Pad_30[0xE];                                       // 0x0030(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bCanBeRerolled;                                    // 0x003E(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3F[0x9];                                       // 0x003F(0x0009)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bApplyAddTagsToCriteria;                           // 0x0048(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_49[0xF];                                       // 0x0049(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGbxInlineStruct>               Aspects;                                           // 0x0058(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<class FName>                           GestaltPartNames;                                  // 0x0068(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<class FName>                           RemoveGestaltPartNames;                            // 0x0078(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class FString                                 DebugDisplayDescription;                           // 0x0088(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	FGbxDefPtrProperty_                           params;                                            // 0x0098(0x0018)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
};
DUMPER7_ASSERTS_FInventoryPartDef;

// ScriptStruct GbxGame.InventoryGameDataCategories_DONTUSE
// 0x0001 (0x0001 - 0x0000)
struct FInventoryGameDataCategories_DONTUSE final
{
public:
	uint8                                         Pad_0[0x1];                                        // 0x0000(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FInventoryGameDataCategories_DONTUSE;

// ScriptStruct GbxGame.AspectMaterialScalarParameter
// 0x000C (0x000C - 0x0000)
struct FAspectMaterialScalarParameter final
{
public:
	class FName                                   Name;                                              // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Value;                                             // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FAspectMaterialScalarParameter;

// ScriptStruct GbxGame.InventoryMaterialAspect
// 0x0060 (0x0090 - 0x0030)
struct FInventoryMaterialAspect : public FInventoryAspect
{
public:
	class FName                                   ComponentName;                                     // 0x0030(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ComponentTag;                                      // 0x0038(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SectionIndex;                                      // 0x0040(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UMaterialInterface>      Material;                                          // 0x0048(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FAspectMaterialVectorParameter> VectorParameters;                                  // 0x0070(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FAspectMaterialScalarParameter> ScalarParameters;                                  // 0x0080(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FInventoryMaterialAspect;

// ScriptStruct GbxGame.InventoryMaterialParamsDataAssetAspect
// 0x0050 (0x0080 - 0x0030)
struct FInventoryMaterialParamsDataAssetAspect : public FInventoryAspect
{
public:
	struct FInventoryComponentFilterData          filter;                                            // 0x0030(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UInventoryMaterialParamsDataAsset> DataAsset;                               // 0x0058(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FInventoryMaterialParamsDataAssetAspect;

// ScriptStruct GbxGame.InventoryMaterialsDataAssetAspect
// 0x0050 (0x0080 - 0x0030)
struct FInventoryMaterialsDataAssetAspect : public FInventoryAspect
{
public:
	struct FInventoryComponentFilterData          filter;                                            // 0x0030(0x0028)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UInventoryMaterialsDataAsset> DataAsset;                                    // 0x0058(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FInventoryMaterialsDataAssetAspect;

// ScriptStruct GbxGame.InventoryMeshAspect
// 0x0050 (0x0080 - 0x0030)
struct FInventoryMeshAspect final : public FInventoryAspect
{
public:
	TSoftObjectPtr<class UObject>                 Mesh;                                              // 0x0030(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHideRoot;                                         // 0x0058(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ComponentName;                                     // 0x005C(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           GestaltPartNames;                                  // 0x0068(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FName                                   AttachSocket;                                      // 0x0078(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FInventoryMeshAspect;

// ScriptStruct GbxGame.InventoryNamingAspect
// 0x0040 (0x0070 - 0x0030)
struct FInventoryNamingAspect final : public FInventoryAspect
{
public:
	class FName                                   DataTableRowName;                                  // 0x0030(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<FGbxDefPtrProperty_>                   PrefixPartList;                                    // 0x0038(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<FGbxDefPtrProperty_>                   TitlePartList;                                     // 0x0048(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<FGbxDefPtrProperty_>                   SuffixPartList;                                    // 0x0058(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                          bDisablePrefixes;                                  // 0x0068(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FInventoryNamingAspect;

// ScriptStruct GbxGame.InventoryRewardAspect
// 0x0018 (0x0048 - 0x0030)
struct FInventoryRewardAspect final : public FInventoryAspect
{
public:
	FGbxDefPtrProperty_                           RewardDef;                                         // 0x0030(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FInventoryRewardAspect;

// ScriptStruct GbxGame.InventorySkinDef
// 0x0038 (0x0148 - 0x0110)
struct FInventorySkinDef final : public FInventoryCustomizationDef
{
public:
	TSoftObjectPtr<class UInventoryMaterialsDataAsset> DataAsset;                                    // 0x0110(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_138[0x10];                                     // 0x0138(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FInventorySkinDef;

// ScriptStruct GbxGame.GbxContextParam_InventoryStatsPropertyResolver
// 0x0000 (0x0008 - 0x0008)
struct FGbxContextParam_InventoryStatsPropertyResolver final : public FGbxContextParam_CustomPropertyResolver
{
};
DUMPER7_ASSERTS_FGbxContextParam_InventoryStatsPropertyResolver;

// ScriptStruct GbxGame.InventoryStatsContainer
// 0x0200 (0x0208 - 0x0008)
struct FInventoryStatsContainer : public FGbxHasStructType
{
public:
	uint8                                         Pad_8[0x200];                                      // 0x0008(0x0200)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FInventoryStatsContainer;

// ScriptStruct GbxGame.OwnerInventoryStatsContainerContextResolver
// 0x0000 (0x0008 - 0x0008)
struct FOwnerInventoryStatsContainerContextResolver final : public FAttributeContextResolver
{
};
DUMPER7_ASSERTS_FOwnerInventoryStatsContainerContextResolver;

// ScriptStruct GbxGame.InventoryUnlockableAspect
// 0x0018 (0x0048 - 0x0030)
struct FInventoryUnlockableAspect final : public FInventoryAspect
{
public:
	FGbxDefPtrProperty_                           unlockable;                                        // 0x0030(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FInventoryUnlockableAspect;

// ScriptStruct GbxGame.ItemPoolPreferredPartsDef
// 0x0010 (0x0028 - 0x0018)
struct FItemPoolPreferredPartsDef final : public FGbxDef
{
public:
	TArray<FGameDataHandleProperty_>              parts;                                             // 0x0018(0x0010)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
};
DUMPER7_ASSERTS_FItemPoolPreferredPartsDef;

// ScriptStruct GbxGame.ItemPoolProviderDef
// 0x0030 (0x0048 - 0x0018)
struct FItemPoolProviderDef : public FInventoryItemProviderDef
{
public:
	TArray<FGameDataHandleProperty_>              PreferredPartsList;                                // 0x0018(0x0010)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FItemPoolCustomizationInfo>     CustomizationList;                                 // 0x0028(0x0010)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_38[0x10];                                      // 0x0038(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FItemPoolProviderDef;

// ScriptStruct GbxGame.ItemPoolDef
// 0x00B0 (0x00F8 - 0x0048)
struct FItemPoolDef final : public FItemPoolProviderDef
{
public:
	TArray<struct FItemPoolEntry>                 items;                                             // 0x0048(0x0010)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	bool                                          bSupportsGameStageVariance;                        // 0x0058(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAttributeInit                      Quantity;                                          // 0x0060(0x0050)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	FGameDataHandleProperty_                      mingamestage;                                      // 0x00B0(0x0018)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	FGameDataHandleProperty_                      aimingamestage;                                    // 0x00C8(0x0018)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	FGbxDefPtrProperty_                           DefSelector;                                       // 0x00E0(0x0018)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
};
DUMPER7_ASSERTS_FItemPoolDef;

// ScriptStruct GbxGame.ItemPoolListDef
// 0x0038 (0x0080 - 0x0048)
struct FItemPoolListDef final : public FItemPoolProviderDef
{
public:
	TArray<struct FItemPoolInfo>                  ItemPools;                                         // 0x0048(0x0010)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<FGameDataHandleProperty_>              ItemPoolLists;                                     // 0x0058(0x0010)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	FGbxDefPtrProperty_                           DefSelector;                                       // 0x0068(0x0018)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
};
DUMPER7_ASSERTS_FItemPoolListDef;

// ScriptStruct GbxGame.ItemPoolSelectorStateDef
// 0x0018 (0x0040 - 0x0028)
struct FItemPoolSelectorStateDef final : public FDefSelectorStateBaseDef
{
public:
	FGameDataHandleProperty_                      itempool;                                          // 0x0028(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FItemPoolSelectorStateDef;

// ScriptStruct GbxGame.ItemPoolListSelectorDef
// 0x0068 (0x0090 - 0x0028)
struct FItemPoolListSelectorDef final : public FDefSelectorBaseDef
{
public:
	FGameDataHandleProperty_                      DefaultItemPoolList;                               // 0x0028(0x0018)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_40[0x50];                                      // 0x0040(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FItemPoolListSelectorDef;

// ScriptStruct GbxGame.LandingDef
// 0x0010 (0x0028 - 0x0018)
struct FLandingDef final : public FGbxDef
{
public:
	TArray<struct FLandingInfo>                   LandingData;                                       // 0x0018(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FLandingDef;

// ScriptStruct GbxGame.ClientLightBeamState
// 0x01A8 (0x01A8 - 0x0000)
struct FClientLightBeamState final
{
public:
	uint8                                         CreationID;                                        // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FGameDataHandleProperty_                      definition;                                        // 0x0008(0x0018)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLightBeamAttachment                   Source;                                            // 0x0020(0x0060)(ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FLightBeamAttachment                   target;                                            // 0x0080(0x0060)(ContainsInstancedReference, NativeAccessSpecifierPublic)
	class AActor*                                 instigator;                                        // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 DamageCauser;                                      // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         spread;                                            // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint16                                        Flags;                                             // 0x00F4(0x0002)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint16                                        DamageModifierFlags;                               // 0x00F6(0x0002)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFXSystemAsset*                         BeamParticleOverride;                              // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFXSystemAsset*                         ViewBeamParticleOverride;                          // 0x0100(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         BeamCollectionID;                                  // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         ViewBeamCollectionID;                              // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_10A[0x2];                                      // 0x010A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LifetimeOverride;                                  // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         damage;                                            // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FGameDataHandleProperty_                      DamageType;                                        // 0x0118(0x0018)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDamageSourceContainer                 DamageSource;                                      // 0x0130(0x0040)(NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      ImpactEffect;                                      // 0x0170(0x0018)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         damageradius;                                      // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_18C[0x4];                                      // 0x018C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            DamageRampCurve;                                   // 0x0190(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DamageRampScale;                                   // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ImpactForce;                                       // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TimeDilation;                                      // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ParentSyncID;                                      // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FClientLightBeamState;

// ScriptStruct GbxGame.LightBeamDef
// 0x0258 (0x0270 - 0x0018)
struct FLightBeamDef : public FGbxDef
{
public:
	TSoftClassPtr<class UClass>                   BeamClass;                                         // 0x0018(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSoftClassPtr<class UClass>>           Scripts;                                           // 0x0040(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	float                                         Lifetime;                                          // 0x0050(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         NetUpdateTime;                                     // 0x0054(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInheritTimeDilation;                              // 0x0058(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MinimumLifetime;                                   // 0x005C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UFXSystemAsset>          BeamParticle;                                      // 0x0060(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      BeamParticleCollection;                            // 0x0088(0x0018)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGbxParticleParameter>          BeamParameters;                                    // 0x00A0(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UFXSystemAsset>          ViewBeamParticle;                                  // 0x00B0(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      ViewBeamParticleCollection;                        // 0x00D8(0x0018)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGbxParticleParameter>          ViewBeamParameters;                                // 0x00F0(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                         SourceTangentStrengthOverDistance;                 // 0x0100(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TargetTangentStrengthOverDistance;                 // 0x0104(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   BeamEmitterName;                                   // 0x0108(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FImpactEffectSelection                 ImpactEffect;                                      // 0x0110(0x0018)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactEffectSelection                 ExplosionEffect;                                   // 0x0128(0x0018)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	float                                         ImpactFXFrequency;                                 // 0x0140(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bShowPenetrationImpacts : 1;                       // 0x0144(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bNoImpactDecals : 1;                               // 0x0144(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bSuppressDamageModifierPresentations : 1;          // 0x0144(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_145[0x1];                                      // 0x0145(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	uint16                                        SuppressedDamageModifierPresentations;             // 0x0146(0x0002)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECollisionChannel                             TraceChannel;                                      // 0x0148(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_149[0x3];                                      // 0x0149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CollisionRadius;                                   // 0x014C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TraceInterval;                                     // 0x0150(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NumTraceSteps;                                     // 0x0154(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxLength;                                         // 0x0158(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StartLength;                                       // 0x015C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GrowSpeed;                                         // 0x0160(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ShrinkSpeed;                                       // 0x0164(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ShrinkStartTime;                                   // 0x0168(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bGrowOverTime : 1;                                 // 0x016C(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bStartGrowing : 1;                                 // 0x016C(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bShrinkOverTime : 1;                               // 0x016C(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bGrowShrinkWithTarget : 1;                         // 0x016C(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bSetTeamCollision : 1;                             // 0x016C(0x0001)(BitIndex: 0x04, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bOverrideInstigatorTeamCollisionSettings : 1;      // 0x016C(0x0001)(BitIndex: 0x05, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bCollideWithInstigatorTeam : 1;                    // 0x016C(0x0001)(BitIndex: 0x06, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bPenetratesDamageables : 1;                        // 0x016C(0x0001)(BitIndex: 0x07, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bPenetratesWorld : 1;                              // 0x016D(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bPenetratesToTargetsBestRegion : 1;                // 0x016D(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_16E[0x2];                                      // 0x016E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         damageinterval;                                    // 0x0170(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bDamageDirectTargetOnce : 1;                       // 0x0174(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_175[0x3];                                      // 0x0175(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	FGameDataHandleProperty_                      DamageData;                                        // 0x0178(0x0018)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<FGameDataHandleProperty_>              DamageModifiers;                                   // 0x0190(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	uint8                                         bEnableDamageProxy : 1;                            // 0x01A0(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bScaleDamageProxyRadiusByCurve : 1;                // 0x01A0(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_1A1[0x3];                                      // 0x01A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DamageProxyRadius;                                 // 0x01A4(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECollisionChannel                             DamageProxyTraceChannel;                           // 0x01A8(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A9[0x7];                                      // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UCurveFloat>             DamageProxyRadiusCurve;                            // 0x01B0(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSetDamageTypeFromOwner;                           // 0x01D8(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ELightBeamLock                                LockType;                                          // 0x01D9(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bCanAcquireLock : 1;                               // 0x01DA(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bAlignToLockedTarget : 1;                          // 0x01DA(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bCanLockOntoFriendlies : 1;                        // 0x01DA(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bWorldCollisionBreaksLock : 1;                     // 0x01DA(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bMaxLengthBreaksLock : 1;                          // 0x01DA(0x0001)(BitIndex: 0x04, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bSpreadWaveformIsAngle : 1;                        // 0x01DA(0x0001)(BitIndex: 0x05, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bApplyAccuracyToSpread : 1;                        // 0x01DA(0x0001)(BitIndex: 0x06, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bDisableDragWhenLocked : 1;                        // 0x01DA(0x0001)(BitIndex: 0x07, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_1DB[0x1];                                      // 0x01DB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DragSpeed;                                         // 0x01DC(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxDragRadius;                                     // 0x01E0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1E4[0x4];                                      // 0x01E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGbxVector2DWaveform>           SpreadWaveforms;                                   // 0x01E8(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                         SpreadWaveformTimeScale;                           // 0x01F8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LockOnSpreadScale;                                 // 0x01FC(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxChains;                                         // 0x0200(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxChainDepth;                                     // 0x0204(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      ChainBeam;                                         // 0x0208(0x0018)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UGpsQueryAsset>          ChainTargetsQuery;                                 // 0x0220(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ChainTargetsQueryLocationParam;                    // 0x0248(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ChainTargetsQueryMaxRangeParam;                    // 0x0250(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ChainDelay;                                        // 0x0258(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ChainInterval;                                     // 0x025C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxChainDistance;                                  // 0x0260(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ChainBreakDistance;                                // 0x0264(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bTriggerAISenses;                                  // 0x0268(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_269[0x3];                                      // 0x0269(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TriggerAISensesFrequency;                          // 0x026C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FLightBeamDef;

// ScriptStruct GbxGame.LightBeamCollisionHandlerState
// 0x0120 (0x0120 - 0x0000)
struct FLightBeamCollisionHandlerState final
{
public:
	TScriptInterface<class ILightBeamCollisionHandlerInterface> Handler;                             // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_10[0x110];                                     // 0x0010(0x0110)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FLightBeamCollisionHandlerState;

// ScriptStruct GbxGame.LightBeamGameDataCategory_DONTUSE
// 0x0001 (0x0001 - 0x0000)
struct FLightBeamGameDataCategory_DONTUSE final
{
public:
	uint8                                         Pad_0[0x1];                                        // 0x0000(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FLightBeamGameDataCategory_DONTUSE;

// ScriptStruct GbxGame.PostLightBeamTickFunction
// 0x0008 (0x0030 - 0x0028)
struct FPostLightBeamTickFunction final : public FTickFunction
{
public:
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FPostLightBeamTickFunction;

// ScriptStruct GbxGame.LightBeamBatchTickFunction
// 0x0010 (0x0038 - 0x0028)
struct FLightBeamBatchTickFunction final : public FTickFunction
{
public:
	uint8                                         Pad_28[0x10];                                      // 0x0028(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FLightBeamBatchTickFunction;

// ScriptStruct GbxGame.LightBeamQueryData
// 0x0038 (0x0038 - 0x0000)
struct FLightBeamQueryData final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ELightBeamQueryActorType                      ActorType;                                         // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 OtherActor;                                        // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      BeamDef;                                           // 0x0018(0x0018)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   Name;                                              // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FLightBeamQueryData;

// ScriptStruct GbxGame.ZoomHandlerValueResolver
// 0x0008 (0x0010 - 0x0008)
struct FZoomHandlerValueResolver final : public FAttributeValueResolver
{
public:
	EZoomHandlerValueResolverType                 Value;                                             // 0x0008(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FZoomHandlerValueResolver;

// ScriptStruct GbxGame.LightProjectileDef
// 0x0798 (0x07B0 - 0x0018)
struct FLightProjectileDef : public FGbxDef
{
public:
	TSoftClassPtr<class UClass>                   ProjectileClass;                                   // 0x0018(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSoftClassPtr<class UClass>>           Scripts;                                           // 0x0040(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	float                                         Lifetime;                                          // 0x0050(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseAttachedLifetime;                              // 0x0054(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AttachedLifetime;                                  // 0x0058(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInheritTimeDilation;                              // 0x005C(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FLightProjectileTimedEvent>     TimedEvents;                                       // 0x0060(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UObject>                 BodyMesh;                                          // 0x0070(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_98[0x8];                                       // 0x0098(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             BodyTransform;                                     // 0x00A0(0x0060)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ELightProjectileTracerThrottleLevel           MaxTracerThrottleLevel;                            // 0x0100(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UFXSystemAsset>          Tracer;                                            // 0x0108(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGbxParticleParameter>          TracerParameters;                                  // 0x0130(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      TracerCollection;                                  // 0x0140(0x0018)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   TracerBodySocket;                                  // 0x0158(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                             TracerTransform;                                   // 0x0160(0x0060)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      TracerRelevanceData;                               // 0x01C0(0x0018)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FImpactEffectSelection                 ImpactEffect;                                      // 0x01D8(0x0018)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactEffectSelection                 ExplosionEffect;                                   // 0x01F0(0x0018)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         bPlayImpactOnExplode : 1;                          // 0x0208(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bSuppressDamageModifierPresentations : 1;          // 0x0208(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_209[0x1];                                      // 0x0209(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	uint16                                        SuppressedDamageModifierPresentations;             // 0x020A(0x0002)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_20C[0x4];                                      // 0x020C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UFXSystemAsset>          AttachedParticle;                                  // 0x0210(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGbxParticleParameter>          AttachedParticleParameters;                        // 0x0238(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      AttachedParticleCollection;                        // 0x0248(0x0018)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   AttachedBodySocket;                                // 0x0260(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_268[0x8];                                      // 0x0268(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             AttachedTransform;                                 // 0x0270(0x0060)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BounceEffectPeriod;                                // 0x02D0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         speed;                                             // 0x02D4(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinSpeed;                                          // 0x02D8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         maxspeed;                                          // 0x02DC(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               InitialVelocityOffset;                             // 0x02E0(0x0018)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                         Acceleration;                                      // 0x02F8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GravityScale;                                      // 0x02FC(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AirFriction;                                       // 0x0300(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxReflections;                                    // 0x0304(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bShouldRotate : 1;                                 // 0x0308(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_309[0x7];                                      // 0x0309(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               RotationRate;                                      // 0x0310(0x0018)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         bShouldBounce : 1;                                 // 0x0328(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_329[0x3];                                      // 0x0329(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         BounceFriction;                                    // 0x032C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Bounciness;                                        // 0x0330(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bBounceOffDamageables : 1;                         // 0x0334(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bBounceInStraightLine : 1;                         // 0x0334(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_335[0x3];                                      // 0x0335(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FProjectileBounceInPlaceData           BounceInPlace;                                     // 0x0338(0x0008)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FProjectileBounceEvenlyData            BounceEvenly;                                      // 0x0340(0x000C)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         bEnableGameplayBounce : 1;                         // 0x034C(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_34D[0x3];                                      // 0x034D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FProjectileGameplayBounceData          GameplayBounce;                                    // 0x0350(0x0008)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         bStopAtLastGameplayBounce : 1;                     // 0x0358(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bExplodeAtLastGameplayBounce : 1;                  // 0x0358(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	ECollisionChannel                             TraceChannel;                                      // 0x0359(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECollisionChannel                             ProxyTraceChannel;                                 // 0x035A(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35B[0x1];                                      // 0x035B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TraceInterval;                                     // 0x035C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CollisionRadius;                                   // 0x0360(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ProxyRadius;                                       // 0x0364(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bCollideWithInstigator : 1;                        // 0x0368(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bSetTeamCollision : 1;                             // 0x0368(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bOverrideInstigatorTeamCollisionSettings : 1;      // 0x0368(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bCollideWithInstigatorTeam : 1;                    // 0x0368(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bPenetratesDamageables : 1;                        // 0x0368(0x0001)(BitIndex: 0x04, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bPenetratesWorld : 1;                              // 0x0368(0x0001)(BitIndex: 0x05, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bCollideWithSource : 1;                            // 0x0368(0x0001)(BitIndex: 0x06, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bEnableProxyCollisionEvents : 1;                   // 0x0368(0x0001)(BitIndex: 0x07, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bPassThroughInvulnerableHitRegions : 1;            // 0x0369(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_36A[0x2];                                      // 0x036A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CollideWithSourceDelay;                            // 0x036C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bCanBeDamaged : 1;                                 // 0x0370(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bCanBeDamagedByInstigator : 1;                     // 0x0370(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bNeverBlockProjectiles : 1;                        // 0x0370(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_371[0x3];                                      // 0x0371(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DamageableRadius;                                  // 0x0374(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bTargetedRadiusDamage : 1;                         // 0x0378(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_379[0x7];                                      // 0x0379(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDamageSourceContainer                 DamageSource;                                      // 0x0380(0x0040)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      DamageType;                                        // 0x03C0(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDamageTags                            DamageTags;                                        // 0x03D8(0x0020)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      DamageData;                                        // 0x03F8(0x0018)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxAttributeInit                      damageradius;                                      // 0x0410(0x0050)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	float                                         ImpactDamageOffset;                                // 0x0460(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_464[0x4];                                      // 0x0464(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAttributeInit                      AttachDamageScale;                                 // 0x0468(0x0050)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FGbxAttributeInit                      ImpactedActorDamageScale;                          // 0x04B8(0x0050)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	TArray<FGameDataHandleProperty_>              DamageModifiers;                                   // 0x0508(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                          bSetDamageTypeFromOwner;                           // 0x0518(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bExplodeAfterLifetime : 1;                         // 0x0519(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bCanTriggerBulletDodges : 1;                       // 0x0519(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_51A[0x6];                                      // 0x051A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLightProjectileAudioProperties        AudioProperties;                                   // 0x0520(0x0078)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         bAttachOnImpact : 1;                               // 0x0598(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	struct FProjectileAttachFilterData            AttachToOnImpact;                                  // 0x0599(0x0008)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	EProjectileDetachAction                       AttachOnImpactDetachAction;                        // 0x05A1(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bHideBodyOnAttach : 1;                             // 0x05A2(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bHideTracerOnAttach : 1;                           // 0x05A2(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_5A3[0x1];                                      // 0x05A3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   HideTracerEmitterOnAttach;                         // 0x05A4(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HideTracerOnAttachDelay;                           // 0x05AC(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bClampVerticalAttachAngle;                         // 0x05B0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5B1[0x3];                                      // 0x05B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FNumericRange                          AttachAngleRange;                                  // 0x05B4(0x0008)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	float                                         WorldAttachOffset;                                 // 0x05BC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bStartHoming : 1;                                  // 0x05C0(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bStartDrunkenMovement : 1;                         // 0x05C0(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_5C1[0x7];                                      // 0x05C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              HomingDelay;                                       // 0x05C8(0x0038)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FProjectileHomingData                  Homing;                                            // 0x0600(0x00B8)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGbxParam                              DrunkenMovementDelay;                              // 0x06B8(0x0038)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FProjectileDrunkenMovementData         DrunkenMovement;                                   // 0x06F0(0x0040)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FGbxInlineStruct>               MovementModifiers;                                 // 0x0730(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	uint8                                         bOverrideAimAssistSettings : 1;                    // 0x0740(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_741[0x7];                                      // 0x0741(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              MagnetismTurnRate;                                 // 0x0748(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxMagnetismDeflection;                            // 0x0758(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_75C[0x4];                                      // 0x075C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<uint8, FGameDataHandleProperty_>         FiringPatternProjectileOverrides;                  // 0x0760(0x0050)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FLightProjectileDef;

// ScriptStruct GbxGame.LightProjectileImpactState
// 0x0020 (0x0020 - 0x0000)
struct FLightProjectileImpactState final
{
public:
	bool                                          bPlayEffect;                                       // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector_NetQuantize                    Location;                                          // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FLightProjectileImpactState;

// ScriptStruct GbxGame.LightProjectileMeshPoolData
// 0x0018 (0x0018 - 0x0000)
struct FLightProjectileMeshPoolData final
{
public:
	class UObject*                                Template;                                          // 0x0000(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMeshComponent*                         Component;                                         // 0x0008(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_10[0x8];                                       // 0x0010(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FLightProjectileMeshPoolData;

// ScriptStruct GbxGame.LightProjectileSpawnData
// 0x01C0 (0x01C8 - 0x0008)
struct FLightProjectileSpawnData final : public FGbxHasStructType
{
public:
	FGameDataHandleProperty_                      definition;                                        // 0x0008(0x0018)(BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Location;                                          // 0x0020(0x0018)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Direction;                                         // 0x0038(0x0018)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                EndLocation;                                       // 0x0050(0x0018)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Flags;                                             // 0x0068(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AActor>                  instigator;                                        // 0x006C(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AActor>                  Source;                                            // 0x0074(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         damage;                                            // 0x007C(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AActor>                  DamageCauser;                                      // 0x0080(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      DamageType;                                        // 0x0088(0x0018)(BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDamageSourceContainer                 DamageSource;                                      // 0x00A0(0x0040)(BlueprintVisible, NativeAccessSpecifierPublic)
	float                                         damageradius;                                      // 0x00E0(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FForceSelection                        ImpactForce;                                       // 0x00E8(0x0048)(BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactEffectSelection                 ImpactEffect;                                      // 0x0130(0x0018)(BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AActor>                  target;                                            // 0x0148(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class USceneComponent>         TargetComponent;                                   // 0x0150(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   TargetSocket;                                      // 0x0158(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                TargetOffset;                                      // 0x0160(0x0018)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseTargetPerception;                              // 0x0178(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ELightProjectileSpeedModifierType             SpeedModifierType;                                 // 0x0179(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_17A[0x2];                                      // 0x017A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SpeedModifier;                                     // 0x017C(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GravityScaleOverride;                              // 0x0180(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         FiringPatternID;                                   // 0x0184(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_185[0x3];                                      // 0x0185(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Name;                                              // 0x0188(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDamageTags                            DamageTags;                                        // 0x0190(0x0020)(BlueprintVisible, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B0[0x14];                                     // 0x01B0(0x0014)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ProxyRadius;                                       // 0x01C4(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FLightProjectileSpawnData;

// ScriptStruct GbxGame.LootConfigSelectorStateDef
// 0x0018 (0x0040 - 0x0028)
struct FLootConfigSelectorStateDef final : public FDefSelectorStateBaseDef
{
public:
	FGbxDefPtrProperty_                           LootConfig;                                        // 0x0028(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FLootConfigSelectorStateDef;

// ScriptStruct GbxGame.MissionActionCondition_Encounter
// 0x0010 (0x0020 - 0x0010)
struct FMissionActionCondition_Encounter final : public FMissionActionCondition
{
public:
	struct FMissionAliasRef                       Encounter;                                         // 0x0010(0x000C)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	EMissionActionConditionEncounterStateQuery    QueryType;                                         // 0x001C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FMissionActionCondition_Encounter;

// ScriptStruct GbxGame.MissionActionCondition_FactExpression
// 0x0010 (0x0020 - 0x0010)
struct FMissionActionCondition_FactExpression final : public FMissionActionCondition
{
public:
	struct FFactExpression                        Expression;                                        // 0x0010(0x0010)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FMissionActionCondition_FactExpression;

// ScriptStruct GbxGame.MissionActionCondition_IsReplayActive
// 0x0000 (0x0010 - 0x0010)
struct FMissionActionCondition_IsReplayActive final : public FMissionActionCondition
{
};
DUMPER7_ASSERTS_FMissionActionCondition_IsReplayActive;

// ScriptStruct GbxGame.MissionActionCondition_MissionChoice
// 0x0010 (0x0020 - 0x0010)
struct FMissionActionCondition_MissionChoice final : public FMissionActionCondition
{
public:
	class FName                                   Choice;                                            // 0x0010(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   Option;                                            // 0x0018(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FMissionActionCondition_MissionChoice;

// ScriptStruct GbxGame.MissionActionCondition_OnLoadFilter
// 0x0008 (0x0018 - 0x0010)
struct FMissionActionCondition_OnLoadFilter final : public FMissionActionCondition
{
public:
	EMissionActionOnLoadFilter                    filter;                                            // 0x0010(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FMissionActionCondition_OnLoadFilter;

// ScriptStruct GbxGame.MissionActionCondition_PreCompletionFilter
// 0x0008 (0x0018 - 0x0010)
struct FMissionActionCondition_PreCompletionFilter final : public FMissionActionCondition
{
public:
	EMissionActionPreCompletedFilter              filter;                                            // 0x0010(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FMissionActionCondition_PreCompletionFilter;

// ScriptStruct GbxGame.MissionActionType_AddToTimer
// 0x0068 (0x0088 - 0x0020)
struct FMissionActionType_AddToTimer final : public FMissionActionTypeBase
{
public:
	struct FGbxAttributeInit                      TimeToAdd;                                         // 0x0020(0x0050)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FSToken                                Objective;                                         // 0x0070(0x000C)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   OptionalTimerTag;                                  // 0x007C(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FMissionActionType_AddToTimer;

// ScriptStruct GbxGame.MissionActionType_AssignTask
// 0x0010 (0x0030 - 0x0020)
struct FMissionActionType_AssignTask final : public FMissionActionTypeBase
{
public:
	struct FMissionAliasRef                       TaskAlias;                                         // 0x0020(0x000C)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FMissionActionType_AssignTask;

// ScriptStruct GbxGame.MissionActionType_BinderDisable
// 0x0010 (0x0030 - 0x0020)
struct FMissionActionType_BinderDisable final : public FMissionActionTypeBase
{
public:
	struct FSToken                                BinderName;                                        // 0x0020(0x000C)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FMissionActionType_BinderDisable;

// ScriptStruct GbxGame.MissionActionType_Delay
// 0x0008 (0x0028 - 0x0020)
struct FMissionActionType_Delay final : public FMissionActionTypeBase
{
public:
	float                                         delay;                                             // 0x0020(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FMissionActionType_Delay;

// ScriptStruct GbxGame.MissionActionType_DialogHint
// 0x0010 (0x0030 - 0x0020)
struct FMissionActionType_DialogHint final : public FMissionActionTypeBase
{
public:
	struct FMissionAliasRef                       SourceActor;                                       // 0x0020(0x000C)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FMissionActionType_DialogHint;

// ScriptStruct GbxGame.MissionActionType_EndMoment
// 0x0030 (0x0050 - 0x0020)
struct FMissionActionType_EndMoment final : public FMissionActionTypeBase
{
public:
	TSoftObjectPtr<class UGbxMomentData>          Moment;                                            // 0x0020(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOnlyIfStartedByThisMission;                       // 0x0048(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FMissionActionType_EndMoment;

// ScriptStruct GbxGame.MissionActionType_FactChange
// 0x0078 (0x0098 - 0x0020)
struct FMissionActionType_FactChange final : public FMissionActionTypeBase
{
public:
	uint8                                         Pad_20[0x70];                                      // 0x0020(0x0070)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bAddToEndStates;                                   // 0x0090(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FMissionActionType_FactChange;

// ScriptStruct GbxGame.MissionActionType_GameModeModuleEvent
// 0x00C8 (0x00E8 - 0x0020)
struct FMissionActionType_GameModeModuleEvent final : public FMissionActionTypeBase
{
public:
	FGbxDefPtrProperty_                           EventDef;                                          // 0x0020(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxGameModeModuleEventParams          EventParams;                                       // 0x0038(0x0050)(Edit, NativeAccessSpecifierPublic)
	EMissionAction_ModuleEvent_Target             EventTarget;                                       // 0x0088(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ModuleName;                                        // 0x008C(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxGameModeModuleTags                 tags;                                              // 0x0098(0x0020)(Edit, NativeAccessSpecifierPublic)
	ENexusBitSetOperator                          Op;                                                // 0x00B8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UGbxGameModeModuleHost>  type;                                              // 0x00C0(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FMissionActionType_GameModeModuleEvent;

// ScriptStruct GbxGame.MissionActionType_PlayMoment
// 0x0040 (0x0060 - 0x0020)
struct FMissionActionType_PlayMoment final : public FMissionActionTypeBase
{
public:
	TSoftObjectPtr<class UGbxMomentData>          Moment;                                            // 0x0020(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFactChange>                    MomentFactChanges;                                 // 0x0048(0x0010)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	EMissionActionBlockingBehavior                BlockingBehavior;                                  // 0x0058(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAddFactChangesToEndStates;                        // 0x0059(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FMissionActionType_PlayMoment;

// ScriptStruct GbxGame.SpawnModifier_StatRatio
// 0x0160 (0x0168 - 0x0008)
struct FSpawnModifier_StatRatio final : public FSpawnModifier
{
public:
	struct FGameplayTagContainer                  tags;                                              // 0x0008(0x0020)(Edit, NativeAccessSpecifierPrivate)
	bool                                          bTagsMustBeExact;                                  // 0x0028(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  ExcludeTags;                                       // 0x0030(0x0020)(Edit, NativeAccessSpecifierPrivate)
	struct FFactAddress                           GameStat;                                          // 0x0050(0x0038)(Edit, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FFactAddress                           SpawnedStat;                                       // 0x0088(0x0038)(Edit, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGbxParam                              Ratio;                                             // 0x00C0(0x0038)(Edit, NativeAccessSpecifierPrivate)
	struct FGbxParam                              Slope;                                             // 0x00F8(0x0038)(Edit, NativeAccessSpecifierPrivate)
	bool                                          bFilterIfZeroWeight;                               // 0x0130(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_131[0x37];                                     // 0x0131(0x0037)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FSpawnModifier_StatRatio;

// ScriptStruct GbxGame.MissionActionType_PlayTransientMoment
// 0x0020 (0x0040 - 0x0020)
struct FMissionActionType_PlayTransientMoment final : public FMissionActionTypeBase
{
public:
	uint8                                         Pad_20[0x20];                                      // 0x0020(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FMissionActionType_PlayTransientMoment;

// ScriptStruct GbxGame.MissionActionType_RemoveTask
// 0x0010 (0x0030 - 0x0020)
struct FMissionActionType_RemoveTask final : public FMissionActionTypeBase
{
public:
	struct FMissionAliasRef                       TaskAlias;                                         // 0x0020(0x000C)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FMissionActionType_RemoveTask;

// ScriptStruct GbxGame.SpawnPointBodySettings
// 0x0000 (0x0228 - 0x0228)
struct FSpawnPointBodySettings : public FGbxBodySettings
{
};
DUMPER7_ASSERTS_FSpawnPointBodySettings;

// ScriptStruct GbxGame.MissionBinderTargetState
// 0x0070 (0x0078 - 0x0008)
struct FMissionBinderTargetState : public FGbxHasStructType
{
public:
	uint8                                         Pad_8[0x70];                                       // 0x0008(0x0070)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FMissionBinderTargetState;

// ScriptStruct GbxGame.MissionBinderTargetState_EncounterSpawnedActor
// 0x0050 (0x00C8 - 0x0078)
struct FMissionBinderTargetState_EncounterSpawnedActor final : public FMissionBinderTargetState
{
public:
	uint8                                         Pad_78[0x50];                                      // 0x0078(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FMissionBinderTargetState_EncounterSpawnedActor;

// ScriptStruct GbxGame.UnlockableLedgerState
// 0x0148 (0x0148 - 0x0000)
struct alignas(0x08) FUnlockableLedgerState final
{
public:
	uint8                                         Pad_0[0x148];                                      // 0x0000(0x0148)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FUnlockableLedgerState;

// ScriptStruct GbxGame.MissionBinderTargetState_PlayerCharacter
// 0x0020 (0x0098 - 0x0078)
struct FMissionBinderTargetState_PlayerCharacter final : public FMissionBinderTargetState
{
public:
	uint8                                         Pad_78[0x20];                                      // 0x0078(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FMissionBinderTargetState_PlayerCharacter;

// ScriptStruct GbxGame.MissionBinderTargetState_RegistryActor
// 0x0040 (0x00B8 - 0x0078)
struct FMissionBinderTargetState_RegistryActor final : public FMissionBinderTargetState
{
public:
	uint8                                         Pad_78[0x40];                                      // 0x0078(0x0040)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FMissionBinderTargetState_RegistryActor;

// ScriptStruct GbxGame.MissionBinderTargetState_SpawnedActor
// 0x0050 (0x00C8 - 0x0078)
struct FMissionBinderTargetState_SpawnedActor final : public FMissionBinderTargetState
{
public:
	uint8                                         Pad_78[0x50];                                      // 0x0078(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FMissionBinderTargetState_SpawnedActor;

// ScriptStruct GbxGame.MissionBinderTarget_SpawnedActor
// 0x0010 (0x0018 - 0x0008)
struct FMissionBinderTarget_SpawnedActor final : public FMissionBinderTarget
{
public:
	struct FMissionAliasRef                       Spawner;                                           // 0x0008(0x000C)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FMissionBinderTarget_SpawnedActor;

// ScriptStruct GbxGame.ActivityAreaResultContainer
// 0x0050 (0x0050 - 0x0000)
struct FActivityAreaResultContainer final
{
public:
	TSet<class FString>                           Addresses;                                         // 0x0000(0x0050)(Edit, EditConst, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FActivityAreaResultContainer;

// ScriptStruct GbxGame.MissionChoice
// 0x0130 (0x0130 - 0x0000)
struct FMissionChoice final
{
public:
	class FName                                   Name;                                              // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMissionChoiceType                            type;                                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         priority;                                          // 0x000C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxAreaAmount;                                     // 0x0010(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FMissionChoiceAlias>            aliases;                                           // 0x0018(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	struct FNexusBitSet                           RequiredActivityAreaTags;                          // 0x0028(0x0020)(Edit, NativeAccessSpecifierPublic)
	struct FNexusBitSet                           ExcludedActivityAreaTags;                          // 0x0048(0x0020)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              DistanceRange;                                     // 0x0068(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              DistanceRangeFromOtherChoice;                      // 0x00A0(0x0038)(Edit, NativeAccessSpecifierPublic)
	struct FGbxParam                              DistanceFromActivityRequester;                     // 0x00D8(0x0038)(Edit, NativeAccessSpecifierPublic)
	class FName                                   InRangeFromChoiceName;                             // 0x0110(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      StampLayoutFilter;                                 // 0x0118(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FMissionChoice;

// ScriptStruct GbxGame.MissionDependencyCondition_Compound
// 0x0018 (0x0020 - 0x0008)
struct FMissionDependencyCondition_Compound final : public FMissionDependencyCondition
{
public:
	EMissionDependencyConditionCompoundOp         Operator;                                          // 0x0008(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGbxInlineStruct>               Conditions;                                        // 0x0010(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FMissionDependencyCondition_Compound;

// ScriptStruct GbxGame.MissionDependencyConditionState_FactExpression
// 0x0010 (0x0060 - 0x0050)
struct FMissionDependencyConditionState_FactExpression final : public FMissionDependencyConditionState
{
public:
	uint8                                         Pad_50[0x10];                                      // 0x0050(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FMissionDependencyConditionState_FactExpression;

// ScriptStruct GbxGame.MissionDependencyCondition_FactExpression
// 0x0010 (0x0018 - 0x0008)
struct FMissionDependencyCondition_FactExpression final : public FMissionDependencyCondition
{
public:
	struct FFactExpression                        Expression;                                        // 0x0008(0x0010)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FMissionDependencyCondition_FactExpression;

// ScriptStruct GbxGame.MissionDependencyConditionState_Mission
// 0x0040 (0x0090 - 0x0050)
struct FMissionDependencyConditionState_Mission final : public FMissionDependencyConditionState
{
public:
	uint8                                         Pad_50[0x40];                                      // 0x0050(0x0040)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FMissionDependencyConditionState_Mission;

// ScriptStruct GbxGame.MissionDependencyCondition_Mission
// 0x0020 (0x0028 - 0x0008)
struct FMissionDependencyCondition_Mission final : public FMissionDependencyCondition
{
public:
	FGbxDefPtrProperty_                           mission;                                           // 0x0008(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMissionDependencyConditionMissionStatus      ConditionStatus;                                   // 0x0020(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FMissionDependencyCondition_Mission;

// ScriptStruct GbxGame.MissionDependencyConditionState_MissionSet
// 0x0040 (0x0090 - 0x0050)
struct FMissionDependencyConditionState_MissionSet final : public FMissionDependencyConditionState
{
public:
	uint8                                         Pad_50[0x40];                                      // 0x0050(0x0040)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FMissionDependencyConditionState_MissionSet;

// ScriptStruct GbxGame.MissionDependencyCondition_MissionSet
// 0x0020 (0x0028 - 0x0008)
struct FMissionDependencyCondition_MissionSet final : public FMissionDependencyCondition
{
public:
	FGbxDefPtrProperty_                           missionset;                                        // 0x0008(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMissionDependencyConditionMissionSetStatus   ConditionStatus;                                   // 0x0020(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FMissionDependencyCondition_MissionSet;

// ScriptStruct GbxGame.MissionDependencyConditionState_Objective
// 0x0040 (0x0090 - 0x0050)
struct FMissionDependencyConditionState_Objective final : public FMissionDependencyConditionState
{
public:
	uint8                                         Pad_50[0x40];                                      // 0x0050(0x0040)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FMissionDependencyConditionState_Objective;

// ScriptStruct GbxGame.MissionEntryPointDebugInfo
// 0x0038 (0x0038 - 0x0000)
struct FMissionEntryPointDebugInfo final
{
public:
	bool                                          bUseDebugStartLocation;                            // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                DebugStartLocation;                                // 0x0008(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               DebugStartRotation;                                // 0x0020(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FMissionEntryPointDebugInfo;

// ScriptStruct GbxGame.MissionEntryPoint
// 0x0150 (0x0150 - 0x0000)
struct FMissionEntryPoint final
{
public:
	int32                                         EntryId;                                           // 0x0000(0x0004)(Edit, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSToken                                Objective;                                         // 0x0004(0x000C)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMissionDisplayText                    MissionDescription;                                // 0x0010(0x0060)(Edit, NativeAccessSpecifierPublic)
	struct FMissionDisplayText                    ShortMissionDescription;                           // 0x0070(0x0060)(Edit, NativeAccessSpecifierPublic)
	bool                                          bIsDefaultReplayEntry;                             // 0x00D0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMissionActionSequenceDef              OnEntryChosen;                                     // 0x00D8(0x0028)(Edit, NativeAccessSpecifierPublic)
	struct FGbxInlineStruct                       MissionGiver;                                      // 0x0100(0x0018)(Edit, NativeAccessSpecifierPublic)
	struct FMissionEntryPointDebugInfo            DebugInfo;                                         // 0x0118(0x0038)(Edit, NoDestructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FMissionEntryPoint;

// ScriptStruct GbxGame.MissionGameDataCategories_DONTUSE
// 0x0001 (0x0001 - 0x0000)
struct FMissionGameDataCategories_DONTUSE final
{
public:
	uint8                                         Pad_0[0x1];                                        // 0x0000(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FMissionGameDataCategories_DONTUSE;

// ScriptStruct GbxGame.MissionGiverRecord
// 0x0118 (0x0120 - 0x0008)
struct FMissionGiverRecord : public FGbxHasStructType
{
public:
	uint8                                         Pad_8[0x118];                                      // 0x0008(0x0118)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FMissionGiverRecord;

// ScriptStruct GbxGame.MissionGiverType_ActorBase
// 0x0010 (0x0028 - 0x0018)
struct FMissionGiverType_ActorBase : public FMissionGiverTypeBase
{
public:
	struct FFactExpression                        Condition;                                         // 0x0018(0x0010)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FMissionGiverType_ActorBase;

// ScriptStruct GbxGame.MissionGiverCallout
// 0x0078 (0x0078 - 0x0000)
struct FMissionGiverCallout final
{
public:
	TSoftObjectPtr<class UGbxMomentData>          Moment;                                            // 0x0000(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxAttributeInit                      Weight;                                            // 0x0028(0x0050)(Edit, NoDestructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FMissionGiverCallout;

// ScriptStruct GbxGame.MissionGiverType_Basic
// 0x0060 (0x0088 - 0x0028)
struct FMissionGiverType_Basic final : public FMissionGiverType_ActorBase
{
public:
	struct FMissionAliasRef                       actoralias;                                        // 0x0028(0x000C)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bOverrideCalloutDistanceHorz;                      // 0x0034(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CalloutDistanceHorzOverride;                       // 0x0038(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOverrideCalloutDistanceVert;                      // 0x003C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CalloutDistanceVertOverride;                       // 0x0040(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FMissionAliasRef>               ProximityCalloutTriggers;                          // 0x0048(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_58[0x10];                                      // 0x0058(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FMissionGiverCallout>           Callouts;                                          // 0x0068(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FMissionGiverCallout>           InteractCallouts;                                  // 0x0078(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FMissionGiverType_Basic;

// ScriptStruct GbxGame.MissionGiverType_EnemyDropPickup
// 0x0070 (0x0098 - 0x0028)
struct FMissionGiverType_EnemyDropPickup final : public FMissionGiverType_ActorBase
{
public:
	uint8                                         Pad_28[0xC];                                       // 0x0028(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMissionAliasRef                       Spawner;                                           // 0x0034(0x000C)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FMissionGbxDef                         itempickupdef;                                     // 0x0040(0x0030)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FMissionActionSequenceDef              OnEnemyDiedActions;                                // 0x0070(0x0028)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FMissionGiverType_EnemyDropPickup;

// ScriptStruct GbxGame.ReplicatedDynamicMissionGiverRemove
// 0x0030 (0x0040 - 0x0010)
struct FReplicatedDynamicMissionGiverRemove final : public FReplicatedMissionMessage
{
public:
	uint8                                         Pad_10[0x30];                                      // 0x0010(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FReplicatedDynamicMissionGiverRemove;

// ScriptStruct GbxGame.MissionGiverType_FactCondition
// 0x0010 (0x0038 - 0x0028)
struct FMissionGiverType_FactCondition final : public FMissionGiverType_FactConditionBase
{
public:
	struct FFactExpression                        ActivateCondition;                                 // 0x0028(0x0010)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FMissionGiverType_FactCondition;

// ScriptStruct GbxGame.RegisteredMissionGiverType_FactConditionBase
// 0x0010 (0x0198 - 0x0188)
struct FRegisteredMissionGiverType_FactConditionBase final : public FRegisteredMissionGiverType
{
public:
	uint8                                         Pad_188[0x10];                                     // 0x0188(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FRegisteredMissionGiverType_FactConditionBase;

// ScriptStruct GbxGame.ReplicatedMissionStateReset
// 0x0008 (0x0018 - 0x0010)
struct FReplicatedMissionStateReset final : public FReplicatedMissionMessage
{
public:
	uint8                                         Pad_10[0x8];                                       // 0x0010(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FReplicatedMissionStateReset;

// ScriptStruct GbxGame.MissionGraphAlias
// 0x0030 (0x0030 - 0x0000)
struct FMissionGraphAlias final
{
public:
	struct FSToken                                alias;                                             // 0x0000(0x000C)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                   type;                                              // 0x000C(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxInlineStruct                       AliasData;                                         // 0x0018(0x0018)(Edit, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FMissionGraphAlias;

// ScriptStruct GbxGame.ScreenParticleRecord
// 0x0038 (0x0038 - 0x0000)
struct FScreenParticleRecord final
{
public:
	uint8                                         Pad_0[0x8];                                        // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UFXSystemAsset*                         Template;                                          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFXSystemComponent*                     Component;                                         // 0x0010(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_18[0x20];                                      // 0x0018(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FScreenParticleRecord;

// ScriptStruct GbxGame.MissionGraphAliasTypeData_GenericFact
// 0x0038 (0x0050 - 0x0018)
struct FMissionGraphAliasTypeData_GenericFact final : public FMissionGraphAliasTypeData_FactBase
{
public:
	struct FFactAddress                           FactAddress;                                       // 0x0018(0x0038)(Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FMissionGraphAliasTypeData_GenericFact;

// ScriptStruct GbxGame.MissionTaskTags
// 0x0000 (0x0020 - 0x0020)
struct FMissionTaskTags final : public FNexusBitSet
{
};
DUMPER7_ASSERTS_FMissionTaskTags;

// ScriptStruct GbxGame.MissionTaskDef
// 0x0068 (0x0080 - 0x0018)
struct FMissionTaskDef final : public FGbxDef
{
public:
	struct FGbxInlineStruct                       TaskType;                                          // 0x0018(0x0018)(Edit, NativeAccessSpecifierPublic)
	bool                                          bIsBounty;                                         // 0x0030(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   DisplayText;                                       // 0x0038(0x0010)(Edit, NativeAccessSpecifierPublic)
	bool                                          bOverrideSortOrder;                                // 0x0048(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         OverrideSortOrder;                                 // 0x004C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsTransient;                                      // 0x0050(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMissionTaskTags                       MetadataTags;                                      // 0x0058(0x0020)(Edit, NativeAccessSpecifierPublic)
	bool                                          bAutoFinishAfterDelay;                             // 0x0078(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AutoFinishSeconds;                                 // 0x007C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FMissionTaskDef;

// ScriptStruct GbxGame.MissionGraphAliasTypeData_TaskBase
// 0x00A0 (0x00B8 - 0x0018)
struct FMissionGraphAliasTypeData_TaskBase : public FMissionGraphAliasTypeData_FactBase
{
public:
	EMissionTaskDefLocation                       TaskDefLocation;                                   // 0x0018(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FGbxDefPtrProperty_                           ExternalTaskDef;                                   // 0x0020(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMissionTaskDef                        InlineTaskDef;                                     // 0x0038(0x0080)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FMissionGraphAliasTypeData_TaskBase;

// ScriptStruct GbxGame.MissionTaskTypeDef
// 0x0000 (0x0008 - 0x0008)
struct FMissionTaskTypeDef : public FGbxHasStructType
{
};
DUMPER7_ASSERTS_FMissionTaskTypeDef;

// ScriptStruct GbxGame.MissionGraphAliasTypeData_DynamicTask
// 0x0000 (0x00B8 - 0x00B8)
struct FMissionGraphAliasTypeData_DynamicTask final : public FMissionGraphAliasTypeData_TaskBase
{
};
DUMPER7_ASSERTS_FMissionGraphAliasTypeData_DynamicTask;

// ScriptStruct GbxGame.MissionGraphAliasTypeData_StaticTask
// 0x0010 (0x00C8 - 0x00B8)
struct FMissionGraphAliasTypeData_StaticTask final : public FMissionGraphAliasTypeData_TaskBase
{
public:
	bool                                          bOverrideTaskHandleName;                           // 0x00B8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSToken                                TaskHandle;                                        // 0x00BC(0x000C)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FMissionGraphAliasTypeData_StaticTask;

// ScriptStruct GbxGame.MissionGraphAliasTypeData_GbxDef
// 0x0018 (0x0020 - 0x0008)
struct FMissionGraphAliasTypeData_GbxDef final : public FMissionGraphAliasTypeData
{
public:
	FGbxDefPtrProperty_                           def;                                               // 0x0008(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FMissionGraphAliasTypeData_GbxDef;

// ScriptStruct GbxGame.MissionGraphAliasTypeData_AliasTemplate
// 0x0018 (0x0020 - 0x0008)
struct FMissionGraphAliasTypeData_AliasTemplate final : public FMissionGraphAliasTypeData
{
public:
	struct FGbxInlineStruct                       data;                                              // 0x0008(0x0018)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FMissionGraphAliasTypeData_AliasTemplate;

// ScriptStruct GbxGame.MissionGraphAliasTypeData_Float
// 0x0008 (0x0010 - 0x0008)
struct FMissionGraphAliasTypeData_Float final : public FMissionGraphAliasTypeData
{
public:
	float                                         Value;                                             // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FMissionGraphAliasTypeData_Float;

// ScriptStruct GbxGame.MissionGraphAliasTypeData_Name
// 0x0008 (0x0010 - 0x0008)
struct FMissionGraphAliasTypeData_Name final : public FMissionGraphAliasTypeData
{
public:
	class FName                                   Value;                                             // 0x0008(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FMissionGraphAliasTypeData_Name;

// ScriptStruct GbxGame.MissionGraphAliasTypeData_DialogEnumValue
// 0x0008 (0x0010 - 0x0008)
struct FMissionGraphAliasTypeData_DialogEnumValue final : public FMissionGraphAliasTypeData
{
public:
	struct FDialogEnumValue                       Value;                                             // 0x0008(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FMissionGraphAliasTypeData_DialogEnumValue;

// ScriptStruct GbxGame.MissionInstanceHandle
// 0x000C (0x000C - 0x0000)
struct FMissionInstanceHandle final
{
public:
	struct FSToken                                Ident;                                             // 0x0000(0x000C)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FMissionInstanceHandle;

// ScriptStruct GbxGame.MissionLifeCyclePlan_Explicit
// 0x0018 (0x0020 - 0x0008)
struct FMissionLifeCyclePlan_Explicit final : public FGbxHasStructType
{
public:
	TArray<struct FMissionLifeCyclePlan_ExplicitSet> ActiveSets;                                     // 0x0008(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bOverrideGameMode;                                 // 0x0018(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FMissionLifeCyclePlan_Explicit;

// ScriptStruct GbxGame.MissionFilterOptions_Explicit
// 0x00A8 (0x00B0 - 0x0008)
struct FMissionFilterOptions_Explicit final : public FMissionFilterOptions
{
public:
	uint8                                         Pad_8[0xA8];                                       // 0x0008(0x00A8)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FMissionFilterOptions_Explicit;

// ScriptStruct GbxGame.PickupEvaluationSettings
// 0x0030 (0x0030 - 0x0000)
struct FPickupEvaluationSettings final
{
public:
	float                                         MinEvaluationHeight;                               // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         EvaluationWidth;                                   // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BoxExtentZFactor;                                  // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SelectedWidthBoost;                                // 0x000C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SelectedHeightBoost;                               // 0x0010(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SelectedBoxZFactorBoost;                           // 0x0014(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SelectedBoxZFactorBoost_Attached;                  // 0x0018(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AttachedPickupPreferredBoxMaxHeight;               // 0x001C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AttachedPickupTracedMeshPriorityBoost;             // 0x0020(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PickupStickiness;                                  // 0x0024(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinLookAtTolerance;                                // 0x0028(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SkipVisibilityTraceTestRange;                      // 0x002C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FPickupEvaluationSettings;

// ScriptStruct GbxGame.UsabilityGlobals
// 0x0098 (0x00B8 - 0x0020)
struct FUsabilityGlobals final : public FGbxGlobalDef
{
public:
	FGameDataHandleProperty_                      DefaultUsePrompt;                                  // 0x0020(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPickupEvaluationSettings              PickupEvaluationSettings;                          // 0x0038(0x0030)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	TMap<class FName, uint8>                      DynamicUsabilityPriorities;                        // 0x0068(0x0050)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FUsabilityGlobals;

// ScriptStruct GbxGame.MissionObjectiveAspect_Binder
// 0x0020 (0x0028 - 0x0008)
struct FMissionObjectiveAspect_Binder final : public FMissionObjectiveAspect
{
public:
	TArray<struct FGbxInlineStruct>               Targets;                                           // 0x0008(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FGbxInlineStruct>               BehaviorMods;                                      // 0x0018(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FMissionObjectiveAspect_Binder;

// ScriptStruct GbxGame.UseEvent
// 0x0018 (0x0018 - 0x0000)
struct FUseEvent final
{
public:
	TScriptInterface<class IUsableConsumer>       Consumer;                                          // 0x0000(0x0010)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EUsabilityType                                UseType;                                           // 0x0010(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bWasHeld;                                          // 0x0011(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FUseEvent;

// ScriptStruct GbxGame.MissionObjectiveAspect_ResolveObjective
// 0x0020 (0x0028 - 0x0008)
struct FMissionObjectiveAspect_ResolveObjective final : public FMissionObjectiveAspect
{
public:
	EMissionObjectiveResolveType                  type;                                              // 0x0008(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxInlineStruct                       Condition;                                         // 0x0010(0x0018)(Edit, NoClear, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FMissionObjectiveAspect_ResolveObjective;

// ScriptStruct GbxGame.MissionObjectiveAspect_UpdateCount
// 0x0068 (0x0070 - 0x0008)
struct FMissionObjectiveAspect_UpdateCount final : public FMissionObjectiveAspect
{
public:
	struct FMissionObjectiveUpdateCountValue      Count;                                             // 0x0008(0x0048)(Edit, NativeAccessSpecifierPublic)
	struct FGbxInlineStruct                       UpdateValue;                                       // 0x0050(0x0018)(Edit, NoClear, NativeAccessSpecifierPublic)
	bool                                          bDisplayUpdateCountInUI;                           // 0x0068(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bReachingUpdateCountCompletesObjective;            // 0x0069(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FMissionObjectiveAspect_UpdateCount;

// ScriptStruct GbxGame.VariantDetailsCommonProp_Int64
// 0x0008 (0x0008 - 0x0000)
struct FVariantDetailsCommonProp_Int64 final
{
public:
	int64                                         Int64Value;                                        // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FVariantDetailsCommonProp_Int64;

// ScriptStruct GbxGame.MissionObjectiveUxModifier_HealthBar
// 0x0060 (0x0098 - 0x0038)
struct FMissionObjectiveUxModifier_HealthBar final : public FMissionObjectiveUxModifier
{
public:
	uint8                                         Pad_38[0x60];                                      // 0x0038(0x0060)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FMissionObjectiveUxModifier_HealthBar;

// ScriptStruct GbxGame.MissionObjectiveUxModifier_ResolveTimer
// 0x0018 (0x0050 - 0x0038)
struct FMissionObjectiveUxModifier_ResolveTimer final : public FMissionObjectiveUxModifier
{
public:
	uint8                                         Pad_38[0x18];                                      // 0x0038(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FMissionObjectiveUxModifier_ResolveTimer;

// ScriptStruct GbxGame.ProjectileBodyState
// 0x0000 (0x0220 - 0x0220)
struct FProjectileBodyState final : public FGbxBodyState
{
};
DUMPER7_ASSERTS_FProjectileBodyState;

// ScriptStruct GbxGame.MissionOwner
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x04) FMissionOwner final
{
public:
	uint8                                         Pad_0[0x8];                                        // 0x0000(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FMissionOwner;

// ScriptStruct GbxGame.MissionReplayParams
// 0x0010 (0x0018 - 0x0008)
struct FMissionReplayParams : public FGbxHasStructType
{
public:
	uint8                                         Pad_8[0x10];                                       // 0x0008(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FMissionReplayParams;

// ScriptStruct GbxGame.MissionSingleScope
// 0x0000 (0x0010 - 0x0010)
struct FMissionSingleScope final : public FNexusBitSingleTag
{
};
DUMPER7_ASSERTS_FMissionSingleScope;

// ScriptStruct GbxGame.MissionBlock
// 0x0058 (0x0058 - 0x0000)
struct FMissionBlock final
{
public:
	uint32                                        Rank;                                              // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMissionBlockType                             type;                                              // 0x0004(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<FGbxDefPtrProperty_>                   missions;                                          // 0x0008(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FNexusBitSet                           tags;                                              // 0x0018(0x0020)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	EMissionQueryOperator                         TagsOperator;                                      // 0x0038(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FGameDataHandleProperty_                      MissionSetDefHandle;                               // 0x0040(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FMissionBlock;

// ScriptStruct GbxGame.ProjectileOwnerOptions
// 0x0018 (0x0018 - 0x0000)
struct FProjectileOwnerOptions final
{
public:
	EProjectileOwnerOptions                       type;                                              // 0x0000(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 owner;                                             // 0x0008(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APawn*                                  instigator;                                        // 0x0010(0x0008)(BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FProjectileOwnerOptions;

// ScriptStruct GbxGame.MissionSourceDef
// 0x0090 (0x00A8 - 0x0018)
struct FMissionSourceDef final : public FGbxDef
{
public:
	struct FGbxVenueTags                          VenueTags;                                         // 0x0018(0x0020)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	ENexusBitSetOperator                          MapTagsOperator;                                   // 0x0038(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGbxInlineStruct>               timers;                                            // 0x0040(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	EMissionSourceSelectionType                   MissionSelectionType;                              // 0x0050(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FMissionBlock>                  MissionBlocks;                                     // 0x0058(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          IsGenerated;                                       // 0x0068(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FMissionSourceAction>           LevelUpActions;                                    // 0x0070(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FMissionSourceAction>           MissionCompletedActions;                           // 0x0080(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          ActiveByDefault;                                   // 0x0090(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_91[0x17];                                      // 0x0091(0x0017)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FMissionSourceDef;

// ScriptStruct GbxGame.MissionSourceTimerRegular
// 0x0010 (0x0070 - 0x0060)
struct FMissionSourceTimerRegular final : public FMissionSourceTimer
{
public:
	uint32                                        Days;                                              // 0x0060(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        Hours;                                             // 0x0064(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        Minutes;                                           // 0x0068(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        Seconds;                                           // 0x006C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FMissionSourceTimerRegular;

// ScriptStruct GbxGame.RadialBlurDef
// 0x0008 (0x0020 - 0x0018)
struct FRadialBlurDef final : public FGbxDef
{
public:
	float                                         Duration;                                          // 0x0018(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Distance;                                          // 0x001C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FRadialBlurDef;

// ScriptStruct GbxGame.MissionSourceTimerDaily
// 0x0008 (0x0068 - 0x0060)
struct FMissionSourceTimerDaily final : public FMissionSourceTimer
{
public:
	uint32                                        TargetHour;                                        // 0x0060(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FMissionSourceTimerDaily;

// ScriptStruct GbxGame.MissionSubAlias_AINodeChainActor
// 0x0060 (0x0090 - 0x0030)
struct FMissionSubAlias_AINodeChainActor final : public FMissionSubAlias
{
public:
	struct FMissionGbxDef                         ActorDef;                                          // 0x0030(0x0030)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FMissionGbxDef                         OptionalDialogNameTagOverride;                     // 0x0060(0x0030)(Edit, NoDestructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FMissionSubAlias_AINodeChainActor;

// ScriptStruct GbxGame.MissionSubAlias_ChildActor
// 0x00C0 (0x00F0 - 0x0030)
struct FMissionSubAlias_ChildActor final : public FMissionSubAlias
{
public:
	bool                                          bEnableByDefault;                                  // 0x0030(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0xF];                                       // 0x0031(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RelativeTransform;                                 // 0x0040(0x0060)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   socket;                                            // 0x00A0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMissionGbxDef                         ActorDef;                                          // 0x00A8(0x0030)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_D8[0x18];                                      // 0x00D8(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FMissionSubAlias_ChildActor;

// ScriptStruct GbxGame.RelativeFactsSystemActorReference
// 0x0028 (0x0028 - 0x0000)
struct FRelativeFactsSystemActorReference final
{
public:
	ERelativeFactsSystemActorReferenceSubmapMode  SubmapMode;                                        // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSToken                                Submap;                                            // 0x0004(0x000C)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSToken                                GroupName;                                         // 0x0010(0x000C)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSToken                                RegistryName;                                      // 0x001C(0x000C)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FRelativeFactsSystemActorReference;

// ScriptStruct GbxGame.MissionSubAlias_Spawner
// 0x0070 (0x00A0 - 0x0030)
struct FMissionSubAlias_Spawner final : public FMissionSubAlias
{
public:
	struct FTransform                             RelativeTransform;                                 // 0x0030(0x0060)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   socket;                                            // 0x0090(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_98[0x8];                                       // 0x0098(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FMissionSubAlias_Spawner;

// ScriptStruct GbxGame.MissionInteractObjectiveSubTypeConfig
// 0x0088 (0x0088 - 0x0000)
struct FMissionInteractObjectiveSubTypeConfig final
{
public:
	class FName                                   SubTypeName;                                       // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   RequiredAliasType;                                 // 0x0008(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FMissionInteractObjectiveSubTypeStatePair> setup;                                  // 0x0010(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FMissionInteractObjectiveSubTypeStatePair> Reset;                                  // 0x0020(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FMissionInteractObjectiveSubTypeStatePair> Start;                                  // 0x0030(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FMissionInteractObjectiveSubTypeStatePair> deactivate;                             // 0x0040(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FMissionInteractObjectiveSubTypeStatePair> Fail;                                   // 0x0050(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FMissionInteractObjectiveSubTypeStatePair> success;                                // 0x0060(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FMissionInteractObjectiveSubTypeStatePair SucceedCondition;                               // 0x0070(0x0014)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FMissionInteractObjectiveSubTypeConfig;

// ScriptStruct GbxGame.MovieSceneCoordinatedMaterialParameterTemplate
// 0x0068 (0x0088 - 0x0020)
struct FMovieSceneCoordinatedMaterialParameterTemplate final : public FMovieSceneEvalTemplate
{
public:
	int32                                         MaterialChannels;                                  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGuid                                  MaterialDataGuid;                                  // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FGameDataHandleProperty_                      MeshFilter;                                        // 0x0038(0x0018)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	FGbxDefPtrProperty_                           attribute;                                         // 0x0050(0x0018)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FScalarMaterialParameterInfoAndCurve> Scalars;                                     // 0x0068(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FColorMaterialParameterInfoAndCurves> Colors;                                      // 0x0078(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FMovieSceneCoordinatedMaterialParameterTemplate;

// ScriptStruct GbxGame.MovieSceneCoordinatedMaterialTemplate
// 0x0050 (0x0070 - 0x0020)
struct FMovieSceneCoordinatedMaterialTemplate final : public FMovieSceneEvalTemplate
{
public:
	struct FGbxInlineStruct                       settings;                                          // 0x0020(0x0018)(NativeAccessSpecifierPrivate)
	struct FGuid                                  MaterialDataGuid;                                  // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	FGameDataHandleProperty_                      MeshFilter;                                        // 0x0048(0x0018)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGuid                                  Guid;                                              // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FMovieSceneCoordinatedMaterialTemplate;

// ScriptStruct GbxGame.NexusAvatarHelper
// 0x0001 (0x0001 - 0x0000)
struct FNexusAvatarHelper final
{
public:
	uint8                                         Pad_0[0x1];                                        // 0x0000(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FNexusAvatarHelper;

// ScriptStruct GbxGame.GbxActivityAreaStampDef
// 0x00B8 (0x00D0 - 0x0018)
struct FGbxActivityAreaStampDef final : public FGbxDef
{
public:
	struct FFactAddress                           address;                                           // 0x0018(0x0038)(HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   contextdef;                                        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_58[0x8];                                       // 0x0058(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Transform;                                         // 0x0060(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C0[0x10];                                      // 0x00C0(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxActivityAreaStampDef;

// ScriptStruct GbxGame.GbxActivityAreaDef_LinkedActor
// 0x0060 (0x0060 - 0x0000)
struct FGbxActivityAreaDef_LinkedActor final
{
public:
	struct FFactAddress                           address;                                           // 0x0000(0x0038)(HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FNexusBitSet                           tags;                                              // 0x0038(0x0020)(NativeAccessSpecifierPublic)
	class FName                                   waypoint;                                          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxActivityAreaDef_LinkedActor;

// ScriptStruct GbxGame.GbxActivityAreaDef
// 0x00F8 (0x0110 - 0x0018)
struct FGbxActivityAreaDef final : public FGbxDef
{
public:
	struct FFactAddress                           address;                                           // 0x0018(0x0038)(HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FNexusBitSet                           tags;                                              // 0x0050(0x0020)(NativeAccessSpecifierPublic)
	struct FNexusBitSet                           mandatoryactivityareatags;                         // 0x0070(0x0020)(NativeAccessSpecifierPublic)
	struct FTransform                             Transform;                                         // 0x0090(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InfluenceRadius;                                   // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGbxActivityAreaDef_LinkedActor> Actors;                                           // 0x00F8(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_108[0x8];                                      // 0x0108(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxActivityAreaDef;

// ScriptStruct GbxGame.RefreshAreaDef
// 0x0070 (0x0088 - 0x0018)
struct FRefreshAreaDef final : public FGbxDef
{
public:
	struct FFactAddress                           address;                                           // 0x0018(0x0038)(HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Location;                                          // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         channel;                                           // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         InfluenceRadius;                                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TimerDuration;                                     // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        Budget;                                            // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FRefreshActorData>              IncludedActors;                                    // 0x0078(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FRefreshAreaDef;

// ScriptStruct GbxGame.GbxStaticLIDef
// 0x0088 (0x00A0 - 0x0018)
struct FGbxStaticLIDef final : public FGbxDef
{
public:
	class FName                                   ActorLabel;                                        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   AssociatedWorldName;                               // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSToken                                LevelDef;                                          // 0x0028(0x000C)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34[0xC];                                       // 0x0034(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Transform;                                         // 0x0040(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxStaticLIDef;

// ScriptStruct GbxGame.ObjectiveTypeSettings_Composite
// 0x0010 (0x0088 - 0x0078)
struct FObjectiveTypeSettings_Composite final : public FObjectiveTypeSettingsBase
{
public:
	int32                                         NumSubObjectives;                                  // 0x0078(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPresentSubsAsUpdateCount;                         // 0x007C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bResolvingOneSubObjectiveResolvesAll;              // 0x007D(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMissionObjectiveResolveType                  OtherSubObjectivesResolutionOverride;              // 0x007E(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCheckThatSubObjectiveSubsequentsAreResolved;      // 0x007F(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bWaitForSubObjectivesToFullyResolve;               // 0x0080(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FObjectiveTypeSettings_Composite;

// ScriptStruct GbxGame.ObjectiveTypeSettings_Custom
// 0x0000 (0x0078 - 0x0078)
struct FObjectiveTypeSettings_Custom final : public FObjectiveTypeSettingsBase
{
};
DUMPER7_ASSERTS_FObjectiveTypeSettings_Custom;

// ScriptStruct GbxGame.EncounterObjectiveEventAction
// 0x0030 (0x0030 - 0x0000)
struct FEncounterObjectiveEventAction final
{
public:
	class FName                                   EncounterEvent;                                    // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMissionActionSequenceDef              Action;                                            // 0x0008(0x0028)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FEncounterObjectiveEventAction;

// ScriptStruct GbxGame.ObjectiveTypeSettings_Encounter
// 0x0028 (0x00A0 - 0x0078)
struct FObjectiveTypeSettings_Encounter final : public FObjectiveTypeSettingsBase
{
public:
	struct FMissionAliasRef                       Encounter;                                         // 0x0078(0x000C)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	bool                                          bAutoActivateEncounter;                            // 0x0084(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bResetEncounterIfAlreadyCompleted;                 // 0x0085(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bShowWaveCountAsUpdateCount;                       // 0x0086(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bResetEncounterIfObjectiveReset;                   // 0x0087(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         NumberOfWaves;                                     // 0x0088(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FEncounterObjectiveEventAction> EventActions;                                      // 0x0090(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FObjectiveTypeSettings_Encounter;

// ScriptStruct GbxGame.ObjectiveTypeSettings_GbxContainedTask
// 0x0010 (0x0088 - 0x0078)
struct FObjectiveTypeSettings_GbxContainedTask final : public FObjectiveTypeSettingsBase
{
public:
	struct FMissionAliasRef                       TaskAlias;                                         // 0x0078(0x000C)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FObjectiveTypeSettings_GbxContainedTask;

// ScriptStruct GbxGame.GbxDamageObjectiveBehaviorMod
// 0x0018 (0x0030 - 0x0018)
struct FGbxDamageObjectiveBehaviorMod final : public FFactsBinderBehaviorMod
{
public:
	uint8                                         Pad_18[0x18];                                      // 0x0018(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxDamageObjectiveBehaviorMod;

// ScriptStruct GbxGame.ObjectiveTypeSettings_GbxDamage
// 0x0038 (0x00B0 - 0x0078)
struct FObjectiveTypeSettings_GbxDamage : public FObjectiveTypeSettingsBase
{
public:
	struct FMissionAliasRef                       target;                                            // 0x0078(0x000C)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FMissionAliasRef                       TargetOrigin;                                      // 0x0084(0x000C)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bTriggerOnHitFriendly;                             // 0x0090(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxInlineStruct                       filter;                                            // 0x0098(0x0018)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FObjectiveTypeSettings_GbxDamage;

// ScriptStruct GbxGame.GbxPickupObjectiveSpawnStrategy_Placed
// 0x0010 (0x0018 - 0x0008)
struct FGbxPickupObjectiveSpawnStrategy_Placed final : public FGbxPickupObjectiveSpawnStrategy
{
public:
	EMissionObjectivePickupSpawnTiming            SpawnTiming;                                       // 0x0008(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMissionAliasRef                       PickupSpawner;                                     // 0x000C(0x000C)(Edit, NoDestructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxPickupObjectiveSpawnStrategy_Placed;

// ScriptStruct GbxGame.ObjectiveTypeSettings_GbxPickup
// 0x0058 (0x00D0 - 0x0078)
struct FObjectiveTypeSettings_GbxPickup : public FObjectiveTypeSettingsBase
{
public:
	struct FGbxInlineStruct                       PickupSpawnStrategy;                               // 0x0078(0x0018)(Edit, NativeAccessSpecifierPublic)
	struct FMissionGbxDef                         PickupDef;                                         // 0x0090(0x0030)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FFactExpression                        PickupEnabledCondition;                            // 0x00C0(0x0010)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FObjectiveTypeSettings_GbxPickup;

// ScriptStruct GbxGame.ObjectiveTypeSettings_GbxTravel
// 0x0040 (0x00B8 - 0x0078)
struct FObjectiveTypeSettings_GbxTravel : public FObjectiveTypeSettingsBase
{
public:
	EObjectiveTriggerPlayerEventType              subtype;                                           // 0x0078(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETravelObjectiveDetectionMethod               DetectionMethod;                                   // 0x0079(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseAllPlayersMustBeHereNotification;              // 0x007A(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_7B[0x1];                                       // 0x007B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMissionAliasRef                       TriggerVolume;                                     // 0x007C(0x000C)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FMissionAliasRef                       TargetActor;                                       // 0x0088(0x000C)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	float                                         DynamicRadius;                                     // 0x0094(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bTriggerAlwaysLoaded;                              // 0x0098(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FGbxDefPtrProperty_                           Map;                                               // 0x00A0(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FObjectiveTypeSettings_GbxTravel;

// ScriptStruct GbxGame.TalkToNPCUsabilityBehaviorMod
// 0x0000 (0x0198 - 0x0198)
struct FTalkToNPCUsabilityBehaviorMod final : public FDynamicUsabilityBehaviorMod
{
};
DUMPER7_ASSERTS_FTalkToNPCUsabilityBehaviorMod;

// ScriptStruct GbxGame.ObjectiveTypeSettings_Talk
// 0x0198 (0x0210 - 0x0078)
struct FObjectiveTypeSettings_Talk final : public FObjectiveTypeSettingsBase
{
public:
	struct FMissionAliasRef                       NPC;                                               // 0x0078(0x000C)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FMissionAliasRef                       Node;                                              // 0x0084(0x000C)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FDynamicUsabilityInteractionInfo       InteractionInfo;                                   // 0x0090(0x0180)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FObjectiveTypeSettings_Talk;

// ScriptStruct GbxGame.ObjectiveTypeSettings_TimedArea
// 0x0028 (0x00A0 - 0x0078)
struct FObjectiveTypeSettings_TimedArea final : public FObjectiveTypeSettingsBase
{
public:
	EObjectiveTriggerPlayerCountEventType         subtype;                                           // 0x0078(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAreaObjectiveDetectionMethod                 DetectionMethod;                                   // 0x0079(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_7A[0x2];                                       // 0x007A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMissionAliasRef                       TriggerVolume;                                     // 0x007C(0x000C)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FMissionAliasRef                       TargetActor;                                       // 0x0088(0x000C)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	float                                         DynamicRadius;                                     // 0x0094(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Timer;                                             // 0x0098(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FObjectiveTypeSettings_TimedArea;

// ScriptStruct GbxGame.ObjectiveTypeSettings_Use
// 0x0190 (0x0208 - 0x0078)
struct FObjectiveTypeSettings_Use final : public FObjectiveTypeSettingsBase
{
public:
	struct FMissionAliasRef                       Object;                                            // 0x0078(0x000C)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDynamicUsabilityInteractionInfo       InteractionInfo;                                   // 0x0088(0x0180)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FObjectiveTypeSettings_Use;

// ScriptStruct GbxGame.ObjectiveValueEvaluator_ActorHealthDepleted
// 0x0010 (0x0018 - 0x0008)
struct FObjectiveValueEvaluator_ActorHealthDepleted final : public FObjectiveValueEvaluator
{
public:
	struct FMissionAliasRef                       Actor;                                             // 0x0008(0x000C)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bDisplayHealthBar;                                 // 0x0014(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FObjectiveValueEvaluator_ActorHealthDepleted;

// ScriptStruct GbxGame.ObjectiveValueEvaluatorState_Automatic
// 0x0000 (0x0070 - 0x0070)
struct FObjectiveValueEvaluatorState_Automatic final : public FObjectiveValueEvaluatorState
{
};
DUMPER7_ASSERTS_FObjectiveValueEvaluatorState_Automatic;

// ScriptStruct GbxGame.ObjectiveValueEvaluator_Automatic
// 0x0000 (0x0008 - 0x0008)
struct FObjectiveValueEvaluator_Automatic final : public FObjectiveValueEvaluator
{
};
DUMPER7_ASSERTS_FObjectiveValueEvaluator_Automatic;

// ScriptStruct GbxGame.ObjectiveValueEvaluatorState_CompositeObjective
// 0x0000 (0x0070 - 0x0070)
struct FObjectiveValueEvaluatorState_CompositeObjective final : public FObjectiveValueEvaluatorState
{
};
DUMPER7_ASSERTS_FObjectiveValueEvaluatorState_CompositeObjective;

// ScriptStruct GbxGame.ObjectiveValueEvaluatorState_Compound
// 0x0010 (0x0080 - 0x0070)
struct FObjectiveValueEvaluatorState_Compound final : public FObjectiveValueEvaluatorState
{
public:
	uint8                                         Pad_70[0x10];                                      // 0x0070(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FObjectiveValueEvaluatorState_Compound;

// ScriptStruct GbxGame.ObjectiveValueEvaluator_Compound
// 0x0018 (0x0020 - 0x0008)
struct FObjectiveValueEvaluator_Compound final : public FObjectiveValueEvaluator
{
public:
	ECompoundObjectiveValueEvaluatorOp            Op;                                                // 0x0008(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGbxInlineStruct>               Conditions;                                        // 0x0010(0x0010)(Edit, ZeroConstructor, NoClear, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FObjectiveValueEvaluator_Compound;

// ScriptStruct GbxGame.VariantDetailsCommonProp_String
// 0x0010 (0x0010 - 0x0000)
struct FVariantDetailsCommonProp_String final
{
public:
	class FString                                 StringValue;                                       // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FVariantDetailsCommonProp_String;

// ScriptStruct GbxGame.ObjectiveValueEvaluator_CustomEvaluator
// 0x0030 (0x0038 - 0x0008)
struct FObjectiveValueEvaluator_CustomEvaluator final : public FObjectiveValueEvaluator_FactExpressionBase
{
public:
	struct FMissionFactEvaluatorInfo              CustomEvaluator;                                   // 0x0008(0x0030)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FObjectiveValueEvaluator_CustomEvaluator;

// ScriptStruct GbxGame.ObjectiveValueEvaluator_FactExpression
// 0x0010 (0x0018 - 0x0008)
struct FObjectiveValueEvaluator_FactExpression final : public FObjectiveValueEvaluator_FactExpressionBase
{
public:
	struct FFactExpression                        FactExpression;                                    // 0x0008(0x0010)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FObjectiveValueEvaluator_FactExpression;

// ScriptStruct GbxGame.ObjectiveValueEvaluatorState_FactExpressionBase
// 0x0010 (0x0080 - 0x0070)
struct FObjectiveValueEvaluatorState_FactExpressionBase final : public FObjectiveValueEvaluatorState
{
public:
	uint8                                         Pad_70[0x10];                                      // 0x0070(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FObjectiveValueEvaluatorState_FactExpressionBase;

// ScriptStruct GbxGame.ObjectiveValueEvaluatorState_NamedEvent
// 0x0000 (0x0070 - 0x0070)
struct FObjectiveValueEvaluatorState_NamedEvent final : public FObjectiveValueEvaluatorState
{
};
DUMPER7_ASSERTS_FObjectiveValueEvaluatorState_NamedEvent;

// ScriptStruct GbxGame.VariantDetailsCommonProp_DataTable
// 0x0028 (0x0028 - 0x0000)
struct FVariantDetailsCommonProp_DataTable final
{
public:
	struct FDataTableValueHandle                  DataTableValue;                                    // 0x0000(0x0028)(NoDestructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FVariantDetailsCommonProp_DataTable;

// ScriptStruct GbxGame.ObjectiveValueEvaluator_NamedEvent
// 0x0008 (0x0010 - 0x0008)
struct FObjectiveValueEvaluator_NamedEvent final : public FObjectiveValueEvaluator
{
public:
	class FName                                   EventName;                                         // 0x0008(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FObjectiveValueEvaluator_NamedEvent;

// ScriptStruct GbxGame.ObjectiveValueEvaluatorState_ObjectiveStatus
// 0x0000 (0x0070 - 0x0070)
struct FObjectiveValueEvaluatorState_ObjectiveStatus final : public FObjectiveValueEvaluatorState
{
};
DUMPER7_ASSERTS_FObjectiveValueEvaluatorState_ObjectiveStatus;

// ScriptStruct GbxGame.ObjectiveValueEvaluator_Timer
// 0x0068 (0x0070 - 0x0008)
struct FObjectiveValueEvaluator_Timer : public FObjectiveValueEvaluator
{
public:
	struct FGbxAttributeInit                      TimerDuration;                                     // 0x0008(0x0050)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bTreatAsExpiredOnLoad;                             // 0x0058(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMissionObjectiveTimerDisplayStyle            DisplayStyle;                                      // 0x0059(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5A[0x2];                                       // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   TimerUIStyle;                                      // 0x005C(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   Tag;                                               // 0x0064(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FObjectiveValueEvaluator_Timer;

// ScriptStruct GbxGame.WaypointAttachmentStrategyState_RegistryActor
// 0x0050 (0x0078 - 0x0028)
struct FWaypointAttachmentStrategyState_RegistryActor : public FWaypointAttachmentStrategyState
{
public:
	uint8                                         Pad_28[0x50];                                      // 0x0028(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FWaypointAttachmentStrategyState_RegistryActor;

// ScriptStruct GbxGame.ObjectiveValueEvaluator_PauseableTimer
// 0x0000 (0x0070 - 0x0070)
struct FObjectiveValueEvaluator_PauseableTimer final : public FObjectiveValueEvaluator_Timer
{
};
DUMPER7_ASSERTS_FObjectiveValueEvaluator_PauseableTimer;

// ScriptStruct GbxGame.ObjectiveValueEvaluatorState_Timer
// 0x0018 (0x0088 - 0x0070)
struct FObjectiveValueEvaluatorState_Timer : public FObjectiveValueEvaluatorState
{
public:
	uint8                                         Pad_70[0x18];                                      // 0x0070(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FObjectiveValueEvaluatorState_Timer;

// ScriptStruct GbxGame.ObjectiveValueEvaluatorState_PauseableTimer
// 0x0010 (0x0098 - 0x0088)
struct FObjectiveValueEvaluatorState_PauseableTimer final : public FObjectiveValueEvaluatorState_Timer
{
public:
	uint8                                         Pad_88[0x10];                                      // 0x0088(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FObjectiveValueEvaluatorState_PauseableTimer;

// ScriptStruct GbxGame.WaypointDef
// 0x0060 (0x0078 - 0x0018)
struct FWaypointDef final : public FGbxDef
{
public:
	uint8                                         Pad_18[0x8];                                       // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFactAddress                           staticaddress;                                     // 0x0020(0x0038)(Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInstancedMap;                                     // 0x0058(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                loc;                                               // 0x0060(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FWaypointDef;

// ScriptStruct GbxGame.PickupActorDef
// 0x0048 (0x00D8 - 0x0090)
struct FPickupActorDef : public FGbxActorDef
{
public:
	struct FInventoryItemDefProvider              InventoryProvider;                                 // 0x0090(0x0038)(Edit, NativeAccessSpecifierPublic)
	bool                                          bStaticPickup;                                     // 0x00C8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSToken                                RegistryName;                                      // 0x00CC(0x000C)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FPickupActorDef;

// ScriptStruct GbxGame.ProjectileAudioProvider
// 0x0040 (0x0340 - 0x0300)
struct FProjectileAudioProvider final : public FGbxAudioProvider
{
public:
	uint8                                         Pad_300[0x40];                                     // 0x0300(0x0040)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FProjectileAudioProvider;

// ScriptStruct GbxGame.ProjectileBodySettings
// 0x0018 (0x0240 - 0x0228)
struct FProjectileBodySettings final : public FGbxBodySettings
{
public:
	struct FVector                                RotationPivotOffset;                               // 0x0228(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FProjectileBodySettings;

// ScriptStruct GbxGame.ProjectileMovementModifierData_ViewGuided
// 0x0048 (0x0050 - 0x0008)
struct FProjectileMovementModifierData_ViewGuided final : public FProjectileMovementModifierData
{
public:
	bool                                          bIsHomingAuthority;                                // 0x0008(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bGoToCrosshair;                                    // 0x0009(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LookAheadDistance;                                 // 0x000C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxAttributeEvaluator                 Condition;                                         // 0x0010(0x0038)(Edit, NativeAccessSpecifierPublic)
	bool                                          bUseInstigatorAsContext;                           // 0x0048(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FProjectileMovementModifierData_ViewGuided;

// ScriptStruct GbxGame.ProjectileMovementModifierState_ViewGuided
// 0x0018 (0x0030 - 0x0018)
struct FProjectileMovementModifierState_ViewGuided final : public FProjectileMovementModifierState
{
public:
	uint8                                         Pad_18[0x18];                                      // 0x0018(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FProjectileMovementModifierState_ViewGuided;

// ScriptStruct GbxGame.ProjectileDamageOverrideData
// 0x00D0 (0x00D0 - 0x0000)
struct FProjectileDamageOverrideData final
{
public:
	float                                         damage;                                            // 0x0000(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FGameDataHandleProperty_                      DamageType;                                        // 0x0008(0x0018)(BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDamageSourceContainer                 DamageSource;                                      // 0x0020(0x0040)(BlueprintVisible, NativeAccessSpecifierPublic)
	float                                         damageradius;                                      // 0x0060(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FForceSelection                        ImpactForce;                                       // 0x0068(0x0048)(BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FDamageTags                            DamageTags;                                        // 0x00B0(0x0020)(BlueprintVisible, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FProjectileDamageOverrideData;

// ScriptStruct GbxGame.RadiateDamageAreaBodySettings
// 0x0000 (0x0228 - 0x0228)
struct FRadiateDamageAreaBodySettings final : public FGbxBodySettings
{
};
DUMPER7_ASSERTS_FRadiateDamageAreaBodySettings;

// ScriptStruct GbxGame.RadiateDamageAreaBodyState
// 0x0000 (0x0220 - 0x0220)
struct FRadiateDamageAreaBodyState final : public FGbxBodyState
{
};
DUMPER7_ASSERTS_FRadiateDamageAreaBodyState;

// ScriptStruct GbxGame.RelativeDirectionData
// 0x0070 (0x0070 - 0x0000)
struct FRelativeDirectionData final
{
public:
	ERelativeDirectionType                        RelativeDirection;                                 // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAttributeInit                      ConeAroundDirection;                               // 0x0008(0x0050)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                               AdditionalRotation;                                // 0x0058(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FRelativeDirectionData;

// ScriptStruct GbxGame.ReplicatedMissionFactAdd
// 0x0028 (0x0050 - 0x0028)
struct FReplicatedMissionFactAdd final : public FReplicatedMissionFactSetBase
{
public:
	uint8                                         Pad_28[0x28];                                      // 0x0028(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FReplicatedMissionFactAdd;

// ScriptStruct GbxGame.ReplicatedGeneratedMissionDestruction
// 0x0010 (0x0020 - 0x0010)
struct FReplicatedGeneratedMissionDestruction final : public FReplicatedMissionMessage
{
public:
	uint8                                         Pad_10[0x10];                                      // 0x0010(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FReplicatedGeneratedMissionDestruction;

// ScriptStruct GbxGame.ReplicatedDynamicMissionGiverAdd
// 0x0058 (0x0068 - 0x0010)
struct FReplicatedDynamicMissionGiverAdd final : public FReplicatedMissionMessage
{
public:
	uint8                                         Pad_10[0x58];                                      // 0x0010(0x0058)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FReplicatedDynamicMissionGiverAdd;

// ScriptStruct GbxGame.ReplicatedConditionalMissionGiverEnableChange
// 0x0048 (0x0058 - 0x0010)
struct FReplicatedConditionalMissionGiverEnableChange final : public FReplicatedMissionMessage
{
public:
	uint8                                         Pad_10[0x48];                                      // 0x0010(0x0048)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FReplicatedConditionalMissionGiverEnableChange;

// ScriptStruct GbxGame.ReplicateMissionReplayUpdate
// 0x0010 (0x0020 - 0x0010)
struct FReplicateMissionReplayUpdate final : public FReplicatedMissionMessage
{
public:
	uint8                                         Pad_10[0x10];                                      // 0x0010(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FReplicateMissionReplayUpdate;

// ScriptStruct GbxGame.ReplicatedMissionObjectiveUxModifierAdd
// 0x0028 (0x0038 - 0x0010)
struct FReplicatedMissionObjectiveUxModifierAdd final : public FReplicatedMissionMessage
{
public:
	uint8                                         Pad_10[0x28];                                      // 0x0010(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FReplicatedMissionObjectiveUxModifierAdd;

// ScriptStruct GbxGame.ReplicatedMissionObjectiveUxModifierRemove
// 0x0020 (0x0030 - 0x0010)
struct FReplicatedMissionObjectiveUxModifierRemove final : public FReplicatedMissionMessage
{
public:
	uint8                                         Pad_10[0x20];                                      // 0x0010(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FReplicatedMissionObjectiveUxModifierRemove;

// ScriptStruct GbxGame.ParticlePropertyTracker
// 0x0038 (0x0038 - 0x0000)
struct FParticlePropertyTracker final
{
public:
	class UParticlePropertyTrackingData*          TrackingData;                                      // 0x0000(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFXSystemAsset*                         Template;                                          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   Tag;                                               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   PropertyName;                                      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FloatParamValue;                                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LastUpdateTime;                                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*               Material;                                          // 0x0028(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   MaterialPropertyName;                              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FParticlePropertyTracker;

// ScriptStruct GbxGame.ServerCameraModeState
// 0x0038 (0x0038 - 0x0000)
struct alignas(0x08) FServerCameraModeState final
{
public:
	uint8                                         Pad_0[0x38];                                       // 0x0000(0x0038)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FServerCameraModeState;

// ScriptStruct GbxGame.SpawnLootBehaviorMod
// 0x00F8 (0x0110 - 0x0018)
struct alignas(0x10) FSpawnLootBehaviorMod final : public FFactsBinderBehaviorMod
{
public:
	uint8                                         Pad_18[0xF8];                                      // 0x0018(0x00F8)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FSpawnLootBehaviorMod;

// ScriptStruct GbxGame.SpawnPatternResult
// 0x0058 (0x0058 - 0x0000)
struct FSpawnPatternResult final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                LinearImpulse;                                     // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLinearVelocityChange;                             // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                AngularImpulse;                                    // 0x0038(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAngularVelocityChange;                            // 0x0050(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FSpawnPatternResult;

// ScriptStruct GbxGame.SpawnPatternGameDataCategory_DONTUSE
// 0x0001 (0x0001 - 0x0000)
struct FSpawnPatternGameDataCategory_DONTUSE final
{
public:
	uint8                                         Pad_0[0x1];                                        // 0x0000(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FSpawnPatternGameDataCategory_DONTUSE;

// ScriptStruct GbxGame.SpawnPointBodyState
// 0x0000 (0x0220 - 0x0220)
struct FSpawnPointBodyState : public FGbxBodyState
{
};
DUMPER7_ASSERTS_FSpawnPointBodyState;

// ScriptStruct GbxGame.StringDisplayValue
// 0x00A0 (0x00A8 - 0x0008)
struct FStringDisplayValue final : public FUIStatDisplayValue
{
public:
	class FString                                 KeyGroup;                                          // 0x0008(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBooleanDisplayValue                   DisplayCondition;                                  // 0x0018(0x0030)(Edit, NativeAccessSpecifierPublic)
	class FText                                   FormatText;                                        // 0x0048(0x0010)(Edit, Protected, NativeAccessSpecifierProtected)
	TMap<class FString, struct FGbxInlineStruct>  ArgsMap;                                           // 0x0058(0x0050)(Edit, Protected, NativeAccessSpecifierProtected)
};
DUMPER7_ASSERTS_FStringDisplayValue;

// ScriptStruct GbxGame.TaggedAnimDef_GbxGame
// 0x0148 (0x01B8 - 0x0070)
struct FTaggedAnimDef_GbxGame : public FTaggedAnimDef_GbxNav
{
public:
	TMap<struct FGameplayTag, TSoftObjectPtr<class UGbxTrick>> Perches;                              // 0x0070(0x0050)(Edit, UObjectWrapper, NativeAccessSpecifierPrivate)
	TMap<struct FGameplayTag, TSoftObjectPtr<class UGbxTrick>> GenericTricks;                        // 0x00C0(0x0050)(Edit, UObjectWrapper, NativeAccessSpecifierPrivate)
	TMap<struct FGameplayTag, TSoftObjectPtr<class UGbxTrick>> SpawnTricks;                          // 0x0110(0x0050)(Edit, UObjectWrapper, NativeAccessSpecifierPrivate)
	TMap<struct FGameplayTag, TSoftObjectPtr<class UGbxTrick>> TrickMap;                             // 0x0160(0x0050)(UObjectWrapper, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1B0[0x8];                                      // 0x01B0(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FTaggedAnimDef_GbxGame;

// ScriptStruct GbxGame.UIStatAspect
// 0x0020 (0x0050 - 0x0030)
struct FUIStatAspect final : public FInventoryAspect
{
public:
	TArray<FGbxDefPtrProperty_>                   UIStatsToInclude;                                  // 0x0030(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TArray<FGbxDefPtrProperty_>                   UIStatsToExclude;                                  // 0x0040(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FUIStatAspect;

// ScriptStruct GbxGame.UnlockablesState
// 0x0098 (0x0098 - 0x0000)
struct alignas(0x08) FUnlockablesState final
{
public:
	uint8                                         Pad_0[0x98];                                       // 0x0000(0x0098)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FUnlockablesState;

// ScriptStruct GbxGame.UsabilityResponseDef
// 0x0010 (0x0028 - 0x0018)
struct FUsabilityResponseDef final : public FGbxDef
{
public:
	TArray<struct FUsabilityResponse>             responses;                                         // 0x0018(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FUsabilityResponseDef;

// ScriptStruct GbxGame.UsableCategories_DONTUSE
// 0x0001 (0x0001 - 0x0000)
struct FUsableCategories_DONTUSE final
{
public:
	uint8                                         Pad_0[0x1];                                        // 0x0000(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FUsableCategories_DONTUSE;

// ScriptStruct GbxGame.UsableConsumerDef
// 0x0018 (0x0030 - 0x0018)
struct FUsableConsumerDef final : public FGbxDef
{
public:
	float                                         MaxInteractionDistance;                            // 0x0018(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InteractionDistance;                               // 0x001C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LeaveInteractionOffset;                            // 0x0020(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         VehicleInteractDistance;                           // 0x0024(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         VehicleLeaveInteractionDistance;                   // 0x0028(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FUsableConsumerDef;

// ScriptStruct GbxGame.VariantDetailsCommonProp_Bool
// 0x0001 (0x0001 - 0x0000)
struct FVariantDetailsCommonProp_Bool final
{
public:
	bool                                          BoolValue;                                         // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FVariantDetailsCommonProp_Bool;

// ScriptStruct GbxGame.VariantDetailsCommonProp_UInt16
// 0x0002 (0x0002 - 0x0000)
struct FVariantDetailsCommonProp_UInt16 final
{
public:
	uint16                                        UInt16Value;                                       // 0x0000(0x0002)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FVariantDetailsCommonProp_UInt16;

// ScriptStruct GbxGame.VariantDetailsCommonProp_Int32
// 0x0004 (0x0004 - 0x0000)
struct FVariantDetailsCommonProp_Int32 final
{
public:
	int32                                         Int32Value;                                        // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FVariantDetailsCommonProp_Int32;

// ScriptStruct GbxGame.VariantDetailsCommonProp_UInt32
// 0x0004 (0x0004 - 0x0000)
struct FVariantDetailsCommonProp_UInt32 final
{
public:
	uint32                                        UInt32Value;                                       // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FVariantDetailsCommonProp_UInt32;

// ScriptStruct GbxGame.VariantDetailsCommonProp_UInt64
// 0x0008 (0x0008 - 0x0000)
struct FVariantDetailsCommonProp_UInt64 final
{
public:
	uint64                                        UInt64Value;                                       // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FVariantDetailsCommonProp_UInt64;

// ScriptStruct GbxGame.VariantDetailsCommonProp_Float
// 0x0004 (0x0004 - 0x0000)
struct FVariantDetailsCommonProp_Float final
{
public:
	float                                         FloatValue;                                        // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FVariantDetailsCommonProp_Float;

// ScriptStruct GbxGame.VariantDetailsCommonProp_Double
// 0x0008 (0x0008 - 0x0000)
struct FVariantDetailsCommonProp_Double final
{
public:
	double                                        DoubleValue;                                       // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FVariantDetailsCommonProp_Double;

// ScriptStruct GbxGame.VariantDetailsCommonProp_ObjectPtr
// 0x0008 (0x0008 - 0x0000)
struct FVariantDetailsCommonProp_ObjectPtr final
{
public:
	class UObject*                                ObjectPtrValue;                                    // 0x0000(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FVariantDetailsCommonProp_ObjectPtr;

// ScriptStruct GbxGame.VariantDetailsCommonProp_SoftObjectPtr
// 0x0028 (0x0028 - 0x0000)
struct FVariantDetailsCommonProp_SoftObjectPtr final
{
public:
	TSoftObjectPtr<class UObject>                 SoftObjectPtrValue;                                // 0x0000(0x0028)(UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FVariantDetailsCommonProp_SoftObjectPtr;

// ScriptStruct GbxGame.VariantDetailsCommonProp_FactAddress
// 0x0038 (0x0038 - 0x0000)
struct FVariantDetailsCommonProp_FactAddress final
{
public:
	struct FFactAddress                           FactAddressValue;                                  // 0x0000(0x0038)(HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FVariantDetailsCommonProp_FactAddress;

// ScriptStruct GbxGame.WaypointAttachmentStrategy_RegistryActor
// 0x0038 (0x0040 - 0x0008)
struct FWaypointAttachmentStrategy_RegistryActor : public FWaypointAttachmentStrategy
{
public:
	uint8                                         Pad_8[0x38];                                       // 0x0008(0x0038)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FWaypointAttachmentStrategy_RegistryActor;

// ScriptStruct GbxGame.WaypointAttachmentStrategyState_SpawnedActor
// 0x0000 (0x0078 - 0x0078)
struct FWaypointAttachmentStrategyState_SpawnedActor final : public FWaypointAttachmentStrategyState_RegistryActor
{
};
DUMPER7_ASSERTS_FWaypointAttachmentStrategyState_SpawnedActor;

// ScriptStruct GbxGame.WaypointAttachmentStrategy_SpawnedActor
// 0x0000 (0x0040 - 0x0040)
struct FWaypointAttachmentStrategy_SpawnedActor final : public FWaypointAttachmentStrategy_RegistryActor
{
};
DUMPER7_ASSERTS_FWaypointAttachmentStrategy_SpawnedActor;

// ScriptStruct GbxGame.WaypointRuntimeParams
// 0x0008 (0x0010 - 0x0008)
struct FWaypointRuntimeParams : public FGbxHasStructType
{
public:
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FWaypointRuntimeParams;

// ScriptStruct GbxGame.WorldRegionGameDataCategories_DONTUSE
// 0x0001 (0x0001 - 0x0000)
struct FWorldRegionGameDataCategories_DONTUSE final
{
public:
	uint8                                         Pad_0[0x1];                                        // 0x0000(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FWorldRegionGameDataCategories_DONTUSE;

}

