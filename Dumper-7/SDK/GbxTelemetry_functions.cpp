#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GbxTelemetry

#include "Basic.hpp"

#include "GbxTelemetry_classes.hpp"
#include "GbxTelemetry_parameters.hpp"


namespace SDK
{

// Function GbxTelemetry.GbxTelemetryBlueprintLibrary.CSVExporter_EnableExportedStats
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             ExportedStatsGroup                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGbxTelemetryBlueprintLibrary::CSVExporter_EnableExportedStats(class FName ExportedStatsGroup)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxTelemetryBlueprintLibrary", "CSVExporter_EnableExportedStats");

	Params::GbxTelemetryBlueprintLibrary_CSVExporter_EnableExportedStats Parms{};

	Parms.ExportedStatsGroup = ExportedStatsGroup;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GbxTelemetry.GbxTelemetryBlueprintLibrary.CSVExporter_IgnoreStats
// (Final, Native, Static, Public, BlueprintCallable)

void UGbxTelemetryBlueprintLibrary::CSVExporter_IgnoreStats()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxTelemetryBlueprintLibrary", "CSVExporter_IgnoreStats");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GbxTelemetry.GbxTelemetryBlueprintLibrary.CSVExporter_ProcessStats
// (Final, Native, Static, Public, BlueprintCallable)

void UGbxTelemetryBlueprintLibrary::CSVExporter_ProcessStats()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxTelemetryBlueprintLibrary", "CSVExporter_ProcessStats");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GbxTelemetry.GbxTelemetryBlueprintLibrary.GetIsCSVProfilerFinished
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGbxTelemetryBlueprintLibrary::GetIsCSVProfilerFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxTelemetryBlueprintLibrary", "GetIsCSVProfilerFinished");

	Params::GbxTelemetryBlueprintLibrary_GetIsCSVProfilerFinished Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GbxTelemetry.GbxTelemetryBlueprintLibrary.SetCSVEvent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    EventString                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGbxTelemetryBlueprintLibrary::SetCSVEvent(const class FString& EventString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxTelemetryBlueprintLibrary", "SetCSVEvent");

	Params::GbxTelemetryBlueprintLibrary_SetCSVEvent Parms{};

	Parms.EventString = std::move(EventString);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GbxTelemetry.GbxTelemetryBlueprintLibrary.SetCSVMetadata
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    data                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGbxTelemetryBlueprintLibrary::SetCSVMetadata(const class FString& Key, const class FString& data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxTelemetryBlueprintLibrary", "SetCSVMetadata");

	Params::GbxTelemetryBlueprintLibrary_SetCSVMetadata Parms{};

	Parms.Key = std::move(Key);
	Parms.data = std::move(data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

