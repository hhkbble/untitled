#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GbxCore

#include "Basic.hpp"

#include "GbxCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "DeveloperSettings_classes.hpp"


namespace SDK
{

// Class GbxCore.GbxAnalyticsLLM
// 0x0008 (0x0030 - 0x0028)
class UGbxAnalyticsLLM final : public UObject
{
public:
	float                                         ReportIntervalS;                                   // 0x0028(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGbxLLMReport                                 ReportSetting;                                     // 0x002C(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxAnalyticsLLM")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxAnalyticsLLM")
	}
	static class UGbxAnalyticsLLM* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxAnalyticsLLM>();
	}
};
DUMPER7_ASSERTS_UGbxAnalyticsLLM;

// Class GbxCore.GbxAnalyticsLogWatcher
// 0x0010 (0x0038 - 0x0028)
class UGbxAnalyticsLogWatcher final : public UObject
{
public:
	class FString                                 MaxVerbosity;                                      // 0x0028(0x0010)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxAnalyticsLogWatcher")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxAnalyticsLogWatcher")
	}
	static class UGbxAnalyticsLogWatcher* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxAnalyticsLogWatcher>();
	}
};
DUMPER7_ASSERTS_UGbxAnalyticsLogWatcher;

// Class GbxCore.GbxAnalyticsProvider
// 0x0108 (0x0130 - 0x0028)
class UGbxAnalyticsProvider final : public UObject
{
public:
	uint8                                         Pad_28[0x18];                                      // 0x0028(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGbxAnalyticsProviderSetup>     ProviderSetups;                                    // 0x0040(0x0010)(ZeroConstructor, Transient, Config, NativeAccessSpecifierPrivate)
	TMap<class FName, class UGbxAnalyticsProviderBase*> SharedProviders;                             // 0x0050(0x0050)(Transient, UObjectWrapper, NativeAccessSpecifierPrivate)
	class FString                                 FilePath;                                          // 0x00A0(0x0010)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                 SharedPath;                                        // 0x00B0(0x0010)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_C0[0x70];                                      // 0x00C0(0x0070)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxAnalyticsProvider")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxAnalyticsProvider")
	}
	static class UGbxAnalyticsProvider* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxAnalyticsProvider>();
	}
};
DUMPER7_ASSERTS_UGbxAnalyticsProvider;

// Class GbxCore.GbxAnalyticsContextResolver
// 0x0008 (0x0030 - 0x0028)
class UGbxAnalyticsContextResolver : public UObject
{
public:
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxAnalyticsContextResolver")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxAnalyticsContextResolver")
	}
	static class UGbxAnalyticsContextResolver* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxAnalyticsContextResolver>();
	}
};
DUMPER7_ASSERTS_UGbxAnalyticsContextResolver;

// Class GbxCore.GbxAnalyticsProviderBase
// 0x0038 (0x0060 - 0x0028)
class UGbxAnalyticsProviderBase : public UObject
{
public:
	bool                                          bEnableByDefault;                                  // 0x0028(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           Attributes;                                        // 0x0030(0x0010)(ZeroConstructor, Config, Protected, NativeAccessSpecifierProtected)
	bool                                          bIsInstanced;                                      // 0x0040(0x0001)(ZeroConstructor, Config, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_41[0xF];                                       // 0x0041(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UGbxAnalyticsProviderBase*>      Instances;                                         // 0x0050(0x0010)(ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxAnalyticsProviderBase")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxAnalyticsProviderBase")
	}
	static class UGbxAnalyticsProviderBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxAnalyticsProviderBase>();
	}
};
DUMPER7_ASSERTS_UGbxAnalyticsProviderBase;

// Class GbxCore.GbxAnalyticsProviderCSV
// 0x0038 (0x0098 - 0x0060)
class UGbxAnalyticsProviderCSV final : public UGbxAnalyticsProviderBase
{
public:
	struct FGbxAnalyticsFileOptions               FileOptions;                                       // 0x0060(0x0028)(Config, NativeAccessSpecifierPublic)
	bool                                          bAppend;                                           // 0x0088(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_89[0xF];                                       // 0x0089(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxAnalyticsProviderCSV")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxAnalyticsProviderCSV")
	}
	static class UGbxAnalyticsProviderCSV* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxAnalyticsProviderCSV>();
	}
};
DUMPER7_ASSERTS_UGbxAnalyticsProviderCSV;

// Class GbxCore.GbxAnalyticsProviderLog
// 0x0050 (0x00B0 - 0x0060)
class UGbxAnalyticsProviderLog final : public UGbxAnalyticsProviderBase
{
public:
	uint8                                         Pad_60[0x50];                                      // 0x0060(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxAnalyticsProviderLog")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxAnalyticsProviderLog")
	}
	static class UGbxAnalyticsProviderLog* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxAnalyticsProviderLog>();
	}
};
DUMPER7_ASSERTS_UGbxAnalyticsProviderLog;

// Class GbxCore.GbxAnalyticsProviderDebug
// 0x0000 (0x0060 - 0x0060)
class UGbxAnalyticsProviderDebug final : public UGbxAnalyticsProviderBase
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxAnalyticsProviderDebug")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxAnalyticsProviderDebug")
	}
	static class UGbxAnalyticsProviderDebug* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxAnalyticsProviderDebug>();
	}
};
DUMPER7_ASSERTS_UGbxAnalyticsProviderDebug;

// Class GbxCore.GbxAnalyticsSettings
// 0x0028 (0x0068 - 0x0040)
class UGbxAnalyticsSettings final : public UDeveloperSettingsBackedByNexus
{
public:
	TArray<struct FGbxCategoryProvidersSetup>     CategorySetups;                                    // 0x0040(0x0010)(Edit, EditFixedSize, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FGbxDataCollectorConfig>        DataCollectorConfigs;                              // 0x0050(0x0010)(Edit, EditFixedSize, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	EGbxElasticExportOptions                      ElasticExportOptions;                              // 0x0060(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxAnalyticsSettings")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxAnalyticsSettings")
	}
	static class UGbxAnalyticsSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxAnalyticsSettings>();
	}
};
DUMPER7_ASSERTS_UGbxAnalyticsSettings;

// Class GbxCore.TestInlineStructObject
// 0x00E0 (0x0108 - 0x0028)
class UTestInlineStructObject final : public UObject
{
public:
	struct FGbxInlineStruct                       GenericInlineStruct;                               // 0x0028(0x0018)(Edit, NativeAccessSpecifierPublic)
	struct FGbxInlineStruct                       BaseTypeStruct;                                    // 0x0040(0x0018)(Edit, NativeAccessSpecifierPublic)
	struct FGbxInlineStruct                       DerivedTypeStruct;                                 // 0x0058(0x0018)(Edit, NativeAccessSpecifierPublic)
	struct FGbxInlineStruct                       StructWithCodeDefaultValue;                        // 0x0070(0x0018)(Edit, NativeAccessSpecifierPublic)
	struct FGbxInlineStruct                       ForwardDeclaredStruct;                             // 0x0088(0x0018)(Edit, NativeAccessSpecifierPublic)
	struct FGbxInlineStruct                       ForwardDeclaredBeforeUhtParseStruct;               // 0x00A0(0x0018)(Edit, NativeAccessSpecifierPublic)
	struct FGbxInlineStruct                       EmptyReadOnlyStruct;                               // 0x00B8(0x0018)(Edit, EditConst, NativeAccessSpecifierPublic)
	struct FGbxInlineStruct                       ReadOnlyStructWithDefaultValue;                    // 0x00D0(0x0018)(Edit, EditConst, NativeAccessSpecifierPublic)
	TArray<struct FGbxInlineStruct>               DynamicArrayOfInlineStructs;                       // 0x00E8(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FGbxInlineStruct>               DynamicArrayOfForwardDeclaredInlineStructs;        // 0x00F8(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TestInlineStructObject")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TestInlineStructObject")
	}
	static class UTestInlineStructObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTestInlineStructObject>();
	}
};
DUMPER7_ASSERTS_UTestInlineStructObject;

// Class GbxCore.TestInterfaceContext
// 0x0000 (0x0000 - 0x0000)
class ITestInterfaceContext final
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TestInterfaceContext")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TestInterfaceContext")
	}
	static class ITestInterfaceContext* GetDefaultObj()
	{
		return GetDefaultObjImpl<ITestInterfaceContext>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_ITestInterfaceContext;

// Class GbxCore.TestObjectContext
// 0x0038 (0x0060 - 0x0028)
class UTestObjectContext final : public UObject
{
public:
	uint8                                         Pad_28[0x28];                                      // 0x0028(0x0028)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAttributeFloat                     AttributeProperty;                                 // 0x0050(0x000C)(ZeroConstructor, NativeAccessSpecifierPublic)
	float                                         FloatProperty;                                     // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("TestObjectContext")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"TestObjectContext")
	}
	static class UTestObjectContext* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTestObjectContext>();
	}
};
DUMPER7_ASSERTS_UTestObjectContext;

}

