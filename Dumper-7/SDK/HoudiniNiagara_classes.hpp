#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HoudiniNiagara

#include "Basic.hpp"

#include "HoudiniNiagara_structs.hpp"
#include "Niagara_classes.hpp"
#include "CoreUObject_classes.hpp"


namespace SDK
{

// Class HoudiniNiagara.HoudiniPointCache
// 0x00C0 (0x00E8 - 0x0028)
class UHoudiniPointCache final : public UObject
{
public:
	class FString                                 Filename;                                          // 0x0028(0x0010)(Edit, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NumberOfSamples;                                   // 0x0038(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NumberOfAttributes;                                // 0x003C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NumberOfPoints;                                    // 0x0040(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NumberOfFrames;                                    // 0x0044(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FirstFrame;                                        // 0x0048(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LastFrame;                                         // 0x004C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinSampleTime;                                     // 0x0050(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxSampleTime;                                     // 0x0054(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 SourceCSVTitleRow;                                 // 0x0058(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         AttributeArray;                                    // 0x0068(0x0010)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	uint8                                         Pad_78[0x8];                                       // 0x0078(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 FloatSampleData;                                   // 0x0080(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<float>                                 SpawnTimes;                                        // 0x0090(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<float>                                 LifeValues;                                        // 0x00A0(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<int32>                                 PointTypes;                                        // 0x00B0(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<int32>                                 SpecialAttributeIndexes;                           // 0x00C0(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FPointIndexes>                  PointValueIndexes;                                 // 0x00D0(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	bool                                          UseCustomCSVTitleRow;                              // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EHoudiniPointCacheFileType                    FileType;                                          // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_E2[0x6];                                       // 0x00E2(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static bool GetAttributeIndexInArrayFromString(const class FString& InAttribute, const TArray<class FString>& InAttributeArray, int32* OutAttributeIndex);

	void SetUseCustomCSVTitleRow(bool bInUseCustomCSVTitleRow);

	bool GetAttributeIndexFromString(const class FString& attribute, int32* AttributeIndex) const;
	bool GetColorValue(const int32& SampleIndex, struct FLinearColor* Value) const;
	const TArray<float> GetFloatSampleData() const;
	bool GetFloatValue(const int32& SampleIndex, const int32& attrIndex, float* Value) const;
	bool GetFloatValueForString(const int32& SampleIndex, const class FString& attribute, float* Value) const;
	bool GetImpulseValue(const int32& SampleIndex, float* Value) const;
	bool GetLastPointIDToSpawnAtTime(const float& time, int32* lastID) const;
	bool GetLastSampleIndexAtTime(const float& desiredTime, int32* lastSampleIndex) const;
	const TArray<float> GetLifeValues() const;
	bool GetNormalValue(const int32& SampleIndex, struct FVector* Value) const;
	int32 GetNumberOfAttributes() const;
	int32 GetNumberOfPoints() const;
	int32 GetNumberOfSamples() const;
	bool GetPointFloatValueAtTime(int32 POINTID, int32 AttributeIndex, float desiredTime, float* Value) const;
	bool GetPointIDsToSpawnAtTime(const float& desiredTime, int32* MinID, int32* MaxID, int32* Count, int32* LastSpawnedPointID, float* LastSpawnTime, float* LastSpawnTimeRequest) const;
	bool GetPointInt32ValueAtTime(int32 POINTID, int32 AttributeIndex, float desiredTime, int32* Value) const;
	bool GetPointLife(const int32& POINTID, float* Value) const;
	bool GetPointLifeAtTime(const int32& POINTID, const float& desiredTime, float* Value) const;
	bool GetPointPositionAtTime(const int32& POINTID, const float& desiredTime, struct FVector* Vector) const;
	bool GetPointQuatValueAtTime(int32 POINTID, int32 AttributeIndex, float desiredTime, struct FQuat* Quat, bool DoHoudiniToUnrealConversion) const;
	bool GetPointQuatValueAtTimeForString(int32 POINTID, const class FString& attribute, float desiredTime, struct FQuat* Quat, bool DoHoudiniToUnrealConversion) const;
	bool GetPointType(const int32& POINTID, int32* Value) const;
	const TArray<int32> GetPointTypes() const;
	bool GetPointValueAtTime(const int32& POINTID, const int32& AttributeIndex, const float& desiredTime, float* Value) const;
	bool GetPointValueAtTimeForString(const int32& POINTID, const class FString& attribute, const float& desiredTime, float* Value) const;
	const TArray<struct FPointIndexes> GetPointValueIndexes() const;
	bool GetPointVector4ValueAtTime(int32 POINTID, int32 AttributeIndex, float desiredTime, struct FVector4* Vector) const;
	bool GetPointVector4ValueAtTimeForString(int32 POINTID, const class FString& attribute, float desiredTime, struct FVector4* Vector) const;
	bool GetPointVectorValueAtTime(int32 POINTID, int32 AttributeIndex, float desiredTime, struct FVector* Vector, bool DoSwap, bool DoScale) const;
	bool GetPointVectorValueAtTimeForString(int32 POINTID, const class FString& attribute, float desiredTime, struct FVector* Vector, bool DoSwap, bool DoScale) const;
	bool GetPositionValue(const int32& SampleIndex, struct FVector* Value) const;
	bool GetQuatValue(const int32& SampleIndex, const int32& attrIndex, struct FQuat* Value, const bool& DoHoudiniToUnrealConversion) const;
	bool GetQuatValueForString(const int32& SampleIndex, const class FString& attribute, struct FQuat* Value, const bool& DoHoudiniToUnrealConversion) const;
	bool GetSampleIndexesForPointAtTime(const int32& POINTID, const float& desiredTime, int32* PrevSampleIndex, int32* NextSampleIndex, float* PrevWeight) const;
	const TArray<float> GetSpawnTimes() const;
	const TArray<int32> GetSpecialAttributeIndexes() const;
	bool GetTimeValue(const int32& SampleIndex, float* Value) const;
	bool GetUseCustomCSVTitleRow() const;
	bool GetVector4Value(const int32& SampleIndex, const int32& attrIndex, struct FVector4* Value) const;
	bool GetVector4ValueForString(const int32& SampleIndex, const class FString& attribute, struct FVector4* Value) const;
	bool GetVectorValue(const int32& SampleIndex, const int32& attrIndex, struct FVector* Value, const bool& DoSwap, const bool& DoScale) const;
	bool GetVectorValueForString(const int32& SampleIndex, const class FString& attribute, struct FVector* Value, const bool& DoSwap, const bool& DoScale) const;
	bool GetVelocityValue(const int32& SampleIndex, struct FVector* Value) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("HoudiniPointCache")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"HoudiniPointCache")
	}
	static class UHoudiniPointCache* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHoudiniPointCache>();
	}
};
DUMPER7_ASSERTS_UHoudiniPointCache;

// Class HoudiniNiagara.NiagaraDataInterfaceHoudini
// 0x0008 (0x0040 - 0x0038)
class UNiagaraDataInterfaceHoudini final : public UNiagaraDataInterface
{
public:
	class UHoudiniPointCache*                     HoudiniPointCacheAsset;                            // 0x0038(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NiagaraDataInterfaceHoudini")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NiagaraDataInterfaceHoudini")
	}
	static class UNiagaraDataInterfaceHoudini* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNiagaraDataInterfaceHoudini>();
	}
};
DUMPER7_ASSERTS_UNiagaraDataInterfaceHoudini;

}

