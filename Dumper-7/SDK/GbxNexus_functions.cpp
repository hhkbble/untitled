#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GbxNexus

#include "Basic.hpp"

#include "GbxNexus_classes.hpp"
#include "GbxNexus_parameters.hpp"


namespace SDK
{

// Function GbxNexus.NexusBitTagsLibrary.HasAllTags
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FNexusBitSet&              Set                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FNexusBitSet&              OtherSet                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UNexusBitTagsLibrary::HasAllTags(const struct FNexusBitSet& Set, const struct FNexusBitSet& OtherSet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("NexusBitTagsLibrary", "HasAllTags");

	Params::NexusBitTagsLibrary_HasAllTags Parms{};

	Parms.Set = std::move(Set);
	Parms.OtherSet = std::move(OtherSet);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GbxNexus.NexusBitTagsLibrary.HasAnyTags
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FNexusBitSet&              Set                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FNexusBitSet&              OtherSet                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UNexusBitTagsLibrary::HasAnyTags(const struct FNexusBitSet& Set, const struct FNexusBitSet& OtherSet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("NexusBitTagsLibrary", "HasAnyTags");

	Params::NexusBitTagsLibrary_HasAnyTags Parms{};

	Parms.Set = std::move(Set);
	Parms.OtherSet = std::move(OtherSet);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GbxNexus.NexusBitTagsLibrary.HasTag
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FNexusBitSet&              Set                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FName                             Tag                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UNexusBitTagsLibrary::HasTag(const struct FNexusBitSet& Set, class FName Tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("NexusBitTagsLibrary", "HasTag");

	Params::NexusBitTagsLibrary_HasTag Parms{};

	Parms.Set = std::move(Set);
	Parms.Tag = Tag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GbxNexus.NexusBPLibrary.ConfigFromYAML
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    YAMLStr                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FNexusConfigDataBP               ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FNexusConfigDataBP UNexusBPLibrary::ConfigFromYAML(const class FString& YAMLStr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("NexusBPLibrary", "ConfigFromYAML");

	Params::NexusBPLibrary_ConfigFromYAML Parms{};

	Parms.YAMLStr = std::move(YAMLStr);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GbxNexus.NexusBPLibrary.GetSubByIndex
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FNexusConfigDataBP&        NCD                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FNexusConfigDataBP               ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FNexusConfigDataBP UNexusBPLibrary::GetSubByIndex(const struct FNexusConfigDataBP& NCD, int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("NexusBPLibrary", "GetSubByIndex");

	Params::NexusBPLibrary_GetSubByIndex Parms{};

	Parms.NCD = std::move(NCD);
	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GbxNexus.NexusBPLibrary.GetSubByName
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FNexusConfigDataBP&        NCD                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const class FString&                    Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FNexusConfigDataBP               ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FNexusConfigDataBP UNexusBPLibrary::GetSubByName(const struct FNexusConfigDataBP& NCD, const class FString& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("NexusBPLibrary", "GetSubByName");

	Params::NexusBPLibrary_GetSubByName Parms{};

	Parms.NCD = std::move(NCD);
	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GbxNexus.NexusBPLibrary.GetValueAsFloat
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FNexusConfigDataBP&        NCD                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// float                                   Default                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UNexusBPLibrary::GetValueAsFloat(const struct FNexusConfigDataBP& NCD, float Default)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("NexusBPLibrary", "GetValueAsFloat");

	Params::NexusBPLibrary_GetValueAsFloat Parms{};

	Parms.NCD = std::move(NCD);
	Parms.Default = Default;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GbxNexus.NexusBPLibrary.GetValueAsInt32
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FNexusConfigDataBP&        NCD                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   Default                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UNexusBPLibrary::GetValueAsInt32(const struct FNexusConfigDataBP& NCD, int32 Default)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("NexusBPLibrary", "GetValueAsInt32");

	Params::NexusBPLibrary_GetValueAsInt32 Parms{};

	Parms.NCD = std::move(NCD);
	Parms.Default = Default;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GbxNexus.NexusBPLibrary.GetValueAsString
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FNexusConfigDataBP&        NCD                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const class FString&                    Default                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UNexusBPLibrary::GetValueAsString(const struct FNexusConfigDataBP& NCD, const class FString& Default)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("NexusBPLibrary", "GetValueAsString");

	Params::NexusBPLibrary_GetValueAsString Parms{};

	Parms.NCD = std::move(NCD);
	Parms.Default = std::move(Default);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GbxNexus.NexusBPLibrary.IsMap
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FNexusConfigDataBP&        NCD                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UNexusBPLibrary::IsMap(const struct FNexusConfigDataBP& NCD)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("NexusBPLibrary", "IsMap");

	Params::NexusBPLibrary_IsMap Parms{};

	Parms.NCD = std::move(NCD);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GbxNexus.NexusBPLibrary.IsScalar
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FNexusConfigDataBP&        NCD                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UNexusBPLibrary::IsScalar(const struct FNexusConfigDataBP& NCD)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("NexusBPLibrary", "IsScalar");

	Params::NexusBPLibrary_IsScalar Parms{};

	Parms.NCD = std::move(NCD);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GbxNexus.NexusBPLibrary.IsSequence
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FNexusConfigDataBP&        NCD                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UNexusBPLibrary::IsSequence(const struct FNexusConfigDataBP& NCD)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("NexusBPLibrary", "IsSequence");

	Params::NexusBPLibrary_IsSequence Parms{};

	Parms.NCD = std::move(NCD);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GbxNexus.NexusBPLibrary.IsValid
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FNexusConfigDataBP&        NCD                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UNexusBPLibrary::IsValid(const struct FNexusConfigDataBP& NCD)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("NexusBPLibrary", "IsValid");

	Params::NexusBPLibrary_IsValid Parms{};

	Parms.NCD = std::move(NCD);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GbxNexus.NexusBPLibrary.ToString
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FNexusConfigDataBP&        NCD                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UNexusBPLibrary::ToString(const struct FNexusConfigDataBP& NCD)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("NexusBPLibrary", "ToString");

	Params::NexusBPLibrary_ToString Parms{};

	Parms.NCD = std::move(NCD);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GbxNexus.NexusConfigStoreMetaData.GetStructPropertyNames
// (Final, Native, Static, Protected, HasOutParams)
// Parameters:
// class UObject*                          Outer_0                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FName>*                    OutNames                                               (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UNexusConfigStoreMetaData::GetStructPropertyNames(class UObject* Outer_0, TArray<class FName>* OutNames)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("NexusConfigStoreMetaData", "GetStructPropertyNames");

	Params::NexusConfigStoreMetaData_GetStructPropertyNames Parms{};

	Parms.Outer_0 = Outer_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutNames != nullptr)
		*OutNames = std::move(Parms.OutNames);
}


// Function GbxNexus.NexusSerializeTestSettings.GetAvailableLayers
// (Final, Native, Static, Private, HasOutParams)
// Parameters:
// TArray<class FName>*                    OutLayers                                              (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UNexusSerializeTestSettings::GetAvailableLayers(TArray<class FName>* OutLayers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("NexusSerializeTestSettings", "GetAvailableLayers");

	Params::NexusSerializeTestSettings_GetAvailableLayers Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutLayers != nullptr)
		*OutLayers = std::move(Parms.OutLayers);
}

}

