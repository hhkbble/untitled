#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GbxNav

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "GbxNav_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "GbxEngine_structs.hpp"
#include "GbxEngine_classes.hpp"
#include "GbxSpawn_classes.hpp"


namespace SDK
{

// Class GbxNav.AINode
// 0x0018 (0x03A8 - 0x0390)
class AAINode : public AActor
{
public:
	uint8                                         Pad_390[0x10];                                     // 0x0390(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UAINodeComponent*                       AINodeComponent;                                   // 0x03A0(0x0008)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AINode")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AINode")
	}
	static class AAINode* GetDefaultObj()
	{
		return GetDefaultObjImpl<AAINode>();
	}
};
DUMPER7_ASSERTS_AAINode;

// Class GbxNav.AINodeComponent
// 0x0060 (0x0660 - 0x0600)
class UAINodeComponent : public UPrimitiveComponent
{
public:
	uint8                                         Pad_5F8[0x38];                                     // 0x05F8(0x0038)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         NodeRadius;                                        // 0x0630(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         NodeChainRadius;                                   // 0x0634(0x0004)(Edit, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         NodeHeight;                                        // 0x0638(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bShowHeight;                                       // 0x063C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_63D[0x23];                                     // 0x063D(0x0023)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AINodeComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AINodeComponent")
	}
	static class UAINodeComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAINodeComponent>();
	}
};
DUMPER7_ASSERTS_UAINodeComponent;

// Class GbxNav.AINodeOwner
// 0x0000 (0x0000 - 0x0000)
class IAINodeOwner final
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AINodeOwner")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AINodeOwner")
	}
	static class IAINodeOwner* GetDefaultObj()
	{
		return GetDefaultObjImpl<IAINodeOwner>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_IAINodeOwner;

// Class GbxNav.AnimNotifyState_GbxNavStretch
// 0x0000 (0x0030 - 0x0030)
class UAnimNotifyState_GbxNavStretch final : public UAnimNotifyState
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimNotifyState_GbxNavStretch")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimNotifyState_GbxNavStretch")
	}
	static class UAnimNotifyState_GbxNavStretch* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimNotifyState_GbxNavStretch>();
	}
};
DUMPER7_ASSERTS_UAnimNotifyState_GbxNavStretch;

// Class GbxNav.AnimNotifyState_GbxNavEdge
// 0x0000 (0x0030 - 0x0030)
class UAnimNotifyState_GbxNavEdge final : public UAnimNotifyState
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimNotifyState_GbxNavEdge")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimNotifyState_GbxNavEdge")
	}
	static class UAnimNotifyState_GbxNavEdge* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimNotifyState_GbxNavEdge>();
	}
};
DUMPER7_ASSERTS_UAnimNotifyState_GbxNavEdge;

// Class GbxNav.AnimNotifyState_GbxNavHeight
// 0x0008 (0x0038 - 0x0030)
class UAnimNotifyState_GbxNavHeight final : public UAnimNotifyState
{
public:
	float                                         BlendInTime;                                       // 0x0030(0x0004)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BlendOutTime;                                      // 0x0034(0x0004)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimNotifyState_GbxNavHeight")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimNotifyState_GbxNavHeight")
	}
	static class UAnimNotifyState_GbxNavHeight* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimNotifyState_GbxNavHeight>();
	}
};
DUMPER7_ASSERTS_UAnimNotifyState_GbxNavHeight;

// Class GbxNav.HavokNavMeshGenerationSettings
// 0x0080 (0x00B0 - 0x0030)
class UHavokNavMeshGenerationSettings final : public UDataAsset
{
public:
	float                                         Quantum;                                           // 0x0030(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxStepHeight;                                     // 0x0034(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxGapWidth;                                       // 0x0038(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxWalkableSlope;                                  // 0x003C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StitchOverlapDistance;                             // 0x0040(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DesiredFacesPerCluster;                            // 0x0044(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FHavokNavMeshEdgeMatchingSettings      EdgeMatchingSettings;                              // 0x0048(0x0028)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bPruneRegions;                                     // 0x0070(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHavokNavMeshRegionPruningSettings     PruningSettings;                                   // 0x0074(0x000C)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FHavokNavMeshSimplificationSettings    SimplificationSettings;                            // 0x0080(0x0010)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FHavokTraversalSettings                TraversalSettings;                                 // 0x0090(0x0020)(Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("HavokNavMeshGenerationSettings")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"HavokNavMeshGenerationSettings")
	}
	static class UHavokNavMeshGenerationSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHavokNavMeshGenerationSettings>();
	}
};
DUMPER7_ASSERTS_UHavokNavMeshGenerationSettings;

// Class GbxNav.AnimNotify_GbxNavPoseMatch
// 0x0000 (0x0038 - 0x0038)
class UAnimNotify_GbxNavPoseMatch final : public UAnimNotify
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimNotify_GbxNavPoseMatch")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimNotify_GbxNavPoseMatch")
	}
	static class UAnimNotify_GbxNavPoseMatch* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimNotify_GbxNavPoseMatch>();
	}
};
DUMPER7_ASSERTS_UAnimNotify_GbxNavPoseMatch;

// Class GbxNav.GbxBaseAINavComponent
// 0x0010 (0x0610 - 0x0600)
class UGbxBaseAINavComponent : public UPrimitiveComponent
{
public:
	struct FGuid                                  DominationGuid;                                    // 0x05F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NonPIEDuplicateTransient, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_608[0x8];                                      // 0x0608(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxBaseAINavComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxBaseAINavComponent")
	}
	static class UGbxBaseAINavComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxBaseAINavComponent>();
	}
};
DUMPER7_ASSERTS_UGbxBaseAINavComponent;

// Class GbxNav.GbxFlightNav
// 0x0018 (0x03A8 - 0x0390)
class AGbxFlightNav final : public AActor
{
public:
	bool                                          bAutomaticallyPlaced;                              // 0x0390(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_391[0x7];                                      // 0x0391(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGbxNavBoxComponent*                    BoxComponent;                                      // 0x0398(0x0008)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxFlightNavComponent*                 FlightNavComponent;                                // 0x03A0(0x0008)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void BuildFlightNav();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxFlightNav")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxFlightNav")
	}
	static class AGbxFlightNav* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGbxFlightNav>();
	}
};
DUMPER7_ASSERTS_AGbxFlightNav;

// Class GbxNav.GbxStanceUser
// 0x0000 (0x0000 - 0x0000)
class IGbxStanceUser final
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxStanceUser")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxStanceUser")
	}
	static class IGbxStanceUser* GetDefaultObj()
	{
		return GetDefaultObjImpl<IGbxStanceUser>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_IGbxStanceUser;

// Class GbxNav.GbxFlightNavComponent
// 0x0060 (0x0670 - 0x0610)
class UGbxFlightNavComponent final : public UGbxBaseAINavComponent
{
public:
	uint8                                         Pad_610[0x20];                                     // 0x0610(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UGbxFlightNavLayer*>             layers;                                            // 0x0630(0x0010)(Edit, ZeroConstructor, NoClear, UObjectWrapper, NativeAccessSpecifierPrivate)
	struct FGbxFlightNavData                      data;                                              // 0x0640(0x0028)(NativeAccessSpecifierPrivate)
	uint8                                         Pad_668[0x8];                                      // 0x0668(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxFlightNavComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxFlightNavComponent")
	}
	static class UGbxFlightNavComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxFlightNavComponent>();
	}
};
DUMPER7_ASSERTS_UGbxFlightNavComponent;

// Class GbxNav.GbxFlightNavLayer
// 0x0010 (0x0040 - 0x0030)
class UGbxFlightNavLayer final : public UDataAsset
{
public:
	float                                         AgentHalfHeight;                                   // 0x0030(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AgentDepth;                                        // 0x0034(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AgentWidth;                                        // 0x0038(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                 DrawColor;                                         // 0x003C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxFlightNavLayer")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxFlightNavLayer")
	}
	static class UGbxFlightNavLayer* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxFlightNavLayer>();
	}
};
DUMPER7_ASSERTS_UGbxFlightNavLayer;

// Class GbxNav.GbxNavAnimData
// 0x0408 (0x0438 - 0x0030)
class UGbxNavAnimData final : public UDataAsset
{
public:
	uint8                                         Pad_30[0x8];                                       // 0x0030(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAnimSequence*>                  Idles;                                             // 0x0038(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	TArray<struct FGbxNavAnimSpeedData>           Speeds;                                            // 0x0048(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UAnimSequence*>                  IdleTurns;                                         // 0x0058(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	TArray<class UAnimSequence*>                  MovingTurns;                                       // 0x0068(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	TArray<class UAnimSequence*>                  Starts;                                            // 0x0078(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	TArray<class UAnimSequence*>                  Stops;                                             // 0x0088(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	TMap<class UGbxNavLinkData*, FGbxDefPtrProperty_> Links;                                         // 0x0098(0x0050)(Edit, NativeAccessSpecifierPrivate)
	TArray<class UAnimSequence*>                  Exclude;                                           // 0x00E8(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	float                                         MaxStretchAngle;                                   // 0x00F8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         LookAheadTime;                                     // 0x00FC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FGbxNavAnimDirectionData>       Directions;                                        // 0x0100(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	bool                                          bUseBlendSpace;                                    // 0x0110(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_111[0x3];                                      // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         BlendSpaceDivisions;                               // 0x0114(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bClampPlayRateScale;                               // 0x0118(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_119[0x3];                                      // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MaxSpeedRateScale;                                 // 0x011C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         MinSpeedRateScale;                                 // 0x0120(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EAlphaBlendOption                             LeanBlendType;                                     // 0x0124(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_125[0x3];                                      // 0x0125(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LeanMaxTurnRate;                                   // 0x0128(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         LeanBlendTime;                                     // 0x012C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         FullTurnThreshold;                                 // 0x0130(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         MinMovingTurnAngle;                                // 0x0134(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         IdleTurnBlendSpaceDivisions;                       // 0x0138(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         MinIdleTurnAngle;                                  // 0x013C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGbxNavTurnPrediction                  TurnPrediction;                                    // 0x0140(0x0008)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	class UBlendSpace1D*                          IdleTurnBlendSpace;                                // 0x0148(0x0008)(Edit, ZeroConstructor, EditConst, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         IdleTurnTime;                                      // 0x0150(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EGbxAnimLocomotionPreference                  StrafePreference;                                  // 0x0154(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_155[0x3];                                      // 0x0155(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         StrafeOverlapThreshold;                            // 0x0158(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         StrafeTiltAngle;                                   // 0x015C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bCanPlayerUseStarts;                               // 0x0160(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bCanPlayerUseStops;                                // 0x0161(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bCanPlayerUseMoveTurns;                            // 0x0162(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_163[0x1];                                      // 0x0163(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MaxTransitionDelay;                                // 0x0164(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         InterruptRootAnimAngle;                            // 0x0168(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_16C[0x4];                                      // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxNavAnimBlendData                   DefaultBlendTime;                                  // 0x0170(0x0030)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	TArray<struct FGbxNavAnimBlendTransition>     BlendTimes;                                        // 0x01A0(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	float                                         MaxRateScale;                                      // 0x01B0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         MinRateScale;                                      // 0x01B4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGbxPoseMatchData                      MatchData;                                         // 0x01B8(0x0208)(Edit, NativeAccessSpecifierPrivate)
	TArray<class UAnimSequence*>                  CleanIdles;                                        // 0x03C0(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	TArray<class UAnimSequence*>                  CleanMoveTurns;                                    // 0x03D0(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	TMap<class UAnimSequence*, EGbxNavAnimType>   TypeMap;                                           // 0x03E0(0x0050)(NativeAccessSpecifierPrivate)
	bool                                          bHasStartTurns;                                    // 0x0430(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_431[0x7];                                      // 0x0431(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Build();
	void Populate();

	void GetMoveAnims(TArray<class UAnimSequence*>* OutOptions) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxNavAnimData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxNavAnimData")
	}
	static class UGbxNavAnimData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxNavAnimData>();
	}
};
DUMPER7_ASSERTS_UGbxNavAnimData;

// Class GbxNav.GbxNavAnimInstance
// 0x0010 (0x0570 - 0x0560)
class UGbxNavAnimInstance : public UGbxEngineAnimInstance
{
public:
	class UGbxNavCharacterMovementComponent*      MoveComponent;                                     // 0x0558(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bInUserEdge;                                       // 0x0560(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_561[0xF];                                      // 0x0561(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnStanceChange();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxNavAnimInstance")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxNavAnimInstance")
	}
	static class UGbxNavAnimInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxNavAnimInstance>();
	}
};
DUMPER7_ASSERTS_UGbxNavAnimInstance;

// Class GbxNav.HavokTraversalData
// 0x0028 (0x0058 - 0x0030)
class UHavokTraversalData : public UDataAsset
{
public:
	float                                         MaxPlanarAngle;                                    // 0x0030(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxRelativeSlopeAngle;                             // 0x0034(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BaseCost;                                          // 0x0038(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UGbxNavMeshLayer*>               AssociatedLayers;                                  // 0x0040(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	class UGbxNavLinkData*                        Link;                                              // 0x0050(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("HavokTraversalData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"HavokTraversalData")
	}
	static class UHavokTraversalData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHavokTraversalData>();
	}
};
DUMPER7_ASSERTS_UHavokTraversalData;

// Class GbxNav.GbxNavBlocker
// 0x0000 (0x0390 - 0x0390)
class AGbxNavBlocker final : public AActor
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxNavBlocker")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxNavBlocker")
	}
	static class AGbxNavBlocker* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGbxNavBlocker>();
	}
};
DUMPER7_ASSERTS_AGbxNavBlocker;

// Class GbxNav.GbxNavBlueprintLibrary
// 0x0000 (0x0028 - 0x0028)
class UGbxNavBlueprintLibrary final : public UBlueprintFunctionLibrary
{
public:
	static void BreakGbxNavQueryData(const struct FGbxNavQueryData& QueryData, class UGbxNavMeshLayer** layer, class UGbxNavAreaUserData** Areas, class UGbxNavEdgeUserData** Edges);
	static void ClearNavModifierOverride();
	static bool FindPathOnNavMesh(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& Goal, float AgentRadius, const struct FGbxNavQueryData& QueryData);
	static class FString GetGbxNavAnimPath(class AActor* Actor);
	static void LockNavigation(class AActor* Actor, class FName reason, bool Block);
	static void LockStance(class AActor* Actor, class FName reason, bool Block, FGameDataHandleProperty_ stance);
	static struct FGbxNavQueryData MakeGbxNavQueryData(class UGbxNavMeshLayer* layer, class UGbxNavAreaUserData* Areas, class UGbxNavEdgeUserData* Edges);
	static bool ProjectToNavMesh(class UObject* WorldContextObject, const struct FVector& Start, float Distance, const struct FGbxNavQueryData& QueryData, struct FVector* Result);
	static void SetNavModifierOverride(const struct FGbxNavGoalModifiers& Modifiers);
	static bool TraceNavMesh(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& Goal, float AgentRadius, const struct FGbxNavQueryData& QueryData);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxNavBlueprintLibrary")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxNavBlueprintLibrary")
	}
	static class UGbxNavBlueprintLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxNavBlueprintLibrary>();
	}
};
DUMPER7_ASSERTS_UGbxNavBlueprintLibrary;

// Class GbxNav.GbxNavBoxComponent
// 0x0030 (0x0660 - 0x0630)
#pragma pack(push, 0x1)
class alignas(0x10) UGbxNavBoxComponent : public UBoxComponent
{
public:
	bool                                          bShowInLevelEditor;                                // 0x0630(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_631[0x27];                                     // 0x0631(0x0027)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxNavBoxComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxNavBoxComponent")
	}
	static class UGbxNavBoxComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxNavBoxComponent>();
	}
};
#pragma pack(pop)
DUMPER7_ASSERTS_UGbxNavBoxComponent;

// Class GbxNav.GbxNavChannel
// 0x0098 (0x0100 - 0x0068)
class UGbxNavChannel final : public Uchannel
{
public:
	uint8                                         Pad_68[0x98];                                      // 0x0068(0x0098)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxNavChannel")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxNavChannel")
	}
	static class UGbxNavChannel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxNavChannel>();
	}
};
DUMPER7_ASSERTS_UGbxNavChannel;

// Class GbxNav.GbxNavCharacter
// 0x0010 (0x0830 - 0x0820)
class AGbxNavCharacter : public AGbxEngineCharacter
{
public:
	class FName                                   ReplicatedStance;                                  // 0x0818(0x0008)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxNavCharacterMovementComponent*      GbxNavMovement;                                    // 0x0820(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_828[0x8];                                      // 0x0828(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnRep_Stance();
	void ReceivedStanceChanged(FGameDataHandleProperty_ OldStance, FGameDataHandleProperty_ NewStance);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxNavCharacter")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxNavCharacter")
	}
	static class AGbxNavCharacter* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGbxNavCharacter>();
	}
};
DUMPER7_ASSERTS_AGbxNavCharacter;

// Class GbxNav.GbxNavCharacterMovementComponent
// 0x0970 (0x1B30 - 0x11C0)
class UGbxNavCharacterMovementComponent : public UGbxEngineCharacterMovementComponent
{
public:
	uint8                                         Pad_11C0[0xC8];                                    // 0x11C0(0x00C8)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxStanceUserState                    StanceState;                                       // 0x1288(0x0208)(BlueprintVisible, BlueprintReadOnly, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const FGameDataHandleProperty_& OldStance, const FGameDataHandleProperty_& NewStance)> ComponentStanceEventBP; // 0x1490(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_14A0[0x18];                                    // 0x14A0(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	class AGbxNavCharacter*                       GbxNavCharacterOwner;                              // 0x14B8(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_14C0[0x4A];                                    // 0x14C0(0x004A)(Fixing Size After Last Property [ Dumper-7 ])
	EGbxNavCharacterType                          ReplicatedNavType;                                 // 0x150A(0x0001)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_150B[0x615];                                   // 0x150B(0x0615)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MinTurnAngle;                                      // 0x1B20(0x0004)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1B24[0xC];                                     // 0x1B24(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnRep_NavType();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxNavCharacterMovementComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxNavCharacterMovementComponent")
	}
	static class UGbxNavCharacterMovementComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxNavCharacterMovementComponent>();
	}
};
DUMPER7_ASSERTS_UGbxNavCharacterMovementComponent;

// Class GbxNav.GbxNavCustomSection
// 0x0000 (0x0028 - 0x0028)
class UGbxNavCustomSection : public UGbxTaggedAnim
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxNavCustomSection")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxNavCustomSection")
	}
	static class UGbxNavCustomSection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxNavCustomSection>();
	}
};
DUMPER7_ASSERTS_UGbxNavCustomSection;

// Class GbxNav.GbxNavCustomSection_Stretch
// 0x0010 (0x0038 - 0x0028)
class UGbxNavCustomSection_Stretch final : public UGbxNavCustomSection
{
public:
	class UAnimSequence*                          Anim;                                              // 0x0028(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         DefaultHeight;                                     // 0x0030(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxNavCustomSection_Stretch")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxNavCustomSection_Stretch")
	}
	static class UGbxNavCustomSection_Stretch* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxNavCustomSection_Stretch>();
	}
};
DUMPER7_ASSERTS_UGbxNavCustomSection_Stretch;

// Class GbxNav.GbxNavCustomSection_Loop
// 0x0008 (0x0030 - 0x0028)
class UGbxNavCustomSection_Loop final : public UGbxNavCustomSection
{
public:
	class UAnimSequence*                          Anim;                                              // 0x0028(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxNavCustomSection_Loop")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxNavCustomSection_Loop")
	}
	static class UGbxNavCustomSection_Loop* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxNavCustomSection_Loop>();
	}
};
DUMPER7_ASSERTS_UGbxNavCustomSection_Loop;

// Class GbxNav.GbxNavCustomSection_Interp
// 0x0008 (0x0030 - 0x0028)
class UGbxNavCustomSection_Interp final : public UGbxNavCustomSection
{
public:
	float                                         EdgeDistance;                                      // 0x0028(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxNavCustomSection_Interp")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxNavCustomSection_Interp")
	}
	static class UGbxNavCustomSection_Interp* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxNavCustomSection_Interp>();
	}
};
DUMPER7_ASSERTS_UGbxNavCustomSection_Interp;

// Class GbxNav.GbxNavCustomSection_FallAndLand
// 0x0018 (0x0040 - 0x0028)
class UGbxNavCustomSection_FallAndLand final : public UGbxNavCustomSection
{
public:
	class UAnimSequence*                          Fall;                                              // 0x0028(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimSequence*                          Land;                                              // 0x0030(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         FallSpeed;                                         // 0x0038(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxNavCustomSection_FallAndLand")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxNavCustomSection_FallAndLand")
	}
	static class UGbxNavCustomSection_FallAndLand* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxNavCustomSection_FallAndLand>();
	}
};
DUMPER7_ASSERTS_UGbxNavCustomSection_FallAndLand;

// Class GbxNav.NexusConfigStoreNavFilterOverride
// 0x0000 (0x0390 - 0x0390)
class UNexusConfigStoreNavFilterOverride final : public UNexusConfigStoreBasic
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NexusConfigStoreNavFilterOverride")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NexusConfigStoreNavFilterOverride")
	}
	static class UNexusConfigStoreNavFilterOverride* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNexusConfigStoreNavFilterOverride>();
	}
};
DUMPER7_ASSERTS_UNexusConfigStoreNavFilterOverride;

// Class GbxNav.GbxNavAreaUserData
// 0x0018 (0x0048 - 0x0030)
class UGbxNavAreaUserData final : public UDataAsset
{
public:
	TArray<struct FGbxNavAreaItem>                Areas;                                             // 0x0030(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bCanTraverseDefaultArea;                           // 0x0040(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxNavAreaUserData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxNavAreaUserData")
	}
	static class UGbxNavAreaUserData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxNavAreaUserData>();
	}
};
DUMPER7_ASSERTS_UGbxNavAreaUserData;

// Class GbxNav.GbxNavEdgeUserData
// 0x0010 (0x0040 - 0x0030)
class UGbxNavEdgeUserData final : public UDataAsset
{
public:
	TArray<struct FGbxNavEdgeItem>                Edges;                                             // 0x0030(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxNavEdgeUserData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxNavEdgeUserData")
	}
	static class UGbxNavEdgeUserData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxNavEdgeUserData>();
	}
};
DUMPER7_ASSERTS_UGbxNavEdgeUserData;

// Class GbxNav.GbxNavCustomSection_Jump
// 0x0030 (0x0058 - 0x0028)
class UGbxNavCustomSection_Jump final : public UGbxNavCustomSection
{
public:
	class UAnimSequence*                          Start;                                             // 0x0028(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimSequence*                          InAir;                                             // 0x0030(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimSequence*                          End;                                               // 0x0038(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         GravityMultiplier;                                 // 0x0040(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         StartBorderDistance;                               // 0x0044(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bOverrideStartDist;                                // 0x0048(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         EndBorderDistance;                                 // 0x004C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bOverrideEndDist;                                  // 0x0050(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxNavCustomSection_Jump")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxNavCustomSection_Jump")
	}
	static class UGbxNavCustomSection_Jump* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxNavCustomSection_Jump>();
	}
};
DUMPER7_ASSERTS_UGbxNavCustomSection_Jump;

// Class GbxNav.GbxNavLinkActor
// 0x0090 (0x0420 - 0x0390)
class AGbxNavLinkActor final : public AActor
{
public:
	TMulticastInlineDelegate<void(class AActor* Actor)> OnLinkStarted;                               // 0x0390(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class AActor* Actor)> OnLinkEnded;                                 // 0x03A0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FTransform                             LinkEnd;                                           // 0x03B0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxNavLinkComponent*                   LinkComponent;                                     // 0x0410(0x0008)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_418[0x8];                                      // 0x0418(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetLinkEnabled(bool bNewEnabled);

	bool IsLinkEnabled() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxNavLinkActor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxNavLinkActor")
	}
	static class AGbxNavLinkActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGbxNavLinkActor>();
	}
};
DUMPER7_ASSERTS_AGbxNavLinkActor;

// Class GbxNav.GbxNavLinkBlocker
// 0x0070 (0x0400 - 0x0390)
class AGbxNavLinkBlocker final : public AActor
{
public:
	class UGbxNavBoxComponent*                    BoxComponent;                                      // 0x0390(0x0008)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UGbxNavLinkData*>                AllowTypes;                                        // 0x0398(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3A8[0x58];                                     // 0x03A8(0x0058)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxNavLinkBlocker")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxNavLinkBlocker")
	}
	static class AGbxNavLinkBlocker* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGbxNavLinkBlocker>();
	}
};
DUMPER7_ASSERTS_AGbxNavLinkBlocker;

// Class GbxNav.GbxNavLinkComponent
// 0x0150 (0x0750 - 0x0600)
class UGbxNavLinkComponent final : public UPrimitiveComponent
{
public:
	uint8                                         Pad_5F8[0x38];                                     // 0x05F8(0x0038)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bEnabled;                                          // 0x0630(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_631[0xF];                                      // 0x0631(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             LinkEnd;                                           // 0x0640(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         LinkBeginWidth;                                    // 0x06A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         LinkEndWidth;                                      // 0x06A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EGbxNavLinkDirection                          Direction;                                         // 0x06A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_6A9[0x7];                                      // 0x06A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGbxNavLinkData*                        Link;                                              // 0x06B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoClear, NoDestructor, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         CustomData;                                        // 0x06B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bSetCustomData;                                    // 0x06BC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_6BD[0x93];                                     // 0x06BD(0x0093)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetLinkEnabled(bool bNewEnabled);

	bool IsLinkEnabled() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxNavLinkComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxNavLinkComponent")
	}
	static class UGbxNavLinkComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxNavLinkComponent>();
	}
};
DUMPER7_ASSERTS_UGbxNavLinkComponent;

// Class GbxNav.GbxNavLinkData
// 0x0010 (0x0040 - 0x0030)
class UGbxNavLinkData final : public UDataAsset
{
public:
	class UGbxNavLinkData*                        ReverseLink;                                       // 0x0030(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FColor                                 DrawColor;                                         // 0x0038(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EGbxNavLinkType                               LinkType;                                          // 0x003C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxNavLinkData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxNavLinkData")
	}
	static class UGbxNavLinkData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxNavLinkData>();
	}
};
DUMPER7_ASSERTS_UGbxNavLinkData;

// Class GbxNav.NexusConfigStore_GbxNavLink
// 0x0000 (0x0390 - 0x0390)
class UNexusConfigStore_GbxNavLink final : public UNexusConfigStoreBasic
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NexusConfigStore_GbxNavLink")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NexusConfigStore_GbxNavLink")
	}
	static class UNexusConfigStore_GbxNavLink* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNexusConfigStore_GbxNavLink>();
	}
};
DUMPER7_ASSERTS_UNexusConfigStore_GbxNavLink;

// Class GbxNav.GbxNavLinkPreviewComponent
// 0x0000 (0x02B0 - 0x02B0)
class UGbxNavLinkPreviewComponent final : public UGbxPreviewComponent
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxNavLinkPreviewComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxNavLinkPreviewComponent")
	}
	static class UGbxNavLinkPreviewComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxNavLinkPreviewComponent>();
	}
};
DUMPER7_ASSERTS_UGbxNavLinkPreviewComponent;

// Class GbxNav.GbxNavMesh
// 0x0018 (0x03A8 - 0x0390)
class AGbxNavMesh : public AActor
{
public:
	bool                                          bAutomaticallyPlaced;                              // 0x0390(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_391[0x7];                                      // 0x0391(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGbxNavBoxComponent*                    BoxComponent;                                      // 0x0398(0x0008)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxNavMeshComponent*                   NavMeshComponent;                                  // 0x03A0(0x0008)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void BuildNavMesh();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxNavMesh")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxNavMesh")
	}
	static class AGbxNavMesh* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGbxNavMesh>();
	}
};
DUMPER7_ASSERTS_AGbxNavMesh;

// Class GbxNav.GbxNavMeshComponent
// 0x00C0 (0x06D0 - 0x0610)
class UGbxNavMeshComponent : public UGbxBaseAINavComponent
{
public:
	TArray<class UGbxNavMeshLayer*>               layers;                                            // 0x0610(0x0010)(Edit, ZeroConstructor, NoClear, UObjectWrapper, NativeAccessSpecifierPrivate)
	bool                                          bAutoAddLinks;                                     // 0x0620(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_621[0xF];                                      // 0x0621(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxNavMeshData                        data;                                              // 0x0630(0x0080)(NativeAccessSpecifierPrivate)
	uint8                                         Pad_6B0[0x20];                                     // 0x06B0(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxNavMeshComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxNavMeshComponent")
	}
	static class UGbxNavMeshComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxNavMeshComponent>();
	}
};
DUMPER7_ASSERTS_UGbxNavMeshComponent;

// Class GbxNav.GbxNavMeshLayer
// 0x0020 (0x0050 - 0x0030)
class UGbxNavMeshLayer final : public UDataAsset
{
public:
	float                                         MaxAgentHalfHeight;                                // 0x0030(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         MaxAgentRadius;                                    // 0x0034(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         MinAgentRadius;                                    // 0x0038(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bSetRadiusManually;                                // 0x003C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LinkDistance;                                      // 0x0040(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bSetLinkDistanceManually;                          // 0x0044(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bErode;                                            // 0x0045(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_46[0x2];                                       // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FColor                                 DrawColor;                                         // 0x0048(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         WaterZOffset;                                      // 0x004C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxNavMeshLayer")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxNavMeshLayer")
	}
	static class UGbxNavMeshLayer* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxNavMeshLayer>();
	}
};
DUMPER7_ASSERTS_UGbxNavMeshLayer;

// Class GbxNav.GbxNavObstacleComponent
// 0x0030 (0x0630 - 0x0600)
class UGbxNavObstacleComponent final : public UPrimitiveComponent
{
public:
	uint8                                         Pad_5F8[0x20];                                     // 0x05F8(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bObstacleEnabled;                                  // 0x0618(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_619[0x3];                                      // 0x0619(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ObstacleRadius;                                    // 0x061C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         ObstacleHalfHeight;                                // 0x0620(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_624[0xC];                                      // 0x0624(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetObstacleEnabled(bool bEnabled);
	void SetObstacleHalfHeight(float HalfHeight);
	void SetObstacleRadius(float Radius);

	float GetObstacleHalfHeight() const;
	float GetObstacleRadius() const;
	bool IsObstacleEnabled() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxNavObstacleComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxNavObstacleComponent")
	}
	static class UGbxNavObstacleComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxNavObstacleComponent>();
	}
};
DUMPER7_ASSERTS_UGbxNavObstacleComponent;

// Class GbxNav.GbxNavPainter
// 0x0008 (0x0398 - 0x0390)
class AGbxNavPainter final : public AActor
{
public:
	class UGbxNavPainterComponent*                PainterComponent;                                  // 0x0390(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void SetPainterEnabled(bool bNewEnabled);

	class UGbxNavPainterComponent* GetPainterComponent() const;
	bool IsPainterEnabled() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxNavPainter")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxNavPainter")
	}
	static class AGbxNavPainter* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGbxNavPainter>();
	}
};
DUMPER7_ASSERTS_AGbxNavPainter;

// Class GbxNav.GbxNavPainterComponent
// 0x00A0 (0x0700 - 0x0660)
class UGbxNavPainterComponent final : public UGbxNavBoxComponent
{
public:
	bool                                          bPainterEnabled;                                   // 0x0658(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EGbxPainterNavFilterType                      FilterType;                                        // 0x0659(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EGbxPainterGeoType                            GeometryType;                                      // 0x065A(0x0001)(Edit, ZeroConstructor, NoClear, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EGbxPainterType                               PainterType;                                       // 0x065B(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bUseBrushShape;                                    // 0x065C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_65D[0x3];                                      // 0x065D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UGbxNavArea*                            Area;                                              // 0x0660(0x0008)(Edit, ZeroConstructor, NoClear, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         UpdateDistance;                                    // 0x0668(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         IdleTime;                                          // 0x066C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_670[0x88];                                     // 0x0670(0x0088)(Fixing Size After Last Property [ Dumper-7 ])
	class ABrush*                                 BrushShape;                                        // 0x06F8(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void SetPainterEnabled(bool bNewEnabled);

	bool IsPainterEnabled() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxNavPainterComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxNavPainterComponent")
	}
	static class UGbxNavPainterComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxNavPainterComponent>();
	}
};
DUMPER7_ASSERTS_UGbxNavPainterComponent;

// Class GbxNav.NexusConfigStoreStanceUserData
// 0x0000 (0x0390 - 0x0390)
class UNexusConfigStoreStanceUserData final : public UNexusConfigStoreBasic
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NexusConfigStoreStanceUserData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NexusConfigStoreStanceUserData")
	}
	static class UNexusConfigStoreStanceUserData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNexusConfigStoreStanceUserData>();
	}
};
DUMPER7_ASSERTS_UNexusConfigStoreStanceUserData;

// Class GbxNav.GbxNavPathTestActor
// 0x0008 (0x0398 - 0x0390)
class AGbxNavPathTestActor final : public AActor
{
public:
	class UGbxNavPathTestComponent*               TestComponent;                                     // 0x0390(0x0008)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void RebuildPath();
	void RefreshAgent();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxNavPathTestActor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxNavPathTestActor")
	}
	static class AGbxNavPathTestActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGbxNavPathTestActor>();
	}
};
DUMPER7_ASSERTS_AGbxNavPathTestActor;

// Class GbxNav.GbxNavPathTestComponent
// 0x0000 (0x0600 - 0x0600)
class UGbxNavPathTestComponent final : public UPrimitiveComponent
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxNavPathTestComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxNavPathTestComponent")
	}
	static class UGbxNavPathTestComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxNavPathTestComponent>();
	}
};
DUMPER7_ASSERTS_UGbxNavPathTestComponent;

// Class GbxNav.GbxNavSeed
// 0x0040 (0x03D0 - 0x0390)
class AGbxNavSeed final : public AActor
{
public:
	uint8                                         Pad_390[0x38];                                     // 0x0390(0x0038)(Fixing Size After Last Property [ Dumper-7 ])
	class UGbxNavSeedComponent*                   NavSeedComponent;                                  // 0x03C8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxNavSeed")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxNavSeed")
	}
	static class AGbxNavSeed* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGbxNavSeed>();
	}
};
DUMPER7_ASSERTS_AGbxNavSeed;

// Class GbxNav.GbxNavSeedComponent
// 0x0020 (0x0620 - 0x0600)
class UGbxNavSeedComponent final : public UPrimitiveComponent
{
public:
	uint8                                         Pad_5F8[0x28];                                     // 0x05F8(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxNavSeedComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxNavSeedComponent")
	}
	static class UGbxNavSeedComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxNavSeedComponent>();
	}
};
DUMPER7_ASSERTS_UGbxNavSeedComponent;

// Class GbxNav.HavokTraversalData_BalconyVault
// 0x0030 (0x0088 - 0x0058)
class UHavokTraversalData_BalconyVault final : public UHavokTraversalData
{
public:
	float                                         MaxWallWidth;                                      // 0x0058(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinWallHeight;                                     // 0x005C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxWallHeight;                                     // 0x0060(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinDownwardTravelDistance;                         // 0x0064(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxDownwardTravelDistance;                         // 0x0068(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HorizontalTravelDistance;                          // 0x006C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         VerticalApex;                                      // 0x0070(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HandPlantAngle;                                    // 0x0074(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HandPlantLeftExtent;                               // 0x0078(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HandPlantRightExtent;                              // 0x007C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HandPlantMaxProfileAngle;                          // 0x0080(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("HavokTraversalData_BalconyVault")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"HavokTraversalData_BalconyVault")
	}
	static class UHavokTraversalData_BalconyVault* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHavokTraversalData_BalconyVault>();
	}
};
DUMPER7_ASSERTS_UHavokTraversalData_BalconyVault;

// Class GbxNav.GbxNavSettings
// 0x00B0 (0x00E0 - 0x0030)
class UGbxNavSettings final : public UDataAsset
{
public:
	class UGbxNavMeshLayer*                       DefaultNavMeshLayer;                               // 0x0030(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UGbxNavMeshLayer*>               AllNavMeshLayers;                                  // 0x0038(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	TArray<class UGbxNavArea*>                    Areas;                                             // 0x0048(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	class UGbxNavArea*                            TerrainArea;                                       // 0x0058(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxNavArea*                            DestructibleArea;                                  // 0x0060(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxNavLinkData*                        DefaultLink;                                       // 0x0068(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UGbxNavLinkData*>                AllLinks;                                          // 0x0070(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	FGbxDefPtrProperty_                           DefaultLinkDef;                                    // 0x0080(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHavokNavMeshGenerationSettings*        NavMeshSettings;                                   // 0x0098(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         AvoidLookAheadTime;                                // 0x00A0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UHavokFlightNavGenerationSettings*      FlightNavSettings;                                 // 0x00A8(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxFlightNavLayer*                     DefaultFlightNavLayer;                             // 0x00B0(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UGbxFlightNavLayer*>             AllFlightNavLayers;                                // 0x00B8(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	bool                                          bPerformValidationChecks;                          // 0x00C8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxNavMovementSettings                NavMovementSettings;                               // 0x00CC(0x0008)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	int32                                         MaxCutFacesPerStep;                                // 0x00D4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxNavPainterMatchesPerStep;                       // 0x00D8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxNavLinkMatchesPerStep;                          // 0x00DC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxNavSettings")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxNavSettings")
	}
	static class UGbxNavSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxNavSettings>();
	}
};
DUMPER7_ASSERTS_UGbxNavSettings;

// Class GbxNav.GbxNavSpawnAnimDrawComponent
// 0x0000 (0x0600 - 0x0600)
class UGbxNavSpawnAnimDrawComponent final : public UPrimitiveComponent
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxNavSpawnAnimDrawComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxNavSpawnAnimDrawComponent")
	}
	static class UGbxNavSpawnAnimDrawComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxNavSpawnAnimDrawComponent>();
	}
};
DUMPER7_ASSERTS_UGbxNavSpawnAnimDrawComponent;

// Class GbxNav.GbxNavSpawner
// 0x0000 (0x0418 - 0x0418)
class AGbxNavSpawner : public ASpawner
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxNavSpawner")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxNavSpawner")
	}
	static class AGbxNavSpawner* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGbxNavSpawner>();
	}
};
DUMPER7_ASSERTS_AGbxNavSpawner;

// Class GbxNav.GbxNavSpawnerComponent
// 0x0040 (0x0C10 - 0x0BD0)
class UGbxNavSpawnerComponent : public USpawnerComponent
{
public:
	uint8                                         Pad_BD0[0x38];                                     // 0x0BD0(0x0038)(Fixing Size After Last Property [ Dumper-7 ])
	TOptional<bool>                               SpawningRequiresNavOverride;                       // 0x0C08(0x0002)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_C0A[0x6];                                      // 0x0C0A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxNavSpawnerComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxNavSpawnerComponent")
	}
	static class UGbxNavSpawnerComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxNavSpawnerComponent>();
	}
};
DUMPER7_ASSERTS_UGbxNavSpawnerComponent;

// Class GbxNav.GbxNavSpawnPoint
// 0x0000 (0x03C0 - 0x03C0)
class AGbxNavSpawnPoint : public ASpawnPoint
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxNavSpawnPoint")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxNavSpawnPoint")
	}
	static class AGbxNavSpawnPoint* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGbxNavSpawnPoint>();
	}
};
DUMPER7_ASSERTS_AGbxNavSpawnPoint;

// Class GbxNav.GbxNavSpawnPointComponent
// 0x0040 (0x0820 - 0x07E0)
class UGbxNavSpawnPointComponent : public USpawnPointComponent
{
public:
	uint8                                         Pad_7E0[0x30];                                     // 0x07E0(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CustomData;                                        // 0x0810(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bSetCustomData;                                    // 0x0814(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TOptional<bool>                               SpawningRequiresNavOverride;                       // 0x0815(0x0002)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_817[0x1];                                      // 0x0817(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UGbxNavPainterComponent*                NavPainterComponent;                               // 0x0818(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxNavSpawnPointComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxNavSpawnPointComponent")
	}
	static class UGbxNavSpawnPointComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxNavSpawnPointComponent>();
	}
};
DUMPER7_ASSERTS_UGbxNavSpawnPointComponent;

// Class GbxNav.GbxNavSpawnPointPreviewComponent
// 0x0000 (0x02B0 - 0x02B0)
class UGbxNavSpawnPointPreviewComponent : public USpawnPointPreviewComponent
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxNavSpawnPointPreviewComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxNavSpawnPointPreviewComponent")
	}
	static class UGbxNavSpawnPointPreviewComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxNavSpawnPointPreviewComponent>();
	}
};
DUMPER7_ASSERTS_UGbxNavSpawnPointPreviewComponent;

// Class GbxNav.HavokTraversalData_ClimbUp
// 0x0028 (0x0080 - 0x0058)
class UHavokTraversalData_ClimbUp final : public UHavokTraversalData
{
public:
	float                                         MinUpwardTravelDistance;                           // 0x0058(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxUpwardTravelDistance;                           // 0x005C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinHorizontalTravelDistance;                       // 0x0060(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxHorizontalTravelDistance;                       // 0x0064(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GrabAngle;                                         // 0x0068(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GrabScanDepth;                                     // 0x006C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GrabMaxProfileAngle;                               // 0x0070(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         VerticalLipHeight;                                 // 0x0074(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ResolveHangExtraDist;                              // 0x0078(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("HavokTraversalData_ClimbUp")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"HavokTraversalData_ClimbUp")
	}
	static class UHavokTraversalData_ClimbUp* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHavokTraversalData_ClimbUp>();
	}
};
DUMPER7_ASSERTS_UHavokTraversalData_ClimbUp;

// Class GbxNav.GbxNavTestBoxComponent_DEPRECATED
// 0x0000 (0x0630 - 0x0630)
class UGbxNavTestBoxComponent_DEPRECATED final : public UBoxComponent
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxNavTestBoxComponent_DEPRECATED")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxNavTestBoxComponent_DEPRECATED")
	}
	static class UGbxNavTestBoxComponent_DEPRECATED* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxNavTestBoxComponent_DEPRECATED>();
	}
};
DUMPER7_ASSERTS_UGbxNavTestBoxComponent_DEPRECATED;

// Class GbxNav.GbxNavTestActor_DEPRECATED
// 0x0008 (0x0398 - 0x0390)
class AGbxNavTestActor_DEPRECATED final : public AActor
{
public:
	class UGbxNavTestBoxComponent_DEPRECATED*     BoxComponent;                                      // 0x0390(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxNavTestActor_DEPRECATED")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxNavTestActor_DEPRECATED")
	}
	static class AGbxNavTestActor_DEPRECATED* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGbxNavTestActor_DEPRECATED>();
	}
};
DUMPER7_ASSERTS_AGbxNavTestActor_DEPRECATED;

// Class GbxNav.GbxNavTest_NavMeshGeneration
// 0x0030 (0x0430 - 0x0400)
class AGbxNavTest_NavMeshGeneration final : public AGbxEngineTestActor
{
public:
	class AGbxNavMesh*                            NavMeshActor;                                      // 0x0400(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bUpdateSavedNavMeshData;                           // 0x0408(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_409[0x7];                                      // 0x0409(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        Vertices;                                          // 0x0410(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_420[0x10];                                     // 0x0420(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxNavTest_NavMeshGeneration")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxNavTest_NavMeshGeneration")
	}
	static class AGbxNavTest_NavMeshGeneration* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGbxNavTest_NavMeshGeneration>();
	}
};
DUMPER7_ASSERTS_AGbxNavTest_NavMeshGeneration;

// Class GbxNav.GbxNavWorldSettings
// 0x0018 (0x0660 - 0x0648)
class AGbxNavWorldSettings : public AGbxWorldSettings
{
public:
	struct FGbxNavWorldData                       GbxNavWorldData;                                   // 0x0648(0x0004)(NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_64C[0x4];                                      // 0x064C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        MaxFlyAltitude;                                    // 0x0650(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSpawningRequiresNav;                              // 0x0658(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_659[0x7];                                      // 0x0659(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void RemoveAllNavigation();
	void RemoveAutoNavigation();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxNavWorldSettings")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxNavWorldSettings")
	}
	static class AGbxNavWorldSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGbxNavWorldSettings>();
	}
};
DUMPER7_ASSERTS_AGbxNavWorldSettings;

// Class GbxNav.GbxStanceBlueprintLibrary
// 0x0000 (0x0028 - 0x0028)
class UGbxStanceBlueprintLibrary final : public UBlueprintFunctionLibrary
{
public:
	static bool CurrentStanceHasTag(const struct FGameplayTag& Tag, class UObject* OwnerContext);
	static bool CurrentStanceQueryTags(const struct FGameplayTagQuery& Query, class UObject* OwnerContext);
	static FGameDataHandleProperty_ GetCurrentStance(class UObject* OwnerContext);
	static FGameDataHandleProperty_ GetStanceForTag(const struct FGameplayTag& Tag, class UObject* OwnerContext);
	static void LockStance(class FName reason, class UObject* OwnerContext);
	static bool StanceHasTag(const FGameDataHandleProperty_& StanceDef, const struct FGameplayTag& Tag);
	static bool StanceQueryTags(const FGameDataHandleProperty_& StanceDef, const struct FGameplayTagQuery& Query);
	static void UnlockStance(class FName reason, class UObject* OwnerContext);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxStanceBlueprintLibrary")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxStanceBlueprintLibrary")
	}
	static class UGbxStanceBlueprintLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxStanceBlueprintLibrary>();
	}
};
DUMPER7_ASSERTS_UGbxStanceBlueprintLibrary;

// Class GbxNav.HavokFlightNavGenerationSettings
// 0x0068 (0x0098 - 0x0030)
class UHavokFlightNavGenerationSettings final : public UDataAsset
{
public:
	struct FHavokFlightNavStitchingSettings       StitchingSettings;                                 // 0x0030(0x0014)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FHavokFlightNavChunkSettings           ChunkSettings;                                     // 0x0044(0x0008)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FHavokFlightNavMergingSettings         MergingSettings;                                   // 0x004C(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	float                                         MinCellWidth;                                      // 0x006C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Border;                                            // 0x0070(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          UseBorderCells;                                    // 0x0074(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MinRegionVolume;                                   // 0x0078(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          UseSeedPoints;                                     // 0x007C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MinDistanceToSeedPoints;                           // 0x0080(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          PrecalcuateCellIterator;                           // 0x0084(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MaxHorizontalRange;                                // 0x0088(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxVerticalRange;                                  // 0x008C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          DoParallelGenerations;                             // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          SaveInputSnapshot;                                 // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_92[0x6];                                       // 0x0092(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("HavokFlightNavGenerationSettings")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"HavokFlightNavGenerationSettings")
	}
	static class UHavokFlightNavGenerationSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHavokFlightNavGenerationSettings>();
	}
};
DUMPER7_ASSERTS_UHavokFlightNavGenerationSettings;

// Class GbxNav.HavokTraversalData_DropDown
// 0x0018 (0x0070 - 0x0058)
class UHavokTraversalData_DropDown final : public UHavokTraversalData
{
public:
	float                                         MinDownwardTravelDistance;                         // 0x0058(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxDownwardTravelDistance;                         // 0x005C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinHorizontalTravelDistance;                       // 0x0060(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxHorizontalTravelDistance;                       // 0x0064(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         VerticalLipHeight;                                 // 0x0068(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ResolveHangExtraDist;                              // 0x006C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("HavokTraversalData_DropDown")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"HavokTraversalData_DropDown")
	}
	static class UHavokTraversalData_DropDown* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHavokTraversalData_DropDown>();
	}
};
DUMPER7_ASSERTS_UHavokTraversalData_DropDown;

// Class GbxNav.HavokTraversalData_DuckUnder
// 0x0010 (0x0068 - 0x0058)
class UHavokTraversalData_DuckUnder final : public UHavokTraversalData
{
public:
	float                                         MaxHorizontalTravelDistance;                       // 0x0058(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinClearance;                                      // 0x005C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxClearance;                                      // 0x0060(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxHeightDifference;                               // 0x0064(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("HavokTraversalData_DuckUnder")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"HavokTraversalData_DuckUnder")
	}
	static class UHavokTraversalData_DuckUnder* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHavokTraversalData_DuckUnder>();
	}
};
DUMPER7_ASSERTS_UHavokTraversalData_DuckUnder;

// Class GbxNav.HavokTraversalData_Jump
// 0x0018 (0x0070 - 0x0058)
class UHavokTraversalData_Jump final : public UHavokTraversalData
{
public:
	float                                         MinHorizontalTravelDistance;                       // 0x0058(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxHorizontalTravelDistance;                       // 0x005C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxUpwardTravelDistance;                           // 0x0060(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxDownwardTravelDistance;                         // 0x0064(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         VerticalApex;                                      // 0x0068(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("HavokTraversalData_Jump")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"HavokTraversalData_Jump")
	}
	static class UHavokTraversalData_Jump* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHavokTraversalData_Jump>();
	}
};
DUMPER7_ASSERTS_UHavokTraversalData_Jump;

// Class GbxNav.HavokTraversalData_Vault
// 0x0030 (0x0088 - 0x0058)
class UHavokTraversalData_Vault final : public UHavokTraversalData
{
public:
	float                                         MinWallWidth;                                      // 0x0058(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxWallWidth;                                      // 0x005C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinWallHeight;                                     // 0x0060(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxWallHeight;                                     // 0x0064(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxUpwardTravelDistance;                           // 0x0068(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxDownwardTravelDistance;                         // 0x006C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         VerticalApex;                                      // 0x0070(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HandPlantAngle;                                    // 0x0074(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HandPlantLeftExtent;                               // 0x0078(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HandPlantRightExtent;                              // 0x007C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HandPlantMaxProfileAngle;                          // 0x0080(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("HavokTraversalData_Vault")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"HavokTraversalData_Vault")
	}
	static class UHavokTraversalData_Vault* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHavokTraversalData_Vault>();
	}
};
DUMPER7_ASSERTS_UHavokTraversalData_Vault;

// Class GbxNav.GbxNavGoal
// 0x0000 (0x0000 - 0x0000)
class IGbxNavGoal final
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxNavGoal")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxNavGoal")
	}
	static class IGbxNavGoal* GetDefaultObj()
	{
		return GetDefaultObjImpl<IGbxNavGoal>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_IGbxNavGoal;

// Class GbxNav.NexusConfigStore_Stance
// 0x0000 (0x0390 - 0x0390)
class UNexusConfigStore_Stance final : public UNexusConfigStoreBasic
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NexusConfigStore_Stance")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NexusConfigStore_Stance")
	}
	static class UNexusConfigStore_Stance* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNexusConfigStore_Stance>();
	}
};
DUMPER7_ASSERTS_UNexusConfigStore_Stance;

}

