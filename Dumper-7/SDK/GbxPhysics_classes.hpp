#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GbxPhysics

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "GbxPhysics_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "DeveloperSettings_classes.hpp"


namespace SDK
{

// Class GbxPhysics.DGeneratedSimulationData
// 0x0058 (0x0080 - 0x0028)
class UDGeneratedSimulationData final : public UObject
{
public:
	EDGeneratedSimulationDataVersion              Version;                                           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<uint32, class UDBehaviorInstanceData*>   Simulations;                                       // 0x0030(0x0050)(Edit, EditConst, UObjectWrapper, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("DGeneratedSimulationData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"DGeneratedSimulationData")
	}
	static class UDGeneratedSimulationData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDGeneratedSimulationData>();
	}
};
DUMPER7_ASSERTS_UDGeneratedSimulationData;

// Class GbxPhysics.AnimNotify_ForwardDynamics
// 0x0018 (0x0050 - 0x0038)
class UAnimNotify_ForwardDynamics final : public UAnimNotify
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0038(0x0008)(Edit, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnable;                                           // 0x0040(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETeleportType                                 TeleportType;                                      // 0x0041(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseBlendOverride;                                 // 0x0042(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_43[0x1];                                       // 0x0043(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         BlendTime;                                         // 0x0044(0x0004)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   reason;                                            // 0x0048(0x0008)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimNotify_ForwardDynamics")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimNotify_ForwardDynamics")
	}
	static class UAnimNotify_ForwardDynamics* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimNotify_ForwardDynamics>();
	}
};
DUMPER7_ASSERTS_UAnimNotify_ForwardDynamics;

// Class GbxPhysics.AnimNotifyState_ForwardDynamics
// 0x0018 (0x0048 - 0x0030)
class UAnimNotifyState_ForwardDynamics final : public UAnimNotifyState
{
public:
	struct FForwardDynamicsAnimNotifySettings     settings;                                          // 0x0030(0x0018)(Edit, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimNotifyState_ForwardDynamics")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimNotifyState_ForwardDynamics")
	}
	static class UAnimNotifyState_ForwardDynamics* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimNotifyState_ForwardDynamics>();
	}
};
DUMPER7_ASSERTS_UAnimNotifyState_ForwardDynamics;

// Class GbxPhysics.DCollisionRenderComponent
// 0x0090 (0x06B0 - 0x0620)
class UDCollisionRenderComponent final : public UPrimitiveComponent
{
public:
	uint8                                         Pad_620[0x90];                                     // 0x0620(0x0090)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("DCollisionRenderComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"DCollisionRenderComponent")
	}
	static class UDCollisionRenderComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDCollisionRenderComponent>();
	}
};
DUMPER7_ASSERTS_UDCollisionRenderComponent;

// Class GbxPhysics.DCollisionRenderActor
// 0x0068 (0x03F8 - 0x0390)
class ADCollisionRenderActor final : public AActor
{
public:
	uint8                                         Pad_390[0x68];                                     // 0x0390(0x0068)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("DCollisionRenderActor")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"DCollisionRenderActor")
	}
	static class ADCollisionRenderActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<ADCollisionRenderActor>();
	}
};
DUMPER7_ASSERTS_ADCollisionRenderActor;

// Class GbxPhysics.DCollisionChunk
// 0x0050 (0x0078 - 0x0028)
class UDCollisionChunk final : public UObject
{
public:
	int64                                         AssetByteStart;                                    // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         AssetByteSize;                                     // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBox                                   AABB;                                              // 0x0038(0x0038)(ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_70[0x8];                                       // 0x0070(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("DCollisionChunk")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"DCollisionChunk")
	}
	static class UDCollisionChunk* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDCollisionChunk>();
	}
};
DUMPER7_ASSERTS_UDCollisionChunk;

// Class GbxPhysics.DWorldCollisionChunks
// 0x0020 (0x0048 - 0x0028)
class UDWorldCollisionChunks final : public UObject
{
public:
	TArray<class UDCollisionChunk*>               Chunks;                                            // 0x0028(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<uint8>                                 ByteData;                                          // 0x0038(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("DWorldCollisionChunks")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"DWorldCollisionChunks")
	}
	static class UDWorldCollisionChunks* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDWorldCollisionChunks>();
	}
};
DUMPER7_ASSERTS_UDWorldCollisionChunks;

// Class GbxPhysics.DPhysicsAsset
// 0x0028 (0x0050 - 0x0028)
class UDPhysicsAsset final : public UObject
{
public:
	TArray<struct FDConstraintProperties>         Constraints;                                       // 0x0028(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bBuiltCollidableLinks;                             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FDCollidableLinkIndexes>        CollidableLinkIndexes;                             // 0x0040(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("DPhysicsAsset")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"DPhysicsAsset")
	}
	static class UDPhysicsAsset* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDPhysicsAsset>();
	}
};
DUMPER7_ASSERTS_UDPhysicsAsset;

// Class GbxPhysics.DBehaviorInstanceData
// 0x00B8 (0x00E0 - 0x0028)
class UDBehaviorInstanceData : public UObject
{
public:
	int32                                         MaxNumDoFs;                                        // 0x0028(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDPhysicsAsset*                         ExtraPhysicsData;                                  // 0x0030(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FDAnatomicalStructure>          Structures;                                        // 0x0038(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	class UPhysicsAsset*                          UsePhysicsAsset;                                   // 0x0048(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMesh*                          SkeletalMesh;                                      // 0x0050(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        SkeletalMeshHash;                                  // 0x0058(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                PackageOwner;                                      // 0x0060(0x0008)(Edit, ZeroConstructor, EditConst, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Scale3D;                                           // 0x0068(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FName, struct FTransform>          BoneMods;                                          // 0x0080(0x0050)(Edit, EditConst, NativeAccessSpecifierPublic)
	class UDBehaviorManager*                      BehaviorManager;                                   // 0x00D0(0x0008)(Edit, ZeroConstructor, EditConst, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        GeneratedDataHash;                                 // 0x00D8(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("DBehaviorInstanceData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"DBehaviorInstanceData")
	}
	static class UDBehaviorInstanceData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDBehaviorInstanceData>();
	}
};
DUMPER7_ASSERTS_UDBehaviorInstanceData;

// Class GbxPhysics.DBehaviorManager
// 0x0000 (0x0028 - 0x0028)
class UDBehaviorManager : public UObject
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("DBehaviorManager")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"DBehaviorManager")
	}
	static class UDBehaviorManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDBehaviorManager>();
	}
};
DUMPER7_ASSERTS_UDBehaviorManager;

// Class GbxPhysics.RagdollBehaviorInstanceData
// 0x0010 (0x00F0 - 0x00E0)
class URagdollBehaviorInstanceData final : public UDBehaviorInstanceData
{
public:
	TArray<struct FDRagdollBehaviorCategory>      BehaviorCategories;                                // 0x00E0(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RagdollBehaviorInstanceData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RagdollBehaviorInstanceData")
	}
	static class URagdollBehaviorInstanceData* GetDefaultObj()
	{
		return GetDefaultObjImpl<URagdollBehaviorInstanceData>();
	}
};
DUMPER7_ASSERTS_URagdollBehaviorInstanceData;

// Class GbxPhysics.RagdollBehaviorManager
// 0x0128 (0x0150 - 0x0028)
class URagdollBehaviorManager final : public UDBehaviorManager
{
public:
	struct FRagdollStateDynamicsProperties        AliveNotColliding;                                 // 0x0028(0x0018)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FRagdollStateDynamicsProperties        AliveColliding;                                    // 0x0040(0x0018)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FRagdollStateDynamicsProperties        DeadAnimating;                                     // 0x0058(0x0018)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FRagdollStateDynamicsProperties        DeadNotAnimatingNotColliding;                      // 0x0070(0x0018)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FRagdollStateDynamicsProperties        DeadNotAnimatingColliding;                         // 0x0088(0x0018)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FRagdollBehaviorArchetype              InAirBehavior;                                     // 0x00A0(0x0058)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FRagdollBehaviorArchetype              OnGroundBehavior;                                  // 0x00F8(0x0058)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("RagdollBehaviorManager")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"RagdollBehaviorManager")
	}
	static class URagdollBehaviorManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<URagdollBehaviorManager>();
	}
};
DUMPER7_ASSERTS_URagdollBehaviorManager;

// Class GbxPhysics.ForwardDynamicsInterface
// 0x0000 (0x0000 - 0x0000)
class IForwardDynamicsInterface final
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("ForwardDynamicsInterface")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"ForwardDynamicsInterface")
	}
	static class IForwardDynamicsInterface* GetDefaultObj()
	{
		return GetDefaultObjImpl<IForwardDynamicsInterface>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_IForwardDynamicsInterface;

// Class GbxPhysics.GbxPhysicsSettings
// 0x0070 (0x00A8 - 0x0038)
class UGbxPhysicsSettings final : public UDeveloperSettings
{
public:
	float                                         GlobalForceModifierScale;                          // 0x0038(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseFrameIndependentForceApplication;              // 0x003C(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ForceApplicationHz;                                // 0x0040(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EManualForwardDynamicsNodePlacementCompilationOutput ManualForwardDynamicsNodePlacementCompilationOutput; // 0x0044(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         DefaultGeneratedPrimarySimulationCollsionChannels; // 0x0048(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         DefaultGeneratedPrimarySimulationSoftCollsionChannels; // 0x004C(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                ChunkifyBounds;                                    // 0x0050(0x0018)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        SleepMotionBiasCoefficient;                        // 0x0068(0x0008)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        RigidificationCoefficient;                         // 0x0070(0x0008)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        RigidificationBiasCoefficient;                     // 0x0078(0x0008)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        RigidificationSpatialAlignmentCoefficient;         // 0x0080(0x0008)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        MassNormalizationCoefficient;                      // 0x0088(0x0008)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        TargetDT;                                          // 0x0090(0x0008)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxSubstepCount;                                   // 0x0098(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        BoundsCacheMultiplier;                             // 0x00A0(0x0008)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxPhysicsSettings")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxPhysicsSettings")
	}
	static class UGbxPhysicsSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxPhysicsSettings>();
	}
};
DUMPER7_ASSERTS_UGbxPhysicsSettings;

// Class GbxPhysics.GbxPhysicsStatics
// 0x0000 (0x0028 - 0x0028)
class UGbxPhysicsStatics final : public UBlueprintFunctionLibrary
{
public:
	static void DebugResumeSimulation(class USkeletalMeshComponent* SkelMesh, class FName Tag);
	static void DebugStepSimulation(class USkeletalMeshComponent* SkelMesh, class FName Tag);
	static bool GetSimulationEnabled(TScriptInterface<class IForwardDynamicsInterface> DynamicsInterface, const struct FGameplayTag& Tag);
	static void ResetActorExtraCollisionFilter(class AActor* Actor);
	static void ResetExtraCollisionFilter(class USceneComponent* comp, bool bPropagateToChildren);
	static void SetActorExtraCollisionFilter(class AActor* Actor, EExtraCollisionFilterChannel channel, const struct FExtraCollisionFilter& ExtraCollisionFilter);
	static void SetDynamicsBehavior(TScriptInterface<class IForwardDynamicsInterface> DynamicsInterface, const class FName BehaviorName, const struct FGameplayTag& Tag);
	static void SetExtraCollisionFilter(class USceneComponent* comp, EExtraCollisionFilterChannel channel, const struct FExtraCollisionFilter& ExtraCollisionFilter, bool bPropagateToChildren);
	static void SetORDARSimulationEnabled(class USkeletalMeshComponent* SkelMesh, bool bEnable, class FName Tag);
	static void SetSimulationEnabled(TScriptInterface<class IForwardDynamicsInterface> DynamicsInterface, bool bEnable, const struct FGameplayTag& Tag);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxPhysicsStatics")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxPhysicsStatics")
	}
	static class UGbxPhysicsStatics* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxPhysicsStatics>();
	}
};
DUMPER7_ASSERTS_UGbxPhysicsStatics;

// Class GbxPhysics.MinDoFStateMatchingAsset
// 0x0070 (0x00A0 - 0x0030)
class UMinDoFStateMatchingAsset final : public UDataAsset
{
public:
	TArray<struct FMinDoFStateCache>              States;                                            // 0x0030(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_40[0x38];                                      // 0x0040(0x0038)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeleton*                              Skeleton;                                          // 0x0078(0x0008)(Edit, ZeroConstructor, NoDestructor, AdvancedDisplay, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMesh*                          SkelMesh;                                          // 0x0080(0x0008)(Edit, ZeroConstructor, NoDestructor, AdvancedDisplay, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPhysicsAsset*                          PhysicsAsset;                                      // 0x0088(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FStateMatchAnimation>           Animations;                                        // 0x0090(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MinDoFStateMatchingAsset")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MinDoFStateMatchingAsset")
	}
	static class UMinDoFStateMatchingAsset* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMinDoFStateMatchingAsset>();
	}
};
DUMPER7_ASSERTS_UMinDoFStateMatchingAsset;

// Class GbxPhysics.PhysicsPerfTester
// 0x0128 (0x04B8 - 0x0390)
class APhysicsPerfTester final : public AActor
{
public:
	uint8                                         Pad_390[0x58];                                     // 0x0390(0x0058)(Fixing Size After Last Property [ Dumper-7 ])
	class UBoxComponent*                          TestBounds;                                        // 0x03E8(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOutputToScreen;                                   // 0x03F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3F1[0x3];                                      // 0x03F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	ETestType                                     CurrentTest;                                       // 0x03F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Seed;                                              // 0x03F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3FC[0x4];                                      // 0x03FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                SubDivisionSize;                                   // 0x0400(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bTestTriangles;                                    // 0x0418(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_419[0x3];                                      // 0x0419(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NumTestFrames;                                     // 0x041C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NumRaycastsPerSection;                             // 0x0420(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RaycastMinLength;                                  // 0x0424(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RaycastMaxLength;                                  // 0x0428(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NumOverlapsPerFrame;                               // 0x042C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OverlapMinSize;                                    // 0x0430(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OverlapMaxSize;                                    // 0x0434(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<EAggCollisionShapeType>                OverlapShapes;                                     // 0x0438(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                         NumSweepsPerFrame;                                 // 0x0448(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SweepMinLength;                                    // 0x044C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SweepMaxLength;                                    // 0x0450(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SweepMinSize;                                      // 0x0454(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SweepMaxSize;                                      // 0x0458(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_45C[0x4];                                      // 0x045C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EAggCollisionShapeType>                SweepShapes;                                       // 0x0460(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bUseCCD;                                           // 0x0470(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_471[0x17];                                     // 0x0471(0x0017)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bIsStatic;                                         // 0x0488(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_489[0x3];                                      // 0x0489(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TargetCollisionDensity;                            // 0x048C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUsePrimitivesForFacetDensity;                     // 0x0490(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseTriangleMeshesForFacetDensity;                 // 0x0491(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_492[0x6];                                      // 0x0492(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UPrimitiveComponent*>            SpawnedTestComponents;                             // 0x0498(0x0010)(Edit, ExportObject, ZeroConstructor, DisableEditOnTemplate, EditConst, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class UStaticMesh*>                    Meshes;                                            // 0x04A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)

public:
	void SpawnTestGeo();
	void Start();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("PhysicsPerfTester")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"PhysicsPerfTester")
	}
	static class APhysicsPerfTester* GetDefaultObj()
	{
		return GetDefaultObjImpl<APhysicsPerfTester>();
	}
};
DUMPER7_ASSERTS_APhysicsPerfTester;

}

