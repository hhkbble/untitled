#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GbxPhysics

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "PhysicsCore_structs.hpp"


namespace SDK
{

// Enum GbxPhysics.EExtraCollisionFilterBehavior
// NumValues: 0x0003
enum class EExtraCollisionFilterBehavior : uint8
{
	Default                                  = 0,
	BlockToTouch                             = 1,
	EExtraCollisionFilterBehavior_MAX        = 2,
};

// Enum GbxPhysics.EExtraCollisionFilterChannel
// NumValues: 0x0007
enum class EExtraCollisionFilterChannel : uint8
{
	One                                      = 0,
	Two                                      = 1,
	Three                                    = 2,
	Four                                     = 3,
	Five                                     = 4,
	Six                                      = 5,
	MAX                                      = 6,
};

// Enum GbxPhysics.EDGeneratedSimulationDataVersion
// NumValues: 0x0006
enum class EDGeneratedSimulationDataVersion : uint8
{
	Unbuilt                                  = 0,
	AnimSelectionFix                         = 1,
	SimGenerationHashChange                  = 2,
	Next                                     = 3,
	Current                                  = 2,
	EDGeneratedSimulationDataVersion_MAX     = 4,
};

// Enum GbxPhysics.EFDAnatomicalType
// NumValues: 0x0007
enum class EFDAnatomicalType : uint8
{
	Unknown                                  = 0,
	Limb                                     = 1,
	Leg                                      = 2,
	Arm                                      = 3,
	Torso                                    = 4,
	Head                                     = 5,
	EFDAnatomicalType_MAX                    = 6,
};

// Enum GbxPhysics.EFDSimulationState
// NumValues: 0x0005
enum class EFDSimulationState : uint8
{
	Disabled                                 = 0,
	Enabling                                 = 1,
	Simulating                               = 2,
	BlendEnd                                 = 3,
	EFDSimulationState_MAX                   = 4,
};

// Enum GbxPhysics.EFDSimulationSpace
// NumValues: 0x0004
enum class EFDSimulationSpace : uint8
{
	ComponentSpace                           = 0,
	WorldSpace                               = 1,
	BaseBoneSpace                            = 2,
	EFDSimulationSpace_MAX                   = 3,
};

// Enum GbxPhysics.EFDBodyTargetMode
// NumValues: 0x0003
enum class EFDBodyTargetMode : uint32
{
	Pose                                     = 0,
	Direction                                = 1,
	EFDBodyTargetMode_MAX                    = 2,
};

// Enum GbxPhysics.EBodyTargetState
// NumValues: 0x0005
enum class EBodyTargetState : uint32
{
	AddQueued                                = 0,
	NeedsUpdate                              = 1,
	Active                                   = 2,
	RemoveQueued                             = 3,
	EBodyTargetState_MAX                     = 4,
};

// Enum GbxPhysics.EDConstraintAxis
// NumValues: 0x0009
enum class EDConstraintAxis : uint32
{
	Twist                                    = 0,
	Swing2                                   = 1,
	Swing1                                   = 2,
	X                                        = 3,
	Y                                        = 4,
	Z                                        = 5,
	Count                                    = 6,
	Custom                                   = 6,
	EDConstraintAxis_MAX                     = 7,
};

// Enum GbxPhysics.EDConstraintState
// NumValues: 0x0005
enum class EDConstraintState : uint8
{
	Add                                      = 0,
	Active                                   = 1,
	Update                                   = 1,
	Remove                                   = 2,
	EDConstraintState_MAX                    = 3,
};

// Enum GbxPhysics.EDPoseTargetSolveType
// NumValues: 0x0004
enum class EDPoseTargetSolveType : uint32
{
	None                                     = 0,
	Dynamic                                  = 1,
	Kinematic                                = 2,
	EDPoseTargetSolveType_MAX                = 3,
};

// Enum GbxPhysics.EFDAnimGraphEval
// NumValues: 0x0005
enum class EFDAnimGraphEval : uint8
{
	Default                                  = 0,
	NotSimulating                            = 0,
	Always                                   = 1,
	Never                                    = 2,
	EFDAnimGraphEval_MAX                     = 3,
};

// Enum GbxPhysics.EManualForwardDynamicsNodePlacementCompilationOutput
// NumValues: 0x0005
enum class EManualForwardDynamicsNodePlacementCompilationOutput : uint8
{
	None                                     = 0,
	Info                                     = 1,
	Warn                                     = 2,
	Error                                    = 3,
	EManualForwardDynamicsNodePlacementCompilationOutput_MAX = 4,
};

// Enum GbxPhysics.EMinDoFStateType
// NumValues: 0x0005
enum class EMinDoFStateType : uint8
{
	None                                     = 0,
	Pose                                     = 1,
	Velocity                                 = 2,
	PoseAndVelocity                          = 3,
	EMinDoFStateType_MAX                     = 4,
};

// Enum GbxPhysics.EMinDoFRootMatchMode
// NumValues: 0x0005
enum class EMinDoFRootMatchMode : uint8
{
	None                                     = 0,
	Angular                                  = 1,
	Linear                                   = 2,
	All                                      = 3,
	EMinDoFRootMatchMode_MAX                 = 4,
};

// Enum GbxPhysics.ETestType
// NumValues: 0x0007
enum class ETestType : uint32
{
	SceneQuery                               = 0,
	Vehicle                                  = 1,
	Cloth                                    = 2,
	RigidBody                                = 3,
	Chaos                                    = 4,
	None                                     = 5,
	ETestType_MAX                            = 6,
};

// Enum GbxPhysics.EAggCollisionShapeType
// NumValues: 0x0007
enum class EAggCollisionShapeType : uint8
{
	Sphere                                   = 0,
	Box                                      = 1,
	Sphyl                                    = 2,
	Convex                                   = 3,
	TaperedCapsule                           = 4,
	Unknown                                  = 5,
	EAggCollisionShapeType_MAX               = 6,
};

// ScriptStruct GbxPhysics.DConstraintReference
// 0x01D0 (0x01D0 - 0x0000)
struct FDConstraintReference final
{
public:
	class FName                                   ParentBodyName;                                    // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             ParentAnchor;                                      // 0x0010(0x0060)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        ParentLocalMassInverseScale;                       // 0x0070(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ChildBodyName;                                     // 0x0078(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                             ChildAnchor;                                       // 0x0080(0x0060)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        ChildLocalMassInverseScale;                        // 0x00E0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EDConstraintAxis                              Axis;                                              // 0x00E8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsLocked;                                         // 0x00EC(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_ED[0x3];                                       // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        TargetVelocity;                                    // 0x00F0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F8[0xD8];                                      // 0x00F8(0x00D8)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FDConstraintReference;

// ScriptStruct GbxPhysics.DBodyReference
// 0x000C (0x000C - 0x0000)
struct FDBodyReference final
{
public:
	class FName                                   BodyName;                                          // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8[0x4];                                        // 0x0008(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FDBodyReference;

// ScriptStruct GbxPhysics.DPoseTargetSolveType
// 0x0008 (0x0008 - 0x0000)
struct FDPoseTargetSolveType final
{
public:
	EDPoseTargetSolveType                         Angular;                                           // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EDPoseTargetSolveType                         Linear;                                            // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FDPoseTargetSolveType;

// ScriptStruct GbxPhysics.DStrengthBiasOverride
// 0x0050 (0x0050 - 0x0000)
struct alignas(0x08) FDStrengthBiasOverride final
{
public:
	struct FDBodyReference                        BodyRef;                                           // 0x0000(0x000C)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDPoseTargetSolveType                  LocalSpaceSolveType;                               // 0x000C(0x0008)(NoDestructor, NativeAccessSpecifierPublic)
	struct FDPoseTargetSolveType                  ComponentSpaceSolveType;                           // 0x0014(0x0008)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	float                                         AnimationStrength;                                 // 0x001C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PoseBias;                                          // 0x0020(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ComponentSpaceAngularTargetInfluence;              // 0x0024(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ComponentSpaceLinearTargetInfluence;               // 0x0028(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ParentConstraintRelativeMassInverseScale;          // 0x002C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ConstraintRelativeMassInverseScale;                // 0x0030(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34[0x1C];                                      // 0x0034(0x001C)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FDStrengthBiasOverride;

// ScriptStruct GbxPhysics.DBodySettingsOverrides
// 0x0030 (0x0030 - 0x0000)
struct FDBodySettingsOverrides final
{
public:
	struct FDBodyReference                        BodyRef;                                           // 0x0000(0x000C)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOverrideGravity;                                  // 0x000C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Gravity;                                           // 0x0010(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseGravityScale;                                  // 0x0028(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         GravityScale;                                      // 0x002C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FDBodySettingsOverrides;

// ScriptStruct GbxPhysics.DBodyTargetParams
// 0x00A8 (0x00A8 - 0x0000)
struct FDBodyTargetParams final
{
public:
	bool                                          bUseAccelerationRate;                              // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        AccelerationRate;                                  // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseDecelerationRate;                              // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        DecelerationRate;                                  // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        DecelerationRadius;                                // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseTargetSpeed;                                   // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        TargetSpeed;                                       // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        OrientationStiffness;                              // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFDBodyTargetMode                             TargetMode;                                        // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                TargetLocation;                                    // 0x0048(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                TargetDirection;                                   // 0x0060(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        TargetDistance;                                    // 0x0078(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseDuration;                                      // 0x0080(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Duration;                                          // 0x0088(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_90[0x18];                                      // 0x0090(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FDBodyTargetParams;

// ScriptStruct GbxPhysics.DBodyTarget
// 0x00F8 (0x00F8 - 0x0000)
struct FDBodyTarget final
{
public:
	class FName                                   BodyName;                                          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDBodyTargetParams                     params;                                            // 0x0008(0x00A8)(NativeAccessSpecifierPrivate)
	EBodyTargetState                              State;                                             // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_B4[0x44];                                      // 0x00B4(0x0044)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FDBodyTarget;

// ScriptStruct GbxPhysics.ForwardDynamicsSettings
// 0x01E0 (0x01E0 - 0x0000)
struct FForwardDynamicsSettings final
{
public:
	TSoftObjectPtr<class UPhysicsAsset>           OverridePhysicsAsset;                              // 0x0000(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFDAnimGraphEval                              AnimGraphEvaluationMode;                           // 0x0028(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAutoSelfCollision;                                // 0x0029(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UPhysicsAsset>           CollisionAsset;                                    // 0x0030(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SimulationHz;                                      // 0x0058(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxSubstepCount;                                   // 0x005C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NLGSSolveIterations;                               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         InverseDynamicsSolveIterations;                    // 0x0064(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ForwardDynamicsSolveIterations;                    // 0x0068(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         NLGSSolveErrorThreshold;                           // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InverseDynamicsSolveErrorThreshold;                // 0x0070(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ForwardDynamicsSolveErrorThreshold;                // 0x0074(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BaumgarteCollisionFactor;                          // 0x0078(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOverrideWorldGravity;                             // 0x007C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                OverrideWorldGravity;                              // 0x0080(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bWindEnabled;                                      // 0x0098(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                GlobalWindScale;                                   // 0x00A0(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CachedBoundsScale;                                 // 0x00B8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBoneReference                         BaseBoneRef;                                       // 0x00BC(0x0010)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseDefaultCollisionSettings;                      // 0x00CC(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_CD[0x3];                                       // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         OverlapChannels;                                   // 0x00D0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SoftCollisionChannels;                             // 0x00D4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxSoftCollisionResolutionSpeed;                   // 0x00D8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFDSimulationSpace                            SimulationSpace;                                   // 0x00DC(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_DD[0x3];                                       // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         WorldSpaceVelocityScale;                           // 0x00E0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxKinematicAcceleration;                          // 0x00E4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         KinematicAccelerationNormalizationFactor;          // 0x00E8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSimulationControlsComponentTransform;             // 0x00EC(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsRigidified;                                     // 0x00ED(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseForwardDynamicAnimation;                       // 0x00EE(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseAnimGraphPoseForTargets;                       // 0x00EF(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AnimationStrength;                                 // 0x00F0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PoseBias;                                          // 0x00F4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FDStrengthBiasOverride>         StrengthBiasOverrides;                             // 0x00F8(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FDBodySettingsOverrides>        BodySettingsOverrides;                             // 0x0108(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FDBodyTarget>                   BodyTargets;                                       // 0x0118(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FDConstraintReference>          ExtraConstraints;                                  // 0x0128(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bUseForwardDynamicsBehaviorManager;                // 0x0138(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UDBehaviorManager>       BehaviorManager;                                   // 0x0140(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDBehaviorInstanceData*                 InstanceData;                                      // 0x0168(0x0008)(Edit, ZeroConstructor, Transient, EditConst, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bForceDisableCollisionBetweenConstraintBodies;     // 0x0170(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bTransferBoneVelocities;                           // 0x0171(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_172[0x2];                                      // 0x0172(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         VelocityTransferScale;                             // 0x0174(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFreezeIncomingPoseOnStart;                        // 0x0178(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseAutoMassRedistribution;                        // 0x0179(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFrictionOverride;                                 // 0x017A(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_17B[0x1];                                      // 0x017B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Friction;                                          // 0x017C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRestitutionOverride;                              // 0x0180(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_181[0x3];                                      // 0x0181(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Restitution;                                       // 0x0184(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLinearDampingOverride;                            // 0x0188(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_189[0x3];                                      // 0x0189(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LinearDamping;                                     // 0x018C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAngularDampingOverride;                           // 0x0190(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_191[0x3];                                      // 0x0191(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AngularDamping;                                    // 0x0194(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnableAggregateMassOverride;                      // 0x0198(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                AggregateMassOverride;                             // 0x01A0(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSimulationEnabled;                                // 0x01B8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSimulationPaused;                                 // 0x01B9(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1BA[0x2];                                      // 0x01BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LODThreshold;                                      // 0x01BC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAutoDisableSimulation;                            // 0x01C0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C1[0x3];                                      // 0x01C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         EnabledToDisabledAutoTransitionPoseError;          // 0x01C4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         EnabledToDisabledAutoTransitionVelocityError;      // 0x01C8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TimeNeededForTransition;                           // 0x01CC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AlphaBlendToDisabledInTime;                        // 0x01D0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AlphaBlendToDisabledOutTime;                       // 0x01D4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AlphaBlendToEnabledTime;                           // 0x01D8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1DC[0x4];                                      // 0x01DC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FForwardDynamicsSettings;

// ScriptStruct GbxPhysics.DCollidableLinkIndexes
// 0x0008 (0x0008 - 0x0000)
struct FDCollidableLinkIndexes final
{
public:
	int32                                         A;                                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         B;                                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FDCollidableLinkIndexes;

// ScriptStruct GbxPhysics.ForwardDynamicsProxy
// 0x0440 (0x0440 - 0x0000)
struct alignas(0x10) FForwardDynamicsProxy final
{
public:
	struct FForwardDynamicsSettings               settings;                                          // 0x0000(0x01E0)(Edit, NativeAccessSpecifierPublic)
	uint8                                         Pad_1E0[0x260];                                    // 0x01E0(0x0260)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FForwardDynamicsProxy;

// ScriptStruct GbxPhysics.OptionalForce
// 0x0060 (0x0060 - 0x0000)
struct FOptionalForce final
{
public:
	bool                                          bForceIsValid;                                     // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                force;                                             // 0x0008(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bLocationIsValid;                                  // 0x0020(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Location;                                          // 0x0028(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bBoneNameIsValid;                                  // 0x0040(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   BoneName;                                          // 0x0044(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         ApplicationTime;                                   // 0x004C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         InvalidationTime;                                  // 0x0050(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_54[0xC];                                       // 0x0054(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FOptionalForce;

// ScriptStruct GbxPhysics.StateMatchAnimation
// 0x0010 (0x0010 - 0x0000)
struct FStateMatchAnimation final
{
public:
	class UAnimSequence*                          Animation;                                         // 0x0000(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMinDoFStateType                              StateMatchingType;                                 // 0x0008(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMinDoFRootMatchMode                          RootMatchMode;                                     // 0x0009(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FStateMatchAnimation;

// ScriptStruct GbxPhysics.ExtraCollisionFilter
// 0x0006 (0x0006 - 0x0000)
struct FExtraCollisionFilter final
{
public:
	EExtraCollisionFilterBehavior                 BlockToTouchChannels[0x6];                         // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FExtraCollisionFilter;

// ScriptStruct GbxPhysics.AnimNode_ForwardDynamics
// 0x02C0 (0x02D0 - 0x0010)
struct FAnimNode_ForwardDynamics final : public FAnimNode_Base
{
public:
	class FName                                   Tag;                                               // 0x0010(0x0008)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FForwardDynamicsSettings               settings;                                          // 0x0018(0x01E0)(Edit, NativeAccessSpecifierPrivate)
	struct FGameplayTag                           SimTag;                                            // 0x01F8(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_200[0xA0];                                     // 0x0200(0x00A0)(Fixing Size After Last Property [ Dumper-7 ])
	struct FComponentSpacePoseLink                DisabledSimPose;                                   // 0x02A0(0x0010)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2B0[0x20];                                     // 0x02B0(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FAnimNode_ForwardDynamics;

// ScriptStruct GbxPhysics.ForwardDynamicsRepData
// 0x0050 (0x0050 - 0x0000)
struct FForwardDynamicsRepData final
{
public:
	TArray<float>                                 PluckerState;                                      // 0x0000(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	TArray<struct FOptionalForce>                 ExternalForces;                                    // 0x0010(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	TArray<struct FDBodyTarget>                   BodyTargets;                                       // 0x0020(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	uint32                                        SimStep;                                           // 0x0030(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   BehaviorCategory;                                  // 0x0034(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         BehaviorCategoryIndex;                             // 0x003C(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   BehaviorAnim;                                      // 0x0040(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         BehaviorAnimIndex;                                 // 0x0048(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFDSimulationState                            SimState;                                          // 0x004C(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FForwardDynamicsRepData;

// ScriptStruct GbxPhysics.ForwardDynamicsAnimNotifySettings
// 0x0018 (0x0018 - 0x0000)
struct FForwardDynamicsAnimNotifySettings final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnable;                                           // 0x0008(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETeleportType                                 TeleportType;                                      // 0x0009(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseBlendOverride;                                 // 0x000A(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B[0x1];                                        // 0x000B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         BlendTime;                                         // 0x000C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   reason;                                            // 0x0010(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FForwardDynamicsAnimNotifySettings;

// ScriptStruct GbxPhysics.DConstraintProperties
// 0x0018 (0x0018 - 0x0000)
struct FDConstraintProperties final
{
public:
	double                                        LimitMin;                                          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        LimitMax;                                          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAngularConstraintMotion                      Mobility;                                          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FDConstraintProperties;

// ScriptStruct GbxPhysics.JointDoFData
// 0x0050 (0x0050 - 0x0000)
struct FJointDoFData final
{
public:
	class FName                                   Parent;                                            // 0x0000(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   Child;                                             // 0x0008(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 JointDoF;                                          // 0x0010(0x0010)(Edit, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PreValue;                                          // 0x0020(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PostValue;                                         // 0x0024(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         min_0;                                             // 0x0028(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MAX;                                               // 0x002C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                          MinFromAnim;                                       // 0x0030(0x0008)(Edit, ZeroConstructor, EditConst, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinAnimDT;                                         // 0x0038(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          MaxFromAnim;                                       // 0x0040(0x0008)(Edit, ZeroConstructor, EditConst, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxAnimDT;                                         // 0x0048(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FJointDoFData;

// ScriptStruct GbxPhysics.DynamicTuningProperties
// 0x00A8 (0x00A8 - 0x0000)
struct FDynamicTuningProperties final
{
public:
	float                                         LockThreshold;                                     // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         AnimScanDepth;                                     // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSet<class FName>                             AnimNamesFilter;                                   // 0x0008(0x0050)(Edit, NativeAccessSpecifierPublic)
	TSet<TSoftObjectPtr<class UAnimSequence>>     Anims;                                             // 0x0058(0x0050)(Edit, UObjectWrapper, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FDynamicTuningProperties;

// ScriptStruct GbxPhysics.DSimulationGenerationDetails
// 0x0038 (0x0038 - 0x0000)
struct FDSimulationGenerationDetails final
{
public:
	TWeakObjectPtr<class UDGeneratedSimulationData> GeneratedSimulationData;                         // 0x0000(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNeedsSimulationGeneration;                        // 0x0008(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   SimulationConfig;                                  // 0x000C(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   UsedSimulationConfig;                              // 0x0014(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 status;                                            // 0x0020(0x0010)(Edit, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UDBehaviorInstanceData>  CurrentPrimarySimulation;                          // 0x0030(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FDSimulationGenerationDetails;

// ScriptStruct GbxPhysics.DAnatomicalBody
// 0x0050 (0x0050 - 0x0000)
struct FDAnatomicalBody final
{
public:
	struct FBoneReference                         BoneRef;                                           // 0x0000(0x0010)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         LinkIndex;                                         // 0x0010(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MinDoFStartIndex;                                  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NumDoFs;                                           // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Energy[0x6];                                       // 0x0020(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FDAnatomicalBody;

// ScriptStruct GbxPhysics.DAnatomicalStructure
// 0x0020 (0x0020 - 0x0000)
struct FDAnatomicalStructure final
{
public:
	EFDAnatomicalType                             type;                                              // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FDAnatomicalBody>               RootToEnd;                                         // 0x0008(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                         NumDoFs;                                           // 0x0018(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FDAnatomicalStructure;

// ScriptStruct GbxPhysics.DBehaviorCategory
// 0x0018 (0x0018 - 0x0000)
struct FDBehaviorCategory
{
public:
	class FName                                   categoryname;                                      // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UAnimSequence>>   Animations;                                        // 0x0008(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FDBehaviorCategory;

// ScriptStruct GbxPhysics.RagdollBehaviorAnimation
// 0x0018 (0x0018 - 0x0000)
struct FRagdollBehaviorAnimation final
{
public:
	TArray<double>                                Cache;                                             // 0x0000(0x0010)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	float                                         SeqLength;                                         // 0x0010(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FRagdollBehaviorAnimation;

// ScriptStruct GbxPhysics.RagdollBehaviorAnimationCollection
// 0x0010 (0x0010 - 0x0000)
struct FRagdollBehaviorAnimationCollection final
{
public:
	TArray<struct FRagdollBehaviorAnimation>      Animations;                                        // 0x0000(0x0010)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FRagdollBehaviorAnimationCollection;

// ScriptStruct GbxPhysics.DRagdollBehaviorCategory
// 0x0010 (0x0028 - 0x0018)
struct FDRagdollBehaviorCategory final : public FDBehaviorCategory
{
public:
	struct FRagdollBehaviorAnimationCollection    behaviors;                                         // 0x0018(0x0010)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FDRagdollBehaviorCategory;

// ScriptStruct GbxPhysics.RagdollStateDynamicsProperties
// 0x0018 (0x0018 - 0x0000)
struct FRagdollStateDynamicsProperties final
{
public:
	bool                                          bUseDynamicAngularDamping;                         // 0x0000(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AngularDamping;                                    // 0x0004(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseDynamicLinearDamping;                          // 0x0008(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LinearDamping;                                     // 0x000C(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StrengthScale;                                     // 0x0010(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PoseBias;                                          // 0x0014(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FRagdollStateDynamicsProperties;

// ScriptStruct GbxPhysics.RagdollBehaviorArchetype
// 0x0058 (0x0058 - 0x0000)
struct FRagdollBehaviorArchetype final
{
public:
	class FName                                   categoryname;                                      // 0x0000(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSet<class FName>                             AnimationNames;                                    // 0x0008(0x0050)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FRagdollBehaviorArchetype;

// ScriptStruct GbxPhysics.DOverrideRagdollGenerationProperties
// 0x00F8 (0x00F8 - 0x0000)
struct FDOverrideRagdollGenerationProperties final
{
public:
	class UPhysicsAsset*                          PhysicsAsset;                                      // 0x0000(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSet<class UAnimSequence*>                    InAirAnimations;                                   // 0x0008(0x0050)(Edit, UObjectWrapper, NativeAccessSpecifierPublic)
	TSet<class UAnimSequence*>                    RecoveryAnimations;                                // 0x0058(0x0050)(Edit, UObjectWrapper, NativeAccessSpecifierPublic)
	TSet<class UAnimSequence*>                    ExtraTuningAnimations;                             // 0x00A8(0x0050)(Edit, UObjectWrapper, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FDOverrideRagdollGenerationProperties;

// ScriptStruct GbxPhysics.ForwardDynamics
// 0x0060 (0x0060 - 0x0000)
struct FForwardDynamics final
{
public:
	uint8                                         Pad_0[0x10];                                       // 0x0000(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<struct FGameplayTag, struct FForwardDynamicsProxy> DynamicsProxies;                         // 0x0010(0x0050)(Edit, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FForwardDynamics;

// ScriptStruct GbxPhysics.MinDoFStateCache
// 0x0020 (0x0020 - 0x0000)
struct FMinDoFStateCache final
{
public:
	int32                                         AnimIndex;                                         // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DT;                                                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMinDoFStateType                              type;                                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMinDoFRootMatchMode                          RootMode;                                          // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<double>                                State;                                             // 0x0010(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FMinDoFStateCache;

// ScriptStruct GbxPhysics.StateMatchSampleData
// 0x0018 (0x0018 - 0x0000)
struct FStateMatchSampleData final
{
public:
	class FName                                   BodyName;                                          // 0x0000(0x0008)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMinDoFStateType                              StateType;                                         // 0x0008(0x0001)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Degree;                                            // 0x000C(0x0008)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Value;                                             // 0x0014(0x0004)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FStateMatchSampleData;

// ScriptStruct GbxPhysics.StateMatchSampleDataCollection
// 0x0010 (0x0010 - 0x0000)
struct FStateMatchSampleDataCollection final
{
public:
	TArray<struct FStateMatchSampleData>          data;                                              // 0x0000(0x0010)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FStateMatchSampleDataCollection;

}

