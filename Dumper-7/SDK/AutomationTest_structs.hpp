#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AutomationTest

#include "Basic.hpp"


namespace SDK
{

// Enum AutomationTest.EAutomationState
// NumValues: 0x0006
enum class EAutomationState : uint8
{
	NotRun                                   = 0,
	InProcess                                = 1,
	Fail                                     = 2,
	Success                                  = 3,
	Skipped                                  = 4,
	EAutomationState_MAX                     = 5,
};

// Enum AutomationTest.ETEST_RHI_Options
// NumValues: 0x0006
enum class ETEST_RHI_Options : uint8
{
	DirectX11                                = 0,
	DirectX12                                = 1,
	Vulkan                                   = 2,
	Metal                                    = 3,
	Null                                     = 4,
	ETEST_RHI_MAX                            = 5,
};

// Enum AutomationTest.ETEST_RHI_FeatureLevel_Options
// NumValues: 0x0003
enum class ETEST_RHI_FeatureLevel_Options : uint8
{
	SM5                                      = 0,
	SM6                                      = 1,
	ETEST_RHI_FeatureLevel_MAX               = 2,
};

// ScriptStruct AutomationTest.AutomationTestExcludeOptions
// 0x00B8 (0x00B8 - 0x0000)
struct FAutomationTestExcludeOptions final
{
public:
	class FName                                   Test;                                              // 0x0000(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   reason;                                            // 0x0008(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSet<class FName>                             RHIs;                                              // 0x0010(0x0050)(Edit, NativeAccessSpecifierPublic)
	TSet<class FName>                             Platforms;                                         // 0x0060(0x0050)(Edit, NativeAccessSpecifierPublic)
	bool                                          Warn;                                              // 0x00B0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FAutomationTestExcludeOptions;

// ScriptStruct AutomationTest.AutomationTestExcludelistEntry
// 0x00D8 (0x00D8 - 0x0000)
struct FAutomationTestExcludelistEntry final
{
public:
	uint8                                         Pad_0[0x68];                                       // 0x0000(0x0068)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Map;                                               // 0x0068(0x0008)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   Test;                                              // 0x0070(0x0008)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   reason;                                            // 0x0078(0x0008)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSet<class FName>                             RHIs;                                              // 0x0080(0x0050)(Config, NativeAccessSpecifierPublic)
	bool                                          Warn;                                              // 0x00D0(0x0001)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FAutomationTestExcludelistEntry;

}

