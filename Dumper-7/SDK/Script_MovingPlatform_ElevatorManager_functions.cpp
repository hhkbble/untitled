#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Script_MovingPlatform_ElevatorManager

#include "Basic.hpp"

#include "Script_MovingPlatform_ElevatorManager_classes.hpp"
#include "Script_MovingPlatform_ElevatorManager_parameters.hpp"


namespace SDK
{

// Function Script_MovingPlatform_ElevatorManager.Script_MovingPlatform_ElevatorManager_C.AssignElevatorVarsToSwitch
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AOakInteractiveObject*            Elevator                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32                                   SwitchID                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UScript_MovingPlatform_ElevatorManager_C::AssignElevatorVarsToSwitch(class AOakInteractiveObject* Elevator, int32 SwitchID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_MovingPlatform_ElevatorManager_C", "AssignElevatorVarsToSwitch");

	Params::Script_MovingPlatform_ElevatorManager_C_AssignElevatorVarsToSwitch Parms{};

	Parms.Elevator = Elevator;
	Parms.SwitchID = SwitchID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Script_MovingPlatform_ElevatorManager.Script_MovingPlatform_ElevatorManager_C.AssignReferencesToSwitches
// (Public, BlueprintCallable, BlueprintEvent)

void UScript_MovingPlatform_ElevatorManager_C::AssignReferencesToSwitches()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_MovingPlatform_ElevatorManager_C", "AssignReferencesToSwitches");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Script_MovingPlatform_ElevatorManager.Script_MovingPlatform_ElevatorManager_C.Destination_0__OnStateEnabled
// (BlueprintCallable, BlueprintEvent)

void UScript_MovingPlatform_ElevatorManager_C::Destination_0__OnStateEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_MovingPlatform_ElevatorManager_C", "Destination_0__OnStateEnabled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Script_MovingPlatform_ElevatorManager.Script_MovingPlatform_ElevatorManager_C.Destination_1__OnStateEnabled
// (BlueprintCallable, BlueprintEvent)

void UScript_MovingPlatform_ElevatorManager_C::Destination_1__OnStateEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_MovingPlatform_ElevatorManager_C", "Destination_1__OnStateEnabled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Script_MovingPlatform_ElevatorManager.Script_MovingPlatform_ElevatorManager_C.ExecuteUbergraph_Script_MovingPlatform_ElevatorManager
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   entrypoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UScript_MovingPlatform_ElevatorManager_C::ExecuteUbergraph_Script_MovingPlatform_ElevatorManager(int32 entrypoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_MovingPlatform_ElevatorManager_C", "ExecuteUbergraph_Script_MovingPlatform_ElevatorManager");

	Params::Script_MovingPlatform_ElevatorManager_C_ExecuteUbergraph_Script_MovingPlatform_ElevatorManager Parms{};

	Parms.entrypoint = entrypoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Script_MovingPlatform_ElevatorManager.Script_MovingPlatform_ElevatorManager_C.Interactive__OnStateEnabled
// (BlueprintCallable, BlueprintEvent)

void UScript_MovingPlatform_ElevatorManager_C::Interactive__OnStateEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_MovingPlatform_ElevatorManager_C", "Interactive__OnStateEnabled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Script_MovingPlatform_ElevatorManager.Script_MovingPlatform_ElevatorManager_C.MoveElevatorOnSwitchPress
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SwitchID                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UScript_MovingPlatform_ElevatorManager_C::MoveElevatorOnSwitchPress(int32 SwitchID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_MovingPlatform_ElevatorManager_C", "MoveElevatorOnSwitchPress");

	Params::Script_MovingPlatform_ElevatorManager_C_MoveElevatorOnSwitchPress Parms{};

	Parms.SwitchID = SwitchID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Script_MovingPlatform_ElevatorManager.Script_MovingPlatform_ElevatorManager_C.Moving__OnStateEnabled
// (BlueprintCallable, BlueprintEvent)

void UScript_MovingPlatform_ElevatorManager_C::Moving__OnStateEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_MovingPlatform_ElevatorManager_C", "Moving__OnStateEnabled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Script_MovingPlatform_ElevatorManager.Script_MovingPlatform_ElevatorManager_C.NonInteractive__OnStateEnabled
// (BlueprintCallable, BlueprintEvent)

void UScript_MovingPlatform_ElevatorManager_C::NonInteractive__OnStateEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_MovingPlatform_ElevatorManager_C", "NonInteractive__OnStateEnabled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Script_MovingPlatform_ElevatorManager.Script_MovingPlatform_ElevatorManager_C.OnBeginPlay
// (Event, Public, BlueprintEvent)

void UScript_MovingPlatform_ElevatorManager_C::OnBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_MovingPlatform_ElevatorManager_C", "OnBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Script_MovingPlatform_ElevatorManager.Script_MovingPlatform_ElevatorManager_C.ResetSwitches_PressState
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UScript_MovingPlatform_ElevatorManager_C::ResetSwitches_PressState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_MovingPlatform_ElevatorManager_C", "ResetSwitches_PressState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Script_MovingPlatform_ElevatorManager.Script_MovingPlatform_ElevatorManager_C.SetSwitches_InteractiveState
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UScript_MovingPlatform_ElevatorManager_C::SetSwitches_InteractiveState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_MovingPlatform_ElevatorManager_C", "SetSwitches_InteractiveState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Script_MovingPlatform_ElevatorManager.Script_MovingPlatform_ElevatorManager_C.Stationary__OnStateEnabled
// (BlueprintCallable, BlueprintEvent)

void UScript_MovingPlatform_ElevatorManager_C::Stationary__OnStateEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_MovingPlatform_ElevatorManager_C", "Stationary__OnStateEnabled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Script_MovingPlatform_ElevatorManager.Script_MovingPlatform_ElevatorManager_C.SwitchCallElevator
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SwitchID                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UScript_MovingPlatform_ElevatorManager_C::SwitchCallElevator(int32 SwitchID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Script_MovingPlatform_ElevatorManager_C", "SwitchCallElevator");

	Params::Script_MovingPlatform_ElevatorManager_C_SwitchCallElevator Parms{};

	Parms.SwitchID = SwitchID;

	UObject::ProcessEvent(Func, &Parms);
}

}

