#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GbxCloudscape

#include "Basic.hpp"

#include "GbxCloudscape_classes.hpp"
#include "GbxCloudscape_parameters.hpp"


namespace SDK
{

// Function GbxCloudscape.GbxCloudscapeActor.TransitionToCloudscape
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   TransitionTime                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGbxCloudscapeData*               TransitionCloudscapeData                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AGbxCloudscapeActor::TransitionToCloudscape(float TransitionTime, class UGbxCloudscapeData* TransitionCloudscapeData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GbxCloudscapeActor", "TransitionToCloudscape");

	Params::GbxCloudscapeActor_TransitionToCloudscape Parms{};

	Parms.TransitionTime = TransitionTime;
	Parms.TransitionCloudscapeData = TransitionCloudscapeData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GbxCloudscape.GbxCloudscapePreviewActor.EndPreview
// (Native, Public, BlueprintCallable)

void IGbxCloudscapePreviewActor::EndPreview()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("GbxCloudscapePreviewActor", "EndPreview");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GbxCloudscape.GbxCloudscapePreviewActor.SetNextPreviewCloudscape
// (Native, Public, BlueprintCallable)
// Parameters:
// class UGbxCloudscapeData*               InPreviewCloudscape                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IGbxCloudscapePreviewActor::SetNextPreviewCloudscape(class UGbxCloudscapeData* InPreviewCloudscape)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("GbxCloudscapePreviewActor", "SetNextPreviewCloudscape");

	Params::GbxCloudscapePreviewActor_SetNextPreviewCloudscape Parms{};

	Parms.InPreviewCloudscape = InPreviewCloudscape;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GbxCloudscape.GbxCloudscapePreviewActor.SetPreviewCloudscape
// (Native, Public, BlueprintCallable)
// Parameters:
// class UGbxCloudscapeData*               InPreviewCloudscape                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IGbxCloudscapePreviewActor::SetPreviewCloudscape(class UGbxCloudscapeData* InPreviewCloudscape)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("GbxCloudscapePreviewActor", "SetPreviewCloudscape");

	Params::GbxCloudscapePreviewActor_SetPreviewCloudscape Parms{};

	Parms.InPreviewCloudscape = InPreviewCloudscape;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GbxCloudscape.GbxCloudscapePreviewActor.UpdatePreview
// (Native, Public, BlueprintCallable)
// Parameters:
// float                                   TransitionWeight                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IGbxCloudscapePreviewActor::UpdatePreview(float TransitionWeight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("GbxCloudscapePreviewActor", "UpdatePreview");

	Params::GbxCloudscapePreviewActor_UpdatePreview Parms{};

	Parms.TransitionWeight = TransitionWeight;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

