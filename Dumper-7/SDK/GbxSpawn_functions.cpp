#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GbxSpawn

#include "Basic.hpp"

#include "GbxSpawn_classes.hpp"
#include "GbxSpawn_parameters.hpp"


namespace SDK
{

// Function GbxSpawn.gbxactor.GetSpawnEncounter
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ASpawnEncounter*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ASpawnEncounter* Igbxactor::GetSpawnEncounter() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("gbxactor", "GetSpawnEncounter");

	Params::gbxactor_GetSpawnEncounter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GbxSpawn.gbxactor.GetSpawner
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ASpawner*                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ASpawner* Igbxactor::GetSpawner() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("gbxactor", "GetSpawner");

	Params::gbxactor_GetSpawner Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GbxSpawn.gbxactor.GetSpawnerComponent
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USpawnerComponent*                ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USpawnerComponent* Igbxactor::GetSpawnerComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("gbxactor", "GetSpawnerComponent");

	Params::gbxactor_GetSpawnerComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GbxSpawn.GbxActorDefBlueprintFunctionLibrary.GetBlackboardActorDef
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGbxBlackboardEntryRef&    BlackboardKey                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          OwnerContext                                           (Parm, ZeroConstructor, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

FGbxDefPtrProperty_ UGbxActorDefBlueprintFunctionLibrary::GetBlackboardActorDef(const struct FGbxBlackboardEntryRef& BlackboardKey, class UObject* OwnerContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxActorDefBlueprintFunctionLibrary", "GetBlackboardActorDef");

	Params::GbxActorDefBlueprintFunctionLibrary_GetBlackboardActorDef Parms{};

	Parms.BlackboardKey = std::move(BlackboardKey);
	Parms.OwnerContext = OwnerContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GbxSpawn.GbxActorDefBlueprintFunctionLibrary.GetBlackboardActorDefHandle
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGbxBlackboardEntryRef&    BlackboardKey                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          OwnerContext                                           (Parm, ZeroConstructor, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGameDataHandleProperty_                ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

FGameDataHandleProperty_ UGbxActorDefBlueprintFunctionLibrary::GetBlackboardActorDefHandle(const struct FGbxBlackboardEntryRef& BlackboardKey, class UObject* OwnerContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxActorDefBlueprintFunctionLibrary", "GetBlackboardActorDefHandle");

	Params::GbxActorDefBlueprintFunctionLibrary_GetBlackboardActorDefHandle Parms{};

	Parms.BlackboardKey = std::move(BlackboardKey);
	Parms.OwnerContext = OwnerContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GbxSpawn.GbxActorDefBlueprintFunctionLibrary.GetBlackboardActorDefHandlePure
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGbxBlackboardEntryRef&    BlackboardKey                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          OwnerContext                                           (Parm, ZeroConstructor, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGameDataHandleProperty_                ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

FGameDataHandleProperty_ UGbxActorDefBlueprintFunctionLibrary::GetBlackboardActorDefHandlePure(const struct FGbxBlackboardEntryRef& BlackboardKey, class UObject* OwnerContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxActorDefBlueprintFunctionLibrary", "GetBlackboardActorDefHandlePure");

	Params::GbxActorDefBlueprintFunctionLibrary_GetBlackboardActorDefHandlePure Parms{};

	Parms.BlackboardKey = std::move(BlackboardKey);
	Parms.OwnerContext = OwnerContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GbxSpawn.GbxActorDefBlueprintFunctionLibrary.GetBlackboardActorDefPure
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGbxBlackboardEntryRef&    BlackboardKey                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          OwnerContext                                           (Parm, ZeroConstructor, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

FGbxDefPtrProperty_ UGbxActorDefBlueprintFunctionLibrary::GetBlackboardActorDefPure(const struct FGbxBlackboardEntryRef& BlackboardKey, class UObject* OwnerContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxActorDefBlueprintFunctionLibrary", "GetBlackboardActorDefPure");

	Params::GbxActorDefBlueprintFunctionLibrary_GetBlackboardActorDefPure Parms{};

	Parms.BlackboardKey = std::move(BlackboardKey);
	Parms.OwnerContext = OwnerContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GbxSpawn.GbxActorDefBlueprintFunctionLibrary.GetEnemiesActorDefHandles
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<FGameDataHandleProperty_>        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<FGameDataHandleProperty_> UGbxActorDefBlueprintFunctionLibrary::GetEnemiesActorDefHandles()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxActorDefBlueprintFunctionLibrary", "GetEnemiesActorDefHandles");

	Params::GbxActorDefBlueprintFunctionLibrary_GetEnemiesActorDefHandles Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GbxSpawn.GbxActorDefBlueprintFunctionLibrary.GetEnemiesActorDefInfo
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FGameplayTagContainer&     BossTags                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bRemovePossibleDuplicates                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FGbxEnemyActorDefInfo>    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FGbxEnemyActorDefInfo> UGbxActorDefBlueprintFunctionLibrary::GetEnemiesActorDefInfo(const struct FGameplayTagContainer& BossTags, bool bRemovePossibleDuplicates)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxActorDefBlueprintFunctionLibrary", "GetEnemiesActorDefInfo");

	Params::GbxActorDefBlueprintFunctionLibrary_GetEnemiesActorDefInfo Parms{};

	Parms.BossTags = std::move(BossTags);
	Parms.bRemovePossibleDuplicates = bRemovePossibleDuplicates;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GbxSpawn.GbxActorDefBlueprintFunctionLibrary.GetEnemiesActorDefStrings
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UGbxActorDefBlueprintFunctionLibrary::GetEnemiesActorDefStrings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxActorDefBlueprintFunctionLibrary", "GetEnemiesActorDefStrings");

	Params::GbxActorDefBlueprintFunctionLibrary_GetEnemiesActorDefStrings Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GbxSpawn.GbxActorDefBlueprintFunctionLibrary.SetBlackboardActorDef
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGbxBlackboardEntryRef&    BlackboardKey                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// FGbxDefPtrProperty_                     Value                                                  (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          OwnerContext                                           (Parm, ZeroConstructor, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGbxActorDefBlueprintFunctionLibrary::SetBlackboardActorDef(const struct FGbxBlackboardEntryRef& BlackboardKey, FGbxDefPtrProperty_ Value, class UObject* OwnerContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxActorDefBlueprintFunctionLibrary", "SetBlackboardActorDef");

	Params::GbxActorDefBlueprintFunctionLibrary_SetBlackboardActorDef Parms{};

	Parms.BlackboardKey = std::move(BlackboardKey);
	Parms.Value = Value;
	Parms.OwnerContext = OwnerContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GbxSpawn.GbxActorDefBlueprintFunctionLibrary.SetBlackboardActorDefHandle
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FGbxBlackboardEntryRef&    BlackboardKey                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// FGameDataHandleProperty_                Value                                                  (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          OwnerContext                                           (Parm, ZeroConstructor, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGbxActorDefBlueprintFunctionLibrary::SetBlackboardActorDefHandle(const struct FGbxBlackboardEntryRef& BlackboardKey, FGameDataHandleProperty_ Value, class UObject* OwnerContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxActorDefBlueprintFunctionLibrary", "SetBlackboardActorDefHandle");

	Params::GbxActorDefBlueprintFunctionLibrary_SetBlackboardActorDefHandle Parms{};

	Parms.BlackboardKey = std::move(BlackboardKey);
	Parms.Value = Value;
	Parms.OwnerContext = OwnerContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GbxSpawn.GbxGameplayTagStatics.GbxActor_AddTag
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          Context                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              Tag                                                    (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGbxGameplayTagStatics::GbxActor_AddTag(class UObject* Context, const struct FGameplayTag& Tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxGameplayTagStatics", "GbxActor_AddTag");

	Params::GbxGameplayTagStatics_GbxActor_AddTag Parms{};

	Parms.Context = Context;
	Parms.Tag = std::move(Tag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GbxSpawn.GbxGameplayTagStatics.GbxActor_HasAllTags
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          Context                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTagContainer&     tags                                                   (Parm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGbxGameplayTagStatics::GbxActor_HasAllTags(class UObject* Context, const struct FGameplayTagContainer& tags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxGameplayTagStatics", "GbxActor_HasAllTags");

	Params::GbxGameplayTagStatics_GbxActor_HasAllTags Parms{};

	Parms.Context = Context;
	Parms.tags = std::move(tags);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GbxSpawn.GbxGameplayTagStatics.GbxActor_HasAnyTags
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          Context                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTagContainer&     tags                                                   (Parm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGbxGameplayTagStatics::GbxActor_HasAnyTags(class UObject* Context, const struct FGameplayTagContainer& tags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxGameplayTagStatics", "GbxActor_HasAnyTags");

	Params::GbxGameplayTagStatics_GbxActor_HasAnyTags Parms{};

	Parms.Context = Context;
	Parms.tags = std::move(tags);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GbxSpawn.GbxGameplayTagStatics.GbxActor_HasTag
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          Context                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              Tag                                                    (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGbxGameplayTagStatics::GbxActor_HasTag(class UObject* Context, const struct FGameplayTag& Tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxGameplayTagStatics", "GbxActor_HasTag");

	Params::GbxGameplayTagStatics_GbxActor_HasTag Parms{};

	Parms.Context = Context;
	Parms.Tag = std::move(Tag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GbxSpawn.GbxGameplayTagStatics.GbxActor_RemoveTag
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          Context                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameplayTag&              Tag                                                    (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGbxGameplayTagStatics::GbxActor_RemoveTag(class UObject* Context, const struct FGameplayTag& Tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GbxGameplayTagStatics", "GbxActor_RemoveTag");

	Params::GbxGameplayTagStatics_GbxActor_RemoveTag Parms{};

	Parms.Context = Context;
	Parms.Tag = std::move(Tag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GbxSpawn.GbxPreviewComponent.GetPreviewOptions
// (Final, Native, Private, HasOutParams)
// Parameters:
// TArray<class FName>*                    OutOptions                                             (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UGbxPreviewComponent::GetPreviewOptions(TArray<class FName>* OutOptions)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GbxPreviewComponent", "GetPreviewOptions");

	Params::GbxPreviewComponent_GetPreviewOptions Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutOptions != nullptr)
		*OutOptions = std::move(Parms.OutOptions);
}


// Function GbxSpawn.SpawnBlueprintLibrary.EqualEqual_GbxActorDef
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const FGameDataHandleProperty_&         A                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const FGameDataHandleProperty_&         B                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USpawnBlueprintLibrary::EqualEqual_GbxActorDef(const FGameDataHandleProperty_& A, const FGameDataHandleProperty_& B)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SpawnBlueprintLibrary", "EqualEqual_GbxActorDef");

	Params::SpawnBlueprintLibrary_EqualEqual_GbxActorDef Parms{};

	Parms.A = A;
	Parms.B = B;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GbxSpawn.SpawnBlueprintLibrary.GbxSpawnActorAtSpawnPoint
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AActor*                           Context                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGameDataHandleProperty_                GbxActorDef                                            (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASpawnPoint*                      SpawnPoint                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           owner                                                  (Parm, ZeroConstructor, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APawn*                            instigator                                             (Parm, ZeroConstructor, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FSpawnDetails&             SpawnDetails                                           (Parm, NoDestructor, AdvancedDisplay, NativeAccessSpecifierPublic)
// bool                                    bIsCritical                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor**                          Result                                                 (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void USpawnBlueprintLibrary::GbxSpawnActorAtSpawnPoint(class AActor* Context, FGameDataHandleProperty_ GbxActorDef, class ASpawnPoint* SpawnPoint, class AActor* owner, class APawn* instigator, const struct FSpawnDetails& SpawnDetails, bool bIsCritical, class AActor** Result, const struct FLatentActionInfo& LatentInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SpawnBlueprintLibrary", "GbxSpawnActorAtSpawnPoint");

	Params::SpawnBlueprintLibrary_GbxSpawnActorAtSpawnPoint Parms{};

	Parms.Context = Context;
	Parms.GbxActorDef = GbxActorDef;
	Parms.SpawnPoint = SpawnPoint;
	Parms.owner = owner;
	Parms.instigator = instigator;
	Parms.SpawnDetails = std::move(SpawnDetails);
	Parms.bIsCritical = bIsCritical;
	Parms.LatentInfo = std::move(LatentInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function GbxSpawn.SpawnBlueprintLibrary.GbxSpawnActorAtSpawnPointComponent
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AActor*                           Context                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGameDataHandleProperty_                GbxActorDef                                            (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USpawnPointComponent*             SpawnPointComponent                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           owner                                                  (Parm, ZeroConstructor, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APawn*                            instigator                                             (Parm, ZeroConstructor, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FSpawnDetails&             SpawnDetails                                           (Parm, NoDestructor, AdvancedDisplay, NativeAccessSpecifierPublic)
// bool                                    bIsCritical                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor**                          Result                                                 (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void USpawnBlueprintLibrary::GbxSpawnActorAtSpawnPointComponent(class AActor* Context, FGameDataHandleProperty_ GbxActorDef, class USpawnPointComponent* SpawnPointComponent, class AActor* owner, class APawn* instigator, const struct FSpawnDetails& SpawnDetails, bool bIsCritical, class AActor** Result, const struct FLatentActionInfo& LatentInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SpawnBlueprintLibrary", "GbxSpawnActorAtSpawnPointComponent");

	Params::SpawnBlueprintLibrary_GbxSpawnActorAtSpawnPointComponent Parms{};

	Parms.Context = Context;
	Parms.GbxActorDef = GbxActorDef;
	Parms.SpawnPointComponent = SpawnPointComponent;
	Parms.owner = owner;
	Parms.instigator = instigator;
	Parms.SpawnDetails = std::move(SpawnDetails);
	Parms.bIsCritical = bIsCritical;
	Parms.LatentInfo = std::move(LatentInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function GbxSpawn.SpawnBlueprintLibrary.GbxSpawnActorAtTransform
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                           Context                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGameDataHandleProperty_                GbxActorDef                                            (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTransform&                Transform                                              (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           owner                                                  (Parm, ZeroConstructor, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APawn*                            instigator                                             (Parm, ZeroConstructor, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FSpawnDetails&             SpawnDetails                                           (Parm, NoDestructor, AdvancedDisplay, NativeAccessSpecifierPublic)
// bool                                    bIsCritical                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor**                          Result                                                 (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void USpawnBlueprintLibrary::GbxSpawnActorAtTransform(class AActor* Context, FGameDataHandleProperty_ GbxActorDef, const struct FTransform& Transform, class AActor* owner, class APawn* instigator, const struct FSpawnDetails& SpawnDetails, bool bIsCritical, class AActor** Result, const struct FLatentActionInfo& LatentInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SpawnBlueprintLibrary", "GbxSpawnActorAtTransform");

	Params::SpawnBlueprintLibrary_GbxSpawnActorAtTransform Parms{};

	Parms.Context = Context;
	Parms.GbxActorDef = GbxActorDef;
	Parms.Transform = std::move(Transform);
	Parms.owner = owner;
	Parms.instigator = instigator;
	Parms.SpawnDetails = std::move(SpawnDetails);
	Parms.bIsCritical = bIsCritical;
	Parms.LatentInfo = std::move(LatentInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function GbxSpawn.SpawnBlueprintLibrary.GbxSpawnSystemRestore
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContext                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USpawnBlueprintLibrary::GbxSpawnSystemRestore(class UObject* WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SpawnBlueprintLibrary", "GbxSpawnSystemRestore");

	Params::SpawnBlueprintLibrary_GbxSpawnSystemRestore Parms{};

	Parms.WorldContext = WorldContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GbxSpawn.SpawnBlueprintLibrary.GbxSpawnSystemSaveAndReset
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContext                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USpawnBlueprintLibrary::GbxSpawnSystemSaveAndReset(class UObject* WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SpawnBlueprintLibrary", "GbxSpawnSystemSaveAndReset");

	Params::SpawnBlueprintLibrary_GbxSpawnSystemSaveAndReset Parms{};

	Parms.WorldContext = WorldContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GbxSpawn.SpawnBlueprintLibrary.GetGbxActorDefinition
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGameDataHandleProperty_                ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

FGameDataHandleProperty_ USpawnBlueprintLibrary::GetGbxActorDefinition(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SpawnBlueprintLibrary", "GetGbxActorDefinition");

	Params::SpawnBlueprintLibrary_GetGbxActorDefinition Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GbxSpawn.SpawnBlueprintLibrary.GetGbxActorDefPure
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FGameDataHandleProperty_                ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

FGameDataHandleProperty_ USpawnBlueprintLibrary::GetGbxActorDefPure(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SpawnBlueprintLibrary", "GetGbxActorDefPure");

	Params::SpawnBlueprintLibrary_GetGbxActorDefPure Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GbxSpawn.SpawnBlueprintLibrary.GetSpawnEncounter
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Context                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASpawnEncounter*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ASpawnEncounter* USpawnBlueprintLibrary::GetSpawnEncounter(class AActor* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SpawnBlueprintLibrary", "GetSpawnEncounter");

	Params::SpawnBlueprintLibrary_GetSpawnEncounter Parms{};

	Parms.Context = Context;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GbxSpawn.SpawnBlueprintLibrary.GetSpawner
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Context                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASpawner*                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ASpawner* USpawnBlueprintLibrary::GetSpawner(class AActor* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SpawnBlueprintLibrary", "GetSpawner");

	Params::SpawnBlueprintLibrary_GetSpawner Parms{};

	Parms.Context = Context;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GbxSpawn.SpawnBlueprintLibrary.GetSpawnerComponent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Context                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USpawnerComponent*                ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USpawnerComponent* USpawnBlueprintLibrary::GetSpawnerComponent(class AActor* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SpawnBlueprintLibrary", "GetSpawnerComponent");

	Params::SpawnBlueprintLibrary_GetSpawnerComponent Parms{};

	Parms.Context = Context;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GbxSpawn.SpawnBlueprintLibrary.HasGbxActorDef
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const FGameDataHandleProperty_&         GbxActorDef                                            (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USpawnBlueprintLibrary::HasGbxActorDef(class AActor* Actor, const FGameDataHandleProperty_& GbxActorDef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SpawnBlueprintLibrary", "HasGbxActorDef");

	Params::SpawnBlueprintLibrary_HasGbxActorDef Parms{};

	Parms.Actor = Actor;
	Parms.GbxActorDef = GbxActorDef;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GbxSpawn.SpawnBlueprintLibrary.HasGbxActorDefBranch
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const FGameDataHandleProperty_&         GbxActorDef                                            (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USpawnBlueprintLibrary::HasGbxActorDefBranch(class AActor* Actor, const FGameDataHandleProperty_& GbxActorDef, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SpawnBlueprintLibrary", "HasGbxActorDefBranch");

	Params::SpawnBlueprintLibrary_HasGbxActorDefBranch Parms{};

	Parms.Actor = Actor;
	Parms.GbxActorDef = GbxActorDef;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function GbxSpawn.SpawnEncounter.KillEncounterActors
// (Final, Native, Public, BlueprintCallable)

void ASpawnEncounter::KillEncounterActors()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpawnEncounter", "KillEncounterActors");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GbxSpawn.SpawnEncounter.ResetEncounter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bDestroyActors                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASpawnEncounter::ResetEncounter(bool bDestroyActors)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpawnEncounter", "ResetEncounter");

	Params::SpawnEncounter_ResetEncounter Parms{};

	Parms.bDestroyActors = bDestroyActors;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GbxSpawn.SpawnEncounter.SetEncounterEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bEnabled                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASpawnEncounter::SetEncounterEnabled(bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpawnEncounter", "SetEncounterEnabled");

	Params::SpawnEncounter_SetEncounterEnabled Parms{};

	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GbxSpawn.SpawnEncounter.GetCurrentWaveIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ASpawnEncounter::GetCurrentWaveIndex() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpawnEncounter", "GetCurrentWaveIndex");

	Params::SpawnEncounter_GetCurrentWaveIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GbxSpawn.SpawnEncounter.IsEncounterComplete
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASpawnEncounter::IsEncounterComplete() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpawnEncounter", "IsEncounterComplete");

	Params::SpawnEncounter_IsEncounterComplete Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GbxSpawn.SpawnEncounter.IsEncounterEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASpawnEncounter::IsEncounterEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpawnEncounter", "IsEncounterEnabled");

	Params::SpawnEncounter_IsEncounterEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GbxSpawn.SpawnPoint.IsSpawnPointEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASpawnPoint::IsSpawnPointEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpawnPoint", "IsSpawnPointEnabled");

	Params::SpawnPoint_IsSpawnPointEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GbxSpawn.SpawnPoint.ResetStretchyPoints
// (Final, Native, Private, BlueprintCallable)

void ASpawnPoint::ResetStretchyPoints()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpawnPoint", "ResetStretchyPoints");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GbxSpawn.SpawnPoint.SetSpawnPointEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bEnabled                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASpawnPoint::SetSpawnPointEnabled(bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpawnPoint", "SetSpawnPointEnabled");

	Params::SpawnPoint_SetSpawnPointEnabled Parms{};

	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GbxSpawn.SpawnPoint.GetSpawnPointComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USpawnPointComponent*             ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USpawnPointComponent* ASpawnPoint::GetSpawnPointComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpawnPoint", "GetSpawnPointComponent");

	Params::SpawnPoint_GetSpawnPointComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GbxSpawn.Spawner.DestroyAllActors
// (Final, Native, Public, BlueprintCallable)

void ASpawner::DestroyAllActors()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Spawner", "DestroyAllActors");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GbxSpawn.Spawner.DestroyOnAllDied
// (Final, Native, Private)
// Parameters:
// class ASpawner*                         Spawner                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASpawner::DestroyOnAllDied(class ASpawner* Spawner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Spawner", "DestroyOnAllDied");

	Params::Spawner_DestroyOnAllDied Parms{};

	Parms.Spawner = Spawner;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GbxSpawn.Spawner.ForgetAllActors
// (Final, Native, Public, BlueprintCallable)

void ASpawner::ForgetAllActors()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Spawner", "ForgetAllActors");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GbxSpawn.Spawner.IsSpawnerEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASpawner::IsSpawnerEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Spawner", "IsSpawnerEnabled");

	Params::Spawner_IsSpawnerEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GbxSpawn.Spawner.ResetSpawner
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bDestroyActors                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASpawner::ResetSpawner(bool bDestroyActors)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Spawner", "ResetSpawner");

	Params::Spawner_ResetSpawner Parms{};

	Parms.bDestroyActors = bDestroyActors;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GbxSpawn.Spawner.SetGbxActorDef
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const FGameDataHandleProperty_&         NewGbxActorDef                                         (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDestroyExistingActors                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASpawner::SetGbxActorDef(const FGameDataHandleProperty_& NewGbxActorDef, bool bDestroyExistingActors)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Spawner", "SetGbxActorDef");

	Params::Spawner_SetGbxActorDef Parms{};

	Parms.NewGbxActorDef = NewGbxActorDef;
	Parms.bDestroyExistingActors = bDestroyExistingActors;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GbxSpawn.Spawner.SetNextSpawnOverride
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// FGameDataHandleProperty_                NewNextSpawnOverrideHandle                             (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESetNextSpawnOutputState*               Exec                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLatentActionInfo&         LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void ASpawner::SetNextSpawnOverride(FGameDataHandleProperty_ NewNextSpawnOverrideHandle, ESetNextSpawnOutputState* Exec, const struct FLatentActionInfo& LatentInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Spawner", "SetNextSpawnOverride");

	Params::Spawner_SetNextSpawnOverride Parms{};

	Parms.NewNextSpawnOverrideHandle = NewNextSpawnOverrideHandle;
	Parms.LatentInfo = std::move(LatentInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Exec != nullptr)
		*Exec = Parms.Exec;
}


// Function GbxSpawn.Spawner.SetSpawnerEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bEnabled                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASpawner::SetSpawnerEnabled(bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Spawner", "SetSpawnerEnabled");

	Params::Spawner_SetSpawnerEnabled Parms{};

	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GbxSpawn.Spawner.GetAliveActors
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESpawnedActorType                       ActorType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIncludeLinkedSpawners                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AActor*> ASpawner::GetAliveActors(ESpawnedActorType ActorType, bool bIncludeLinkedSpawners) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Spawner", "GetAliveActors");

	Params::Spawner_GetAliveActors Parms{};

	Parms.ActorType = ActorType;
	Parms.bIncludeLinkedSpawners = bIncludeLinkedSpawners;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GbxSpawn.Spawner.GetNumAliveActors
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESpawnedActorType                       type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ASpawner::GetNumAliveActors(ESpawnedActorType type) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Spawner", "GetNumAliveActors");

	Params::Spawner_GetNumAliveActors Parms{};

	Parms.type = type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GbxSpawn.Spawner.GetNumDeadActors
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESpawnedActorType                       type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ASpawner::GetNumDeadActors(ESpawnedActorType type) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Spawner", "GetNumDeadActors");

	Params::Spawner_GetNumDeadActors Parms{};

	Parms.type = type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GbxSpawn.Spawner.GetNumSpawnedActors
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESpawnedActorType                       type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ASpawner::GetNumSpawnedActors(ESpawnedActorType type) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Spawner", "GetNumSpawnedActors");

	Params::Spawner_GetNumSpawnedActors Parms{};

	Parms.type = type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GbxSpawn.Spawner.GetNumTotalActors
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ASpawner::GetNumTotalActors() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Spawner", "GetNumTotalActors");

	Params::Spawner_GetNumTotalActors Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GbxSpawn.Spawner.GetSpawnerComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USpawnerComponent*                ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USpawnerComponent* ASpawner::GetSpawnerComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Spawner", "GetSpawnerComponent");

	Params::Spawner_GetSpawnerComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GbxSpawn.Spawner.HaveAllDied
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESpawnedActorType                       type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASpawner::HaveAllDied(ESpawnedActorType type) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Spawner", "HaveAllDied");

	Params::Spawner_HaveAllDied Parms{};

	Parms.type = type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GbxSpawn.Spawner.HaveAllSpawned
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASpawner::HaveAllSpawned() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Spawner", "HaveAllSpawned");

	Params::Spawner_HaveAllSpawned Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GbxSpawn.SpawnPointComponent.RefreshStretchyPoints
// (Final, Native, Public, BlueprintCallable)

void USpawnPointComponent::RefreshStretchyPoints()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpawnPointComponent", "RefreshStretchyPoints");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GbxSpawn.SpawnPointComponent.SetSpawnPointAnimTag
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FGameplayTag&              AnimTag                                                (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USpawnPointComponent::SetSpawnPointAnimTag(const struct FGameplayTag& AnimTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpawnPointComponent", "SetSpawnPointAnimTag");

	Params::SpawnPointComponent_SetSpawnPointAnimTag Parms{};

	Parms.AnimTag = std::move(AnimTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GbxSpawn.SpawnPointComponent.SetSpawnPointEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bEnabled                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USpawnPointComponent::SetSpawnPointEnabled(bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpawnPointComponent", "SetSpawnPointEnabled");

	Params::SpawnPointComponent_SetSpawnPointEnabled Parms{};

	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GbxSpawn.SpawnPointComponent.IsSpawnPointEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USpawnPointComponent::IsSpawnPointEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpawnPointComponent", "IsSpawnPointEnabled");

	Params::SpawnPointComponent_IsSpawnPointEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GbxSpawn.SpawnPointComponent.ShouldHideStretchyPointEditWidget
// (Final, Native, Private, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USpawnPointComponent::ShouldHideStretchyPointEditWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpawnPointComponent", "ShouldHideStretchyPointEditWidget");

	Params::SpawnPointComponent_ShouldHideStretchyPointEditWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GbxSpawn.SpawnerComponent.GetPlayerCountSpawnRowOptions
// (Final, Native, Static, Public)
// Parameters:
// TArray<class FName>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FName> USpawnerComponent::GetPlayerCountSpawnRowOptions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SpawnerComponent", "GetPlayerCountSpawnRowOptions");

	Params::SpawnerComponent_GetPlayerCountSpawnRowOptions Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GbxSpawn.SpawnerComponent.DestroyAllActors
// (Final, Native, Public, BlueprintCallable)

void USpawnerComponent::DestroyAllActors()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpawnerComponent", "DestroyAllActors");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GbxSpawn.SpawnerComponent.IsSpawnerEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USpawnerComponent::IsSpawnerEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpawnerComponent", "IsSpawnerEnabled");

	Params::SpawnerComponent_IsSpawnerEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GbxSpawn.SpawnerComponent.KillAliveActors
// (Final, Native, Public, BlueprintCallable)

void USpawnerComponent::KillAliveActors()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpawnerComponent", "KillAliveActors");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function GbxSpawn.SpawnerComponent.PopActorDef
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FName&                      reason                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDestroyExistingActors                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USpawnerComponent::PopActorDef(const class FName& reason, bool bDestroyExistingActors)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpawnerComponent", "PopActorDef");

	Params::SpawnerComponent_PopActorDef Parms{};

	Parms.reason = reason;
	Parms.bDestroyExistingActors = bDestroyExistingActors;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GbxSpawn.SpawnerComponent.PushActorDef
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FName&                      reason                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const FGbxDefPtrProperty_&              NewGbxActorDef                                         (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDestroyExistingActors                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USpawnerComponent::PushActorDef(const class FName& reason, const FGbxDefPtrProperty_& NewGbxActorDef, bool bDestroyExistingActors)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpawnerComponent", "PushActorDef");

	Params::SpawnerComponent_PushActorDef Parms{};

	Parms.reason = reason;
	Parms.NewGbxActorDef = NewGbxActorDef;
	Parms.bDestroyExistingActors = bDestroyExistingActors;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GbxSpawn.SpawnerComponent.ResetSpawner
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bDestroyActors                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USpawnerComponent::ResetSpawner(bool bDestroyActors)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpawnerComponent", "ResetSpawner");

	Params::SpawnerComponent_ResetSpawner Parms{};

	Parms.bDestroyActors = bDestroyActors;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GbxSpawn.SpawnerComponent.SetGbxActorDef
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const FGameDataHandleProperty_&         NewGbxActorDef                                         (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDestroyExistingActors                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USpawnerComponent::SetGbxActorDef(const FGameDataHandleProperty_& NewGbxActorDef, bool bDestroyExistingActors)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpawnerComponent", "SetGbxActorDef");

	Params::SpawnerComponent_SetGbxActorDef Parms{};

	Parms.NewGbxActorDef = NewGbxActorDef;
	Parms.bDestroyExistingActors = bDestroyExistingActors;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GbxSpawn.SpawnerComponent.SetSpawnerEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bEnabled                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USpawnerComponent::SetSpawnerEnabled(bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpawnerComponent", "SetSpawnerEnabled");

	Params::SpawnerComponent_SetSpawnerEnabled Parms{};

	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function GbxSpawn.SpawnerComponent.GetAliveActors
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESpawnedActorType                       ActorType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIncludeGroupedSpawners                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AActor*> USpawnerComponent::GetAliveActors(ESpawnedActorType ActorType, bool bIncludeGroupedSpawners) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpawnerComponent", "GetAliveActors");

	Params::SpawnerComponent_GetAliveActors Parms{};

	Parms.ActorType = ActorType;
	Parms.bIncludeGroupedSpawners = bIncludeGroupedSpawners;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GbxSpawn.SpawnerComponent.GetNumAliveActors
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESpawnedActorType                       type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 USpawnerComponent::GetNumAliveActors(ESpawnedActorType type) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpawnerComponent", "GetNumAliveActors");

	Params::SpawnerComponent_GetNumAliveActors Parms{};

	Parms.type = type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GbxSpawn.SpawnerComponent.GetNumDeadActors
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESpawnedActorType                       type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 USpawnerComponent::GetNumDeadActors(ESpawnedActorType type) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpawnerComponent", "GetNumDeadActors");

	Params::SpawnerComponent_GetNumDeadActors Parms{};

	Parms.type = type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GbxSpawn.SpawnerComponent.GetNumSpawnedActors
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESpawnedActorType                       type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 USpawnerComponent::GetNumSpawnedActors(ESpawnedActorType type) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpawnerComponent", "GetNumSpawnedActors");

	Params::SpawnerComponent_GetNumSpawnedActors Parms{};

	Parms.type = type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GbxSpawn.SpawnerComponent.GetNumTotalActors
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 USpawnerComponent::GetNumTotalActors() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpawnerComponent", "GetNumTotalActors");

	Params::SpawnerComponent_GetNumTotalActors Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GbxSpawn.SpawnerComponent.HaveAllDied
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESpawnedActorType                       type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USpawnerComponent::HaveAllDied(ESpawnedActorType type) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpawnerComponent", "HaveAllDied");

	Params::SpawnerComponent_HaveAllDied Parms{};

	Parms.type = type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function GbxSpawn.SpawnerComponent.HaveAllSpawned
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USpawnerComponent::HaveAllSpawned() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpawnerComponent", "HaveAllSpawned");

	Params::SpawnerComponent_HaveAllSpawned Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

