#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ModelViewViewModel

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"
#include "ModelViewViewModel_structs.hpp"
#include "CoreUObject_classes.hpp"


namespace SDK
{

// Class ModelViewViewModel.MVVMBindingSubsystem
// 0x0068 (0x0098 - 0x0030)
class UMVVMBindingSubsystem final : public UEngineSubsystem
{
public:
	uint8                                         Pad_30[0x68];                                      // 0x0030(0x0068)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MVVMBindingSubsystem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MVVMBindingSubsystem")
	}
	static class UMVVMBindingSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMVVMBindingSubsystem>();
	}
};
DUMPER7_ASSERTS_UMVVMBindingSubsystem;

// Class ModelViewViewModel.MVVMConversionLibrary
// 0x0000 (0x0028 - 0x0028)
class UMVVMConversionLibrary final : public UBlueprintFunctionLibrary
{
public:
	static ESlateVisibility Conv_BoolToSlateVisibility(bool bIsVisible, ESlateVisibility TrueVisibility, ESlateVisibility FalseVisibility);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MVVMConversionLibrary")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MVVMConversionLibrary")
	}
	static class UMVVMConversionLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMVVMConversionLibrary>();
	}
};
DUMPER7_ASSERTS_UMVVMConversionLibrary;

// Class ModelViewViewModel.MVVMSlateBrushConversionLibrary
// 0x0000 (0x0028 - 0x0028)
class UMVVMSlateBrushConversionLibrary final : public UBlueprintFunctionLibrary
{
public:
	static struct FSlateBrush Conv_SetScalarParameter(const struct FSlateBrush& Brush, class FName ParameterName, float Value);
	static struct FSlateBrush Conv_SetScalarParameterMID(const struct FSlateBrush& Brush, class UMaterialInterface* Material, class FName ParameterName, float Value);
	static struct FSlateBrush Conv_SetTextureParameter(const struct FSlateBrush& Brush, class FName ParameterName, class UTexture* Value);
	static struct FSlateBrush Conv_SetTextureParameterMID(const struct FSlateBrush& Brush, class UMaterialInterface* Material, class FName ParameterName, class UTexture* Value);
	static struct FSlateBrush Conv_SetVectorParameter(const struct FSlateBrush& Brush, class FName ParameterName, const struct FLinearColor& Value);
	static struct FSlateBrush Conv_SetVectorParameterMID(const struct FSlateBrush& Brush, class UMaterialInterface* Material, class FName ParameterName, const struct FLinearColor& Value);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MVVMSlateBrushConversionLibrary")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MVVMSlateBrushConversionLibrary")
	}
	static class UMVVMSlateBrushConversionLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMVVMSlateBrushConversionLibrary>();
	}
};
DUMPER7_ASSERTS_UMVVMSlateBrushConversionLibrary;

// Class ModelViewViewModel.MVVMGameSubsystem
// 0x0008 (0x0038 - 0x0030)
class UMVVMGameSubsystem final : public UGameInstanceSubsystem
{
public:
	class UMVVMViewModelCollectionObject*         ViewModelCollection;                               // 0x0030(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	class UMVVMViewModelCollectionObject* GetViewModelCollection() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MVVMGameSubsystem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MVVMGameSubsystem")
	}
	static class UMVVMGameSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMVVMGameSubsystem>();
	}
};
DUMPER7_ASSERTS_UMVVMGameSubsystem;

// Class ModelViewViewModel.MVVMView
// 0x0048 (0x0070 - 0x0028)
class UMVVMView final : public UUserWidgetExtension
{
public:
	class UMVVMViewClass*                         GeneratedViewClass;                                // 0x0028(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FMVVMView_Source>               Sources;                                           // 0x0030(0x0010)(Edit, ZeroConstructor, Transient, EditConst, NativeAccessSpecifierPrivate)
	uint8                                         Pad_40[0x10];                                      // 0x0040(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMVVMViewExtension*>             Extensions;                                        // 0x0050(0x0010)(Edit, ZeroConstructor, Transient, EditConst, UObjectWrapper, NativeAccessSpecifierPrivate)
	uint64                                        ValidSources;                                      // 0x0060(0x0008)(Edit, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         NumberOfSourceWithTickBinding;                     // 0x0068(0x0001)(Edit, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bLogBinding;                                       // 0x0069(0x0001)(Edit, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bConstructed;                                      // 0x006A(0x0001)(Edit, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bSourcesInitialized;                               // 0x006B(0x0001)(Edit, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bBindingsInitialized;                              // 0x006C(0x0001)(Edit, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bEventsInitialized;                                // 0x006D(0x0001)(Edit, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bHasDefaultTickBinding;                            // 0x006E(0x0001)(Edit, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_6F[0x1];                                       // 0x006F(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	bool ExecuteViewModelBindings(class FName ViewModelName);
	void InitializeBindings();
	void InitializeEvents();
	void InitializeSources();
	bool SetViewModel(class FName ViewModelName, TScriptInterface<class INotifyFieldValueChanged> ViewModel);
	bool SetViewModelByClass(TScriptInterface<class INotifyFieldValueChanged> NewValue);
	void UninitializeBindings();
	void UninitializeEvents();
	void UninitializeSources();

	bool AreBindingsInitialized() const;
	bool AreEventsInitialized() const;
	bool AreSourcesInitialized() const;
	bool AreSourcesValidForBinding(int32 BindingKey) const;
	bool AreSourcesValidForEvent(int32 EventKey) const;
	TScriptInterface<class INotifyFieldValueChanged> GetViewModel(class FName ViewModelName) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MVVMView")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MVVMView")
	}
	static class UMVVMView* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMVVMView>();
	}
};
DUMPER7_ASSERTS_UMVVMView;

// Class ModelViewViewModel.MVVMViewExtension
// 0x0000 (0x0028 - 0x0028)
class UMVVMViewExtension : public UObject
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MVVMViewExtension")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MVVMViewExtension")
	}
	static class UMVVMViewExtension* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMVVMViewExtension>();
	}
};
DUMPER7_ASSERTS_UMVVMViewExtension;

// Class ModelViewViewModel.MVVMViewClass
// 0x00C0 (0x00E8 - 0x0028)
class UMVVMViewClass final : public UWidgetBlueprintGeneratedClassExtension
{
public:
	TArray<struct FMVVMViewClass_Source>          Sources;                                           // 0x0028(0x0010)(Edit, ZeroConstructor, EditConst, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<struct FMVVMViewClass_Binding>         Bindings;                                          // 0x0038(0x0010)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPrivate)
	TArray<struct FMVVMViewClass_EvaluateSource>  EvaluateSources;                                   // 0x0048(0x0010)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPrivate)
	TArray<struct FMVVMViewClass_Event>           events;                                            // 0x0058(0x0010)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPrivate)
	TArray<struct FMVVMViewClass_Condition>       Conditions;                                        // 0x0068(0x0010)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPrivate)
	TArray<class UMVVMViewClassExtension*>        ViewClassExtensions;                               // 0x0078(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPrivate)
	struct FMVVMCompiledBindingLibrary            BindingLibrary;                                    // 0x0088(0x0050)(NativeAccessSpecifierPrivate)
	uint64                                        OptionalSources;                                   // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_E0[0x4];                                       // 0x00E0(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bInitializeSourcesOnConstruct;                     // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bInitializeBindingsOnConstruct;                    // 0x00E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bInitializeEventsOnConstruct;                      // 0x00E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bListenToViewModelCollectionChanged;               // 0x00E7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MVVMViewClass")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MVVMViewClass")
	}
	static class UMVVMViewClass* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMVVMViewClass>();
	}
};
DUMPER7_ASSERTS_UMVVMViewClass;

// Class ModelViewViewModel.MVVMViewClassExtension
// 0x0000 (0x0028 - 0x0028)
class UMVVMViewClassExtension : public UObject
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MVVMViewClassExtension")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MVVMViewClassExtension")
	}
	static class UMVVMViewClassExtension* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMVVMViewClassExtension>();
	}
};
DUMPER7_ASSERTS_UMVVMViewClassExtension;

// Class ModelViewViewModel.MVVMInstancedViewModelGeneratedClass
// 0x0060 (0x0410 - 0x03B0)
class UMVVMInstancedViewModelGeneratedClass final : public UBlueprintGeneratedClass
{
public:
	TArray<class UFunction*>                      OnRepFunctionToLink;                               // 0x03B0(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3C0[0x50];                                     // 0x03C0(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MVVMInstancedViewModelGeneratedClass")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MVVMInstancedViewModelGeneratedClass")
	}
	static class UMVVMInstancedViewModelGeneratedClass* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMVVMInstancedViewModelGeneratedClass>();
	}
};
DUMPER7_ASSERTS_UMVVMInstancedViewModelGeneratedClass;

// Class ModelViewViewModel.MVVMViewListViewBaseClassExtension
// 0x0068 (0x0090 - 0x0028)
class UMVVMViewListViewBaseClassExtension final : public UMVVMViewClassExtension
{
public:
	class FName                                   WidgetName;                                        // 0x0028(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                   EntryViewModelName;                                // 0x0030(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FMVVMVCompiledFieldPath                WidgetPath;                                        // 0x0038(0x0004)(NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3C[0x54];                                      // 0x003C(0x0054)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MVVMViewListViewBaseClassExtension")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MVVMViewListViewBaseClassExtension")
	}
	static class UMVVMViewListViewBaseClassExtension* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMVVMViewListViewBaseClassExtension>();
	}
};
DUMPER7_ASSERTS_UMVVMViewListViewBaseClassExtension;

// Class ModelViewViewModel.MVVMPanelWidgetViewExtension
// 0x0010 (0x0038 - 0x0028)
class UMVVMPanelWidgetViewExtension final : public UMVVMViewExtension
{
public:
	class UPanelWidget*                           PanelWidget;                                       // 0x0028(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMVVMViewPanelWidgetClassExtension*     ClassExtension;                                    // 0x0030(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void BP_SetItems(const TArray<class UObject*>& InItems);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MVVMPanelWidgetViewExtension")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MVVMPanelWidgetViewExtension")
	}
	static class UMVVMPanelWidgetViewExtension* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMVVMPanelWidgetViewExtension>();
	}
};
DUMPER7_ASSERTS_UMVVMPanelWidgetViewExtension;

// Class ModelViewViewModel.MVVMViewPanelWidgetClassExtension
// 0x0038 (0x0060 - 0x0028)
class UMVVMViewPanelWidgetClassExtension final : public UMVVMViewClassExtension
{
public:
	class FName                                   WidgetName;                                        // 0x0028(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                   EntryViewModelName;                                // 0x0030(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UUserWidget>                EntryWidgetClass;                                  // 0x0038(0x0008)(Edit, ZeroConstructor, EditConst, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPanelSlot*                             SlotTemplate;                                      // 0x0040(0x0008)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                   PanelPropertyName;                                 // 0x0048(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UObject>                    EntryViewModelClass;                               // 0x0050(0x0008)(Edit, ZeroConstructor, EditConst, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FMVVMVCompiledFieldPath                WidgetPath;                                        // 0x0058(0x0004)(NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MVVMViewPanelWidgetClassExtension")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MVVMViewPanelWidgetClassExtension")
	}
	static class UMVVMViewPanelWidgetClassExtension* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMVVMViewPanelWidgetClassExtension>();
	}
};
DUMPER7_ASSERTS_UMVVMViewPanelWidgetClassExtension;

// Class ModelViewViewModel.MVVMSubsystem
// 0x0000 (0x0030 - 0x0030)
class UMVVMSubsystem final : public UEngineSubsystem
{
public:
	bool K2_CompareFloatValues(EMVVMConditionOperation Operation, float Value, float CompareValue, float CompareMaxValue);

	bool DoesWidgetTreeContainedWidget(const class UWidgetTree* WidgetTree, const class UWidget* ViewWidget) const;
	class UMVVMViewModelCollectionObject* GetGlobalViewModelCollection() const;
	struct FMVVMAvailableBinding K2_GetAvailableBinding(const class UClass* Class_0, const struct FMVVMBindingName& BindingName, const class UClass* Accessor) const;
	TArray<struct FMVVMAvailableBinding> K2_GetAvailableBindings(const class UClass* Class_0, const class UClass* Accessor) const;
	class UMVVMView* K2_GetViewFromUserWidget(const class UUserWidget* UserWidget) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MVVMSubsystem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MVVMSubsystem")
	}
	static class UMVVMSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMVVMSubsystem>();
	}
};
DUMPER7_ASSERTS_UMVVMSubsystem;

// Class ModelViewViewModel.MVVMViewModelBase
// 0x0040 (0x0068 - 0x0028)
class UMVVMViewModelBase : public UObject
{
public:
	uint8                                         Pad_28[0x40];                                      // 0x0028(0x0040)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void K2_AddFieldValueChangedDelegate(const struct FFieldNotificationId& FieldId, TDelegate<void(class UObject* Object, const struct FFieldNotificationId& Field)> Delegate);
	void K2_BroadcastFieldValueChanged(const struct FFieldNotificationId& FieldId);
	void K2_RemoveFieldValueChangedDelegate(const struct FFieldNotificationId& FieldId, TDelegate<void(class UObject* Object, const struct FFieldNotificationId& Field)> Delegate);
	bool K2_SetPropertyValue(const int32& OldValue, const int32& NewValue);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MVVMViewModelBase")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MVVMViewModelBase")
	}
	static class UMVVMViewModelBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMVVMViewModelBase>();
	}
};
DUMPER7_ASSERTS_UMVVMViewModelBase;

// Class ModelViewViewModel.MVVMViewModelCollectionObject
// 0x0028 (0x0050 - 0x0028)
class UMVVMViewModelCollectionObject final : public UObject
{
public:
	struct FMVVMViewModelCollection               ViewModelCollection;                               // 0x0028(0x0028)(Transient, NativeAccessSpecifierPrivate)

public:
	bool AddViewModelInstance(const struct FMVVMViewModelContext& Context, class UMVVMViewModelBase* ViewModel);
	int32 RemoveAllViewModelInstance(class UMVVMViewModelBase* ViewModel);
	bool RemoveViewModel(const struct FMVVMViewModelContext& Context);

	class UMVVMViewModelBase* FindFirstViewModelInstanceOfType(const TSubclassOf<class UMVVMViewModelBase>& ViewModelClass) const;
	class UMVVMViewModelBase* FindViewModelInstance(const struct FMVVMViewModelContext& Context) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MVVMViewModelCollectionObject")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MVVMViewModelCollectionObject")
	}
	static class UMVVMViewModelCollectionObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMVVMViewModelCollectionObject>();
	}
};
DUMPER7_ASSERTS_UMVVMViewModelCollectionObject;

// Class ModelViewViewModel.MVVMViewModelBlueprintGeneratedClass
// 0x0000 (0x03B0 - 0x03B0)
class UMVVMViewModelBlueprintGeneratedClass final : public UBlueprintGeneratedClass
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MVVMViewModelBlueprintGeneratedClass")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MVVMViewModelBlueprintGeneratedClass")
	}
	static class UMVVMViewModelBlueprintGeneratedClass* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMVVMViewModelBlueprintGeneratedClass>();
	}
};
DUMPER7_ASSERTS_UMVVMViewModelBlueprintGeneratedClass;

// Class ModelViewViewModel.MVVMViewModelContextResolver
// 0x0000 (0x0028 - 0x0028)
class UMVVMViewModelContextResolver final : public UObject
{
public:
	TScriptInterface<class INotifyFieldValueChanged> K2_CreateInstance(const class UClass* ExpectedType, const class UUserWidget* UserWidget) const;
	void K2_DestroyInstance(const class UObject* ViewModel, const class UMVVMView* View) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("MVVMViewModelContextResolver")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"MVVMViewModelContextResolver")
	}
	static class UMVVMViewModelContextResolver* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMVVMViewModelContextResolver>();
	}
};
DUMPER7_ASSERTS_UMVVMViewModelContextResolver;

}

