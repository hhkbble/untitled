#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GbxNav

#include "Basic.hpp"

#include "GbxNexus_structs.hpp"
#include "GbxEngine_structs.hpp"
#include "GbxSpawn_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// Enum GbxNav.EGbxAnimLocomotionPreference
// NumValues: 0x0004
enum class EGbxAnimLocomotionPreference : uint8
{
	Current                                  = 0,
	Order                                    = 1,
	Closest                                  = 2,
	EGbxAnimLocomotionPreference_MAX         = 3,
};

// Enum GbxNav.EGbxNavAvoidType
// NumValues: 0x0004
enum class EGbxNavAvoidType : uint32
{
	None                                     = 0,
	Obstacle                                 = 1,
	Avoid                                    = 2,
	EGbxNavAvoidType_MAX                     = 3,
};

// Enum GbxNav.EGbxNavAnimType
// NumValues: 0x000B
enum class EGbxNavAnimType : uint8
{
	None                                     = 0,
	Idle                                     = 1,
	Move                                     = 2,
	Start                                    = 3,
	Stop                                     = 4,
	IdleTurn                                 = 5,
	MoveTurn                                 = 6,
	Link                                     = 7,
	Other                                    = 8,
	Any                                      = 9,
	EGbxNavAnimType_MAX                      = 10,
};

// Enum GbxNav.EGbxNavPoseMatchTestSort
// NumValues: 0x0007
enum class EGbxNavPoseMatchTestSort : uint8
{
	Anim                                     = 0,
	MatchFrame                               = 1,
	TestFrame                                = 2,
	BlendTime                                = 3,
	Error                                    = 4,
	TestError                                = 5,
	EGbxNavPoseMatchTestSort_MAX             = 6,
};

// Enum GbxNav.EGbxNavCharacterType
// NumValues: 0x0006
enum class EGbxNavCharacterType : uint8
{
	None                                     = 0,
	AI_Walking                               = 1,
	AI_Flying                                = 2,
	AI_GhostFlying                           = 3,
	Player                                   = 4,
	EGbxNavCharacterType_MAX                 = 5,
};

// Enum GbxNav.EGbxNavOffset
// NumValues: 0x0003
enum class EGbxNavOffset : uint8
{
	Local                                    = 0,
	World                                    = 1,
	EGbxNavOffset_MAX                        = 2,
};

// Enum GbxNav.EGbxNavGoalRotation
// NumValues: 0x0003
enum class EGbxNavGoalRotation : uint8
{
	Goal                                     = 0,
	Custom                                   = 1,
	EGbxNavGoalRotation_MAX                  = 2,
};

// Enum GbxNav.EGbxNavGoalProjectionMode
// NumValues: 0x0004
enum class EGbxNavGoalProjectionMode : uint8
{
	Default                                  = 0,
	Yes                                      = 1,
	No                                       = 2,
	EGbxNavGoalProjectionMode_MAX            = 3,
};

// Enum GbxNav.EGbxNavLinkDirection
// NumValues: 0x0004
enum class EGbxNavLinkDirection : uint8
{
	ForwardOnly                              = 1,
	ReverseOnly                              = 2,
	Bidirectional                            = 3,
	EGbxNavLinkDirection_MAX                 = 4,
};

// Enum GbxNav.EGbxNavMoveStyle
// NumValues: 0x0003
enum class EGbxNavMoveStyle : uint8
{
	Forward                                  = 0,
	Omni                                     = 1,
	EGbxNavMoveStyle_MAX                     = 2,
};

// Enum GbxNav.EGbxPainterGeoType
// NumValues: 0x0003
enum class EGbxPainterGeoType : uint8
{
	Volume                                   = 0,
	Walkable                                 = 1,
	EGbxPainterGeoType_MAX                   = 2,
};

// Enum GbxNav.EGbxPainterType
// NumValues: 0x0004
enum class EGbxPainterType : uint8
{
	Static                                   = 0,
	Dynamic                                  = 1,
	StaticAndDynamic                         = 2,
	EGbxPainterType_MAX                      = 3,
};

// Enum GbxNav.EGbxPainterNavFilterType
// NumValues: 0x0004
enum class EGbxPainterNavFilterType : uint8
{
	Both                                     = 0,
	NavMesh                                  = 1,
	FlightNav                                = 2,
	EGbxPainterNavFilterType_MAX             = 3,
};

// Enum GbxNav.EGbxNavResult
// NumValues: 0x0004
enum class EGbxNavResult : uint8
{
	Waiting                                  = 0,
	Succeeded                                = 1,
	Failed                                   = 2,
	EGbxNavResult_MAX                        = 3,
};

// Enum GbxNav.EGbxNavExec
// NumValues: 0x0004
enum class EGbxNavExec : uint8
{
	Start                                    = 0,
	Succeeded                                = 1,
	Failed                                   = 2,
	EGbxNavExec_MAX                          = 3,
};

// Enum GbxNav.EGbxNavLinkType
// NumValues: 0x0005
enum class EGbxNavLinkType : uint8
{
	Default                                  = 0,
	Vault                                    = 1,
	Balcony                                  = 2,
	Jump                                     = 3,
	EGbxNavLinkType_MAX                      = 4,
};

// Enum GbxNav.EGbxNavDataVersion
// NumValues: 0x0005
enum class EGbxNavDataVersion : uint8
{
	Unknown                                  = 0,
	Havok_2022_1_0                           = 1,
	Havok_2023_2_0                           = 2,
	CURRENT                                  = 1,
	EGbxNavDataVersion_MAX                   = 3,
};

// Enum GbxNav.EGbxRotationInterpType
// NumValues: 0x0004
enum class EGbxRotationInterpType : uint8
{
	None                                     = 0,
	Linear                                   = 1,
	ExponentialEaseOut                       = 2,
	EGbxRotationInterpType_MAX               = 3,
};

// Enum GbxNav.EGbxStanceTurnRate
// NumValues: 0x0003
enum class EGbxStanceTurnRate : uint8
{
	TurnRate                                 = 0,
	TurnRadius                               = 1,
	EGbxStanceTurnRate_MAX                   = 2,
};

// Enum GbxNav.EGbxStanceTurnStyle
// NumValues: 0x0003
enum class EGbxStanceTurnStyle : uint8
{
	IncreaseTurnRate                         = 0,
	DecreaseSpeed                            = 1,
	EGbxStanceTurnStyle_MAX                  = 2,
};

// Enum GbxNav.EStanceTemp
// NumValues: 0x0004
enum class EStanceTemp : uint8
{
	None                                     = 0,
	Some                                     = 1,
	More                                     = 2,
	EStanceTemp_MAX                          = 3,
};

// Enum GbxNav.EHavokNavMeshVertexSelectionMethod
// NumValues: 0x0003
enum class EHavokNavMeshVertexSelectionMethod : uint8
{
	PROPORTIONAL_TO_AREA                     = 0,
	PROPORTIONAL_TO_VERTICES                 = 1,
	PROPORTIONAL_TO_MAX                      = 2,
};

// ScriptStruct GbxNav.GbxStanceBaseDef
// 0x0000 (0x0018 - 0x0018)
struct FGbxStanceBaseDef : public FGbxDef
{
};
DUMPER7_ASSERTS_FGbxStanceBaseDef;

// ScriptStruct GbxNav.GbxNavAnimBlendData
// 0x0030 (0x0030 - 0x0000)
struct FGbxNavAnimBlendData
{
public:
	float                                         MinBlendTime;                                      // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxBlendTime;                                      // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinDelta;                                          // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxDelta;                                          // 0x000C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxAnimBlendOptions                   BlendOptions;                                      // 0x0010(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxNavAnimBlendData;

// ScriptStruct GbxNav.GbxNavAnimBlendTransition
// 0x0008 (0x0038 - 0x0030)
struct FGbxNavAnimBlendTransition final : public FGbxNavAnimBlendData
{
public:
	EGbxNavAnimType                               FromType;                                          // 0x0030(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGbxNavAnimType                               ToType;                                            // 0x0031(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxNavAnimBlendTransition;

// ScriptStruct GbxNav.GbxStanceUserState
// 0x0208 (0x0208 - 0x0000)
struct FGbxStanceUserState final
{
public:
	uint8                                         Pad_0[0x48];                                       // 0x0000(0x0048)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(const FGameDataHandleProperty_& OldStance, const FGameDataHandleProperty_& NewStance)> OnStanceChangingBP; // 0x0048(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const FGameDataHandleProperty_& OldStance, const FGameDataHandleProperty_& NewStance)> OnStanceChangedBP; // 0x0058(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(const FGameDataHandleProperty_& stance)> OnStanceTransitionCompleteBP; // 0x0068(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_78[0x190];                                     // 0x0078(0x0190)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxStanceUserState;

// ScriptStruct GbxNav.GbxStanceTransitionGroup
// 0x0070 (0x0070 - 0x0000)
struct FGbxStanceTransitionGroup final
{
public:
	class FName                                   Name;                                              // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagQuery                      StanceTags;                                        // 0x0008(0x0048)(Edit, NativeAccessSpecifierPublic)
	TArray<FGameDataHandleProperty_>              Stances;                                           // 0x0050(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_60[0x10];                                      // 0x0060(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxStanceTransitionGroup;

// ScriptStruct GbxNav.GbxStanceTransition
// 0x0068 (0x0068 - 0x0000)
struct FGbxStanceTransition final
{
public:
	class FName                                   FromStance;                                        // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ToStance;                                          // 0x0008(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxAnimAssetRef                       Anim;                                              // 0x0010(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FGbxAnimBlendOptions                   BlendIn;                                           // 0x0028(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FGbxAnimBlendOptions                   BlendOut;                                          // 0x0048(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxStanceTransition;

// ScriptStruct GbxNav.AnimNode_GbxStanceTransition
// 0x0218 (0x0340 - 0x0128)
struct FAnimNode_GbxStanceTransition final : public FGbxAnimNode_StateMachine
{
public:
	struct FPoseLink                              Source;                                            // 0x0128(0x0010)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	TArray<struct FGbxStanceTransitionGroup>      Groups;                                            // 0x0138(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FGbxStanceTransition>           Transitions;                                       // 0x0148(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_158[0x1E8];                                    // 0x0158(0x01E8)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FAnimNode_GbxStanceTransition;

// ScriptStruct GbxNav.GbxStanceOverrideOption
// 0x0098 (0x0098 - 0x0000)
struct FGbxStanceOverrideOption final
{
public:
	class FString                                 Description;                                       // 0x0000(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxParam                              Weight;                                            // 0x0010(0x0038)(Edit, NativeAccessSpecifierPublic)
	TMap<struct FGameplayTag, FGameDataHandleProperty_> OverrideStanceMap;                           // 0x0048(0x0050)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxStanceOverrideOption;

// ScriptStruct GbxNav.GbxStanceUserData
// 0x0068 (0x0068 - 0x0000)
struct FGbxStanceUserData final
{
public:
	TMap<struct FGameplayTag, FGameDataHandleProperty_> stancemap;                                   // 0x0000(0x0050)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FGbxStanceOverrideOption>       RandomOverrides;                                   // 0x0050(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_60[0x8];                                       // 0x0060(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxStanceUserData;

// ScriptStruct GbxNav.GbxNavActorDef
// 0x0090 (0x0120 - 0x0090)
struct FGbxNavActorDef : public FGbxActorDef
{
public:
	EGbxNavCharacterType                          NavType;                                           // 0x0090(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EGbxMovementMode                              FallbackMovementMode;                              // 0x0091(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_92[0x6];                                       // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxStanceUserData                     StanceUserData;                                    // 0x0098(0x0068)(Edit, NativeAccessSpecifierPrivate)
	bool                                          bUseSharedStanceUserDataDef;                       // 0x0100(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FGbxDefPtrProperty_                           StanceUserDataDef;                                 // 0x0108(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxNavActorDef;

// ScriptStruct GbxNav.GbxNavAvoidWeights
// 0x0010 (0x0010 - 0x0000)
struct FGbxNavAvoidWeights final
{
public:
	float                                         speed;                                             // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Direction;                                         // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Previous;                                          // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AvoidRight;                                        // 0x000C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxNavAvoidWeights;

// ScriptStruct GbxNav.GbxNavAvoidData
// 0x0024 (0x0024 - 0x0000)
struct FGbxNavAvoidData final
{
public:
	EGbxNavAvoidType                              AvoidType;                                         // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAvoidWhenIdle;                                    // 0x0004(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIgnoreHumansWhenIdle;                             // 0x0005(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIgnoreHumansBehindMe;                             // 0x0006(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         KeepAvoidingTime;                                  // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StopWhenBlockedTime;                               // 0x000C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxMagnetSpeedPercent;                             // 0x0010(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxNavAvoidWeights                    Weights;                                           // 0x0014(0x0010)(Edit, NoDestructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxNavAvoidData;

// ScriptStruct GbxNav.GbxNavId
// 0x0030 (0x0030 - 0x0000)
struct FGbxNavId final
{
public:
	TSoftObjectPtr<class UObject>                 ObjectPtr;                                         // 0x0000(0x0028)(UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint32                                        Cache;                                             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxNavId;

// ScriptStruct GbxNav.GbxBakedNavPainterData
// 0x0048 (0x0048 - 0x0000)
struct FGbxBakedNavPainterData final
{
public:
	struct FGbxNavId                              NavId;                                             // 0x0000(0x0030)(NativeAccessSpecifierPublic)
	struct FVector                                MatchLoc;                                          // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxBakedNavPainterData;

// ScriptStruct GbxNav.GbxStanceUserDataDef
// 0x0068 (0x0080 - 0x0018)
struct FGbxStanceUserDataDef final : public FGbxDef
{
public:
	struct FGbxStanceUserData                     StanceUserData;                                    // 0x0018(0x0068)(Edit, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxStanceUserDataDef;

// ScriptStruct GbxNav.GbxCondition_Stance
// 0x0018 (0x0028 - 0x0010)
struct FGbxCondition_Stance final : public FGbxConditionValueResolver
{
public:
	FGameDataHandleProperty_                      stance;                                            // 0x0010(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxCondition_Stance;

// ScriptStruct GbxNav.GbxBakedLayerNavLinkData
// 0x0060 (0x0060 - 0x0000)
struct FGbxBakedLayerNavLinkData final
{
public:
	struct FVector                                A1;                                                // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                A2;                                                // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                B1;                                                // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                B2;                                                // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxBakedLayerNavLinkData;

// ScriptStruct GbxNav.GbxNavWorldData
// 0x0004 (0x0004 - 0x0000)
struct FGbxNavWorldData final
{
public:
	uint32                                        NavLayersInWorld;                                  // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxNavWorldData;

// ScriptStruct GbxNav.GbxRotationChannelDataOverride
// 0x0038 (0x0038 - 0x0000)
struct FGbxRotationChannelDataOverride final
{
public:
	struct FGameplayTag                           ChannelName;                                       // 0x0000(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGbxRotationInterpType                        InterpType;                                        // 0x0008(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RotationRate;                                      // 0x000C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                   PivotBone;                                         // 0x0010(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         BlendInTime;                                       // 0x0018(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         BlendOutTime;                                      // 0x001C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         AlphaBlendSpeed;                                   // 0x0020(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FNumericRange                          ClampYawRange;                                     // 0x0024(0x0008)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FNumericRange                          ClampPitchRange;                                   // 0x002C(0x0008)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                         bUseRotationRate : 1;                              // 0x0034(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Deprecated, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate))
	uint8                                         bBoostWithParentRotation : 1;                      // 0x0034(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate))
	uint8                                         bDragParentIfClamped : 1;                          // 0x0034(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate))
	uint8                                         bUseBoneRotationForPrevious : 1;                   // 0x0034(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate))
	uint8                                         bDisable : 1;                                      // 0x0034(0x0001)(BitIndex: 0x04, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate))
	uint8                                         bPause : 1;                                        // 0x0034(0x0001)(BitIndex: 0x05, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate))
	uint8                                         bOverrideInterpType : 1;                           // 0x0034(0x0001)(BitIndex: 0x06, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate))
	uint8                                         bOverrideRotationRate : 1;                         // 0x0034(0x0001)(BitIndex: 0x07, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate))
	uint8                                         bOverridePivotBone : 1;                            // 0x0035(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate))
	uint8                                         bOverrideBlendInTime : 1;                          // 0x0035(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate))
	uint8                                         bOverrideBlendOutTime : 1;                         // 0x0035(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate))
	uint8                                         bOverrideAlphaBlendSpeed : 1;                      // 0x0035(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate))
	uint8                                         bOverrideClampYawRange : 1;                        // 0x0035(0x0001)(BitIndex: 0x04, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate))
	uint8                                         bOverrideClampPitchRange : 1;                      // 0x0035(0x0001)(BitIndex: 0x05, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate))
	uint8                                         bOverrideUseRotationRate : 1;                      // 0x0035(0x0001)(BitIndex: 0x06, PropSize: 0x0001 (Deprecated, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate))
	uint8                                         bOverrideBoostWithParentRotation : 1;              // 0x0035(0x0001)(BitIndex: 0x07, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate))
	uint8                                         bOverrideDragParentIfClamped : 1;                  // 0x0036(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate))
	uint8                                         bOverrideUseBoneRotationForPrevious : 1;           // 0x0036(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate))
	uint8                                         Pad_37[0x1];                                       // 0x0037(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxRotationChannelDataOverride;

// ScriptStruct GbxNav.GbxStanceDef
// 0x0108 (0x0120 - 0x0018)
struct FGbxStanceDef final : public FGbxStanceBaseDef
{
public:
	struct FGameplayTagContainer                  tags;                                              // 0x0018(0x0020)(Edit, NativeAccessSpecifierPrivate)
	float                                         speed;                                             // 0x0038(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         TurnRate;                                          // 0x003C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         TurnRadius;                                        // 0x0040(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EGbxStanceTurnRate                            TurnRateType;                                      // 0x0044(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bOverrideMaxBoostedTurnRate;                       // 0x0045(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_46[0x2];                                       // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MaxBoostedTurnRate;                                // 0x0048(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         Acceleration;                                      // 0x004C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         Deceleration;                                      // 0x0050(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EGbxNavMoveStyle                              MoveStyle;                                         // 0x0054(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bCanDrift;                                         // 0x0055(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bCanBreakThroughDestructibleObjects;               // 0x0056(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bAllowSlowerStartTurns;                            // 0x0057(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bRotateInPlaceIfChangingMoveDir;                   // 0x0058(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RotateInPlaceMinAngleThreshold;                    // 0x005C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         KeepMovingThreshold;                               // 0x0060(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UGbxNavAnimData>         NavAnims;                                          // 0x0068(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	FGbxDefPtrProperty_                           TaggedAnimDef;                                     // 0x0090(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FGbxRotationChannelDataOverride> RotationDataOverrides;                            // 0x00A8(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<TSoftObjectPtr<class UGbxAnimSet>>     AnimSets;                                          // 0x00B8(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UGbxNavAreaUserData>     NavAreas;                                          // 0x00C8(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseNavAnimsForEdgeFiltering;                      // 0x00F0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UGbxNavEdgeUserData>     NavEdges;                                          // 0x00F8(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxStanceDef;

// ScriptStruct GbxNav.GbxNavLinkDef
// 0x0008 (0x0020 - 0x0018)
struct FGbxNavLinkDef : public FGbxDef
{
public:
	uint8                                         Pad_18[0x8];                                       // 0x0018(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxNavLinkDef;

// ScriptStruct GbxNav.GbxNavLinkDef_Stretch
// 0x0140 (0x0160 - 0x0020)
struct alignas(0x10) FGbxNavLinkDef_Stretch final : public FGbxNavLinkDef
{
public:
	uint8                                         Pad_20[0x108];                                     // 0x0020(0x0108)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UAnimSequence>           Anim;                                              // 0x0128(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         DefaultHeight;                                     // 0x0150(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bOffsetOrigin;                                     // 0x0154(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_155[0xB];                                      // 0x0155(0x000B)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxNavLinkDef_Stretch;

// ScriptStruct GbxNav.GbxStancePickerOption
// 0x0058 (0x0058 - 0x0000)
struct FGbxStancePickerOption final
{
public:
	class FName                                   Option;                                            // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGbxParam                              Condition;                                         // 0x0008(0x0038)(Edit, NativeAccessSpecifierPublic)
	FGameDataHandleProperty_                      stance;                                            // 0x0040(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxStancePickerOption;

// ScriptStruct GbxNav.AnimNode_GbxNavAnimStateMachine
// 0x0380 (0x04A8 - 0x0128)
struct FAnimNode_GbxNavAnimStateMachine final : public FGbxAnimNode_StateMachine
{
public:
	uint8                                         Pad_128[0x380];                                    // 0x0128(0x0380)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FAnimNode_GbxNavAnimStateMachine;

// ScriptStruct GbxNav.AnimNode_GbxNav
// 0x05D0 (0x05E0 - 0x0010)
struct FAnimNode_GbxNav final : public FAnimNode_Base
{
public:
	uint8                                         Pad_10[0x108];                                     // 0x0010(0x0108)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_GbxNavAnimStateMachine       StateMachine;                                      // 0x0118(0x04A8)(Transient, NativeAccessSpecifierPrivate)
	uint8                                         Pad_5C0[0x4];                                      // 0x05C0(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   GroupName;                                         // 0x05C4(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EAnimGroupRole                                GroupRole;                                         // 0x05CC(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EAnimSyncMethod                               Method;                                            // 0x05CD(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_5CE[0x2];                                      // 0x05CE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          CurrAnimSeq;                                       // 0x05D0(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBlendSpace*                            CurrBlendSpace;                                    // 0x05D8(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FAnimNode_GbxNav;

// ScriptStruct GbxNav.GbxStanceAnimGroup
// 0x0070 (0x0070 - 0x0000)
struct FGbxStanceAnimGroup final
{
public:
	class FName                                   Name;                                              // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagQuery                      StanceTags;                                        // 0x0008(0x0048)(Edit, NativeAccessSpecifierPublic)
	TArray<FGameDataHandleProperty_>              Stances;                                           // 0x0050(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_60[0x10];                                      // 0x0060(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxStanceAnimGroup;

// ScriptStruct GbxNav.AnimNode_GbxStance
// 0x0018 (0x0060 - 0x0048)
struct FAnimNode_GbxStance final : public FAnimNode_BlendListBase
{
public:
	TArray<struct FGbxStanceAnimGroup>            StanceGroups;                                      // 0x0048(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_58[0x8];                                       // 0x0058(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FAnimNode_GbxStance;

// ScriptStruct GbxNav.GbxCondition_IsNavigating
// 0x0000 (0x0010 - 0x0010)
struct FGbxCondition_IsNavigating final : public FGbxConditionValueResolver
{
};
DUMPER7_ASSERTS_FGbxCondition_IsNavigating;

// ScriptStruct GbxNav.HavokFlightNav
// 0x0028 (0x0028 - 0x0000)
struct alignas(0x08) FHavokFlightNav final
{
public:
	uint8                                         Pad_0[0x28];                                       // 0x0000(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FHavokFlightNav;

// ScriptStruct GbxNav.GbxFlightNavLayerData
// 0x0030 (0x0030 - 0x0000)
struct FGbxFlightNavLayerData final
{
public:
	struct FHavokFlightNav                        HavokData;                                         // 0x0000(0x0028)(NativeAccessSpecifierPublic)
	class UGbxFlightNavLayer*                     layer;                                             // 0x0028(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxFlightNavLayerData;

// ScriptStruct GbxNav.GbxNavGenHeader
// 0x0014 (0x0014 - 0x0000)
struct FGbxNavGenHeader final
{
public:
	int32                                         Version;                                           // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                  Guid;                                              // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxNavGenHeader;

// ScriptStruct GbxNav.GbxFlightNavData
// 0x0028 (0x0028 - 0x0000)
struct FGbxFlightNavData final
{
public:
	struct FGbxNavGenHeader                       GenHeader;                                         // 0x0000(0x0014)(NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGbxFlightNavLayerData>         layers;                                            // 0x0018(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxFlightNavData;

// ScriptStruct GbxNav.GbxNavStopEntry
// 0x0010 (0x0010 - 0x0000)
struct FGbxNavStopEntry final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          StopSeq;                                           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxNavStopEntry;

// ScriptStruct GbxNav.GbxNavTurnPrediction
// 0x0008 (0x0008 - 0x0000)
struct FGbxNavTurnPrediction final
{
public:
	float                                         MaxPredictedTurnDegrees;                           // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxPredictedTurnTime;                              // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxNavTurnPrediction;

// ScriptStruct GbxNav.GbxNavLeanData
// 0x0010 (0x0010 - 0x0000)
struct FGbxNavLeanData final
{
public:
	class UAnimSequence*                          Left;                                              // 0x0000(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                          Right;                                             // 0x0008(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxNavLeanData;

// ScriptStruct GbxNav.GbxNavAnimSpeedData
// 0x0098 (0x0098 - 0x0000)
struct FGbxNavAnimSpeedData final
{
public:
	TArray<class UAnimSequence*>                  Moves;                                             // 0x0000(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	struct FGbxNavLeanData                        Leans;                                             // 0x0010(0x0010)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	float                                         speed;                                             // 0x0020(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBlendSpace1D*                          LeanBlendSpace;                                    // 0x0028(0x0008)(Edit, ZeroConstructor, EditConst, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGbxNavStopEntry>               Stops;                                             // 0x0030(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UAnimSequence*>                  LeftTurns;                                         // 0x0040(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class UAnimSequence*>                  RightTurns;                                        // 0x0050(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class UAnimSequence*>                  LeftStarts;                                        // 0x0060(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class UAnimSequence*>                  RightStarts;                                       // 0x0070(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class UAnimSequence*>                  Transitions;                                       // 0x0080(0x0010)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	bool                                          bHasStartTurns;                                    // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxNavAnimSpeedData;

// ScriptStruct GbxNav.GbxNavAnimDirectionData
// 0x0028 (0x0028 - 0x0000)
struct FGbxNavAnimDirectionData final
{
public:
	class UBlendSpace*                            BlendSpace;                                        // 0x0000(0x0008)(Edit, ZeroConstructor, EditConst, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         yaw;                                               // 0x0008(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGbxNavAnimSpeedData>           Speeds;                                            // 0x0010(0x0010)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPrivate)
	bool                                          bHasStartTurns;                                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxNavAnimDirectionData;

// ScriptStruct GbxNav.GbxNavPoseMatchTestResult
// 0x0020 (0x0020 - 0x0000)
struct FGbxNavPoseMatchTestResult final
{
public:
	class UAnimSequence*                          Anim;                                              // 0x0000(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MatchFrame;                                        // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TestFrame;                                         // 0x000C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BlendTime;                                         // 0x0010(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Error;                                             // 0x0014(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TestError;                                         // 0x0018(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxNavPoseMatchTestResult;

// ScriptStruct GbxNav.GbxNavAnimInstanceProxy
// 0x0160 (0x0AD0 - 0x0970)
#pragma pack(push, 0x1)
struct alignas(0x10) FGbxNavAnimInstanceProxy : public FGbxEngineAnimInstanceProxy
{
public:
	uint8                                         Pad_970[0x20];                                     // 0x0970(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	class UGbxNavAnimInstance*                    NavAnimInstance;                                   // 0x0990(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGbxNavAnimData*                        NavAnimData;                                       // 0x0998(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_9A0[0x128];                                    // 0x09A0(0x0128)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
#pragma pack(pop)
DUMPER7_ASSERTS_FGbxNavAnimInstanceProxy;

// ScriptStruct GbxNav.GbxNavAnimPose
// 0x0010 (0x0010 - 0x0000)
struct FGbxNavAnimPose final
{
public:
	class UAnimSequence*                          Sequence;                                          // 0x0000(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         time;                                              // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Error;                                             // 0x000C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxNavAnimPose;

// ScriptStruct GbxNav.GbxNavCoverMarkup
// 0x0070 (0x0070 - 0x0000)
struct FGbxNavCoverMarkup final
{
public:
	struct FTransform                             Transform;                                         // 0x0000(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Width;                                             // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_64[0xC];                                       // 0x0064(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxNavCoverMarkup;

// ScriptStruct GbxNav.GbxNavFilterOverrideDef
// 0x0010 (0x0028 - 0x0018)
struct FGbxNavFilterOverrideDef final : public FGbxDef
{
public:
	TArray<TSoftObjectPtr<class UGbxNavLinkData>> ExcludedEdges;                                     // 0x0018(0x0010)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxNavFilterOverrideDef;

// ScriptStruct GbxNav.GbxNavAreaItem
// 0x0018 (0x0018 - 0x0000)
struct FGbxNavAreaItem final
{
public:
	class UGbxNavArea*                            Area;                                              // 0x0000(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CostScale;                                         // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LeavingAreaCost;                                   // 0x000C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAllowVertexPulling;                               // 0x0010(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxNavAreaItem;

// ScriptStruct GbxNav.GbxNavEdgeItem
// 0x0010 (0x0010 - 0x0000)
struct FGbxNavEdgeItem final
{
public:
	class UGbxNavLinkData*                        Edge;                                              // 0x0000(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CostScale;                                         // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxNavEdgeItem;

// ScriptStruct GbxNav.GbxNavGoalModifiers
// 0x0080 (0x0080 - 0x0000)
struct FGbxNavGoalModifiers final
{
public:
	float                                         Radius;                                            // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HalfHeight;                                        // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseHalfHeightForGroundTrace;                      // 0x0008(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAddAgentRadius;                                   // 0x0009(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAddAgentHeight;                                   // 0x000A(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAddGoalRadius;                                    // 0x000B(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAddGoalHeight;                                    // 0x000C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCenterOnBottom;                                   // 0x000D(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Offset;                                            // 0x0010(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGbxNavOffset                                 OffsetType;                                        // 0x0028(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bMatchGoalRotation;                                // 0x0029(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGbxNavGoalRotation                           GoalRotation;                                      // 0x002A(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2B[0x5];                                       // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxParam                              CustomGoalRotation;                                // 0x0030(0x0038)(Edit, NativeAccessSpecifierPublic)
	EGbxNavGoalProjectionMode                     ProjectionMode;                                    // 0x0068(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bStopAtGoal;                                       // 0x0069(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAnimPoseRef                        DesiredPose;                                       // 0x0070(0x0010)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxNavGoalModifiers;

// ScriptStruct GbxNav.GbxNavLinkDef_FallAndLand
// 0x0058 (0x0078 - 0x0020)
struct FGbxNavLinkDef_FallAndLand final : public FGbxNavLinkDef
{
public:
	TSoftObjectPtr<class UAnimSequence>           Fall;                                              // 0x0020(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UAnimSequence>           Land;                                              // 0x0048(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         FallSpeed;                                         // 0x0070(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxNavLinkDef_FallAndLand;

// ScriptStruct GbxNav.GbxNavLinkDef_Interp
// 0x0008 (0x0028 - 0x0020)
struct FGbxNavLinkDef_Interp final : public FGbxNavLinkDef
{
public:
	float                                         EdgeDistance;                                      // 0x0020(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxNavLinkDef_Interp;

// ScriptStruct GbxNav.GbxNavLinkDef_Jump
// 0x0090 (0x00B0 - 0x0020)
struct FGbxNavLinkDef_Jump final : public FGbxNavLinkDef
{
public:
	TSoftObjectPtr<class UAnimSequence>           Start;                                             // 0x0020(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UAnimSequence>           InAir;                                             // 0x0048(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UAnimSequence>           End;                                               // 0x0070(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         GravityMultiplier;                                 // 0x0098(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         StartBorderDistance;                               // 0x009C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bOverrideStartDist;                                // 0x00A0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         EndBorderDistance;                                 // 0x00A4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bOverrideEndDist;                                  // 0x00A8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxNavLinkDef_Jump;

// ScriptStruct GbxNav.GbxNavLinkDef_Loop
// 0x0028 (0x0048 - 0x0020)
struct FGbxNavLinkDef_Loop final : public FGbxNavLinkDef
{
public:
	TSoftObjectPtr<class UAnimSequence>           Anim;                                              // 0x0020(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxNavLinkDef_Loop;

// ScriptStruct GbxNav.GbxNavLinkDef_Stance
// 0x0028 (0x0048 - 0x0020)
struct FGbxNavLinkDef_Stance final : public FGbxNavLinkDef
{
public:
	TSoftObjectPtr<class UAnimSequence>           BackupAnim;                                        // 0x0020(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxNavLinkDef_Stance;

// ScriptStruct GbxNav.HavokNavMesh
// 0x0030 (0x0030 - 0x0000)
struct alignas(0x08) FHavokNavMesh final
{
public:
	uint8                                         Pad_0[0x30];                                       // 0x0000(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FHavokNavMesh;

// ScriptStruct GbxNav.GbxNavMeshLayerData
// 0x0048 (0x0048 - 0x0000)
struct FGbxNavMeshLayerData final
{
public:
	struct FHavokNavMesh                          HavokData;                                         // 0x0000(0x0030)(NativeAccessSpecifierPublic)
	class UGbxNavMeshLayer*                       layer;                                             // 0x0030(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_38[0x10];                                      // 0x0038(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxNavMeshLayerData;

// ScriptStruct GbxNav.GbxBakedNavLinkData
// 0x0050 (0x0050 - 0x0000)
struct FGbxBakedNavLinkData final
{
public:
	TArray<struct FGbxBakedLayerNavLinkData>      LayerData;                                         // 0x0000(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                         ForwardTypeIdx;                                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReverseTypeIdx;                                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGbxNavLinkDirection                          Direction;                                         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxNavId                              NavId;                                             // 0x0020(0x0030)(NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxBakedNavLinkData;

// ScriptStruct GbxNav.GbxNavMeshData
// 0x0080 (0x0080 - 0x0000)
struct alignas(0x10) FGbxNavMeshData final
{
public:
	TArray<struct FGbxNavMeshLayerData>           layers;                                            // 0x0000(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FGbxBakedNavLinkData>           NavLinks;                                          // 0x0010(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FGbxBakedNavPainterData>        NavPainters;                                       // 0x0020(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	struct FGbxNavGenHeader                       GenHeader;                                         // 0x0030(0x0014)(NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_44[0x3C];                                      // 0x0044(0x003C)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxNavMeshData;

// ScriptStruct GbxNav.GbxNavPainterComponentInstanceData
// 0x0030 (0x0200 - 0x01D0)
struct FGbxNavPainterComponentInstanceData final : public FPrimitiveComponentInstanceData
{
public:
	struct FGbxNavId                              PainterNavId;                                      // 0x01D0(0x0030)(NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxNavPainterComponentInstanceData;

// ScriptStruct GbxNav.GbxNavPainterComponentSettings
// 0x0001 (0x0001 - 0x0000)
struct FGbxNavPainterComponentSettings final
{
public:
	uint8                                         Pad_0[0x1];                                        // 0x0000(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxNavPainterComponentSettings;

// ScriptStruct GbxNav.GbxNavMovementSettings
// 0x0008 (0x0008 - 0x0000)
struct FGbxNavMovementSettings final
{
public:
	float                                         DefaultNavLinkCost;                                // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OvernavDeltaForDummyErosion;                       // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxNavMovementSettings;

// ScriptStruct GbxNav.GbxNavSpot
// 0x0058 (0x0058 - 0x0000)
struct alignas(0x08) FGbxNavSpot final
{
public:
	uint8                                         Pad_0[0x58];                                       // 0x0000(0x0058)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxNavSpot;

// ScriptStruct GbxNav.HavokStreamingSet
// 0x0030 (0x0030 - 0x0000)
struct alignas(0x08) FHavokStreamingSet final
{
public:
	uint8                                         Pad_0[0x30];                                       // 0x0000(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FHavokStreamingSet;

// ScriptStruct GbxNav.GbxNavStreamingInfo
// 0x0040 (0x0040 - 0x0000)
struct FGbxNavStreamingInfo final
{
public:
	TWeakObjectPtr<class UGbxNavMeshComponent>    OppositeNavMesh;                                   // 0x0000(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FHavokStreamingSet                     HavokData;                                         // 0x0008(0x0030)(NativeAccessSpecifierPublic)
	bool                                          bUsesIdA;                                          // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxNavStreamingInfo;

// ScriptStruct GbxNav.GbxNavStreamingSet
// 0x0038 (0x0038 - 0x0000)
struct FGbxNavStreamingSet final
{
public:
	int32                                         SectionIdA;                                        // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SectionIdB;                                        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FHavokStreamingSet                     HavokData;                                         // 0x0008(0x0030)(NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxNavStreamingSet;

// ScriptStruct GbxNav.GbxNavFace
// 0x0008 (0x0008 - 0x0000)
struct FGbxNavFace final
{
public:
	int32                                         SectionIdx;                                        // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         FaceIdx;                                           // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxNavFace;

// ScriptStruct GbxNav.GbxUniversalNavFace
// 0x000C (0x000C - 0x0000)
struct alignas(0x04) FGbxUniversalNavFace final
{
public:
	uint8                                         Pad_0[0xC];                                        // 0x0000(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FGbxUniversalNavFace;

// ScriptStruct GbxNav.GbxNavQueryData
// 0x0018 (0x0018 - 0x0000)
struct FGbxNavQueryData final
{
public:
	class UGbxNavMeshLayer*                       layer;                                             // 0x0000(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxNavAreaUserData*                    Areas;                                             // 0x0008(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGbxNavEdgeUserData*                    Edges;                                             // 0x0010(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxNavQueryData;

// ScriptStruct GbxNav.GbxStancePickerDef
// 0x0020 (0x0038 - 0x0018)
struct FGbxStancePickerDef final : public FGbxStanceBaseDef
{
public:
	TArray<struct FGbxStancePickerOption>         options;                                           // 0x0018(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FGbxStancePickerOption>         Options2;                                          // 0x0028(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxStancePickerDef;

// ScriptStruct GbxNav.GbxStanceRandomOption
// 0x0050 (0x0050 - 0x0000)
struct FGbxStanceRandomOption final
{
public:
	struct FGbxParam                              Weight;                                            // 0x0000(0x0038)(Edit, NativeAccessSpecifierPublic)
	FGbxDefPtrProperty_                           stance;                                            // 0x0038(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FGbxStanceRandomOption;

// ScriptStruct GbxNav.GbxStanceRandomDef
// 0x0010 (0x0028 - 0x0018)
struct FGbxStanceRandomDef final : public FGbxStanceBaseDef
{
public:
	TArray<struct FGbxStanceRandomOption>         options;                                           // 0x0018(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxStanceRandomDef;

// ScriptStruct GbxNav.GbxStanceAnyDef
// 0x0008 (0x0020 - 0x0018)
struct FGbxStanceAnyDef final : public FGbxStanceBaseDef
{
public:
	struct FGameplayTag                           StanceTag;                                         // 0x0018(0x0008)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FGbxStanceAnyDef;

// ScriptStruct GbxNav.HavokFlightNavChunkSettings
// 0x0008 (0x0008 - 0x0000)
struct FHavokFlightNavChunkSettings final
{
public:
	uint16                                        MaxChunkSizeX;                                     // 0x0000(0x0002)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint16                                        MaxChunkSizeY;                                     // 0x0002(0x0002)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint16                                        MaxChunkSizeZ;                                     // 0x0004(0x0002)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          DoGreedyMergeAfterCombine;                         // 0x0006(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FHavokFlightNavChunkSettings;

// ScriptStruct GbxNav.HavokFlightNavMergingSettings
// 0x0020 (0x0020 - 0x0000)
struct FHavokFlightNavMergingSettings final
{
public:
	float                                         NodeWeight;                                        // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         EdgeWeight;                                        // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          EstimateNewEdges;                                  // 0x0008(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         IterationsStabilizationThreshold;                  // 0x000C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxMergingIterations;                              // 0x0010(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         RandomSeed;                                        // 0x0014(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Multiplier;                                        // 0x0018(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          UseSimpleFirstMergePass;                           // 0x001C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FHavokFlightNavMergingSettings;

// ScriptStruct GbxNav.HavokFlightNavStitchingSettings
// 0x0014 (0x0014 - 0x0000)
struct FHavokFlightNavStitchingSettings final
{
public:
	float                                         DomainMatchTolerance;                              // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MatchingAxis;                                      // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxSeparation;                                     // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxPenetration;                                    // 0x000C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinOverlap;                                        // 0x0010(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FHavokFlightNavStitchingSettings;

// ScriptStruct GbxNav.HavokNavMeshRegionPruningSettings
// 0x000C (0x000C - 0x0000)
struct FHavokNavMeshRegionPruningSettings final
{
public:
	float                                         MinRegionArea;                                     // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinDistanceToSeedPoints;                           // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseRegionSeeds;                                   // 0x0008(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bKeepBounds;                                       // 0x0009(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FHavokNavMeshRegionPruningSettings;

// ScriptStruct GbxNav.HavokNavMeshExtraVertexSettings
// 0x0024 (0x0024 - 0x0000)
struct FHavokNavMeshExtraVertexSettings final
{
public:
	EHavokNavMeshVertexSelectionMethod            VertexSelectionMethod;                             // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         VertexFraction;                                    // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AreaFraction;                                      // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinPartitionArea;                                  // 0x000C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NumSmoothingIterations;                            // 0x0010(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         IterationDamping;                                  // 0x0014(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAddVerticesOnBoundaryEdges;                       // 0x0018(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAddVerticesOnPartitionBorders;                    // 0x0019(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         BoundaryEdgeSplitLength;                           // 0x001C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PartitionBordersSplitLength;                       // 0x0020(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
DUMPER7_ASSERTS_FHavokNavMeshExtraVertexSettings;

// ScriptStruct GbxNav.HavokNavMeshSimplificationSettings
// 0x0010 (0x0010 - 0x0000)
struct FHavokNavMeshSimplificationSettings final
{
public:
	float                                         MaxLoweringDistance;                               // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxRaisingDistance;                                // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BoundaryContractionLimit;                          // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FHavokNavMeshSimplificationSettings;

// ScriptStruct GbxNav.HavokNavMeshEdgeMatchingSettings
// 0x0028 (0x0028 - 0x0000)
struct FHavokNavMeshEdgeMatchingSettings final
{
public:
	float                                         MaxStepHeight;                                     // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxSeparation;                                     // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxOverhang;                                       // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BehindFaceTolerance;                               // 0x000C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CosPlanarAlignmentAngle;                           // 0x0010(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CosVerticalAlignmentAngle;                         // 0x0014(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinEdgeOverlap;                                    // 0x0018(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         EdgeParallelTolerance;                             // 0x001C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         EdgeTraversibilityHorizontalEpsilon;               // 0x0020(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseSafeEdgeTraversibilityHorizontalEpsilon;       // 0x0024(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FHavokNavMeshEdgeMatchingSettings;

// ScriptStruct GbxNav.HavokTraversalSettings
// 0x0020 (0x0020 - 0x0000)
struct FHavokTraversalSettings final
{
public:
	TArray<class UHavokTraversalData*>            TraversalTypes;                                    // 0x0000(0x0010)(Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPublic)
	float                                         MinEdgeLength;                                     // 0x0010(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxSectionDistance;                                // 0x0014(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RaiseEdgeHeightLimit;                              // 0x0018(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
DUMPER7_ASSERTS_FHavokTraversalSettings;

// ScriptStruct GbxNav.TaggedAnimDef_GbxNav
// 0x0050 (0x0070 - 0x0020)
struct FTaggedAnimDef_GbxNav : public FTaggedAnimDef_GbxSpawn
{
public:
	TMap<struct FGameplayTag, FGbxDefPtrProperty_> Spawns;                                           // 0x0020(0x0050)(Edit, NativeAccessSpecifierPrivate)
};
DUMPER7_ASSERTS_FTaggedAnimDef_GbxNav;

}

