#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GbxWeapon

#include "Basic.hpp"

#include "GbxAI_structs.hpp"
#include "GbxAI_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "Engine_classes.hpp"
#include "GbxCore_structs.hpp"
#include "GbxWeapon_structs.hpp"
#include "GbxEngine_classes.hpp"
#include "GbxGame_structs.hpp"
#include "GbxGame_classes.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK
{

// Class GbxWeapon.AIWeaponUser
// 0x0000 (0x0000 - 0x0000)
class IAIWeaponUser final
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AIWeaponUser")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AIWeaponUser")
	}
	static class IAIWeaponUser* GetDefaultObj()
	{
		return GetDefaultObjImpl<IAIWeaponUser>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_IAIWeaponUser;

// Class GbxWeapon.AnimNotify_EquipInterruptible
// 0x0000 (0x0038 - 0x0038)
class UAnimNotify_EquipInterruptible final : public UAnimNotify
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimNotify_EquipInterruptible")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimNotify_EquipInterruptible")
	}
	static class UAnimNotify_EquipInterruptible* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimNotify_EquipInterruptible>();
	}
};
DUMPER7_ASSERTS_UAnimNotify_EquipInterruptible;

// Class GbxWeapon.AnimNotify_HideWeapon
// 0x0010 (0x0048 - 0x0038)
class UAnimNotify_HideWeapon final : public UAnimNotify
{
public:
	EHideWeaponNotifyOption                       Option;                                            // 0x0038(0x0001)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   reason;                                            // 0x003C(0x0008)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimNotify_HideWeapon")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimNotify_HideWeapon")
	}
	static class UAnimNotify_HideWeapon* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimNotify_HideWeapon>();
	}
};
DUMPER7_ASSERTS_UAnimNotify_HideWeapon;

// Class GbxWeapon.AnimNotifyState_HideWeapon
// 0x0008 (0x0038 - 0x0030)
class UAnimNotifyState_HideWeapon final : public UAnimNotifyState
{
public:
	class FName                                   reason;                                            // 0x0030(0x0008)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimNotifyState_HideWeapon")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimNotifyState_HideWeapon")
	}
	static class UAnimNotifyState_HideWeapon* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimNotifyState_HideWeapon>();
	}
};
DUMPER7_ASSERTS_UAnimNotifyState_HideWeapon;

// Class GbxWeapon.AnimNotify_ReloadAmmo
// 0x0000 (0x0038 - 0x0038)
class UAnimNotify_ReloadAmmo final : public UAnimNotify
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnimNotify_ReloadAmmo")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnimNotify_ReloadAmmo")
	}
	static class UAnimNotify_ReloadAmmo* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimNotify_ReloadAmmo>();
	}
};
DUMPER7_ASSERTS_UAnimNotify_ReloadAmmo;

// Class GbxWeapon.CameraWeaponInterface
// 0x0000 (0x0000 - 0x0000)
class ICameraWeaponInterface final
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CameraWeaponInterface")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CameraWeaponInterface")
	}
	static class ICameraWeaponInterface* GetDefaultObj()
	{
		return GetDefaultObjImpl<ICameraWeaponInterface>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_ICameraWeaponInterface;

// Class GbxWeapon.NexusConfigStoreCrosshair
// 0x0000 (0x0390 - 0x0390)
class UNexusConfigStoreCrosshair final : public UNexusConfigStoreBasic
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NexusConfigStoreCrosshair")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NexusConfigStoreCrosshair")
	}
	static class UNexusConfigStoreCrosshair* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNexusConfigStoreCrosshair>();
	}
};
DUMPER7_ASSERTS_UNexusConfigStoreCrosshair;

// Class GbxWeapon.GbxAIHeldWeaponComponent
// 0x00C0 (0x0470 - 0x03B0)
#pragma pack(push, 0x1)
class alignas(0x10) UGbxAIHeldWeaponComponent : public UGbxAIHeldActorComponent
{
public:
	struct FInventoryItemSelectionData            EquippedWeapon;                                    // 0x03A8(0x0068)(Edit, Protected, NativeAccessSpecifierProtected)
	FGameDataHandleProperty_                      AccuracyPool;                                      // 0x0410(0x0018)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                           RotationChannelName;                               // 0x0428(0x0008)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_430[0x38];                                     // 0x0430(0x0038)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SpawnWeaponDelayed();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxAIHeldWeaponComponent")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxAIHeldWeaponComponent")
	}
	static class UGbxAIHeldWeaponComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxAIHeldWeaponComponent>();
	}
};
#pragma pack(pop)
DUMPER7_ASSERTS_UGbxAIHeldWeaponComponent;

// Class GbxWeapon.GbxAITicketUseDataAsset
// 0x00B8 (0x00E8 - 0x0030)
class UGbxAITicketUseDataAsset final : public UDataAsset
{
public:
	struct FGbxAITicketUseData                    TicketSettings;                                    // 0x0030(0x00B8)(Edit, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxAITicketUseDataAsset")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxAITicketUseDataAsset")
	}
	static class UGbxAITicketUseDataAsset* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxAITicketUseDataAsset>();
	}
};
DUMPER7_ASSERTS_UGbxAITicketUseDataAsset;

// Class GbxWeapon.GbxTrickAnimNotify_HideWeapon
// 0x0000 (0x0038 - 0x0038)
class UGbxTrickAnimNotify_HideWeapon final : public UGbxTrickAnimNotify
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxTrickAnimNotify_HideWeapon")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxTrickAnimNotify_HideWeapon")
	}
	static class UGbxTrickAnimNotify_HideWeapon* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxTrickAnimNotify_HideWeapon>();
	}
};
DUMPER7_ASSERTS_UGbxTrickAnimNotify_HideWeapon;

// Class GbxWeapon.GbxTrickAnimNotify_ReloadAmmo
// 0x0000 (0x0038 - 0x0038)
class UGbxTrickAnimNotify_ReloadAmmo final : public UGbxTrickAnimNotify
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxTrickAnimNotify_ReloadAmmo")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxTrickAnimNotify_ReloadAmmo")
	}
	static class UGbxTrickAnimNotify_ReloadAmmo* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxTrickAnimNotify_ReloadAmmo>();
	}
};
DUMPER7_ASSERTS_UGbxTrickAnimNotify_ReloadAmmo;

// Class GbxWeapon.GbxTrickAnimNotify_VisibleAmmo
// 0x0008 (0x0040 - 0x0038)
class UGbxTrickAnimNotify_VisibleAmmo final : public UGbxTrickAnimNotify
{
public:
	bool                                          bAmmoStateEnabled;                                 // 0x0038(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bUpdateMethodEnabled;                              // 0x0039(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EVisibleAmmoState                             AmmoState;                                         // 0x003A(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EVisibleAmmoUpdateMethod                      UpdateMethod;                                      // 0x003B(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bForceUpdateAmmo;                                  // 0x003C(0x0001)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxTrickAnimNotify_VisibleAmmo")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxTrickAnimNotify_VisibleAmmo")
	}
	static class UGbxTrickAnimNotify_VisibleAmmo* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxTrickAnimNotify_VisibleAmmo>();
	}
};
DUMPER7_ASSERTS_UGbxTrickAnimNotify_VisibleAmmo;

// Class GbxWeapon.GbxWeaponHeldActorFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UGbxWeaponHeldActorFunctionLibrary final : public UGbxAIHeldActorFunctionLibrary
{
public:
	static void AIHeldWeapon_Destroy(class AActor* AIActor, class FName ID, EGbxAIHeldFilterType FilterType);
	static void AIHeldWeapon_Drop(class AActor* AIActor, bool bRequestNewHeldActor, class FName ID, EGbxAIHeldFilterType FilterType, class AActor* InstigatorOverride);
	static TArray<class AWeapon*> AIHeldWeapon_GetActors(class AActor* AIActor, class FName ID, EGbxAIHeldFilterType FilterType);
	static void AIHeldWeapon_Spawn(class AActor* AIActor, class FName ID, EGbxAIHeldFilterType FilterType, const struct FInventoryItemSelectionData& WeaponOverride);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("GbxWeaponHeldActorFunctionLibrary")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"GbxWeaponHeldActorFunctionLibrary")
	}
	static class UGbxWeaponHeldActorFunctionLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGbxWeaponHeldActorFunctionLibrary>();
	}
};
DUMPER7_ASSERTS_UGbxWeaponHeldActorFunctionLibrary;

// Class GbxWeapon.NexusConfigStoreShotModifier
// 0x0000 (0x0390 - 0x0390)
class UNexusConfigStoreShotModifier final : public UNexusConfigStoreBasic
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NexusConfigStoreShotModifier")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NexusConfigStoreShotModifier")
	}
	static class UNexusConfigStoreShotModifier* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNexusConfigStoreShotModifier>();
	}
};
DUMPER7_ASSERTS_UNexusConfigStoreShotModifier;

// Class GbxWeapon.SwayPatternData
// 0x0018 (0x0048 - 0x0030)
class USwayPatternData final : public UDataAsset
{
public:
	TArray<struct FVector2D>                      Samples;                                           // 0x0030(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, EditConst, Protected, NativeAccessSpecifierProtected)
	int32                                         NumberOfOctaves;                                   // 0x0040(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         NumberOfSamplesToGenerate;                         // 0x0044(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("SwayPatternData")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"SwayPatternData")
	}
	static class USwayPatternData* GetDefaultObj()
	{
		return GetDefaultObjImpl<USwayPatternData>();
	}
};
DUMPER7_ASSERTS_USwayPatternData;

// Class GbxWeapon.Weapon
// 0x0500 (0x0DB0 - 0x08B0)
class AWeapon : public Ainventory
{
public:
	uint8                                         Pad_8B0[0x30];                                     // 0x08B0(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	class UGbxSequencePlayer*                     GbxSequencePlayer;                                 // 0x08E0(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, DuplicateTransient, NoDestructor, TextExportTransient, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint32                                        AttributeResolverUseModeBitmask;                   // 0x08E8(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8EC[0x8C];                                     // 0x08EC(0x008C)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              NotifyAttached;                                    // 0x0978(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              NotifyDetached;                                    // 0x0988(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class AWeapon* EventWeapon)> NotifyEquipped;                       // 0x0998(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_9A8[0x20];                                     // 0x09A8(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class AWeapon* EventWeapon)> NotifyPutDown;                        // 0x09C8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_9D8[0x18];                                     // 0x09D8(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              NotifySwitchModeStarted;                           // 0x09F0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              NotifySwitchedMode;                                // 0x0A00(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class AWeapon* EventWeapon, bool bAutoReload)> NotifyReloadStarted; // 0x0A10(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class AWeapon* EventWeapon, bool bCompleted)> NotifyReloadEnded;   // 0x0A20(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class AWeapon* EventWeapon, bool bLockedOn)> NotifyTargetLockChanged; // 0x0A30(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(bool bIsHidden)> NotifyHidden;                                     // 0x0A40(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(uint8 Level)>   NotifyZoomingIn;                                   // 0x0A50(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(uint8 Level)>   NotifyZoomedIn;                                    // 0x0A60(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(uint8 Level)>   NotifyZoomingOut;                                  // 0x0A70(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              NotifyZoomedOut;                                   // 0x0A80(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              NotifyUseStarted;                                  // 0x0A90(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              NotifyUsed;                                        // 0x0AA0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              NotifyUseFinished;                                 // 0x0AB0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void()>              NotifyPreUseStarted;                               // 0x0AC0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(bool bInterrupted)> NotifyPreUseFinished;                          // 0x0AD0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(class AWeapon* EventWeapon, const struct FGameplayTag& EventName)> NotifyPreUseNotification; // 0x0AE0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_AF0[0x18];                                     // 0x0AF0(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IWeaponUserInterface>  WeaponUser;                                        // 0x0B08(0x0010)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TScriptInterface<class IWeaponTargetLockInterface> WeaponTargetLock;                             // 0x0B18(0x0010)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TScriptInterface<class IBodyActionAnimOwner>  BodyOwner;                                         // 0x0B28(0x0010)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_B38[0x8];                                      // 0x0B38(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bAmmoGivenToEmptyWeapon;                           // 0x0B40(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_B41[0xF];                                      // 0x0B41(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	uint32                                        VisibleAmmoState;                                  // 0x0B50(0x0004)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_B54[0x4];                                      // 0x0B54(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAttributeFloat                     EquipTime;                                         // 0x0B58(0x000C)(Net, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_B64[0x18];                                     // 0x0B64(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAttributeFloat                     PutDownTime;                                       // 0x0B7C(0x000C)(Net, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_B88[0xC];                                      // 0x0B88(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAttributeFloat                     switchmodetimescale;                               // 0x0B94(0x000C)(Net, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	float                                         SwitchModeTime;                                    // 0x0BA0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         SwitchModeCompletePercent;                         // 0x0BA4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         SwitchModeOption;                                  // 0x0BA8(0x0001)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_BA9[0x1];                                      // 0x0BA9(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	uint8                                         PendingUseModeIndex;                               // 0x0BAA(0x0001)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bCanModeSwitchInterruptReload;                     // 0x0BAB(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_BAC[0x14];                                     // 0x0BAC(0x0014)(Fixing Size After Last Property [ Dumper-7 ])
	uint8                                         CurrentUseModeIndex;                               // 0x0BC0(0x0001)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_BC1[0x4];                                      // 0x0BC1(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	uint8                                         RemoteShotSocketState;                             // 0x0BC5(0x0001)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         RemoteShotState;                                   // 0x0BC6(0x0001)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_BC7[0x75];                                     // 0x0BC7(0x0075)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PostSprintUseDelay;                                // 0x0C3C(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FDamageModifierData                    DamageModifierData;                                // 0x0C40(0x0068)(Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_CA8[0x10];                                     // 0x0CA8(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAttributeFloat                     ZoomTimeScale;                                     // 0x0CB8(0x000C)(Net, ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_CC4[0x3C];                                     // 0x0CC4(0x003C)(Fixing Size After Last Property [ Dumper-7 ])
	uint8                                         PrimaryRepHeatState;                               // 0x0D00(0x0001)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         AltRepHeatState;                                   // 0x0D01(0x0001)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_D02[0x6];                                      // 0x0D02(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWeaponAttachState                     PendingAttachState;                                // 0x0D08(0x0010)(Net, Transient, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FWeaponAttachState                     AttachState;                                       // 0x0D18(0x0010)(Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_D28[0x10];                                     // 0x0D28(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CurrentState;                                      // 0x0D38(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UWeaponBehavior*>                behaviors;                                         // 0x0D40(0x0010)(ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPrivate)
	uint8                                         Pad_D50[0x60];                                     // 0x0D50(0x0060)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ClientConsumeAmmo(uint8 UseModeIndex, int32 Amount);
	void ClientLock(float Duration);
	void ClientRefillAmmo(uint8 UseModeIndex, int32 Amount);
	void ClientSetAmmoState(uint8 UseModeIndex, const struct FReplicatedAmmoState& NewState);
	void ClientSetLoadedAmmo(uint8 UseModeIndex, int32 NewLoadedAmmo);
	void ClientStopReloading();
	void ClientUnlock();
	void OnNotifyBodyControlsOfTargetLock(class AWeapon* EventWeapon, bool bLockedOn);
	void OnRep_AltHeatState();
	void OnRep_CurrentUseModeIndex(uint8 PreviousUseModeIndex);
	void OnRep_PendingAttachState();
	void OnRep_PendingUseModeIndex();
	void OnRep_PrimaryHeatState();
	void OnRep_RemoteShotSocketState();
	void OnRep_RemoteShotState();
	void OnRep_VisibleAmmoState();
	void PlayEffects(class FName type, uint8 UseModeIndex, int32 ID, bool bUntilStopped);
	void ServerAmmoGivenToInterruptedReload();
	void ServerEquipInterruptible();
	void ServerInterruptReloadToUse(int32 ClientLoadedAmmo);
	void ServerLock(float Duration);
	void ServerRestartAutoUse();
	void ServerSendAmmoState(uint8 UseModeIndex);
	void ServerSetPatternSeed(uint16 ClientPatternSeed);
	void ServerStartReloading(uint8 UseModeIndex, uint8 Flags_0);
	void ServerStartUsing(uint8 InputChannel, uint16 ClientPatternSeed);
	void ServerStopModeSwitch(uint8 InputChannel, uint8 ClientUseModeIndex);
	void ServerStopUsing(uint8 InputChannel, bool bForced, uint16 SyncData);
	void ServerSwitchMode(uint8 InputChannel, uint8 NextUseModeIndex, bool bForced, uint8 SwitchOption);
	void ServerUnlock();
	void ServerUpdateFPUseOffet(const struct FVector_NetQuantize100& Offset);
	void StopAllEffects(class FName type);
	void StopEffects(class FName type, uint8 UseModeIndex, bool bOnlyStopLoopingEffects);

	EWeaponTargetLockChannel GetTargetLockChannel() const;
	bool IsTargetLocked() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("Weapon")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"Weapon")
	}
	static class AWeapon* GetDefaultObj()
	{
		return GetDefaultObjImpl<AWeapon>();
	}
};
DUMPER7_ASSERTS_AWeapon;

// Class GbxWeapon.WeaponBehavior
// 0x0010 (0x0038 - 0x0028)
class UWeaponBehavior : public UObject
{
public:
	uint8                                         Pad_28[0x10];                                      // 0x0028(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("WeaponBehavior")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"WeaponBehavior")
	}
	static class UWeaponBehavior* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWeaponBehavior>();
	}
};
DUMPER7_ASSERTS_UWeaponBehavior;

// Class GbxWeapon.WeaponBehavior_Ammo
// 0x00A8 (0x00E0 - 0x0038)
class UWeaponBehavior_Ammo : public UWeaponBehavior
{
public:
	uint8                                         Pad_38[0x60];                                      // 0x0038(0x0060)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAttributeFloat                     RegenRate;                                         // 0x0098(0x000C)(Net, ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	struct FGbxAttributeFloat                     ConsumeRegenDelay;                                 // 0x00A4(0x000C)(Net, ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_B0[0x30];                                      // 0x00B0(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("WeaponBehavior_Ammo")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"WeaponBehavior_Ammo")
	}
	static class UWeaponBehavior_Ammo* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWeaponBehavior_Ammo>();
	}
};
DUMPER7_ASSERTS_UWeaponBehavior_Ammo;

// Class GbxWeapon.WeaponBehavior_DamageModifier
// 0x0078 (0x00B0 - 0x0038)
class UWeaponBehavior_DamageModifier final : public UWeaponBehavior
{
public:
	struct FDamageModifierData                    DamageModifierData;                                // 0x0038(0x0068)(Transient, NativeAccessSpecifierPublic)
	uint8                                         Pad_A0[0x10];                                      // 0x00A0(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("WeaponBehavior_DamageModifier")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"WeaponBehavior_DamageModifier")
	}
	static class UWeaponBehavior_DamageModifier* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWeaponBehavior_DamageModifier>();
	}
};
DUMPER7_ASSERTS_UWeaponBehavior_DamageModifier;

// Class GbxWeapon.WeaponBehavior_Use
// 0x0138 (0x0170 - 0x0038)
class UWeaponBehavior_Use : public UWeaponBehavior
{
public:
	uint8                                         Pad_38[0x78];                                      // 0x0038(0x0078)(Fixing Size After Last Property [ Dumper-7 ])
	class UWeaponBehavior_PreUse*                 PreUseBehavior;                                    // 0x00B0(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         switchmodetimescale;                               // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_BC[0x34];                                      // 0x00BC(0x0034)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAttributeFloat                     aimindesiredrange;                                 // 0x00F0(0x000C)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	struct FGbxAttributeFloat                     aimaxdesiredrange;                                 // 0x00FC(0x000C)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	struct FGbxAttributeFloat                     aipreferredrange;                                  // 0x0108(0x000C)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	struct FGbxAttributeFloat                     aiminaccuracyscalerange;                           // 0x0114(0x000C)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	struct FGbxAttributeFloat                     aimaxaccuracyscalerange;                           // 0x0120(0x000C)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	bool                                          bAIUseBurstTime;                                   // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bAIUseWeaponSpread;                                // 0x012D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_12E[0x2];                                      // 0x012E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         aiburstcount;                                      // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGbxAttributeFloat                     aibursttime;                                       // 0x0134(0x000C)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	struct FGbxAttributeFloat                     aiburstdelay;                                      // 0x0140(0x000C)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	struct FGbxAttributeFloat                     aiaccuracy;                                        // 0x014C(0x000C)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	struct FGbxAttributeFloat                     aiprojectilespeed;                                 // 0x0158(0x000C)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	struct FGbxAttributeFloat                     aiminaccuracy;                                     // 0x0164(0x000C)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("WeaponBehavior_Use")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"WeaponBehavior_Use")
	}
	static class UWeaponBehavior_Use* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWeaponBehavior_Use>();
	}
};
DUMPER7_ASSERTS_UWeaponBehavior_Use;

// Class GbxWeapon.WeaponBehavior_Fire
// 0x01C0 (0x0330 - 0x0170)
class UWeaponBehavior_Fire : public UWeaponBehavior_Use
{
public:
	uint8                                         Pad_170[0x18];                                     // 0x0170(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAttributeFloat                     firerate;                                          // 0x0188(0x000C)(Net, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	struct FGbxAttributeFloat                     aifireratescale;                                   // 0x0194(0x000C)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	struct FGbxAttributeInteger                   AutomaticBurstCount;                               // 0x01A0(0x000C)(Net, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	struct FGbxAttributeFloat                     BurstFireDelay;                                    // 0x01AC(0x000C)(Net, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	float                                         burstfireratescale;                                // 0x01B8(0x0004)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1BC[0x4];                                      // 0x01BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAttributeFloat                     firerateaccelduration;                             // 0x01C0(0x000C)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	struct FGbxAttributeFloat                     fireratedecelduration;                             // 0x01CC(0x000C)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	struct FGbxAttributeInteger                   ShotAmmoCost;                                      // 0x01D8(0x000C)(Net, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	struct FGbxAttributeFloat                     damage;                                            // 0x01E4(0x000C)(Net, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	struct FGbxAttributeFloat                     damageradius;                                      // 0x01F0(0x000C)(Net, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	struct FGbxAttributeFloat                     spread;                                            // 0x01FC(0x000C)(Net, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	struct FGbxAttributeFloat                     accuracyimpulse;                                   // 0x0208(0x000C)(Net, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	struct FGbxAttributeFloat                     BurstAccuracyImpulseScale;                         // 0x0214(0x000C)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	struct FGbxAttributeFloat                     ImpactForce;                                       // 0x0220(0x000C)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	struct FGbxAttributeFloat                     aiforcescale;                                      // 0x022C(0x000C)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	struct FGbxAttributeFloat                     DestructibleForce;                                 // 0x0238(0x000C)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	struct FGbxAttributeFloat                     DestructibleStrain;                                // 0x0244(0x000C)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	bool                                          bLockOntoTarget;                                   // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_251[0x3];                                      // 0x0251(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAttributeFloat                     heatimpulse;                                       // 0x0254(0x000C)(Net, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	struct FGbxAttributeFloat                     aidamagescale;                                     // 0x0260(0x000C)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_26C[0x4C];                                     // 0x026C(0x004C)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RecoilScaleX;                                      // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         RecoilScaleY;                                      // 0x02BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         ShotOffsetScale;                                   // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGbxAttributeFloat                     RecoilScale;                                       // 0x02C4(0x000C)(Net, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_2D0[0x2];                                      // 0x02D0(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	uint8                                         BitPad_2D2_0 : 1;                                  // 0x02D2(0x0001)(Fixing Bit-Field Size Between Bits [ Dumper-7 ])
	uint8                                         bFireRateAccelActive : 1;                          // 0x02D2(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Net, Transient, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected))
	uint8                                         Pad_2D3[0x25];                                     // 0x02D3(0x0025)(Fixing Size After Last Property [ Dumper-7 ])
	uint8                                         CurrentFireSocketIndex;                            // 0x02F8(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2F9[0x37];                                     // 0x02F9(0x0037)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnRep_FireRateAccelChanged();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("WeaponBehavior_Fire")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"WeaponBehavior_Fire")
	}
	static class UWeaponBehavior_Fire* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWeaponBehavior_Fire>();
	}
};
DUMPER7_ASSERTS_UWeaponBehavior_Fire;

// Class GbxWeapon.WeaponBehavior_Heat
// 0x0090 (0x00C8 - 0x0038)
class UWeaponBehavior_Heat final : public UWeaponBehavior
{
public:
	uint8                                         Pad_38[0x58];                                      // 0x0038(0x0058)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CooldownRate;                                      // 0x0090(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         CooldownDelay;                                     // 0x0094(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         OverheatTime;                                      // 0x0098(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         OverheatCooldownDelay;                             // 0x009C(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         Heat;                                              // 0x00A0(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWeaponBehavior_Use*                    UseBehavior;                                       // 0x00A8(0x0008)(ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_B0[0x18];                                      // 0x00B0(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("WeaponBehavior_Heat")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"WeaponBehavior_Heat")
	}
	static class UWeaponBehavior_Heat* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWeaponBehavior_Heat>();
	}
};
DUMPER7_ASSERTS_UWeaponBehavior_Heat;

// Class GbxWeapon.WeaponBehavior_PreUse
// 0x0030 (0x0068 - 0x0038)
class UWeaponBehavior_PreUse : public UWeaponBehavior
{
public:
	uint8                                         Pad_38[0x30];                                      // 0x0038(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("WeaponBehavior_PreUse")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"WeaponBehavior_PreUse")
	}
	static class UWeaponBehavior_PreUse* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWeaponBehavior_PreUse>();
	}
};
DUMPER7_ASSERTS_UWeaponBehavior_PreUse;

// Class GbxWeapon.WeaponBehavior_Reload
// 0x0060 (0x0098 - 0x0038)
class UWeaponBehavior_Reload : public UWeaponBehavior
{
public:
	uint8                                         Pad_38[0x50];                                      // 0x0038(0x0050)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAttributeFloat                     ReloadTime;                                        // 0x0088(0x000C)(Net, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("WeaponBehavior_Reload")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"WeaponBehavior_Reload")
	}
	static class UWeaponBehavior_Reload* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWeaponBehavior_Reload>();
	}
};
DUMPER7_ASSERTS_UWeaponBehavior_Reload;

// Class GbxWeapon.WeaponBehavior_StatusEffectModifier
// 0x0010 (0x0048 - 0x0038)
class UWeaponBehavior_StatusEffectModifier : public UWeaponBehavior
{
public:
	uint8                                         Pad_38[0x10];                                      // 0x0038(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("WeaponBehavior_StatusEffectModifier")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"WeaponBehavior_StatusEffectModifier")
	}
	static class UWeaponBehavior_StatusEffectModifier* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWeaponBehavior_StatusEffectModifier>();
	}
};
DUMPER7_ASSERTS_UWeaponBehavior_StatusEffectModifier;

// Class GbxWeapon.WeaponBehavior_Sway
// 0x0050 (0x0088 - 0x0038)
class UWeaponBehavior_Sway final : public UWeaponBehavior
{
public:
	uint8                                         Pad_38[0x18];                                      // 0x0038(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAttributeFloat                     scale;                                             // 0x0050(0x000C)(Net, ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	struct FGbxAttributeFloat                     AccuracyScale;                                     // 0x005C(0x000C)(Net, ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	struct FGbxAttributeFloat                     ZoomScale;                                         // 0x0068(0x000C)(Net, ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	struct FGbxAttributeFloat                     ZoomAccuracyScale;                                 // 0x0074(0x000C)(Net, ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_80[0x8];                                       // 0x0080(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnAttached();
	void OnZoomed(uint8 Level);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("WeaponBehavior_Sway")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"WeaponBehavior_Sway")
	}
	static class UWeaponBehavior_Sway* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWeaponBehavior_Sway>();
	}
};
DUMPER7_ASSERTS_UWeaponBehavior_Sway;

// Class GbxWeapon.WeaponBehavior_VisibleAmmo
// 0x0078 (0x00B0 - 0x0038)
class UWeaponBehavior_VisibleAmmo final : public UWeaponBehavior
{
public:
	uint8                                         Pad_38[0x38];                                      // 0x0038(0x0038)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         BonesPerLoadedAmmo;                                // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFXSystemAsset*                         ShowEffect;                                        // 0x0078(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_80[0x10];                                      // 0x0080(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UFXSystemAsset*                         HideEffect;                                        // 0x0090(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_98[0x10];                                      // 0x0098(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UWeaponBehavior_Ammo*                   CachedAmmoBehavior;                                // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void OnAttached();
	void OnDetached();
	void OnSwitchedMode();
	void OnSwitchModeStarted();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("WeaponBehavior_VisibleAmmo")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"WeaponBehavior_VisibleAmmo")
	}
	static class UWeaponBehavior_VisibleAmmo* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWeaponBehavior_VisibleAmmo>();
	}
};
DUMPER7_ASSERTS_UWeaponBehavior_VisibleAmmo;

// Class GbxWeapon.WeaponBehavior_Zoom
// 0x0050 (0x0088 - 0x0038)
class UWeaponBehavior_Zoom : public UWeaponBehavior
{
public:
	uint8                                         Pad_38[0x10];                                      // 0x0038(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGbxAttributeFloat                     ZoomFOVScale;                                      // 0x0048(0x000C)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	struct FGbxAttributeFloat                     ZoomDuration;                                      // 0x0054(0x000C)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	float                                         ZoomShotOffsetScale;                               // 0x0060(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_64[0x24];                                      // 0x0064(0x0024)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("WeaponBehavior_Zoom")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"WeaponBehavior_Zoom")
	}
	static class UWeaponBehavior_Zoom* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWeaponBehavior_Zoom>();
	}
};
DUMPER7_ASSERTS_UWeaponBehavior_Zoom;

// Class GbxWeapon.NexusConfigStoreWeaponRecoil
// 0x0000 (0x0390 - 0x0390)
class UNexusConfigStoreWeaponRecoil final : public UNexusConfigStoreBasic
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("NexusConfigStoreWeaponRecoil")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"NexusConfigStoreWeaponRecoil")
	}
	static class UNexusConfigStoreWeaponRecoil* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNexusConfigStoreWeaponRecoil>();
	}
};
DUMPER7_ASSERTS_UNexusConfigStoreWeaponRecoil;

// Class GbxWeapon.WeaponStatics
// 0x0000 (0x0028 - 0x0028)
class UWeaponStatics : public UBlueprintFunctionLibrary
{
public:
	static void ConsumeAmmo(class AWeapon* Weapon, int32 Amount, bool bAsPercent);
	static FGameDataHandleProperty_ GetCurrentDamageType(class AWeapon* Weapon);
	static FGameDataHandleProperty_ GetDamageType(class AWeapon* Weapon, uint8 UseMode);
	static void GetEditorBodyActionNames(TArray<class FName>* OutNames);
	static float GetFireRateAccelPercent(class AWeapon* Weapon, uint8 UseMode);
	static int32 GetLoadedAmmo(class AWeapon* Weapon, uint8 UseMode);
	static int32 GetMaxLoadedAmmo(class AWeapon* Weapon, uint8 UseMode);
	static class AWeapon* GetWeapon(class AActor* WeaponUser, uint8 slot);
	static struct FTransform GetWeaponViewRelativeSocketTransform(class AWeapon* Weapon, class FName SocketName);
	static void GiveAmmo(class AWeapon* Weapon, int32 Amount, bool bLoaded, bool bAsPercent);
	static bool HasPartDependencyTag(class AWeapon* Weapon, const class FName Tag);
	static void HideWeapon(class AActor* WeaponUser, uint8 slot, class FName reason, bool bServerAuthority, bool bPlayAnimation);
	static void HideWeapons(class AActor* WeaponUser, class FName reason, bool bServerAuthority, bool bPlayAnimation);
	static bool IsLocalWeaponAuthority(class AActor* WeaponUser);
	static void RefillAmmo(class AWeapon* Weapon, int32 Amount, bool bAsPercent);
	static void RefillAmmoForCurrentWeapon(class UObject* OwnerContext, int32 Amount, bool bAsPercent);
	static void ResetVisibleAmmoState(class AWeapon* Weapon);
	static void RestrictWeapons(class AActor* WeaponUser, class FName reason);
	static void SetVisibleAmmoState(class AWeapon* Weapon, EVisibleAmmoState NewState);
	static void SetVisibleAmmoUpdateMethod(class AWeapon* Weapon, EVisibleAmmoUpdateMethod NewUpdateMethod);
	static void ToggleWeaponMode(class AActor* WeaponUser, uint8 slot);
	static void UnhideWeapon(class AActor* WeaponUser, uint8 slot, class FName reason, bool bServerAuthority, bool bPlayAnimation);
	static void UnhideWeapons(class AActor* WeaponUser, class FName reason, bool bServerAuthority, bool bPlayAnimation);
	static void UnrestrictWeapons(class AActor* WeaponUser, class FName reason);
	static void UpdateAmmoVisibility(class AWeapon* Weapon, bool bForce);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("WeaponStatics")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"WeaponStatics")
	}
	static class UWeaponStatics* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWeaponStatics>();
	}
};
DUMPER7_ASSERTS_UWeaponStatics;

// Class GbxWeapon.WeaponTargetLockInterface
// 0x0000 (0x0000 - 0x0000)
class IWeaponTargetLockInterface final
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("WeaponTargetLockInterface")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"WeaponTargetLockInterface")
	}
	static class IWeaponTargetLockInterface* GetDefaultObj()
	{
		return GetDefaultObjImpl<IWeaponTargetLockInterface>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_IWeaponTargetLockInterface;

// Class GbxWeapon.WeaponTargetLockFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UWeaponTargetLockFunctionLibrary final : public UBlueprintFunctionLibrary
{
public:
	static int32 AddTargetLock(class AActor* Source, EWeaponTargetLockChannel channel, class AActor* target, const struct FVector& Offset, class FName socket, float Duration, FGameDataHandleProperty_ Effect, bool bRelativeOffset, bool bServerAuthority);
	static bool DoesSourceHaveLockOnTarget(class AActor* Source, EWeaponTargetLockChannel channel, class AActor* target);
	static bool GetRandomTargetLock(class AActor* Source, EWeaponTargetLockChannel channel, struct FWeaponTargetLockResult* Result);
	static TArray<struct FWeaponTargetLockResult> GetTargetLockList(class AActor* Source, EWeaponTargetLockChannel channel);
	static bool HasTargetLock(class AActor* Source, EWeaponTargetLockChannel channel);
	static int32 NumTargetLocks(class AActor* Source, EWeaponTargetLockChannel channel);
	static void RemoveAllTargetLocks(class AActor* target);
	static void RemoveAllTargetLocksForSource(class AActor* Source);
	static void RemoveAllTargetLocksForSourceChannel(class AActor* Source, EWeaponTargetLockChannel channel);
	static void RemoveTargetLock(class UObject* WorldContext, int32 LockId);
	static void RemoveTargetLocksBetweenSourceAndTarget(class AActor* Source, EWeaponTargetLockChannel channel, class AActor* target);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("WeaponTargetLockFunctionLibrary")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"WeaponTargetLockFunctionLibrary")
	}
	static class UWeaponTargetLockFunctionLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWeaponTargetLockFunctionLibrary>();
	}
};
DUMPER7_ASSERTS_UWeaponTargetLockFunctionLibrary;

// Class GbxWeapon.WeaponTriggerFeedback
// 0x0038 (0x0068 - 0x0030)
class UWeaponTriggerFeedback final : public UDataAsset
{
public:
	EWeaponTriggerFeedbackMode                    Mode;                                              // 0x0030(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWeaponTriggerFeedbackData             feedback;                                          // 0x0034(0x0008)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponTriggerWeaponData               Weapon;                                            // 0x003C(0x000C)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FSlopeTriggerWeaponData                Slope;                                             // 0x0048(0x0010)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponTriggerVibrationData            Vibration;                                         // 0x0058(0x000C)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponTriggerFireThreasholdData       FireThreshold;                                     // 0x0064(0x0004)(Edit, NoDestructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("WeaponTriggerFeedback")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"WeaponTriggerFeedback")
	}
	static class UWeaponTriggerFeedback* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWeaponTriggerFeedback>();
	}
};
DUMPER7_ASSERTS_UWeaponTriggerFeedback;

// Class GbxWeapon.WeaponUserInterface
// 0x0000 (0x0000 - 0x0000)
class IWeaponUserInterface final
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("WeaponUserInterface")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"WeaponUserInterface")
	}
	static class IWeaponUserInterface* GetDefaultObj()
	{
		return GetDefaultObjImpl<IWeaponUserInterface>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_IWeaponUserInterface;

}

